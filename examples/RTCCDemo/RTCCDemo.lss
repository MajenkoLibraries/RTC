/home/matt/.uecide/compilers/pic32-gcc/bin/pic32-objdump -h -S /tmp/build-ae404fe9-8933-4816-89c0-f19a3d53382f/RTCCDemo.elf 

/tmp/build-ae404fe9-8933-4816-89c0-f19a3d53382f/RTCCDemo.elf:     file format elf32-tradlittlemips

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .reset        00000010  9d001000  9d001000  00011000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .image_ptr_table 00000008  9d0000f8  9d0000f8  000100f8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .app_excpt    00000010  9d000180  9d000180  00010180  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .vector_0     00000014  9d000200  9d000200  00010200  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .vector_1     00000014  9d000220  9d000220  00010220  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  5 .vector_2     00000014  9d000240  9d000240  00010240  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  6 .vector_3     00000014  9d000260  9d000260  00010260  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  7 .vector_4     00000014  9d000280  9d000280  00010280  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  8 .vector_5     00000014  9d0002a0  9d0002a0  000102a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  9 .vector_6     00000014  9d0002c0  9d0002c0  000102c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 10 .vector_7     00000014  9d0002e0  9d0002e0  000102e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 11 .vector_8     00000014  9d000300  9d000300  00010300  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .vector_9     00000014  9d000320  9d000320  00010320  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .vector_10    00000014  9d000340  9d000340  00010340  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 14 .vector_11    00000014  9d000360  9d000360  00010360  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .vector_12    00000014  9d000380  9d000380  00010380  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .vector_13    00000014  9d0003a0  9d0003a0  000103a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .vector_14    00000014  9d0003c0  9d0003c0  000103c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .vector_15    00000014  9d0003e0  9d0003e0  000103e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .vector_16    00000014  9d000400  9d000400  00010400  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 20 .vector_17    00000014  9d000420  9d000420  00010420  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 21 .vector_18    00000014  9d000440  9d000440  00010440  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .vector_19    00000014  9d000460  9d000460  00010460  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 23 .vector_20    00000014  9d000480  9d000480  00010480  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .vector_21    00000014  9d0004a0  9d0004a0  000104a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .vector_22    00000014  9d0004c0  9d0004c0  000104c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 26 .vector_23    00000014  9d0004e0  9d0004e0  000104e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .vector_24    00000014  9d000500  9d000500  00010500  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .vector_25    00000014  9d000520  9d000520  00010520  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .vector_26    00000014  9d000540  9d000540  00010540  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .vector_27    00000014  9d000560  9d000560  00010560  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .vector_28    00000014  9d000580  9d000580  00010580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 32 .vector_29    00000014  9d0005a0  9d0005a0  000105a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .vector_30    00000014  9d0005c0  9d0005c0  000105c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .vector_31    00000014  9d0005e0  9d0005e0  000105e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .vector_32    00000014  9d000600  9d000600  00010600  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .vector_33    00000014  9d000620  9d000620  00010620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .vector_34    00000014  9d000640  9d000640  00010640  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .vector_35    0000001c  9d000660  9d000660  00010660  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .vector_36    00000014  9d000680  9d000680  00010680  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 40 .vector_37    00000014  9d0006a0  9d0006a0  000106a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 41 .vector_38    00000014  9d0006c0  9d0006c0  000106c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 42 .vector_39    00000014  9d0006e0  9d0006e0  000106e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 43 .vector_40    00000014  9d000700  9d000700  00010700  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 44 .vector_41    00000014  9d000720  9d000720  00010720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 45 .vector_42    00000014  9d000740  9d000740  00010740  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 46 .vector_43    00000014  9d000760  9d000760  00010760  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 47 .vector_44    00000014  9d000780  9d000780  00010780  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 48 .vector_45    00000014  9d0007a0  9d0007a0  000107a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 49 .vector_46    00000014  9d0007c0  9d0007c0  000107c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 50 .vector_47    00000014  9d0007e0  9d0007e0  000107e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 51 .vector_48    00000014  9d000800  9d000800  00010800  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 52 .vector_49    00000014  9d000820  9d000820  00010820  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 53 .vector_50    00000014  9d000840  9d000840  00010840  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 54 .vector_51    00000014  9d000860  9d000860  00010860  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 55 .vector_52    00000014  9d000880  9d000880  00010880  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 56 .vector_53    00000014  9d0008a0  9d0008a0  000108a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 57 .vector_54    00000014  9d0008c0  9d0008c0  000108c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 58 .vector_55    00000014  9d0008e0  9d0008e0  000108e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 59 .vector_56    00000014  9d000900  9d000900  00010900  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 60 .vector_57    00000014  9d000920  9d000920  00010920  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 61 .vector_58    00000014  9d000940  9d000940  00010940  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 62 .vector_59    00000014  9d000960  9d000960  00010960  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 63 .vector_60    00000014  9d000980  9d000980  00010980  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 64 .vector_61    00000014  9d0009a0  9d0009a0  000109a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 65 .vector_62    00000014  9d0009c0  9d0009c0  000109c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 66 .vector_63    00000014  9d0009e0  9d0009e0  000109e0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 67 .startup      000001e0  9d001010  9d001010  00011010  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 68 .text         00014538  9d0011f0  9d0011f0  000111f0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 69 .init         00000024  9d015728  9d015728  00025728  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 70 .fini         0000001c  9d01574c  9d01574c  0002574c  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 71 .ctors        0000000c  9d015768  9d015768  00025768  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 72 .dtors        00000008  9d015774  9d015774  00025774  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 73 .header_info  0000004c  9d01577c  9d01577c  0002577c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 74 .ram_exchange_data 00000008  a0000000  a0000000  00032800  2**0
                  CONTENTS
 75 .rodata       00002574  9d0157c8  9d0157c8  000257c8  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 76 .data         00000a30  a0000008  9d017d3c  00030008  2**3
                  CONTENTS, ALLOC, LOAD, DATA
 77 .sdata        00000018  a0000a38  9d01876c  00030a38  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 78 .sbss         00000054  a0000a50  9d018784  00030a50  2**2
                  ALLOC
 79 .bss          0000067c  a0000aa4  9d018784  00030aa4  2**2
                  ALLOC
 80 .heap         00000800  a0001120  9d018784  00031120  2**0
                  ALLOC
 81 .stack        00000800  a0001920  9d018784  00031920  2**0
                  ALLOC
 82 .comment      00000095  00000000  00000000  00032808  2**0
                  CONTENTS, READONLY
 83 .debug_aranges 00001b20  00000000  00000000  000328a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 84 .debug_pubnames 000035c1  00000000  00000000  000343c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 85 .debug_info   000393b3  00000000  00000000  00037981  2**0
                  CONTENTS, READONLY, DEBUGGING
 86 .debug_abbrev 0000ae01  00000000  00000000  00070d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 87 .debug_line   000108c6  00000000  00000000  0007bb35  2**0
                  CONTENTS, READONLY, DEBUGGING
 88 .debug_frame  000033c4  00000000  00000000  0008c3fc  2**2
                  CONTENTS, READONLY, DEBUGGING
 89 .debug_str    00008ab2  00000000  00000000  0008f7c0  2**0
                  CONTENTS, READONLY, DEBUGGING
 90 .debug_loc    000244fa  00000000  00000000  00098272  2**0
                  CONTENTS, READONLY, DEBUGGING
 91 .debug_pubtypes 000035f0  00000000  00000000  000bc76c  2**0
                  CONTENTS, READONLY, DEBUGGING
 92 .debug_ranges 00004ea0  00000000  00000000  000bfd60  2**3
                  CONTENTS, READONLY, DEBUGGING
 93 .gnu.attributes 00000010  00000000  00000000  000c4c00  2**0
                  CONTENTS, READONLY
 94 .mdebug.abi32 00000000  a0002800  a0002800  00032800  2**0
                  CONTENTS, ALLOC, LOAD, DATA

Disassembly of section .reset:

9d001000 <_reset>:
9d001000:	3c1a9d00 	lui	k0,0x9d00
9d001004:	275a1010 	addiu	k0,k0,4112
9d001008:	03400008 	jr	k0
9d00100c:	00000000 	nop

Disassembly of section .app_excpt:

9d000180 <_gen_exception>:
9d000180:	3c1a9d01 	lui	k0,0x9d01
9d000184:	275a33ec 	addiu	k0,k0,13292
9d000188:	03400008 	jr	k0
9d00018c:	00000000 	nop

Disassembly of section .vector_0:

9d000200 <__vector_0>:
    lw       k0,4 * number (k0); \
    jr       k0; \
    .end VECTOR_SYMBOLNAME(number); \
    .size VECTOR_SYMBOLNAME(number), .-VECTOR_SYMBOLNAME(number);

 VECTOR_ENTRY(0)
9d000200:	3c1aa000 	lui	k0,0xa000
9d000204:	275a0114 	addiu	k0,k0,276
9d000208:	8f5a0000 	lw	k0,0(k0)
9d00020c:	03400008 	jr	k0
9d000210:	00000000 	nop

Disassembly of section .vector_1:

9d000220 <__vector_1>:
 VECTOR_ENTRY(1)
9d000220:	3c1aa000 	lui	k0,0xa000
9d000224:	275a0114 	addiu	k0,k0,276
9d000228:	8f5a0004 	lw	k0,4(k0)
9d00022c:	03400008 	jr	k0
9d000230:	00000000 	nop

Disassembly of section .vector_2:

9d000240 <__vector_2>:
 VECTOR_ENTRY(2)
9d000240:	3c1aa000 	lui	k0,0xa000
9d000244:	275a0114 	addiu	k0,k0,276
9d000248:	8f5a0008 	lw	k0,8(k0)
9d00024c:	03400008 	jr	k0
9d000250:	00000000 	nop

Disassembly of section .vector_3:

9d000260 <__vector_3>:
 VECTOR_ENTRY(3)
9d000260:	3c1aa000 	lui	k0,0xa000
9d000264:	275a0114 	addiu	k0,k0,276
9d000268:	8f5a000c 	lw	k0,12(k0)
9d00026c:	03400008 	jr	k0
9d000270:	00000000 	nop

Disassembly of section .vector_4:

9d000280 <__vector_4>:
 VECTOR_ENTRY(4)
9d000280:	3c1aa000 	lui	k0,0xa000
9d000284:	275a0114 	addiu	k0,k0,276
9d000288:	8f5a0010 	lw	k0,16(k0)
9d00028c:	03400008 	jr	k0
9d000290:	00000000 	nop

Disassembly of section .vector_5:

9d0002a0 <__vector_5>:
 VECTOR_ENTRY(5)
9d0002a0:	3c1aa000 	lui	k0,0xa000
9d0002a4:	275a0114 	addiu	k0,k0,276
9d0002a8:	8f5a0014 	lw	k0,20(k0)
9d0002ac:	03400008 	jr	k0
9d0002b0:	00000000 	nop

Disassembly of section .vector_6:

9d0002c0 <__vector_6>:
 VECTOR_ENTRY(6)
9d0002c0:	3c1aa000 	lui	k0,0xa000
9d0002c4:	275a0114 	addiu	k0,k0,276
9d0002c8:	8f5a0018 	lw	k0,24(k0)
9d0002cc:	03400008 	jr	k0
9d0002d0:	00000000 	nop

Disassembly of section .vector_7:

9d0002e0 <__vector_7>:
 VECTOR_ENTRY(7)
9d0002e0:	3c1aa000 	lui	k0,0xa000
9d0002e4:	275a0114 	addiu	k0,k0,276
9d0002e8:	8f5a001c 	lw	k0,28(k0)
9d0002ec:	03400008 	jr	k0
9d0002f0:	00000000 	nop

Disassembly of section .vector_8:

9d000300 <__vector_8>:
 VECTOR_ENTRY(8)
9d000300:	3c1aa000 	lui	k0,0xa000
9d000304:	275a0114 	addiu	k0,k0,276
9d000308:	8f5a0020 	lw	k0,32(k0)
9d00030c:	03400008 	jr	k0
9d000310:	00000000 	nop

Disassembly of section .vector_9:

9d000320 <__vector_9>:
 VECTOR_ENTRY(9)
9d000320:	3c1aa000 	lui	k0,0xa000
9d000324:	275a0114 	addiu	k0,k0,276
9d000328:	8f5a0024 	lw	k0,36(k0)
9d00032c:	03400008 	jr	k0
9d000330:	00000000 	nop

Disassembly of section .vector_10:

9d000340 <__vector_10>:
 VECTOR_ENTRY(10)
9d000340:	3c1aa000 	lui	k0,0xa000
9d000344:	275a0114 	addiu	k0,k0,276
9d000348:	8f5a0028 	lw	k0,40(k0)
9d00034c:	03400008 	jr	k0
9d000350:	00000000 	nop

Disassembly of section .vector_11:

9d000360 <__vector_11>:
 VECTOR_ENTRY(11)
9d000360:	3c1aa000 	lui	k0,0xa000
9d000364:	275a0114 	addiu	k0,k0,276
9d000368:	8f5a002c 	lw	k0,44(k0)
9d00036c:	03400008 	jr	k0
9d000370:	00000000 	nop

Disassembly of section .vector_12:

9d000380 <__vector_12>:
 VECTOR_ENTRY(12)
9d000380:	3c1aa000 	lui	k0,0xa000
9d000384:	275a0114 	addiu	k0,k0,276
9d000388:	8f5a0030 	lw	k0,48(k0)
9d00038c:	03400008 	jr	k0
9d000390:	00000000 	nop

Disassembly of section .vector_13:

9d0003a0 <__vector_13>:
 VECTOR_ENTRY(13)
9d0003a0:	3c1aa000 	lui	k0,0xa000
9d0003a4:	275a0114 	addiu	k0,k0,276
9d0003a8:	8f5a0034 	lw	k0,52(k0)
9d0003ac:	03400008 	jr	k0
9d0003b0:	00000000 	nop

Disassembly of section .vector_14:

9d0003c0 <__vector_14>:
 VECTOR_ENTRY(14)
9d0003c0:	3c1aa000 	lui	k0,0xa000
9d0003c4:	275a0114 	addiu	k0,k0,276
9d0003c8:	8f5a0038 	lw	k0,56(k0)
9d0003cc:	03400008 	jr	k0
9d0003d0:	00000000 	nop

Disassembly of section .vector_15:

9d0003e0 <__vector_15>:
 VECTOR_ENTRY(15)
9d0003e0:	3c1aa000 	lui	k0,0xa000
9d0003e4:	275a0114 	addiu	k0,k0,276
9d0003e8:	8f5a003c 	lw	k0,60(k0)
9d0003ec:	03400008 	jr	k0
9d0003f0:	00000000 	nop

Disassembly of section .vector_16:

9d000400 <__vector_16>:
 VECTOR_ENTRY(16)
9d000400:	3c1aa000 	lui	k0,0xa000
9d000404:	275a0114 	addiu	k0,k0,276
9d000408:	8f5a0040 	lw	k0,64(k0)
9d00040c:	03400008 	jr	k0
9d000410:	00000000 	nop

Disassembly of section .vector_17:

9d000420 <__vector_17>:
 VECTOR_ENTRY(17)
9d000420:	3c1aa000 	lui	k0,0xa000
9d000424:	275a0114 	addiu	k0,k0,276
9d000428:	8f5a0044 	lw	k0,68(k0)
9d00042c:	03400008 	jr	k0
9d000430:	00000000 	nop

Disassembly of section .vector_18:

9d000440 <__vector_18>:
 VECTOR_ENTRY(18)
9d000440:	3c1aa000 	lui	k0,0xa000
9d000444:	275a0114 	addiu	k0,k0,276
9d000448:	8f5a0048 	lw	k0,72(k0)
9d00044c:	03400008 	jr	k0
9d000450:	00000000 	nop

Disassembly of section .vector_19:

9d000460 <__vector_19>:
 VECTOR_ENTRY(19)
9d000460:	3c1aa000 	lui	k0,0xa000
9d000464:	275a0114 	addiu	k0,k0,276
9d000468:	8f5a004c 	lw	k0,76(k0)
9d00046c:	03400008 	jr	k0
9d000470:	00000000 	nop

Disassembly of section .vector_20:

9d000480 <__vector_20>:
 VECTOR_ENTRY(20)
9d000480:	3c1aa000 	lui	k0,0xa000
9d000484:	275a0114 	addiu	k0,k0,276
9d000488:	8f5a0050 	lw	k0,80(k0)
9d00048c:	03400008 	jr	k0
9d000490:	00000000 	nop

Disassembly of section .vector_21:

9d0004a0 <__vector_21>:
 VECTOR_ENTRY(21)
9d0004a0:	3c1aa000 	lui	k0,0xa000
9d0004a4:	275a0114 	addiu	k0,k0,276
9d0004a8:	8f5a0054 	lw	k0,84(k0)
9d0004ac:	03400008 	jr	k0
9d0004b0:	00000000 	nop

Disassembly of section .vector_22:

9d0004c0 <__vector_22>:
 VECTOR_ENTRY(22)
9d0004c0:	3c1aa000 	lui	k0,0xa000
9d0004c4:	275a0114 	addiu	k0,k0,276
9d0004c8:	8f5a0058 	lw	k0,88(k0)
9d0004cc:	03400008 	jr	k0
9d0004d0:	00000000 	nop

Disassembly of section .vector_23:

9d0004e0 <__vector_23>:
 VECTOR_ENTRY(23)
9d0004e0:	3c1aa000 	lui	k0,0xa000
9d0004e4:	275a0114 	addiu	k0,k0,276
9d0004e8:	8f5a005c 	lw	k0,92(k0)
9d0004ec:	03400008 	jr	k0
9d0004f0:	00000000 	nop

Disassembly of section .vector_24:

9d000500 <__vector_24>:
 VECTOR_ENTRY(24)
9d000500:	3c1aa000 	lui	k0,0xa000
9d000504:	275a0114 	addiu	k0,k0,276
9d000508:	8f5a0060 	lw	k0,96(k0)
9d00050c:	03400008 	jr	k0
9d000510:	00000000 	nop

Disassembly of section .vector_25:

9d000520 <__vector_25>:
 VECTOR_ENTRY(25)
9d000520:	3c1aa000 	lui	k0,0xa000
9d000524:	275a0114 	addiu	k0,k0,276
9d000528:	8f5a0064 	lw	k0,100(k0)
9d00052c:	03400008 	jr	k0
9d000530:	00000000 	nop

Disassembly of section .vector_26:

9d000540 <__vector_26>:
 VECTOR_ENTRY(26)
9d000540:	3c1aa000 	lui	k0,0xa000
9d000544:	275a0114 	addiu	k0,k0,276
9d000548:	8f5a0068 	lw	k0,104(k0)
9d00054c:	03400008 	jr	k0
9d000550:	00000000 	nop

Disassembly of section .vector_27:

9d000560 <__vector_27>:
 VECTOR_ENTRY(27)
9d000560:	3c1aa000 	lui	k0,0xa000
9d000564:	275a0114 	addiu	k0,k0,276
9d000568:	8f5a006c 	lw	k0,108(k0)
9d00056c:	03400008 	jr	k0
9d000570:	00000000 	nop

Disassembly of section .vector_28:

9d000580 <__vector_28>:
 VECTOR_ENTRY(28)
9d000580:	3c1aa000 	lui	k0,0xa000
9d000584:	275a0114 	addiu	k0,k0,276
9d000588:	8f5a0070 	lw	k0,112(k0)
9d00058c:	03400008 	jr	k0
9d000590:	00000000 	nop

Disassembly of section .vector_29:

9d0005a0 <__vector_29>:
 VECTOR_ENTRY(29)
9d0005a0:	3c1aa000 	lui	k0,0xa000
9d0005a4:	275a0114 	addiu	k0,k0,276
9d0005a8:	8f5a0074 	lw	k0,116(k0)
9d0005ac:	03400008 	jr	k0
9d0005b0:	00000000 	nop

Disassembly of section .vector_30:

9d0005c0 <__vector_30>:
 VECTOR_ENTRY(30)
9d0005c0:	3c1aa000 	lui	k0,0xa000
9d0005c4:	275a0114 	addiu	k0,k0,276
9d0005c8:	8f5a0078 	lw	k0,120(k0)
9d0005cc:	03400008 	jr	k0
9d0005d0:	00000000 	nop

Disassembly of section .vector_31:

9d0005e0 <__vector_31>:
 VECTOR_ENTRY(31)
9d0005e0:	3c1aa000 	lui	k0,0xa000
9d0005e4:	275a0114 	addiu	k0,k0,276
9d0005e8:	8f5a007c 	lw	k0,124(k0)
9d0005ec:	03400008 	jr	k0
9d0005f0:	00000000 	nop

Disassembly of section .vector_32:

9d000600 <__vector_32>:
 VECTOR_ENTRY(32)
9d000600:	3c1aa000 	lui	k0,0xa000
9d000604:	275a0114 	addiu	k0,k0,276
9d000608:	8f5a0080 	lw	k0,128(k0)
9d00060c:	03400008 	jr	k0
9d000610:	00000000 	nop

Disassembly of section .vector_33:

9d000620 <__vector_33>:
 VECTOR_ENTRY(33)
9d000620:	3c1aa000 	lui	k0,0xa000
9d000624:	275a0114 	addiu	k0,k0,276
9d000628:	8f5a0084 	lw	k0,132(k0)
9d00062c:	03400008 	jr	k0
9d000630:	00000000 	nop

Disassembly of section .vector_34:

9d000640 <__vector_34>:
 VECTOR_ENTRY(34)
9d000640:	3c1aa000 	lui	k0,0xa000
9d000644:	275a0114 	addiu	k0,k0,276
9d000648:	8f5a0088 	lw	k0,136(k0)
9d00064c:	03400008 	jr	k0
9d000650:	00000000 	nop

Disassembly of section .vector_35:

9d000660 <__vector_35>:
 VECTOR_ENTRY(35)
9d000660:	3c1aa000 	lui	k0,0xa000
9d000664:	275a0114 	addiu	k0,k0,276
9d000668:	8f5a008c 	lw	k0,140(k0)
9d00066c:	03400008 	jr	k0
9d000670:	00000000 	nop

9d000674 <__vector_dispatch_35>:
9d000674:	0b4006ae 	j	9d001ab8 <__RTCCInterrupt>
9d000678:	00000000 	nop

Disassembly of section .vector_36:

9d000680 <__vector_36>:
 VECTOR_ENTRY(36)
9d000680:	3c1aa000 	lui	k0,0xa000
9d000684:	275a0114 	addiu	k0,k0,276
9d000688:	8f5a0090 	lw	k0,144(k0)
9d00068c:	03400008 	jr	k0
9d000690:	00000000 	nop

Disassembly of section .vector_37:

9d0006a0 <__vector_37>:
 VECTOR_ENTRY(37)
9d0006a0:	3c1aa000 	lui	k0,0xa000
9d0006a4:	275a0114 	addiu	k0,k0,276
9d0006a8:	8f5a0094 	lw	k0,148(k0)
9d0006ac:	03400008 	jr	k0
9d0006b0:	00000000 	nop

Disassembly of section .vector_38:

9d0006c0 <__vector_38>:
 VECTOR_ENTRY(38)
9d0006c0:	3c1aa000 	lui	k0,0xa000
9d0006c4:	275a0114 	addiu	k0,k0,276
9d0006c8:	8f5a0098 	lw	k0,152(k0)
9d0006cc:	03400008 	jr	k0
9d0006d0:	00000000 	nop

Disassembly of section .vector_39:

9d0006e0 <__vector_39>:
 VECTOR_ENTRY(39)
9d0006e0:	3c1aa000 	lui	k0,0xa000
9d0006e4:	275a0114 	addiu	k0,k0,276
9d0006e8:	8f5a009c 	lw	k0,156(k0)
9d0006ec:	03400008 	jr	k0
9d0006f0:	00000000 	nop

Disassembly of section .vector_40:

9d000700 <__vector_40>:
 VECTOR_ENTRY(40)
9d000700:	3c1aa000 	lui	k0,0xa000
9d000704:	275a0114 	addiu	k0,k0,276
9d000708:	8f5a00a0 	lw	k0,160(k0)
9d00070c:	03400008 	jr	k0
9d000710:	00000000 	nop

Disassembly of section .vector_41:

9d000720 <__vector_41>:
 VECTOR_ENTRY(41)
9d000720:	3c1aa000 	lui	k0,0xa000
9d000724:	275a0114 	addiu	k0,k0,276
9d000728:	8f5a00a4 	lw	k0,164(k0)
9d00072c:	03400008 	jr	k0
9d000730:	00000000 	nop

Disassembly of section .vector_42:

9d000740 <__vector_42>:
 VECTOR_ENTRY(42)
9d000740:	3c1aa000 	lui	k0,0xa000
9d000744:	275a0114 	addiu	k0,k0,276
9d000748:	8f5a00a8 	lw	k0,168(k0)
9d00074c:	03400008 	jr	k0
9d000750:	00000000 	nop

Disassembly of section .vector_43:

9d000760 <__vector_43>:
 VECTOR_ENTRY(43)
9d000760:	3c1aa000 	lui	k0,0xa000
9d000764:	275a0114 	addiu	k0,k0,276
9d000768:	8f5a00ac 	lw	k0,172(k0)
9d00076c:	03400008 	jr	k0
9d000770:	00000000 	nop

Disassembly of section .vector_44:

9d000780 <__vector_44>:
 VECTOR_ENTRY(44)
9d000780:	3c1aa000 	lui	k0,0xa000
9d000784:	275a0114 	addiu	k0,k0,276
9d000788:	8f5a00b0 	lw	k0,176(k0)
9d00078c:	03400008 	jr	k0
9d000790:	00000000 	nop

Disassembly of section .vector_45:

9d0007a0 <__vector_45>:
 VECTOR_ENTRY(45)
9d0007a0:	3c1aa000 	lui	k0,0xa000
9d0007a4:	275a0114 	addiu	k0,k0,276
9d0007a8:	8f5a00b4 	lw	k0,180(k0)
9d0007ac:	03400008 	jr	k0
9d0007b0:	00000000 	nop

Disassembly of section .vector_46:

9d0007c0 <__vector_46>:
 VECTOR_ENTRY(46)
9d0007c0:	3c1aa000 	lui	k0,0xa000
9d0007c4:	275a0114 	addiu	k0,k0,276
9d0007c8:	8f5a00b8 	lw	k0,184(k0)
9d0007cc:	03400008 	jr	k0
9d0007d0:	00000000 	nop

Disassembly of section .vector_47:

9d0007e0 <__vector_47>:
 VECTOR_ENTRY(47)
9d0007e0:	3c1aa000 	lui	k0,0xa000
9d0007e4:	275a0114 	addiu	k0,k0,276
9d0007e8:	8f5a00bc 	lw	k0,188(k0)
9d0007ec:	03400008 	jr	k0
9d0007f0:	00000000 	nop

Disassembly of section .vector_48:

9d000800 <__vector_48>:
 VECTOR_ENTRY(48)
9d000800:	3c1aa000 	lui	k0,0xa000
9d000804:	275a0114 	addiu	k0,k0,276
9d000808:	8f5a00c0 	lw	k0,192(k0)
9d00080c:	03400008 	jr	k0
9d000810:	00000000 	nop

Disassembly of section .vector_49:

9d000820 <__vector_49>:
 VECTOR_ENTRY(49)
9d000820:	3c1aa000 	lui	k0,0xa000
9d000824:	275a0114 	addiu	k0,k0,276
9d000828:	8f5a00c4 	lw	k0,196(k0)
9d00082c:	03400008 	jr	k0
9d000830:	00000000 	nop

Disassembly of section .vector_50:

9d000840 <__vector_50>:
 VECTOR_ENTRY(50)
9d000840:	3c1aa000 	lui	k0,0xa000
9d000844:	275a0114 	addiu	k0,k0,276
9d000848:	8f5a00c8 	lw	k0,200(k0)
9d00084c:	03400008 	jr	k0
9d000850:	00000000 	nop

Disassembly of section .vector_51:

9d000860 <__vector_51>:
 VECTOR_ENTRY(51)
9d000860:	3c1aa000 	lui	k0,0xa000
9d000864:	275a0114 	addiu	k0,k0,276
9d000868:	8f5a00cc 	lw	k0,204(k0)
9d00086c:	03400008 	jr	k0
9d000870:	00000000 	nop

Disassembly of section .vector_52:

9d000880 <__vector_52>:
 VECTOR_ENTRY(52)
9d000880:	3c1aa000 	lui	k0,0xa000
9d000884:	275a0114 	addiu	k0,k0,276
9d000888:	8f5a00d0 	lw	k0,208(k0)
9d00088c:	03400008 	jr	k0
9d000890:	00000000 	nop

Disassembly of section .vector_53:

9d0008a0 <__vector_53>:
 VECTOR_ENTRY(53)
9d0008a0:	3c1aa000 	lui	k0,0xa000
9d0008a4:	275a0114 	addiu	k0,k0,276
9d0008a8:	8f5a00d4 	lw	k0,212(k0)
9d0008ac:	03400008 	jr	k0
9d0008b0:	00000000 	nop

Disassembly of section .vector_54:

9d0008c0 <__vector_54>:
 VECTOR_ENTRY(54)
9d0008c0:	3c1aa000 	lui	k0,0xa000
9d0008c4:	275a0114 	addiu	k0,k0,276
9d0008c8:	8f5a00d8 	lw	k0,216(k0)
9d0008cc:	03400008 	jr	k0
9d0008d0:	00000000 	nop

Disassembly of section .vector_55:

9d0008e0 <__vector_55>:
 VECTOR_ENTRY(55)
9d0008e0:	3c1aa000 	lui	k0,0xa000
9d0008e4:	275a0114 	addiu	k0,k0,276
9d0008e8:	8f5a00dc 	lw	k0,220(k0)
9d0008ec:	03400008 	jr	k0
9d0008f0:	00000000 	nop

Disassembly of section .vector_56:

9d000900 <__vector_56>:
 VECTOR_ENTRY(56)
9d000900:	3c1aa000 	lui	k0,0xa000
9d000904:	275a0114 	addiu	k0,k0,276
9d000908:	8f5a00e0 	lw	k0,224(k0)
9d00090c:	03400008 	jr	k0
9d000910:	00000000 	nop

Disassembly of section .vector_57:

9d000920 <__vector_57>:
 VECTOR_ENTRY(57)
9d000920:	3c1aa000 	lui	k0,0xa000
9d000924:	275a0114 	addiu	k0,k0,276
9d000928:	8f5a00e4 	lw	k0,228(k0)
9d00092c:	03400008 	jr	k0
9d000930:	00000000 	nop

Disassembly of section .vector_58:

9d000940 <__vector_58>:
 VECTOR_ENTRY(58)
9d000940:	3c1aa000 	lui	k0,0xa000
9d000944:	275a0114 	addiu	k0,k0,276
9d000948:	8f5a00e8 	lw	k0,232(k0)
9d00094c:	03400008 	jr	k0
9d000950:	00000000 	nop

Disassembly of section .vector_59:

9d000960 <__vector_59>:
 VECTOR_ENTRY(59)
9d000960:	3c1aa000 	lui	k0,0xa000
9d000964:	275a0114 	addiu	k0,k0,276
9d000968:	8f5a00ec 	lw	k0,236(k0)
9d00096c:	03400008 	jr	k0
9d000970:	00000000 	nop

Disassembly of section .vector_60:

9d000980 <__vector_60>:
 VECTOR_ENTRY(60)
9d000980:	3c1aa000 	lui	k0,0xa000
9d000984:	275a0114 	addiu	k0,k0,276
9d000988:	8f5a00f0 	lw	k0,240(k0)
9d00098c:	03400008 	jr	k0
9d000990:	00000000 	nop

Disassembly of section .vector_61:

9d0009a0 <__vector_61>:
 VECTOR_ENTRY(61)
9d0009a0:	3c1aa000 	lui	k0,0xa000
9d0009a4:	275a0114 	addiu	k0,k0,276
9d0009a8:	8f5a00f4 	lw	k0,244(k0)
9d0009ac:	03400008 	jr	k0
9d0009b0:	00000000 	nop

Disassembly of section .vector_62:

9d0009c0 <__vector_62>:
 VECTOR_ENTRY(62)
9d0009c0:	3c1aa000 	lui	k0,0xa000
9d0009c4:	275a0114 	addiu	k0,k0,276
9d0009c8:	8f5a00f8 	lw	k0,248(k0)
9d0009cc:	03400008 	jr	k0
9d0009d0:	00000000 	nop

Disassembly of section .vector_63:

9d0009e0 <__vector_63>:
 VECTOR_ENTRY(63)
9d0009e0:	3c1aa000 	lui	k0,0xa000
9d0009e4:	275a0114 	addiu	k0,k0,276
9d0009e8:	8f5a00fc 	lw	k0,252(k0)
9d0009ec:	03400008 	jr	k0
9d0009f0:	00000000 	nop

Disassembly of section .startup:

9d001010 <_startup>:
9d001010:	401a6000 	mfc0	k0,c0_status
9d001014:	7f5a04c0 	ext	k0,k0,0x13,0x1
9d001018:	13400005 	beqz	k0,9d001030 <_no_nmi>
9d00101c:	00000000 	nop
9d001020:	3c1a9d01 	lui	k0,0x9d01
9d001024:	275a34d4 	addiu	k0,k0,13524
9d001028:	03400008 	jr	k0
9d00102c:	00000000 	nop

9d001030 <_no_nmi>:
9d001030:	3c1da000 	lui	sp,0xa000
9d001034:	27bd4000 	addiu	sp,sp,16384
9d001038:	3c1ca001 	lui	gp,0xa001
9d00103c:	279c8a30 	addiu	gp,gp,-30160
9d001040:	40096002 	mfc0	t1,c0_srsctl
9d001044:	01205820 	add	t3,t1,zero
9d001048:	7d2a1e80 	ext	t2,t1,0x1a,0x4
9d00104c:	7d494984 	ins	t1,t2,0x6,0x4
9d001050:	40896002 	mtc0	t1,c0_srsctl
9d001054:	41dce000 	wrpgpr	gp,gp
9d001058:	408b6002 	mtc0	t3,c0_srsctl
9d00105c:	3c089d01 	lui	t0,0x9d01
9d001060:	250834c4 	addiu	t0,t0,13508
9d001064:	0100f809 	jalr	t0
9d001068:	00000000 	nop
9d00106c:	3c08a000 	lui	t0,0xa000
9d001070:	25080a50 	addiu	t0,t0,2640
9d001074:	3c09a000 	lui	t1,0xa000
9d001078:	25291120 	addiu	t1,t1,4384
9d00107c:	10000006 	b	9d001098 <_bss_check>
9d001080:	00000000 	nop

9d001084 <_bss_init>:
9d001084:	ad000000 	sw	zero,0(t0)
9d001088:	ad000004 	sw	zero,4(t0)
9d00108c:	ad000008 	sw	zero,8(t0)
9d001090:	ad00000c 	sw	zero,12(t0)
9d001094:	25080010 	addiu	t0,t0,16

9d001098 <_bss_check>:
9d001098:	0109082b 	sltu	at,t0,t1
9d00109c:	1420fff9 	bnez	at,9d001084 <_bss_init>
9d0010a0:	00000000 	nop
9d0010a4:	3c089d01 	lui	t0,0x9d01
9d0010a8:	25087d3c 	addiu	t0,t0,32060
9d0010ac:	3c09a000 	lui	t1,0xa000
9d0010b0:	25290008 	addiu	t1,t1,8
9d0010b4:	3c0aa000 	lui	t2,0xa000
9d0010b8:	254a0a50 	addiu	t2,t2,2640
9d0010bc:	10000005 	b	9d0010d4 <_init_check>
9d0010c0:	00000000 	nop

9d0010c4 <_init_data>:
9d0010c4:	8d0b0000 	lw	t3,0(t0)
9d0010c8:	ad2b0000 	sw	t3,0(t1)
9d0010cc:	25080004 	addiu	t0,t0,4
9d0010d0:	25290004 	addiu	t1,t1,4

9d0010d4 <_init_check>:
9d0010d4:	012a082b 	sltu	at,t1,t2
9d0010d8:	1420fffa 	bnez	at,9d0010c4 <_init_data>
9d0010dc:	00000000 	nop
9d0010e0:	3c090000 	lui	t1,0x0
9d0010e4:	25290000 	addiu	t1,t1,0
9d0010e8:	1120001d 	beqz	t1,9d001160 <_ramfunc_done>
9d0010ec:	00000000 	nop
9d0010f0:	3c089d02 	lui	t0,0x9d02
9d0010f4:	25088784 	addiu	t0,t0,-30844
9d0010f8:	3c09a000 	lui	t1,0xa000
9d0010fc:	25292800 	addiu	t1,t1,10240
9d001100:	3c0aa000 	lui	t2,0xa000
9d001104:	254a2800 	addiu	t2,t2,10240

9d001108 <_init_ramfunc>:
9d001108:	8d0b0000 	lw	t3,0(t0)
9d00110c:	ad2b0000 	sw	t3,0(t1)
9d001110:	25080004 	addiu	t0,t0,4
9d001114:	25290004 	addiu	t1,t1,4

9d001118 <_ramfunc_check>:
9d001118:	012a082b 	sltu	at,t1,t2
9d00111c:	1420fffa 	bnez	at,9d001108 <_init_ramfunc>
9d001120:	00000000 	nop
9d001124:	3c090000 	lui	t1,0x0
9d001128:	25292800 	addiu	t1,t1,10240
9d00112c:	3c0abf88 	lui	t2,0xbf88
9d001130:	254a2010 	addiu	t2,t2,8208
9d001134:	ad490000 	sw	t1,0(t2)
9d001138:	3c090000 	lui	t1,0x0
9d00113c:	25294000 	addiu	t1,t1,16384
9d001140:	3c0abf88 	lui	t2,0xbf88
9d001144:	254a2020 	addiu	t2,t2,8224
9d001148:	ad490000 	sw	t1,0(t2)
9d00114c:	3c090000 	lui	t1,0x0
9d001150:	25294000 	addiu	t1,t1,16384
9d001154:	3c0abf88 	lui	t2,0xbf88
9d001158:	254a2030 	addiu	t2,t2,8240
9d00115c:	ad490000 	sw	t1,0(t2)

9d001160 <_ramfunc_done>:
9d001160:	40804800 	mtc0	zero,c0_count
9d001164:	240affff 	li	t2,-1
9d001168:	408a5800 	mtc0	t2,c0_compare
9d00116c:	3c099d00 	lui	t1,0x9d00
9d001170:	25290000 	addiu	t1,t1,0
9d001174:	40897801 	mtc0	t1,c0_ebase
9d001178:	3c090000 	lui	t1,0x0
9d00117c:	25290001 	addiu	t1,t1,1
9d001180:	240a0000 	li	t2,0
9d001184:	7d2a4944 	ins	t2,t1,0x5,0x5
9d001188:	408a6001 	mtc0	t2,c0_intctl
9d00118c:	3c090080 	lui	t1,0x80
9d001190:	40896800 	mtc0	t1,c0_cause
9d001194:	40088000 	mfc0	t0,c0_config
9d001198:	7d090580 	ext	t1,t0,0x16,0x1
9d00119c:	00094c40 	sll	t1,t1,0x11
9d0011a0:	40086000 	mfc0	t0,c0_status
9d0011a4:	3c010058 	lui	at,0x58
9d0011a8:	01014024 	and	t0,t0,at
9d0011ac:	01284025 	or	t0,t1,t0
9d0011b0:	40886000 	mtc0	t0,c0_status
9d0011b4:	3c089d01 	lui	t0,0x9d01
9d0011b8:	250834cc 	addiu	t0,t0,13516
9d0011bc:	0100f809 	jalr	t0
9d0011c0:	00000000 	nop
9d0011c4:	40086000 	mfc0	t0,c0_status
9d0011c8:	3c01ffbf 	lui	at,0xffbf
9d0011cc:	3421ffff 	ori	at,at,0xffff
9d0011d0:	01014024 	and	t0,t0,at
9d0011d4:	40886000 	mtc0	t0,c0_status
9d0011d8:	30840000 	andi	a0,a0,0x0
9d0011dc:	30a50000 	andi	a1,a1,0x0
9d0011e0:	3c089d00 	lui	t0,0x9d00
9d0011e4:	250811f0 	addiu	t0,t0,4592
9d0011e8:	01000008 	jr	t0
9d0011ec:	00000000 	nop

Disassembly of section .text:

9d0011f0 <_main_entry>:
9d0011f0:	0f4055ca 	jal	9d015728 <_text_end>
9d0011f4:	00000000 	nop
9d0011f8:	30840000 	andi	a0,a0,0x0
9d0011fc:	30a50000 	andi	a1,a1,0x0
9d001200:	0f4011fb 	jal	9d0047ec <main>
9d001204:	00000000 	nop
9d001208:	1000fffd 	b	9d001200 <_main_entry+0x10>
9d00120c:	00000000 	nop

9d001210 <__do_global_dtors_aux>:
9d001210:	27bdffd8 	addiu	sp,sp,-40
9d001214:	afb2001c 	sw	s2,28(sp)
9d001218:	3c12a000 	lui	s2,0xa000
9d00121c:	92420aa4 	lbu	v0,2724(s2)
9d001220:	afbf0024 	sw	ra,36(sp)
9d001224:	afb30020 	sw	s3,32(sp)
9d001228:	afb10018 	sw	s1,24(sp)
9d00122c:	14400020 	bnez	v0,9d0012b0 <__do_global_dtors_aux+0xa0>
9d001230:	afb00014 	sw	s0,20(sp)
9d001234:	3c119d01 	lui	s1,0x9d01
9d001238:	3c109d01 	lui	s0,0x9d01
9d00123c:	3c13a000 	lui	s3,0xa000
9d001240:	26315774 	addiu	s1,s1,22388
9d001244:	26105778 	addiu	s0,s0,22392
9d001248:	8e620aa8 	lw	v0,2728(s3)
9d00124c:	02118023 	subu	s0,s0,s1
9d001250:	00108083 	sra	s0,s0,0x2
9d001254:	2610ffff 	addiu	s0,s0,-1
9d001258:	0050182b 	sltu	v1,v0,s0
9d00125c:	5060000c 	beqzl	v1,9d001290 <__do_global_dtors_aux+0x80>
9d001260:	3c020000 	lui	v0,0x0
9d001264:	24420001 	addiu	v0,v0,1
9d001268:	00021880 	sll	v1,v0,0x2
9d00126c:	02231821 	addu	v1,s1,v1
9d001270:	8c630000 	lw	v1,0(v1)
9d001274:	0060f809 	jalr	v1
9d001278:	ae620aa8 	sw	v0,2728(s3)
9d00127c:	8e620aa8 	lw	v0,2728(s3)
9d001280:	0050182b 	sltu	v1,v0,s0
9d001284:	1460fff8 	bnez	v1,9d001268 <__do_global_dtors_aux+0x58>
9d001288:	24420001 	addiu	v0,v0,1
9d00128c:	3c020000 	lui	v0,0x0
9d001290:	24420000 	addiu	v0,v0,0
9d001294:	10400005 	beqz	v0,9d0012ac <__do_global_dtors_aux+0x9c>
9d001298:	24020001 	li	v0,1
9d00129c:	3c04a000 	lui	a0,0xa000
9d0012a0:	0c000000 	jal	90000000 <_imageExecutionJumpToFirstInFlash+0x8e000000>
9d0012a4:	24840008 	addiu	a0,a0,8
9d0012a8:	24020001 	li	v0,1
9d0012ac:	a2420aa4 	sb	v0,2724(s2)
9d0012b0:	8fbf0024 	lw	ra,36(sp)
9d0012b4:	8fb30020 	lw	s3,32(sp)
9d0012b8:	8fb2001c 	lw	s2,28(sp)
9d0012bc:	8fb10018 	lw	s1,24(sp)
9d0012c0:	8fb00014 	lw	s0,20(sp)
9d0012c4:	03e00008 	jr	ra
9d0012c8:	27bd0028 	addiu	sp,sp,40

9d0012cc <frame_dummy>:
9d0012cc:	3c020000 	lui	v0,0x0
9d0012d0:	27bdffe8 	addiu	sp,sp,-24
9d0012d4:	24420000 	addiu	v0,v0,0
9d0012d8:	10400006 	beqz	v0,9d0012f4 <frame_dummy+0x28>
9d0012dc:	afbf0014 	sw	ra,20(sp)
9d0012e0:	3c04a000 	lui	a0,0xa000
9d0012e4:	3c05a000 	lui	a1,0xa000
9d0012e8:	24840008 	addiu	a0,a0,8
9d0012ec:	0c000000 	jal	90000000 <_imageExecutionJumpToFirstInFlash+0x8e000000>
9d0012f0:	24a50aac 	addiu	a1,a1,2732
9d0012f4:	3c04a000 	lui	a0,0xa000
9d0012f8:	8c820008 	lw	v0,8(a0)
9d0012fc:	10400007 	beqz	v0,9d00131c <frame_dummy+0x50>
9d001300:	3c190000 	lui	t9,0x0
9d001304:	27390000 	addiu	t9,t9,0
9d001308:	13200004 	beqz	t9,9d00131c <frame_dummy+0x50>
9d00130c:	8fbf0014 	lw	ra,20(sp)
9d001310:	24840008 	addiu	a0,a0,8
9d001314:	03200008 	jr	t9
9d001318:	27bd0018 	addiu	sp,sp,24
9d00131c:	8fbf0014 	lw	ra,20(sp)
9d001320:	03e00008 	jr	ra
9d001324:	27bd0018 	addiu	sp,sp,24

9d001328 <_Z10outputTimev>:
9d001328:	27bdff90 	addiu	sp,sp,-112
9d00132c:	27a40018 	addiu	a0,sp,24
9d001330:	27858024 	addiu	a1,gp,-32732
9d001334:	afbf006c 	sw	ra,108(sp)
9d001338:	afb10068 	sw	s1,104(sp)
9d00133c:	afb00064 	sw	s0,100(sp)
9d001340:	0f400717 	jal	9d001c5c <_ZN9RTCCClass5valueEv>
9d001344:	3c10a000 	lui	s0,0xa000
9d001348:	3c059d01 	lui	a1,0x9d01
9d00134c:	26040b00 	addiu	a0,s0,2816
9d001350:	0f400cb5 	jal	9d0032d4 <_ZN3TFT7setFontEPKh>
9d001354:	24a558a8 	addiu	a1,a1,22696
9d001358:	2406000a 	li	a2,10
9d00135c:	26040b00 	addiu	a0,s0,2816
9d001360:	0f400cb0 	jal	9d0032c0 <_ZN3TFT9setCursorEss>
9d001364:	2405000a 	li	a1,10
9d001368:	26040b00 	addiu	a0,s0,2816
9d00136c:	0f400cb3 	jal	9d0032cc <_ZN3TFT12setTextColorEt>
9d001370:	3405f800 	li	a1,0xf800
9d001374:	3c059d01 	lui	a1,0x9d01
9d001378:	24a557c8 	addiu	a1,a1,22472
9d00137c:	0f4011f7 	jal	9d0047dc <_ZN5Print5printEPKc>
9d001380:	26040b00 	addiu	a0,s0,2816
9d001384:	0f40078c 	jal	9d001e30 <_ZN9RTCCValue3dayEv>
9d001388:	27a40018 	addiu	a0,sp,24
9d00138c:	27a40018 	addiu	a0,sp,24
9d001390:	0f400783 	jal	9d001e0c <_ZN9RTCCValue5monthEv>
9d001394:	afa2005c 	sw	v0,92(sp)
9d001398:	27a40018 	addiu	a0,sp,24
9d00139c:	0f40077a 	jal	9d001de8 <_ZN9RTCCValue4yearEv>
9d0013a0:	afa20058 	sw	v0,88(sp)
9d0013a4:	8fa70058 	lw	a3,88(sp)
9d0013a8:	8fa6005c 	lw	a2,92(sp)
9d0013ac:	3c119d01 	lui	s1,0x9d01
9d0013b0:	27a40024 	addiu	a0,sp,36
9d0013b4:	262557d0 	addiu	a1,s1,22480
9d0013b8:	0f401f4b 	jal	9d007d2c <sprintf>
9d0013bc:	afa20010 	sw	v0,16(sp)
9d0013c0:	26040b00 	addiu	a0,s0,2816
9d0013c4:	0f400cb3 	jal	9d0032cc <_ZN3TFT12setTextColorEt>
9d0013c8:	240507e0 	li	a1,2016
9d0013cc:	26040b00 	addiu	a0,s0,2816
9d0013d0:	0f4011f7 	jal	9d0047dc <_ZN5Print5printEPKc>
9d0013d4:	27a50024 	addiu	a1,sp,36
9d0013d8:	24060014 	li	a2,20
9d0013dc:	26040b00 	addiu	a0,s0,2816
9d0013e0:	0f400cb0 	jal	9d0032c0 <_ZN3TFT9setCursorEss>
9d0013e4:	2405000a 	li	a1,10
9d0013e8:	26040b00 	addiu	a0,s0,2816
9d0013ec:	0f400cb3 	jal	9d0032cc <_ZN3TFT12setTextColorEt>
9d0013f0:	3405f800 	li	a1,0xf800
9d0013f4:	3c059d01 	lui	a1,0x9d01
9d0013f8:	24a557e0 	addiu	a1,a1,22496
9d0013fc:	0f4011f7 	jal	9d0047dc <_ZN5Print5printEPKc>
9d001400:	26040b00 	addiu	a0,s0,2816
9d001404:	0f400795 	jal	9d001e54 <_ZN9RTCCValue5hoursEv>
9d001408:	27a40018 	addiu	a0,sp,24
9d00140c:	27a40018 	addiu	a0,sp,24
9d001410:	0f40079e 	jal	9d001e78 <_ZN9RTCCValue7minutesEv>
9d001414:	afa2005c 	sw	v0,92(sp)
9d001418:	27a40018 	addiu	a0,sp,24
9d00141c:	0f4007a7 	jal	9d001e9c <_ZN9RTCCValue7secondsEv>
9d001420:	afa20058 	sw	v0,88(sp)
9d001424:	8fa6005c 	lw	a2,92(sp)
9d001428:	8fa70058 	lw	a3,88(sp)
9d00142c:	27a40024 	addiu	a0,sp,36
9d001430:	262557d0 	addiu	a1,s1,22480
9d001434:	0f401f4b 	jal	9d007d2c <sprintf>
9d001438:	afa20010 	sw	v0,16(sp)
9d00143c:	26040b00 	addiu	a0,s0,2816
9d001440:	0f400cb3 	jal	9d0032cc <_ZN3TFT12setTextColorEt>
9d001444:	240507e0 	li	a1,2016
9d001448:	26040b00 	addiu	a0,s0,2816
9d00144c:	0f4011f7 	jal	9d0047dc <_ZN5Print5printEPKc>
9d001450:	27a50024 	addiu	a1,sp,36
9d001454:	8fbf006c 	lw	ra,108(sp)
9d001458:	8fb10068 	lw	s1,104(sp)
9d00145c:	8fb00064 	lw	s0,100(sp)
9d001460:	03e00008 	jr	ra
9d001464:	27bd0070 	addiu	sp,sp,112

9d001468 <setup>:
9d001468:	27bdffd8 	addiu	sp,sp,-40
9d00146c:	afb00020 	sw	s0,32(sp)
9d001470:	3c10a000 	lui	s0,0xa000
9d001474:	afbf0024 	sw	ra,36(sp)
9d001478:	0f400861 	jal	9d002184 <_ZN6ST773516initializeDeviceEv>
9d00147c:	26040b00 	addiu	a0,s0,2816
9d001480:	26040b00 	addiu	a0,s0,2816
9d001484:	0f400ace 	jal	9d002b38 <_ZN6ST773511setRotationEh>
9d001488:	24050001 	li	a1,1
9d00148c:	00002821 	move	a1,zero
9d001490:	0f400ac1 	jal	9d002b04 <_ZN6ST773510fillScreenEt>
9d001494:	26040b00 	addiu	a0,s0,2816
9d001498:	0f4006f3 	jal	9d001bcc <_ZN9RTCCClass5beginEv>
9d00149c:	27848024 	addiu	a0,gp,-32732
9d0014a0:	27a40010 	addiu	a0,sp,16
9d0014a4:	0f400717 	jal	9d001c5c <_ZN9RTCCClass5valueEv>
9d0014a8:	27858024 	addiu	a1,gp,-32732
9d0014ac:	27a40010 	addiu	a0,sp,16
9d0014b0:	24050001 	li	a1,1
9d0014b4:	24060021 	li	a2,33
9d0014b8:	0f4007b0 	jal	9d001ec0 <_ZN9RTCCValue4timeEhhh>
9d0014bc:	2407001d 	li	a3,29
9d0014c0:	3c02a000 	lui	v0,0xa000
9d0014c4:	9042000d 	lbu	v0,13(v0)
9d0014c8:	24030005 	li	v1,5
9d0014cc:	2407000e 	li	a3,14
9d0014d0:	38460003 	xori	a2,v0,0x3
9d0014d4:	0046180b 	movn	v1,v0,a2
9d0014d8:	00603021 	move	a2,v1
9d0014dc:	27a40010 	addiu	a0,sp,16
9d0014e0:	0f4007f0 	jal	9d001fc0 <_ZN9RTCCValue4dateEhhh>
9d0014e4:	2405000e 	li	a1,14
9d0014e8:	27a40010 	addiu	a0,sp,16
9d0014ec:	0f400778 	jal	9d001de0 <_ZN9RTCCValue11setValidityEc>
9d0014f0:	24050001 	li	a1,1
9d0014f4:	8fa60014 	lw	a2,20(sp)
9d0014f8:	8fa70018 	lw	a3,24(sp)
9d0014fc:	8fa50010 	lw	a1,16(sp)
9d001500:	0f400732 	jal	9d001cc8 <_ZN9RTCCClass3setE9RTCCValue>
9d001504:	27848024 	addiu	a0,gp,-32732
9d001508:	27a40010 	addiu	a0,sp,16
9d00150c:	0f4007db 	jal	9d001f6c <_ZN9RTCCValue7secondsEh>
9d001510:	00002821 	move	a1,zero
9d001514:	8fa60014 	lw	a2,20(sp)
9d001518:	8fa70018 	lw	a3,24(sp)
9d00151c:	8fa50010 	lw	a1,16(sp)
9d001520:	0f400763 	jal	9d001d8c <_ZN9RTCCClass8alarmSetE9RTCCValue>
9d001524:	27848024 	addiu	a0,gp,-32732
9d001528:	24050001 	li	a1,1
9d00152c:	0f400758 	jal	9d001d60 <_ZN9RTCCClass9alarmMaskEh>
9d001530:	27848024 	addiu	a0,gp,-32732
9d001534:	0f40074d 	jal	9d001d34 <_ZN9RTCCClass11chimeEnableEv>
9d001538:	27848024 	addiu	a0,gp,-32732
9d00153c:	0f400742 	jal	9d001d08 <_ZN9RTCCClass11alarmEnableEv>
9d001540:	27848024 	addiu	a0,gp,-32732
9d001544:	3c059d00 	lui	a1,0x9d00
9d001548:	27848024 	addiu	a0,gp,-32732
9d00154c:	0f400772 	jal	9d001dc8 <_ZN9RTCCClass15attachInterruptEPFvvE>
9d001550:	24a51328 	addiu	a1,a1,4904
9d001554:	8fbf0024 	lw	ra,36(sp)
9d001558:	8fb00020 	lw	s0,32(sp)
9d00155c:	03e00008 	jr	ra
9d001560:	27bd0028 	addiu	sp,sp,40

9d001564 <loop>:
9d001564:	03e00008 	jr	ra
9d001568:	00000000 	nop

9d00156c <_GLOBAL__I_spi>:
9d00156c:	27bdffe0 	addiu	sp,sp,-32
9d001570:	afb10018 	sw	s1,24(sp)
9d001574:	3c11a000 	lui	s1,0xa000
9d001578:	26240ac4 	addiu	a0,s1,2756
9d00157c:	afbf001c 	sw	ra,28(sp)
9d001580:	0f400694 	jal	9d001a50 <_ZN5DSPI0C1Ev>
9d001584:	afb00014 	sw	s0,20(sp)
#include <TFT.h>

class TFTDSPI : public TFTCommunicator 
{
    public:
        TFTDSPI(DSPI *spi, uint8_t cs, uint8_t dc = 255, uint32_t sp=40000000UL) : _spi(spi), _cs(cs), _dc(dc), _speed(sp) {}
9d001588:	3c069d01 	lui	a2,0x9d01
9d00158c:	3c03a000 	lui	v1,0xa000
9d001590:	24c661b8 	addiu	a2,a2,25016
9d001594:	24620af0 	addiu	v0,v1,2800
9d001598:	ac660af0 	sw	a2,2800(v1)
9d00159c:	2403000a 	li	v1,10
9d0015a0:	a0430008 	sb	v1,8(v0)
9d0015a4:	24030008 	li	v1,8
9d0015a8:	a0430009 	sb	v1,9(v0)
9d0015ac:	3c030262 	lui	v1,0x262
        static const uint8_t BlackTab   = 0x02;
        static const uint8_t TypeB      = 0x03;
        static const uint8_t Width      = 128;
        static const uint8_t Height     = 160;

		ST7735(TFTCommunicator *comms, uint8_t variant) : TFT(comms), _variant(variant) {}
9d0015b0:	3c10a000 	lui	s0,0xa000
9d0015b4:	24635a00 	addiu	v1,v1,23040
9d0015b8:	26310ac4 	addiu	s1,s1,2756
9d0015bc:	26040b00 	addiu	a0,s0,2816
9d0015c0:	ac510004 	sw	s1,4(v0)
9d0015c4:	ac43000c 	sw	v1,12(v0)
9d0015c8:	0f400bcd 	jal	9d002f34 <_ZN3TFTC1EP15TFTCommunicator>
9d0015cc:	00402821 	move	a1,v0
9d0015d0:	3c039d01 	lui	v1,0x9d01
9d0015d4:	246357f0 	addiu	v1,v1,22512
9d0015d8:	26020b00 	addiu	v0,s0,2816
9d0015dc:	ae030b00 	sw	v1,2816(s0)
9d0015e0:	24030002 	li	v1,2
9d0015e4:	a043002a 	sb	v1,42(v0)
9d0015e8:	3c04a000 	lui	a0,0xa000
9d0015ec:	8fbf001c 	lw	ra,28(sp)
9d0015f0:	8fb10018 	lw	s1,24(sp)
9d0015f4:	8fb00014 	lw	s0,20(sp)
9d0015f8:	24841030 	addiu	a0,a0,4144
9d0015fc:	0b400774 	j	9d001dd0 <_ZN9RTCCValueC1Ev>
9d001600:	27bd0020 	addiu	sp,sp,32

9d001604 <_ZN4DSPI8setSpeedEm>:

	uint16_t	brg;

	/* Compute the baud rate divider for this frequency.
	*/
	brg = (uint16_t)((F_CPU / (2 * spd)) - 1);
9d001604:	3c0204c4 	lui	v0,0x4c4
9d001608:	3442b400 	ori	v0,v0,0xb400
9d00160c:	00052840 	sll	a1,a1,0x1
9d001610:	0045001b 	divu	zero,v0,a1
9d001614:	00a001f4 	teq	a1,zero,0x7

	/* That the baud rate value is in the correct range.
	*/
	if (brg == 0xFFFF) {
9d001618:	3403ffff 	li	v1,0xffff

	uint16_t	brg;

	/* Compute the baud rate divider for this frequency.
	*/
	brg = (uint16_t)((F_CPU / (2 * spd)) - 1);
9d00161c:	00001012 	mflo	v0
9d001620:	2442ffff 	addiu	v0,v0,-1
9d001624:	3042ffff 	andi	v0,v0,0xffff

	/* That the baud rate value is in the correct range.
	*/
	if (brg == 0xFFFF) {
9d001628:	1043000a 	beq	v0,v1,9d001654 <_ZN4DSPI8setSpeedEm+0x50>
9d00162c:	2c430200 	sltiu	v1,v0,512
		** Set it to the highest supported frequency.
		*/
		brg = 0;
	}

	if (brg > 0x1FF) {
9d001630:	14600009 	bnez	v1,9d001658 <_ZN4DSPI8setSpeedEm+0x54>
9d001634:	240501ff 	li	a1,511

	/* Write the value to the SPI baud rate register. Section 23. SPI
	** of the PIC32 Family Reference Manual says to disable the SPI
	** controller before writing to the baud register
	*/
	pspi->sxCon.clr = (1 << _SPICON_ON);	// disable SPI
9d001638:	8c820020 	lw	v0,32(a0)
9d00163c:	34038000 	li	v1,0x8000
9d001640:	ac430004 	sw	v1,4(v0)
	pspi->sxBrg.reg = brg;
9d001644:	ac450030 	sw	a1,48(v0)
	pspi->sxCon.set = (1 << _SPICON_ON);	// enable SPI
9d001648:	ac430008 	sw	v1,8(v0)

}
9d00164c:	03e00008 	jr	ra
9d001650:	00000000 	nop
	*/
	if (brg == 0xFFFF) {
		/* The user tried to set a frequency that is too high to support.
		** Set it to the highest supported frequency.
		*/
		brg = 0;
9d001654:	00001021 	move	v0,zero
	}

	if (brg > 0x1FF) {
9d001658:	00402821 	move	a1,v0

	/* Write the value to the SPI baud rate register. Section 23. SPI
	** of the PIC32 Family Reference Manual says to disable the SPI
	** controller before writing to the baud register
	*/
	pspi->sxCon.clr = (1 << _SPICON_ON);	// disable SPI
9d00165c:	8c820020 	lw	v0,32(a0)
9d001660:	34038000 	li	v1,0x8000
9d001664:	ac430004 	sw	v1,4(v0)
	pspi->sxBrg.reg = brg;
9d001668:	ac450030 	sw	a1,48(v0)
	pspi->sxCon.set = (1 << _SPICON_ON);	// enable SPI
9d00166c:	ac430008 	sw	v1,8(v0)

}
9d001670:	03e00008 	jr	ra
9d001674:	00000000 	nop

9d001678 <_ZN4DSPI7setModeEt>:
**		should be one of the values:
**			DSPI_MODE0, DSPI_MODE1, DSPI_MODE2, DSPI_MODE3
*/

void
DSPI::setMode(uint16_t mod) {
9d001678:	30a5ffff 	andi	a1,a1,0xffff

	if ((mod & ~((1 << _SPICON_CKP)|(1 << _SPICON_CKE))) != 0) {
9d00167c:	30a2febf 	andi	v0,a1,0xfebf
9d001680:	14400007 	bnez	v0,9d0016a0 <_ZN4DSPI7setModeEt+0x28>
9d001684:	34038000 	li	v1,0x8000
		/* This is an invalid value.
		*/
		return;
	}

	pspi->sxCon.clr = (1 << _SPICON_ON);
9d001688:	8c820020 	lw	v0,32(a0)
	pspi->sxCon.clr =((1 << _SPICON_CKP)|(1 << _SPICON_CKE));	// force both mode bits to 0
9d00168c:	24040140 	li	a0,320
		/* This is an invalid value.
		*/
		return;
	}

	pspi->sxCon.clr = (1 << _SPICON_ON);
9d001690:	ac430004 	sw	v1,4(v0)
	pspi->sxCon.clr =((1 << _SPICON_CKP)|(1 << _SPICON_CKE));	// force both mode bits to 0
9d001694:	ac440004 	sw	a0,4(v0)

	pspi->sxCon.set = mod;		// set the requested mode
9d001698:	ac450008 	sw	a1,8(v0)
	pspi->sxCon.set = (1 << _SPICON_ON);
9d00169c:	ac430008 	sw	v1,8(v0)
9d0016a0:	03e00008 	jr	ra
9d0016a4:	00000000 	nop

9d0016a8 <_ZN4DSPI12setPinSelectEh>:
**		pin be an output driving high. This pin will then be use
**		by the setSelect method.
*/

void
DSPI::setPinSelect(uint8_t pin) {
9d0016a8:	27bdffe8 	addiu	sp,sp,-24
9d0016ac:	afb00010 	sw	s0,16(sp)
9d0016b0:	30a200ff 	andi	v0,a1,0xff
9d0016b4:	00808021 	move	s0,a0
9d0016b8:	afbf0014 	sw	ra,20(sp)

	pinSS = pin;

	pinMode(pinSS, OUTPUT);
9d0016bc:	00402021 	move	a0,v0
9d0016c0:	24050001 	li	a1,1
9d0016c4:	0f401093 	jal	9d00424c <pinMode>
9d0016c8:	a202002a 	sb	v0,42(s0)
	digitalWrite(pinSS, HIGH);
9d0016cc:	9204002a 	lbu	a0,42(s0)

}
9d0016d0:	8fbf0014 	lw	ra,20(sp)
9d0016d4:	8fb00010 	lw	s0,16(sp)
DSPI::setPinSelect(uint8_t pin) {

	pinSS = pin;

	pinMode(pinSS, OUTPUT);
	digitalWrite(pinSS, HIGH);
9d0016d8:	24050001 	li	a1,1
9d0016dc:	0b4010f9 	j	9d0043e4 <digitalWrite>
9d0016e0:	27bd0018 	addiu	sp,sp,24

9d0016e4 <_ZN4DSPI5beginEh>:
**		will set the clock rate to the default speed and the
**		pin for SS to the specified pin.
*/

void
DSPI::begin(uint8_t pinT) {
9d0016e4:	27bdffe0 	addiu	sp,sp,-32
9d0016e8:	afbf001c 	sw	ra,28(sp)
9d0016ec:	afb10018 	sw	s1,24(sp)
9d0016f0:	afb00014 	sw	s0,20(sp)
9d0016f4:	00808021 	move	s0,a0
9d0016f8:	30b100ff 	andi	s1,a1,0xff
	*/
    mapPps(pinMOSI, ppsMOSI);
#endif

    // set up the interrupt handler 
    setIntVector(vec, isr);
9d0016fc:	90840028 	lbu	a0,40(a0)
9d001700:	0f401152 	jal	9d004548 <setIntVector>
9d001704:	8e050024 	lw	a1,36(s0)
/* Initialize the pins. The pin directions for SDO, SDI and SCK
	** are set automatically when the SPI controller is enabled. The
	** SS pin isn't explicitly used by the SPI controller when in
	** master mode, so we need to initialize it ourselves.
	*/
	setPinSelect(pinT);
9d001708:	02002021 	move	a0,s0
9d00170c:	0f4005aa 	jal	9d0016a8 <_ZN4DSPI12setPinSelectEh>
9d001710:	02202821 	move	a1,s1

	/* Disable interrupts on this SPI controller.
	*/
	pregIec->clr = bitErr + bitRx + bitTx;
9d001714:	8e07000c 	lw	a3,12(s0)
9d001718:	8e030008 	lw	v1,8(s0)
9d00171c:	8e060010 	lw	a2,16(s0)
9d001720:	8e050004 	lw	a1,4(s0)

	/* Disable and reset the SPI controller.
	*/
	pspi->sxCon.reg = 0;
9d001724:	8e020020 	lw	v0,32(s0)
	*/
	bTmp = pspi->sxBuf.reg;

	/* Clear all SPI interrupt flags.
	*/
	pregIfs->clr = bitErr + bitRx + bitTx;
9d001728:	8e040000 	lw	a0,0(s0)
	*/
	setPinSelect(pinT);

	/* Disable interrupts on this SPI controller.
	*/
	pregIec->clr = bitErr + bitRx + bitTx;
9d00172c:	00e31821 	addu	v1,a3,v1
9d001730:	00661821 	addu	v1,v1,a2
9d001734:	aca30004 	sw	v1,4(a1)

	/* Disable and reset the SPI controller.
	*/
	pspi->sxCon.reg = 0;
9d001738:	ac400000 	sw	zero,0(v0)

	/* Clear the receive buffer.
	*/
	bTmp = pspi->sxBuf.reg;
9d00173c:	8c450020 	lw	a1,32(v0)

	/* Clear all SPI interrupt flags.
	*/
	pregIfs->clr = bitErr + bitRx + bitTx;
9d001740:	ac830004 	sw	v1,4(a0)

	/* Compute the address of the interrupt priority control register
	** used by this SPI controller.
	*/
	pregIpc = ((p32_regset *)&IPC0) + (vec / 4);	// interrupt priority control register
9d001744:	92040028 	lbu	a0,40(s0)
9d001748:	3c03bf88 	lui	v1,0xbf88
9d00174c:	24631090 	addiu	v1,v1,4240
9d001750:	00042882 	srl	a1,a0,0x2
9d001754:	00052900 	sll	a1,a1,0x4

	/* Compute the bit position of the interrupt priority bits for
	** this interrupt vector.
	*/
	bnVec = 8 * (vec % 4);
9d001758:	30840003 	andi	a0,a0,0x3
	pregIfs->clr = bitErr + bitRx + bitTx;

	/* Compute the address of the interrupt priority control register
	** used by this SPI controller.
	*/
	pregIpc = ((p32_regset *)&IPC0) + (vec / 4);	// interrupt priority control register
9d00175c:	00651821 	addu	v1,v1,a1

	/* Compute the bit position of the interrupt priority bits for
	** this interrupt vector.
	*/
	bnVec = 8 * (vec % 4);
9d001760:	000420c0 	sll	a0,a0,0x3
	** can be computed from the vector number. Each IPC register contains the
	** the priority bits for four vectors. Each byte of an IPC registger contains
	** the priority and sub-priority bits arranged such that  bits 0-1 are
	** the sub-priority, bits 2-4 the priority, and bits 5-7 unused.
	*/
	pregIpc->clr = (0x1F << bnVec);
9d001764:	2405001f 	li	a1,31
9d001768:	00852804 	sllv	a1,a1,a0
9d00176c:	ac650004 	sw	a1,4(v1)
	pregIpc->set = ipl << bnVec;
9d001770:	92050029 	lbu	a1,41(s0)
9d001774:	00852004 	sllv	a0,a1,a0
9d001778:	ac640008 	sw	a0,8(v1)

	/* Set the default baud rate.
	*/
	brg = (uint16_t)((F_CPU / (2 * _DSPI_SPD_DEFAULT)) - 1);
	pspi->sxBrg.reg = brg;
9d00177c:	24030027 	li	v1,39
9d001780:	ac430030 	sw	v1,48(v0)

	/* Clear the receive overflow bit and receive overflow error flag
	*/
	pspi->sxStat.clr = (1 << _SPISTAT_SPIROV);
9d001784:	24030040 	li	v1,64
9d001788:	ac430014 	sw	v1,20(v0)
	fRov = 0;
9d00178c:	a200001f 	sb	zero,31(s0)
	** the SS pin MUST be kept as OUTPUT.
	*/
	pspi->sxCon.reg = 0;
	pspi->sxCon.set = (1 << _SPICON_ON) + (1 << _SPICON_MSTEN) + DSPI_MODE0;

}	
9d001790:	8fbf001c 	lw	ra,28(sp)
	** Warning: if the SS pin ever becomes a LOW INPUT then SPI 
	** automatically switches to Slave, so the data direction of 
	** the SS pin MUST be kept as OUTPUT.
	*/
	pspi->sxCon.reg = 0;
	pspi->sxCon.set = (1 << _SPICON_ON) + (1 << _SPICON_MSTEN) + DSPI_MODE0;
9d001794:	34038120 	li	v1,0x8120
	/* Enable the SPI controller.
	** Warning: if the SS pin ever becomes a LOW INPUT then SPI 
	** automatically switches to Slave, so the data direction of 
	** the SS pin MUST be kept as OUTPUT.
	*/
	pspi->sxCon.reg = 0;
9d001798:	ac400000 	sw	zero,0(v0)
	pspi->sxCon.set = (1 << _SPICON_ON) + (1 << _SPICON_MSTEN) + DSPI_MODE0;

}	
9d00179c:	8fb10018 	lw	s1,24(sp)
9d0017a0:	8fb00014 	lw	s0,20(sp)
	** Warning: if the SS pin ever becomes a LOW INPUT then SPI 
	** automatically switches to Slave, so the data direction of 
	** the SS pin MUST be kept as OUTPUT.
	*/
	pspi->sxCon.reg = 0;
	pspi->sxCon.set = (1 << _SPICON_ON) + (1 << _SPICON_MSTEN) + DSPI_MODE0;
9d0017a4:	ac430008 	sw	v1,8(v0)

}	
9d0017a8:	03e00008 	jr	ra
9d0017ac:	27bd0020 	addiu	sp,sp,32

9d0017b0 <_ZN4DSPI5beginEv>:
void
DSPI::begin() {

	/* Use the default pin specified in the constructor.
	*/
	begin(pinSS);
9d0017b0:	0b4005b9 	j	9d0016e4 <_ZN4DSPI5beginEh>
9d0017b4:	9085002a 	lbu	a1,42(a0)

9d0017b8 <_ZN4DSPI15setTransferSizeEh>:
**		pin be an output driving high. This pin will then be use
**		by the setSelect method.
*/

void
DSPI::setTransferSize(uint8_t bits) {
9d0017b8:	30a500ff 	andi	a1,a1,0xff
	switch(bits) {
9d0017bc:	24020010 	li	v0,16
9d0017c0:	10a20009 	beq	a1,v0,9d0017e8 <_ZN4DSPI15setTransferSizeEh+0x30>
9d0017c4:	24020020 	li	v0,32
9d0017c8:	10a2000e 	beq	a1,v0,9d001804 <_ZN4DSPI15setTransferSizeEh+0x4c>
9d0017cc:	24030800 	li	v1,2048
		default:
			// Anything that's not recognised we'll just take as 8 bit
		case DSPI_8BIT:
			pspi->sxCon.clr = 1<<_SPICON_MODE32;
9d0017d0:	8c820020 	lw	v0,32(a0)
9d0017d4:	ac430004 	sw	v1,4(v0)
			pspi->sxCon.clr = 1<<_SPICON_MODE16;
9d0017d8:	24030400 	li	v1,1024
9d0017dc:	ac430004 	sw	v1,4(v0)
			break;
9d0017e0:	03e00008 	jr	ra
9d0017e4:	00000000 	nop
		case DSPI_16BIT:
			pspi->sxCon.clr = 1<<_SPICON_MODE32;
9d0017e8:	8c820020 	lw	v0,32(a0)
9d0017ec:	24030800 	li	v1,2048
9d0017f0:	ac430004 	sw	v1,4(v0)
			pspi->sxCon.set = 1<<_SPICON_MODE16;
9d0017f4:	24030400 	li	v1,1024
9d0017f8:	ac430008 	sw	v1,8(v0)
			break;
9d0017fc:	03e00008 	jr	ra
9d001800:	00000000 	nop
		case DSPI_32BIT:
			pspi->sxCon.set = 1<<_SPICON_MODE32;
9d001804:	8c820020 	lw	v0,32(a0)
9d001808:	ac430008 	sw	v1,8(v0)
			pspi->sxCon.clr = 1<<_SPICON_MODE16;
9d00180c:	24030400 	li	v1,1024
9d001810:	ac430004 	sw	v1,4(v0)
9d001814:	03e00008 	jr	ra
9d001818:	00000000 	nop

9d00181c <_ZN4DSPI8transferEm>:
**		Send the specified byte to the SPI slave device, returning
**		the byte received from the slave device.
*/

uint32_t
DSPI::transfer(uint32_t bVal) {
9d00181c:	8c820020 	lw	v0,32(a0)

	while ((pspi->sxStat.reg & (1 << _SPISTAT_SPITBE)) == 0) {
9d001820:	8c430010 	lw	v1,16(v0)
9d001824:	30630008 	andi	v1,v1,0x8
9d001828:	1060fffd 	beqz	v1,9d001820 <_ZN4DSPI8transferEm+0x4>
9d00182c:	00000000 	nop
	}
	pspi->sxBuf.reg = bVal;
9d001830:	ac450020 	sw	a1,32(v0)

	while ((pspi->sxStat.reg & (1 << _SPISTAT_SPIRBF)) == 0) {
9d001834:	8c430010 	lw	v1,16(v0)
9d001838:	30630001 	andi	v1,v1,0x1
9d00183c:	1060fffd 	beqz	v1,9d001834 <_ZN4DSPI8transferEm+0x18>
9d001840:	00000000 	nop
	}

	return pspi->sxBuf.reg;
9d001844:	8c420020 	lw	v0,32(v0)

}
9d001848:	03e00008 	jr	ra
9d00184c:	00000000 	nop

9d001850 <_ZN4DSPI15doDspiInterruptEv>:
	uint8_t		bTmp;
	uint32_t	regIfs;

	/* Get the interrupt flag status.
	*/
	regIfs = pregIfs->reg;
9d001850:	8c820000 	lw	v0,0(a0)

	/* Check for and handle overrun error interrupt.
	*/
	if ((regIfs & bitErr) != 0) {
9d001854:	8c830008 	lw	v1,8(a0)
	uint8_t		bTmp;
	uint32_t	regIfs;

	/* Get the interrupt flag status.
	*/
	regIfs = pregIfs->reg;
9d001858:	8c450000 	lw	a1,0(v0)

	/* Check for and handle overrun error interrupt.
	*/
	if ((regIfs & bitErr) != 0) {
9d00185c:	00653024 	and	a2,v1,a1
9d001860:	50c00008 	beqzl	a2,9d001884 <_ZN4DSPI15doDspiInterruptEv+0x34>
9d001864:	8c83000c 	lw	v1,12(a0)
		fRov = 1;				// set the receive overflow error flag;
		pspi->sxStat.clr = (1 << _SPISTAT_SPIROV);	//clear status bit
9d001868:	8c860020 	lw	a2,32(a0)
	regIfs = pregIfs->reg;

	/* Check for and handle overrun error interrupt.
	*/
	if ((regIfs & bitErr) != 0) {
		fRov = 1;				// set the receive overflow error flag;
9d00186c:	24070001 	li	a3,1
9d001870:	a087001f 	sb	a3,31(a0)
		pspi->sxStat.clr = (1 << _SPISTAT_SPIROV);	//clear status bit
9d001874:	24070040 	li	a3,64
9d001878:	acc70014 	sw	a3,20(a2)
		pregIfs->clr = bitErr;
9d00187c:	ac430004 	sw	v1,4(v0)
	}

	/* Check for and handle receive interrupt.
	*/
	if ((regIfs & bitRx) != 0) {
9d001880:	8c83000c 	lw	v1,12(a0)
9d001884:	00a32824 	and	a1,a1,v1
9d001888:	10a0001d 	beqz	a1,9d001900 <_ZN4DSPI15doDspiInterruptEv+0xb0>
9d00188c:	00000000 	nop

		/* Get the received character.
		*/
		bTmp = pspi->sxBuf.reg;		//read next byte from SPI controller
9d001890:	8c860020 	lw	a2,32(a0)
		cbCur -= 1;					//count this byte as received

		/* Are we storing it? pbRcvCur is 0 if we are sending only
		** and ignoring the received data.
		*/
		if (pbRcvCur != 0) {
9d001894:	8c850018 	lw	a1,24(a0)
	*/
	if ((regIfs & bitRx) != 0) {

		/* Get the received character.
		*/
		bTmp = pspi->sxBuf.reg;		//read next byte from SPI controller
9d001898:	8cc70020 	lw	a3,32(a2)
		cbCur -= 1;					//count this byte as received
9d00189c:	9486001c 	lhu	a2,28(a0)
9d0018a0:	24c6ffff 	addiu	a2,a2,-1
9d0018a4:	30c6ffff 	andi	a2,a2,0xffff
9d0018a8:	a486001c 	sh	a2,28(a0)

		/* Are we storing it? pbRcvCur is 0 if we are sending only
		** and ignoring the received data.
		*/
		if (pbRcvCur != 0) {
9d0018ac:	10a00006 	beqz	a1,9d0018c8 <_ZN4DSPI15doDspiInterruptEv+0x78>
9d0018b0:	30e700ff 	andi	a3,a3,0xff
			*pbRcvCur++ = bTmp;		//store the received byte into output buffer
9d0018b4:	a0a70000 	sb	a3,0(a1)
9d0018b8:	8c820000 	lw	v0,0(a0)
9d0018bc:	8c83000c 	lw	v1,12(a0)
9d0018c0:	24a50001 	addiu	a1,a1,1
9d0018c4:	ac850018 	sw	a1,24(a0)
		}

		/* Send the next byte to the slave. pbSndCur is 0 if we are
		** receiving only. In this case send the pad byte.
		*/
		if (cbCur > 0) {
9d0018c8:	9485001c 	lhu	a1,28(a0)
9d0018cc:	30a5ffff 	andi	a1,a1,0xffff
9d0018d0:	10a0000a 	beqz	a1,9d0018fc <_ZN4DSPI15doDspiInterruptEv+0xac>
9d0018d4:	00000000 	nop
			bTmp = (pbSndCur != 0) ? *pbSndCur++ : bPad;
9d0018d8:	8c850014 	lw	a1,20(a0)
9d0018dc:	50a0000a 	beqzl	a1,9d001908 <_ZN4DSPI15doDspiInterruptEv+0xb8>
9d0018e0:	9085001e 	lbu	a1,30(a0)
9d0018e4:	90a60000 	lbu	a2,0(a1)
9d0018e8:	24a50001 	addiu	a1,a1,1
9d0018ec:	ac850014 	sw	a1,20(a0)
			pspi->sxBuf.reg = bTmp;
9d0018f0:	8c840020 	lw	a0,32(a0)

		/* Send the next byte to the slave. pbSndCur is 0 if we are
		** receiving only. In this case send the pad byte.
		*/
		if (cbCur > 0) {
			bTmp = (pbSndCur != 0) ? *pbSndCur++ : bPad;
9d0018f4:	30c500ff 	andi	a1,a2,0xff
			pspi->sxBuf.reg = bTmp;
9d0018f8:	ac850020 	sw	a1,32(a0)
		}

		pregIfs->clr = bitRx;		//clear the receive interrupt flag
9d0018fc:	ac430004 	sw	v1,4(v0)
9d001900:	03e00008 	jr	ra
9d001904:	00000000 	nop
		/* Send the next byte to the slave. pbSndCur is 0 if we are
		** receiving only. In this case send the pad byte.
		*/
		if (cbCur > 0) {
			bTmp = (pbSndCur != 0) ? *pbSndCur++ : bPad;
			pspi->sxBuf.reg = bTmp;
9d001908:	8c840020 	lw	a0,32(a0)
9d00190c:	ac850020 	sw	a1,32(a0)
9d001910:	0b40063f 	j	9d0018fc <_ZN4DSPI15doDspiInterruptEv+0xac>
9d001914:	00000000 	nop

9d001918 <IntDspi0Handler>:
**		logical SPI port DSPI0
*/
#if defined(_DSPI0_VECTOR)

void __attribute__((interrupt(), nomips16)) IntDspi0Handler(void)
{
9d001918:	415de800 	rdpgpr	sp,sp
9d00191c:	401b7000 	mfc0	k1,c0_epc
9d001920:	401a6002 	mfc0	k0,c0_srsctl
9d001924:	27bdff90 	addiu	sp,sp,-112
9d001928:	afbb006c 	sw	k1,108(sp)
9d00192c:	401b6000 	mfc0	k1,c0_status
9d001930:	afba0068 	sw	k0,104(sp)
9d001934:	401a6800 	mfc0	k0,c0_cause
9d001938:	001ad282 	srl	k0,k0,0xa
9d00193c:	afbb0064 	sw	k1,100(sp)
9d001940:	7f5b7a84 	ins	k1,k0,0xa,0x6
9d001944:	7c1b2044 	ins	k1,zero,0x1,0x4
9d001948:	409b6000 	mtc0	k1,c0_status
9d00194c:	afa30018 	sw	v1,24(sp)
9d001950:	8fa30068 	lw	v1,104(sp)
9d001954:	3063000f 	andi	v1,v1,0xf
9d001958:	14600011 	bnez	v1,9d0019a0 <IntDspi0Handler+0x88>
9d00195c:	afa20014 	sw	v0,20(sp)
9d001960:	afbf0054 	sw	ra,84(sp)
9d001964:	afb90050 	sw	t9,80(sp)
9d001968:	afb8004c 	sw	t8,76(sp)
9d00196c:	afaf0048 	sw	t7,72(sp)
9d001970:	afae0044 	sw	t6,68(sp)
9d001974:	afad0040 	sw	t5,64(sp)
9d001978:	afac003c 	sw	t4,60(sp)
9d00197c:	afab0038 	sw	t3,56(sp)
9d001980:	afaa0034 	sw	t2,52(sp)
9d001984:	afa90030 	sw	t1,48(sp)
9d001988:	afa8002c 	sw	t0,44(sp)
9d00198c:	afa70028 	sw	a3,40(sp)
9d001990:	afa60024 	sw	a2,36(sp)
9d001994:	afa50020 	sw	a1,32(sp)
9d001998:	afa4001c 	sw	a0,28(sp)
9d00199c:	afa10010 	sw	at,16(sp)
	if (pdspi0 != 0) {
9d0019a0:	8f848020 	lw	a0,-32736(gp)
**		logical SPI port DSPI0
*/
#if defined(_DSPI0_VECTOR)

void __attribute__((interrupt(), nomips16)) IntDspi0Handler(void)
{
9d0019a4:	00001012 	mflo	v0
9d0019a8:	afa2005c 	sw	v0,92(sp)
9d0019ac:	00001810 	mfhi	v1
	if (pdspi0 != 0) {
9d0019b0:	10800003 	beqz	a0,9d0019c0 <IntDspi0Handler+0xa8>
9d0019b4:	afa30058 	sw	v1,88(sp)
		pdspi0->doDspiInterrupt();
9d0019b8:	0f400614 	jal	9d001850 <_ZN4DSPI15doDspiInterruptEv>
9d0019bc:	00000000 	nop
	}
}
9d0019c0:	8fa2005c 	lw	v0,92(sp)
9d0019c4:	8fa30058 	lw	v1,88(sp)
9d0019c8:	00400013 	mtlo	v0
9d0019cc:	8fa20068 	lw	v0,104(sp)
9d0019d0:	3042000f 	andi	v0,v0,0xf
9d0019d4:	14400013 	bnez	v0,9d001a24 <IntDspi0Handler+0x10c>
9d0019d8:	00600011 	mthi	v1
9d0019dc:	8fbf0054 	lw	ra,84(sp)
9d0019e0:	8fb90050 	lw	t9,80(sp)
9d0019e4:	8fb8004c 	lw	t8,76(sp)
9d0019e8:	8faf0048 	lw	t7,72(sp)
9d0019ec:	8fae0044 	lw	t6,68(sp)
9d0019f0:	8fad0040 	lw	t5,64(sp)
9d0019f4:	8fac003c 	lw	t4,60(sp)
9d0019f8:	8fab0038 	lw	t3,56(sp)
9d0019fc:	8faa0034 	lw	t2,52(sp)
9d001a00:	8fa90030 	lw	t1,48(sp)
9d001a04:	8fa8002c 	lw	t0,44(sp)
9d001a08:	8fa70028 	lw	a3,40(sp)
9d001a0c:	8fa60024 	lw	a2,36(sp)
9d001a10:	8fa50020 	lw	a1,32(sp)
9d001a14:	8fa4001c 	lw	a0,28(sp)
9d001a18:	8fa30018 	lw	v1,24(sp)
9d001a1c:	8fa20014 	lw	v0,20(sp)
9d001a20:	8fa10010 	lw	at,16(sp)
9d001a24:	41606000 	di
9d001a28:	000000c0 	ehb
9d001a2c:	8fba006c 	lw	k0,108(sp)
9d001a30:	8fbb0064 	lw	k1,100(sp)
9d001a34:	409a7000 	mtc0	k0,c0_epc
9d001a38:	8fba0068 	lw	k0,104(sp)
9d001a3c:	27bd0070 	addiu	sp,sp,112
9d001a40:	409a6002 	mtc0	k0,c0_srsctl
9d001a44:	41dde800 	wrpgpr	sp,sp
9d001a48:	409b6000 	mtc0	k1,c0_status
9d001a4c:	42000018 	eret

9d001a50 <_ZN5DSPI0C1Ev>:
#else
DSPI0::DSPI0() 
#endif
{

	pspi = (p32_spi *) _DSPI0_BASE;
9d001a50:	3c02bf80 	lui	v0,0xbf80
9d001a54:	24425a00 	addiu	v0,v0,23040
9d001a58:	ac820020 	sw	v0,32(a0)
	vec = _DSPI0_VECTOR;
9d001a5c:	2402001f 	li	v0,31
9d001a60:	a0820028 	sb	v0,40(a0)
	ipl = ((_DSPI0_IPL & 0x07) << 2) + (_DSPI0_SPL & 0x03);
9d001a64:	2402000c 	li	v0,12
9d001a68:	a0820029 	sb	v0,41(a0)
	pinSS = PIN_DSPI0_SS;
9d001a6c:	2402000a 	li	v0,10
9d001a70:	a082002a 	sb	v0,42(a0)
	** and IEC register. For each IFS register, there is a SET, CLR,
	** and INV register, so the distance (in dwords) from IFS0 to IFS1
	** is 4. This code assumes that all of the enable control and flag
	** bits for an SPI controller are in the same IEC and IFS registers.
	*/
	pregIec = ((p32_regset *)&IEC0) + (irqErr / 32);	// interrupt enable control register
9d001a74:	3c02bf88 	lui	v0,0xbf88
9d001a78:	24421070 	addiu	v0,v0,4208
9d001a7c:	ac820004 	sw	v0,4(a0)
	pregIfs = ((p32_regset *)&IFS0) + (irqErr / 32);	// interrupt flag register
9d001a80:	3c02bf88 	lui	v0,0xbf88
9d001a84:	24421040 	addiu	v0,v0,4160
9d001a88:	ac820000 	sw	v0,0(a0)

	bitErr = 1 << (irqErr % 32);	// error interrupt flag/enable bit
9d001a8c:	24020020 	li	v0,32
9d001a90:	ac820008 	sw	v0,8(a0)
	bitRx  = 1 << (irqRx % 32);		// rx interrupt flag/enable bit
9d001a94:	24020040 	li	v0,64
9d001a98:	ac82000c 	sw	v0,12(a0)
	bitTx  = 1 << (irqTx % 32);		// tx interrupt flag/enable bit
9d001a9c:	24020080 	li	v0,128
9d001aa0:	ac820010 	sw	v0,16(a0)

    isr = isrHandler;
9d001aa4:	3c029d00 	lui	v0,0x9d00
9d001aa8:	24421918 	addiu	v0,v0,6424
DSPI::DSPI()
#endif
 {

	pspi = 0;
	cbCur = 0;
9d001aac:	a480001c 	sh	zero,28(a0)
	vec = _DSPI0_VECTOR;
	ipl = ((_DSPI0_IPL & 0x07) << 2) + (_DSPI0_SPL & 0x03);
	pinSS = PIN_DSPI0_SS;

	init(_DSPI0_ERR_IRQ, _DSPI0_RX_IRQ, _DSPI0_TX_IRQ, IntDspi0Handler);
}
9d001ab0:	03e00008 	jr	ra
9d001ab4:	ac820024 	sw	v0,36(a0)

9d001ab8 <__RTCCInterrupt>:
extern "C"
{
    void (*_RTCCInterrupt)();

    void __ISR(_RTCC_VECTOR, ipl3/*_RTCC_IPL_ISR does not work*/) __RTCCInterrupt(void) 
    {
9d001ab8:	415de800 	rdpgpr	sp,sp
9d001abc:	401a7000 	mfc0	k0,c0_epc
9d001ac0:	401b6000 	mfc0	k1,c0_status
9d001ac4:	27bdff98 	addiu	sp,sp,-104
9d001ac8:	afbb0060 	sw	k1,96(sp)
9d001acc:	7c1b7844 	ins	k1,zero,0x1,0xf
9d001ad0:	377b0c00 	ori	k1,k1,0xc00
9d001ad4:	afba0064 	sw	k0,100(sp)
9d001ad8:	409b6000 	mtc0	k1,c0_status
9d001adc:	afbf0054 	sw	ra,84(sp)
9d001ae0:	afb90050 	sw	t9,80(sp)
9d001ae4:	afb8004c 	sw	t8,76(sp)
9d001ae8:	afaf0048 	sw	t7,72(sp)
9d001aec:	afae0044 	sw	t6,68(sp)
9d001af0:	afad0040 	sw	t5,64(sp)
9d001af4:	afac003c 	sw	t4,60(sp)
9d001af8:	afab0038 	sw	t3,56(sp)
9d001afc:	afaa0034 	sw	t2,52(sp)
9d001b00:	afa90030 	sw	t1,48(sp)
9d001b04:	afa8002c 	sw	t0,44(sp)
9d001b08:	afa70028 	sw	a3,40(sp)
9d001b0c:	afa60024 	sw	a2,36(sp)
9d001b10:	afa50020 	sw	a1,32(sp)
9d001b14:	afa4001c 	sw	a0,28(sp)
9d001b18:	afa30018 	sw	v1,24(sp)
9d001b1c:	afa20014 	sw	v0,20(sp)
9d001b20:	afa10010 	sw	at,16(sp)
9d001b24:	00001012 	mflo	v0
9d001b28:	afa2005c 	sw	v0,92(sp)
        if(_RTCCInterrupt)
9d001b2c:	8f828028 	lw	v0,-32728(gp)
extern "C"
{
    void (*_RTCCInterrupt)();

    void __ISR(_RTCC_VECTOR, ipl3/*_RTCC_IPL_ISR does not work*/) __RTCCInterrupt(void) 
    {
9d001b30:	00001810 	mfhi	v1
        if(_RTCCInterrupt)
9d001b34:	10400003 	beqz	v0,9d001b44 <__RTCCInterrupt+0x8c>
9d001b38:	afa30058 	sw	v1,88(sp)
        {
            _RTCCInterrupt();
9d001b3c:	0040f809 	jalr	v0
9d001b40:	00000000 	nop
        }
        IFS1CLR=0x00008000;
9d001b44:	34038000 	li	v1,0x8000
9d001b48:	3c02bf88 	lui	v0,0xbf88
9d001b4c:	ac431044 	sw	v1,4164(v0)
    }
9d001b50:	8fa2005c 	lw	v0,92(sp)
9d001b54:	8fa30058 	lw	v1,88(sp)
9d001b58:	8fbf0054 	lw	ra,84(sp)
9d001b5c:	00400013 	mtlo	v0
9d001b60:	8fb90050 	lw	t9,80(sp)
9d001b64:	8fb8004c 	lw	t8,76(sp)
9d001b68:	8faf0048 	lw	t7,72(sp)
9d001b6c:	00600011 	mthi	v1
9d001b70:	8fae0044 	lw	t6,68(sp)
9d001b74:	8fad0040 	lw	t5,64(sp)
9d001b78:	8fac003c 	lw	t4,60(sp)
9d001b7c:	8fab0038 	lw	t3,56(sp)
9d001b80:	8faa0034 	lw	t2,52(sp)
9d001b84:	8fa90030 	lw	t1,48(sp)
9d001b88:	8fa8002c 	lw	t0,44(sp)
9d001b8c:	8fa70028 	lw	a3,40(sp)
9d001b90:	8fa60024 	lw	a2,36(sp)
9d001b94:	8fa50020 	lw	a1,32(sp)
9d001b98:	8fa4001c 	lw	a0,28(sp)
9d001b9c:	8fa30018 	lw	v1,24(sp)
9d001ba0:	8fa20014 	lw	v0,20(sp)
9d001ba4:	8fa10010 	lw	at,16(sp)
9d001ba8:	41606000 	di
9d001bac:	000000c0 	ehb
9d001bb0:	8fba0064 	lw	k0,100(sp)
9d001bb4:	8fbb0060 	lw	k1,96(sp)
9d001bb8:	409a7000 	mtc0	k0,c0_epc
9d001bbc:	27bd0068 	addiu	sp,sp,104
9d001bc0:	41dde800 	wrpgpr	sp,sp
9d001bc4:	409b6000 	mtc0	k1,c0_status
9d001bc8:	42000018 	eret

9d001bcc <_ZN9RTCCClass5beginEv>:
#define UNLOCK SYSKEY = 0x0; SYSKEY = 0xAA996655; SYSKEY = 0x556699AA;
#define LOCK SYSKEY = 0x0;

void RTCCClass::begin() 
{
    IEC1CLR=0x00008000;
9d001bcc:	34058000 	li	a1,0x8000
9d001bd0:	3c03bf88 	lui	v1,0xbf88
    IFS1CLR=0x00008000; 
9d001bd4:	3c06bf88 	lui	a2,0xbf88
#define UNLOCK SYSKEY = 0x0; SYSKEY = 0xAA996655; SYSKEY = 0x556699AA;
#define LOCK SYSKEY = 0x0;

void RTCCClass::begin() 
{
    IEC1CLR=0x00008000;
9d001bd8:	ac651074 	sw	a1,4212(v1)
    IFS1CLR=0x00008000; 
    IPC8CLR=0x1f000000; 
9d001bdc:	3c071f00 	lui	a3,0x1f00
#define LOCK SYSKEY = 0x0;

void RTCCClass::begin() 
{
    IEC1CLR=0x00008000;
    IFS1CLR=0x00008000; 
9d001be0:	acc51044 	sw	a1,4164(a2)
    IPC8CLR=0x1f000000; 
9d001be4:	3c06bf88 	lui	a2,0xbf88
9d001be8:	acc71114 	sw	a3,4372(a2)
    IPC8SET=0x0d000000; 
9d001bec:	3c06bf88 	lui	a2,0xbf88
9d001bf0:	3c070d00 	lui	a3,0xd00
9d001bf4:	acc71118 	sw	a3,4376(a2)
    IEC1SET=0x00008000; 
9d001bf8:	3c06bf88 	lui	a2,0xbf88
9d001bfc:	acc51078 	sw	a1,4216(a2)
/*Ensure the secondary oscillator is enabled and ready, i.e. OSCCON<1>=1, OSCCON<22>=1,
and RTCC write is enabled i.e. RTCWREN (RTCCON<3>) =1;*/
    UNLOCK
9d001c00:	3c05aa99 	lui	a1,0xaa99
9d001c04:	3c02bf81 	lui	v0,0xbf81
9d001c08:	24a56655 	addiu	a1,a1,26197
9d001c0c:	ac40f230 	sw	zero,-3536(v0)
9d001c10:	ac45f230 	sw	a1,-3536(v0)
9d001c14:	3c055566 	lui	a1,0x5566
9d001c18:	34a599aa 	ori	a1,a1,0x99aa
9d001c1c:	ac45f230 	sw	a1,-3536(v0)
    RTCCONbits.RTCWREN = 1;
9d001c20:	3c03bf80 	lui	v1,0xbf80
9d001c24:	8c650200 	lw	a1,512(v1)
9d001c28:	24060001 	li	a2,1
9d001c2c:	7cc518c4 	ins	a1,a2,0x3,0x1
9d001c30:	ac650200 	sw	a1,512(v1)
    RTCCONbits.ON = 1;
9d001c34:	8c650200 	lw	a1,512(v1)
9d001c38:	7cc57bc4 	ins	a1,a2,0xf,0x1
9d001c3c:	ac650200 	sw	a1,512(v1)
    OSCCONSET = 0x00400002;
9d001c40:	3c050040 	lui	a1,0x40
9d001c44:	24a50002 	addiu	a1,a1,2
9d001c48:	3c03bf81 	lui	v1,0xbf81
9d001c4c:	ac65f008 	sw	a1,-4088(v1)
    LOCK
9d001c50:	ac40f230 	sw	zero,-3536(v0)
	_validity = RTCC_VAL_NOT; // 0: very unsure!
}
9d001c54:	03e00008 	jr	ra
9d001c58:	a0800000 	sb	zero,0(a0)

9d001c5c <_ZN9RTCCClass5valueEv>:
/*
 get Current date/time.
 RTCCValue class represents a date/time independently from the RTC itself.
 */
RTCCValue RTCCClass::value()
{
9d001c5c:	00801021 	move	v0,a0
9d001c60:	3c04bf80 	lui	a0,0xbf80
void RTCCClass::timeSync()
{
/* THIS IS NOT A GOOD IDEA:
    while(RTCCONbits.RTCSYNC==0); // Wait for a transition and 32ms later
*/
    while(RTCCONbits.RTCSYNC==1) { /*yield*/ };
9d001c64:	8c830200 	lw	v1,512(a0)
9d001c68:	30630004 	andi	v1,v1,0x4
9d001c6c:	1460fffd 	bnez	v1,9d001c64 <_ZN9RTCCClass5valueEv+0x8>
9d001c70:	3c09bf80 	lui	t1,0xbf80
 */
RTCCValue RTCCClass::value()
{
    timeSync();
	uint32_t our_date = RTCDATE;
	uint32_t our_time = RTCTIME;
9d001c74:	3c08bf80 	lui	t0,0xbf80
 RTCCValue class represents a date/time independently from the RTC itself.
 */
RTCCValue RTCCClass::value()
{
    timeSync();
	uint32_t our_date = RTCDATE;
9d001c78:	8d260230 	lw	a2,560(t1)
	uint32_t our_time = RTCTIME;
9d001c7c:	8d070220 	lw	a3,544(t0)
	while (1) { // Ensures there is no date rollover while reading the time
		uint32_t new_date = RTCDATE;
9d001c80:	8d230230 	lw	v1,560(t1)
		uint32_t new_time = RTCTIME;
9d001c84:	8d040220 	lw	a0,544(t0)
		if (new_date == our_date && new_time == our_time) break;
9d001c88:	10660007 	beq	v1,a2,9d001ca8 <_ZN9RTCCClass5valueEv+0x4c>
9d001c8c:	00000000 	nop
9d001c90:	00603021 	move	a2,v1
{
    timeSync();
	uint32_t our_date = RTCDATE;
	uint32_t our_time = RTCTIME;
	while (1) { // Ensures there is no date rollover while reading the time
		uint32_t new_date = RTCDATE;
9d001c94:	8d230230 	lw	v1,560(t1)
		uint32_t new_time = RTCTIME;
		if (new_date == our_date && new_time == our_time) break;
9d001c98:	00803821 	move	a3,a0
    timeSync();
	uint32_t our_date = RTCDATE;
	uint32_t our_time = RTCTIME;
	while (1) { // Ensures there is no date rollover while reading the time
		uint32_t new_date = RTCDATE;
		uint32_t new_time = RTCTIME;
9d001c9c:	8d040220 	lw	a0,544(t0)
		if (new_date == our_date && new_time == our_time) break;
9d001ca0:	5466fffc 	bnel	v1,a2,9d001c94 <_ZN9RTCCClass5valueEv+0x38>
9d001ca4:	00603021 	move	a2,v1
9d001ca8:	50870003 	beql	a0,a3,9d001cb8 <_ZN9RTCCClass5valueEv+0x5c>
9d001cac:	80a30000 	lb	v1,0(a1)
9d001cb0:	0b400720 	j	9d001c80 <_ZN9RTCCClass5valueEv+0x24>
9d001cb4:	00803821 	move	a3,a0
	_validity = 0;
}

/* Handling a date/time : current RTC, Alarm, logged event, etc. */
RTCCValue::RTCCValue(uint32_t date, uint32_t time, uint8_t val) {
	a_date = date;
9d001cb8:	ac460004 	sw	a2,4(v0)
	a_time = time;
9d001cbc:	ac470008 	sw	a3,8(v0)
		if (new_date == our_date && new_time == our_time) break;
		our_date = new_date;
		our_time = new_time;
	}
	return RTCCValue(our_date,our_time, _validity);
}
9d001cc0:	03e00008 	jr	ra
9d001cc4:	a0430000 	sb	v1,0(v0)

9d001cc8 <_ZN9RTCCClass3setE9RTCCValue>:

/*
 Set date/time and specify its validity (0: very bad, 5: perfect=NTP)
 */
void RTCCClass::set(RTCCValue setting)
{
9d001cc8:	afa50004 	sw	a1,4(sp)
9d001ccc:	afa60008 	sw	a2,8(sp)
9d001cd0:	afa7000c 	sw	a3,12(sp)
9d001cd4:	3c03bf80 	lui	v1,0xbf80
void RTCCClass::timeSync()
{
/* THIS IS NOT A GOOD IDEA:
    while(RTCCONbits.RTCSYNC==0); // Wait for a transition and 32ms later
*/
    while(RTCCONbits.RTCSYNC==1) { /*yield*/ };
9d001cd8:	8c620200 	lw	v0,512(v1)
9d001cdc:	30420004 	andi	v0,v0,0x4
9d001ce0:	1440fffd 	bnez	v0,9d001cd8 <_ZN9RTCCClass3setE9RTCCValue+0x10>
9d001ce4:	3c02bf80 	lui	v0,0xbf80
 Set date/time and specify its validity (0: very bad, 5: perfect=NTP)
 */
void RTCCClass::set(RTCCValue setting)
{
    timeSync();
	RTCDATE = setting.date();
9d001ce8:	8fa30008 	lw	v1,8(sp)
9d001cec:	ac430230 	sw	v1,560(v0)
	RTCTIME = setting.time();
9d001cf0:	8fa3000c 	lw	v1,12(sp)
9d001cf4:	3c02bf80 	lui	v0,0xbf80
9d001cf8:	ac430220 	sw	v1,544(v0)
	_validity = setting.getValidity();
9d001cfc:	93a20004 	lbu	v0,4(sp)
}
9d001d00:	03e00008 	jr	ra
9d001d04:	a0820000 	sb	v0,0(a0)

9d001d08 <_ZN9RTCCClass11alarmEnableEv>:
{
    while(RTCALRMbits.ALRMSYNC==1) { /*yield*/ };
}

void RTCCClass::alarmEnable()
{
9d001d08:	3c04bf80 	lui	a0,0xbf80
/*
 Alarms management...
 */
void RTCCClass::alarmSync()
{
    while(RTCALRMbits.ALRMSYNC==1) { /*yield*/ };
9d001d0c:	8c820210 	lw	v0,528(a0)
9d001d10:	30421000 	andi	v0,v0,0x1000
9d001d14:	1440fffd 	bnez	v0,9d001d0c <_ZN9RTCCClass11alarmEnableEv+0x4>
9d001d18:	3c03bf80 	lui	v1,0xbf80
}

void RTCCClass::alarmEnable()
{
    alarmSync();
    RTCALRMbits.ALRMEN = 1;
9d001d1c:	8c620210 	lw	v0,528(v1)
9d001d20:	24040001 	li	a0,1
9d001d24:	7c827bc4 	ins	v0,a0,0xf,0x1
9d001d28:	ac620210 	sw	v0,528(v1)
}
9d001d2c:	03e00008 	jr	ra
9d001d30:	00000000 	nop

9d001d34 <_ZN9RTCCClass11chimeEnableEv>:
		// Remember when this occurs!
		lastChime = RTCC.value();
	}
 */
void RTCCClass::chimeEnable()
{
9d001d34:	3c04bf80 	lui	a0,0xbf80
/*
 Alarms management...
 */
void RTCCClass::alarmSync()
{
    while(RTCALRMbits.ALRMSYNC==1) { /*yield*/ };
9d001d38:	8c820210 	lw	v0,528(a0)
9d001d3c:	30421000 	andi	v0,v0,0x1000
9d001d40:	1440fffd 	bnez	v0,9d001d38 <_ZN9RTCCClass11chimeEnableEv+0x4>
9d001d44:	3c03bf80 	lui	v1,0xbf80
	}
 */
void RTCCClass::chimeEnable()
{
    alarmSync();
    RTCALRMbits.CHIME = 1;
9d001d48:	8c620210 	lw	v0,528(v1)
9d001d4c:	24040001 	li	a0,1
9d001d50:	7c827384 	ins	v0,a0,0xe,0x1
9d001d54:	ac620210 	sw	v0,528(v1)
}
9d001d58:	03e00008 	jr	ra
9d001d5c:	00000000 	nop

9d001d60 <_ZN9RTCCClass9alarmMaskEh>:
    alarmSync();
    RTCALRMbits.CHIME = 0;
}

void RTCCClass::alarmMask(unsigned char mask)
{
9d001d60:	30a500ff 	andi	a1,a1,0xff
9d001d64:	3c04bf80 	lui	a0,0xbf80
/*
 Alarms management...
 */
void RTCCClass::alarmSync()
{
    while(RTCALRMbits.ALRMSYNC==1) { /*yield*/ };
9d001d68:	8c820210 	lw	v0,528(a0)
9d001d6c:	30421000 	andi	v0,v0,0x1000
9d001d70:	1440fffd 	bnez	v0,9d001d68 <_ZN9RTCCClass9alarmMaskEh+0x8>
9d001d74:	3c03bf80 	lui	v1,0xbf80
}

void RTCCClass::alarmMask(unsigned char mask)
{
    alarmSync();
    RTCALRMbits.AMASK = mask;
9d001d78:	8c620210 	lw	v0,528(v1)
9d001d7c:	7ca25a04 	ins	v0,a1,0x8,0x4
9d001d80:	ac620210 	sw	v0,528(v1)
}
9d001d84:	03e00008 	jr	ra
9d001d88:	00000000 	nop

9d001d8c <_ZN9RTCCClass8alarmSetE9RTCCValue>:
{
    alarmSync();
    RTCALRMbits.ARPT = rpt;
}

void RTCCClass::alarmSet(RTCCValue val) {
9d001d8c:	afa50004 	sw	a1,4(sp)
9d001d90:	afa60008 	sw	a2,8(sp)
9d001d94:	afa7000c 	sw	a3,12(sp)
9d001d98:	3c03bf80 	lui	v1,0xbf80
/*
 Alarms management...
 */
void RTCCClass::alarmSync()
{
    while(RTCALRMbits.ALRMSYNC==1) { /*yield*/ };
9d001d9c:	8c620210 	lw	v0,528(v1)
9d001da0:	30421000 	andi	v0,v0,0x1000
9d001da4:	1440fffd 	bnez	v0,9d001d9c <_ZN9RTCCClass8alarmSetE9RTCCValue+0x10>
9d001da8:	3c02bf80 	lui	v0,0xbf80
    RTCALRMbits.ARPT = rpt;
}

void RTCCClass::alarmSet(RTCCValue val) {
	alarmSync();
	ALRMDATE = val.date();
9d001dac:	8fa30008 	lw	v1,8(sp)
9d001db0:	ac430250 	sw	v1,592(v0)
	ALRMTIME = val.time();
9d001db4:	8fa3000c 	lw	v1,12(sp)
9d001db8:	3c02bf80 	lui	v0,0xbf80
9d001dbc:	ac430240 	sw	v1,576(v0)
}
9d001dc0:	03e00008 	jr	ra
9d001dc4:	00000000 	nop

9d001dc8 <_ZN9RTCCClass15attachInterruptEPFvvE>:
}

void RTCCClass::attachInterrupt(void (*i)())
{
    _RTCCInterrupt = i;
}
9d001dc8:	03e00008 	jr	ra
9d001dcc:	af858028 	sw	a1,-32728(gp)

9d001dd0 <_ZN9RTCCValueC1Ev>:



/* Default constructor */
RTCCValue::RTCCValue() {
	a_date = 0;
9d001dd0:	ac800004 	sw	zero,4(a0)
	a_time = 0;
9d001dd4:	ac800008 	sw	zero,8(a0)
	_validity = 0;
}
9d001dd8:	03e00008 	jr	ra
9d001ddc:	a0800000 	sb	zero,0(a0)

9d001de0 <_ZN9RTCCValue11setValidityEc>:
  return _validity;
}

void RTCCValue::setValidity(char val) {
  _validity = val;
}
9d001de0:	03e00008 	jr	ra
9d001de4:	a0850000 	sb	a1,0(a0)

9d001de8 <_ZN9RTCCValue4yearEv>:
	res[8] = 0;
}

unsigned char RTCCValue::year()
{
    return bcd2dec((a_date >> 24) & 0xFF);
9d001de8:	90830007 	lbu	v1,7(a0)

unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
9d001dec:	00031103 	sra	v0,v1,0x4
    units = bcd & 0x0F;
    decimal = (tens * 10) + units;
9d001df0:	00022040 	sll	a0,v0,0x1
9d001df4:	000210c0 	sll	v0,v0,0x3
9d001df8:	00821021 	addu	v0,a0,v0
unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
    units = bcd & 0x0F;
9d001dfc:	3063000f 	andi	v1,v1,0xf
    decimal = (tens * 10) + units;
9d001e00:	00431021 	addu	v0,v0,v1
}

unsigned char RTCCValue::year()
{
    return bcd2dec((a_date >> 24) & 0xFF);
}
9d001e04:	03e00008 	jr	ra
9d001e08:	304200ff 	andi	v0,v0,0xff

9d001e0c <_ZN9RTCCValue5monthEv>:

unsigned char RTCCValue::month()
{
    return bcd2dec((a_date >> 16) & 0xFF);
9d001e0c:	90830006 	lbu	v1,6(a0)

unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
9d001e10:	00031103 	sra	v0,v1,0x4
    units = bcd & 0x0F;
    decimal = (tens * 10) + units;
9d001e14:	00022040 	sll	a0,v0,0x1
9d001e18:	000210c0 	sll	v0,v0,0x3
9d001e1c:	00821021 	addu	v0,a0,v0
unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
    units = bcd & 0x0F;
9d001e20:	3063000f 	andi	v1,v1,0xf
    decimal = (tens * 10) + units;
9d001e24:	00431021 	addu	v0,v0,v1
}

unsigned char RTCCValue::month()
{
    return bcd2dec((a_date >> 16) & 0xFF);
}
9d001e28:	03e00008 	jr	ra
9d001e2c:	304200ff 	andi	v0,v0,0xff

9d001e30 <_ZN9RTCCValue3dayEv>:

unsigned char RTCCValue::day()
{
    return bcd2dec((a_date >> 8) & 0xFF);
9d001e30:	90830005 	lbu	v1,5(a0)

unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
9d001e34:	00031103 	sra	v0,v1,0x4
    units = bcd & 0x0F;
    decimal = (tens * 10) + units;
9d001e38:	00022040 	sll	a0,v0,0x1
9d001e3c:	000210c0 	sll	v0,v0,0x3
9d001e40:	00821021 	addu	v0,a0,v0
unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
    units = bcd & 0x0F;
9d001e44:	3063000f 	andi	v1,v1,0xf
    decimal = (tens * 10) + units;
9d001e48:	00431021 	addu	v0,v0,v1
}

unsigned char RTCCValue::day()
{
    return bcd2dec((a_date >> 8) & 0xFF);
}
9d001e4c:	03e00008 	jr	ra
9d001e50:	304200ff 	andi	v0,v0,0xff

9d001e54 <_ZN9RTCCValue5hoursEv>:
    return bcd2dec(a_date & 0xFF);
}

unsigned char RTCCValue::hours()
{
    return bcd2dec((a_time >> 24) & 0xFF);
9d001e54:	9083000b 	lbu	v1,11(a0)

unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
9d001e58:	00031103 	sra	v0,v1,0x4
    units = bcd & 0x0F;
    decimal = (tens * 10) + units;
9d001e5c:	00022040 	sll	a0,v0,0x1
9d001e60:	000210c0 	sll	v0,v0,0x3
9d001e64:	00821021 	addu	v0,a0,v0
unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
    units = bcd & 0x0F;
9d001e68:	3063000f 	andi	v1,v1,0xf
    decimal = (tens * 10) + units;
9d001e6c:	00431021 	addu	v0,v0,v1
}

unsigned char RTCCValue::hours()
{
    return bcd2dec((a_time >> 24) & 0xFF);
}
9d001e70:	03e00008 	jr	ra
9d001e74:	304200ff 	andi	v0,v0,0xff

9d001e78 <_ZN9RTCCValue7minutesEv>:


unsigned char RTCCValue::minutes()
{
    return bcd2dec((a_time >> 16) & 0xFF);
9d001e78:	9083000a 	lbu	v1,10(a0)

unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
9d001e7c:	00031103 	sra	v0,v1,0x4
    units = bcd & 0x0F;
    decimal = (tens * 10) + units;
9d001e80:	00022040 	sll	a0,v0,0x1
9d001e84:	000210c0 	sll	v0,v0,0x3
9d001e88:	00821021 	addu	v0,a0,v0
unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
    units = bcd & 0x0F;
9d001e8c:	3063000f 	andi	v1,v1,0xf
    decimal = (tens * 10) + units;
9d001e90:	00431021 	addu	v0,v0,v1


unsigned char RTCCValue::minutes()
{
    return bcd2dec((a_time >> 16) & 0xFF);
}
9d001e94:	03e00008 	jr	ra
9d001e98:	304200ff 	andi	v0,v0,0xff

9d001e9c <_ZN9RTCCValue7secondsEv>:

unsigned char RTCCValue::seconds()
{
    return bcd2dec((a_time >> 8) & 0xFF);
9d001e9c:	90830009 	lbu	v1,9(a0)

unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
9d001ea0:	00031103 	sra	v0,v1,0x4
    units = bcd & 0x0F;
    decimal = (tens * 10) + units;
9d001ea4:	00022040 	sll	a0,v0,0x1
9d001ea8:	000210c0 	sll	v0,v0,0x3
9d001eac:	00821021 	addu	v0,a0,v0
unsigned char RTCCValue::bcd2dec(unsigned char bcd)
{
    unsigned char decimal;
    unsigned char tens,units;
    tens = bcd >> 4;
    units = bcd & 0x0F;
9d001eb0:	3063000f 	andi	v1,v1,0xf
    decimal = (tens * 10) + units;
9d001eb4:	00431021 	addu	v0,v0,v1
}

unsigned char RTCCValue::seconds()
{
    return bcd2dec((a_time >> 8) & 0xFF);
}
9d001eb8:	03e00008 	jr	ra
9d001ebc:	304200ff 	andi	v0,v0,0xff

9d001ec0 <_ZN9RTCCValue4timeEhhh>:
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001ec0:	3c02cccc 	lui	v0,0xcccc
9d001ec4:	3442cccd 	ori	v0,v0,0xcccd
{
    return bcd2dec((a_time >> 8) & 0xFF);
}

void RTCCValue::time(unsigned char hours, unsigned char minutes, unsigned char seconds)
{
9d001ec8:	30a500ff 	andi	a1,a1,0xff
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001ecc:	00a20019 	multu	a1,v0
{
    return bcd2dec((a_time >> 8) & 0xFF);
}

void RTCCValue::time(unsigned char hours, unsigned char minutes, unsigned char seconds)
{
9d001ed0:	30c600ff 	andi	a2,a2,0xff
9d001ed4:	30e700ff 	andi	a3,a3,0xff
    a_time = (a_time & 0xFF) | (dec2bcd(hours)<<24) | (dec2bcd(minutes)<<16) | (dec2bcd(seconds)<<8);
9d001ed8:	90890008 	lbu	t1,8(a0)
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001edc:	00001810 	mfhi	v1
9d001ee0:	000318c2 	srl	v1,v1,0x3
    units = decimal - (tens * 10);
9d001ee4:	00035840 	sll	t3,v1,0x1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001ee8:	00c20019 	multu	a2,v0
    units = decimal - (tens * 10);
9d001eec:	000350c0 	sll	t2,v1,0x3
9d001ef0:	016a5021 	addu	t2,t3,t2
9d001ef4:	00aa2823 	subu	a1,a1,t2
    bcd = (tens << 4) | units;
9d001ef8:	00031900 	sll	v1,v1,0x4
9d001efc:	00a31825 	or	v1,a1,v1
    return bcd2dec((a_time >> 8) & 0xFF);
}

void RTCCValue::time(unsigned char hours, unsigned char minutes, unsigned char seconds)
{
    a_time = (a_time & 0xFF) | (dec2bcd(hours)<<24) | (dec2bcd(minutes)<<16) | (dec2bcd(seconds)<<8);
9d001f00:	00031e00 	sll	v1,v1,0x18
9d001f04:	00691825 	or	v1,v1,t1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001f08:	00004010 	mfhi	t0
9d001f0c:	000840c2 	srl	t0,t0,0x3
    units = decimal - (tens * 10);
9d001f10:	00084840 	sll	t1,t0,0x1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001f14:	00e20019 	multu	a3,v0
    units = decimal - (tens * 10);
9d001f18:	000828c0 	sll	a1,t0,0x3
9d001f1c:	01252821 	addu	a1,t1,a1
9d001f20:	00c53023 	subu	a2,a2,a1
    bcd = (tens << 4) | units;
9d001f24:	00084100 	sll	t0,t0,0x4
9d001f28:	00c83025 	or	a2,a2,t0
    return bcd2dec((a_time >> 8) & 0xFF);
}

void RTCCValue::time(unsigned char hours, unsigned char minutes, unsigned char seconds)
{
    a_time = (a_time & 0xFF) | (dec2bcd(hours)<<24) | (dec2bcd(minutes)<<16) | (dec2bcd(seconds)<<8);
9d001f2c:	30c600ff 	andi	a2,a2,0xff
9d001f30:	00063400 	sll	a2,a2,0x10
9d001f34:	00661825 	or	v1,v1,a2
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001f38:	00001010 	mfhi	v0
9d001f3c:	000210c2 	srl	v0,v0,0x3
    units = decimal - (tens * 10);
9d001f40:	00023040 	sll	a2,v0,0x1
9d001f44:	000228c0 	sll	a1,v0,0x3
9d001f48:	00c52821 	addu	a1,a2,a1
    bcd = (tens << 4) | units;
9d001f4c:	00021100 	sll	v0,v0,0x4
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
    units = decimal - (tens * 10);
9d001f50:	00e53823 	subu	a3,a3,a1
    bcd = (tens << 4) | units;
9d001f54:	00e23825 	or	a3,a3,v0
    return bcd2dec((a_time >> 8) & 0xFF);
}

void RTCCValue::time(unsigned char hours, unsigned char minutes, unsigned char seconds)
{
    a_time = (a_time & 0xFF) | (dec2bcd(hours)<<24) | (dec2bcd(minutes)<<16) | (dec2bcd(seconds)<<8);
9d001f58:	30e700ff 	andi	a3,a3,0xff
9d001f5c:	00073a00 	sll	a3,a3,0x8
9d001f60:	00671025 	or	v0,v1,a3
}
9d001f64:	03e00008 	jr	ra
9d001f68:	ac820008 	sw	v0,8(a0)

9d001f6c <_ZN9RTCCValue7secondsEh>:
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001f6c:	3c02cccc 	lui	v0,0xcccc
{
    a_time = (a_time & 0xFF00FFFF) | (dec2bcd(minutes)<<16);
}

void RTCCValue::seconds(unsigned char seconds)
{
9d001f70:	30a500ff 	andi	a1,a1,0xff
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001f74:	3442cccd 	ori	v0,v0,0xcccd
9d001f78:	00a20019 	multu	a1,v0
    a_time = (a_time & 0xFF00FFFF) | (dec2bcd(minutes)<<16);
}

void RTCCValue::seconds(unsigned char seconds)
{
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
9d001f7c:	8c860008 	lw	a2,8(a0)
9d001f80:	3c03ffff 	lui	v1,0xffff
9d001f84:	246300ff 	addiu	v1,v1,255
9d001f88:	00c31824 	and	v1,a2,v1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001f8c:	00001010 	mfhi	v0
9d001f90:	000210c2 	srl	v0,v0,0x3
    units = decimal - (tens * 10);
9d001f94:	00023840 	sll	a3,v0,0x1
9d001f98:	000230c0 	sll	a2,v0,0x3
9d001f9c:	00e63021 	addu	a2,a3,a2
9d001fa0:	00a62823 	subu	a1,a1,a2
    bcd = (tens << 4) | units;
9d001fa4:	00021100 	sll	v0,v0,0x4
9d001fa8:	00a21025 	or	v0,a1,v0
    a_time = (a_time & 0xFF00FFFF) | (dec2bcd(minutes)<<16);
}

void RTCCValue::seconds(unsigned char seconds)
{
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
9d001fac:	304200ff 	andi	v0,v0,0xff
9d001fb0:	00021200 	sll	v0,v0,0x8
9d001fb4:	00431025 	or	v0,v0,v1
}
9d001fb8:	03e00008 	jr	ra
9d001fbc:	ac820008 	sw	v0,8(a0)

9d001fc0 <_ZN9RTCCValue4dateEhhh>:
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001fc0:	3c02cccc 	lui	v0,0xcccc
9d001fc4:	3442cccd 	ori	v0,v0,0xcccd
{
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
}

void RTCCValue::date(unsigned char year, unsigned char month, unsigned char day)
{
9d001fc8:	30a500ff 	andi	a1,a1,0xff
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001fcc:	00a20019 	multu	a1,v0
{
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
}

void RTCCValue::date(unsigned char year, unsigned char month, unsigned char day)
{
9d001fd0:	30c600ff 	andi	a2,a2,0xff
9d001fd4:	30e700ff 	andi	a3,a3,0xff
    a_date = (a_date & 0xFF) | (dec2bcd(year)<<24) | (dec2bcd(month)<<16) | (dec2bcd(day)<<8);
9d001fd8:	90890004 	lbu	t1,4(a0)
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001fdc:	00001810 	mfhi	v1
9d001fe0:	000318c2 	srl	v1,v1,0x3
    units = decimal - (tens * 10);
9d001fe4:	00035840 	sll	t3,v1,0x1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d001fe8:	00c20019 	multu	a2,v0
    units = decimal - (tens * 10);
9d001fec:	000350c0 	sll	t2,v1,0x3
9d001ff0:	016a5021 	addu	t2,t3,t2
9d001ff4:	00aa2823 	subu	a1,a1,t2
    bcd = (tens << 4) | units;
9d001ff8:	00031900 	sll	v1,v1,0x4
9d001ffc:	00a31825 	or	v1,a1,v1
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
}

void RTCCValue::date(unsigned char year, unsigned char month, unsigned char day)
{
    a_date = (a_date & 0xFF) | (dec2bcd(year)<<24) | (dec2bcd(month)<<16) | (dec2bcd(day)<<8);
9d002000:	00031e00 	sll	v1,v1,0x18
9d002004:	00691825 	or	v1,v1,t1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d002008:	00004010 	mfhi	t0
9d00200c:	000840c2 	srl	t0,t0,0x3
    units = decimal - (tens * 10);
9d002010:	00084840 	sll	t1,t0,0x1
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d002014:	00e20019 	multu	a3,v0
    units = decimal - (tens * 10);
9d002018:	000828c0 	sll	a1,t0,0x3
9d00201c:	01252821 	addu	a1,t1,a1
9d002020:	00c53023 	subu	a2,a2,a1
    bcd = (tens << 4) | units;
9d002024:	00084100 	sll	t0,t0,0x4
9d002028:	00c83025 	or	a2,a2,t0
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
}

void RTCCValue::date(unsigned char year, unsigned char month, unsigned char day)
{
    a_date = (a_date & 0xFF) | (dec2bcd(year)<<24) | (dec2bcd(month)<<16) | (dec2bcd(day)<<8);
9d00202c:	30c600ff 	andi	a2,a2,0xff
9d002030:	00063400 	sll	a2,a2,0x10
9d002034:	00661825 	or	v1,v1,a2
 */
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
9d002038:	00001010 	mfhi	v0
9d00203c:	000210c2 	srl	v0,v0,0x3
    units = decimal - (tens * 10);
9d002040:	00023040 	sll	a2,v0,0x1
9d002044:	000228c0 	sll	a1,v0,0x3
9d002048:	00c52821 	addu	a1,a2,a1
    bcd = (tens << 4) | units;
9d00204c:	00021100 	sll	v0,v0,0x4
unsigned char RTCCValue::dec2bcd(unsigned char decimal)
{
    unsigned char bcd;
    unsigned char tens,units;
    tens = decimal / 10;
    units = decimal - (tens * 10);
9d002050:	00e53823 	subu	a3,a3,a1
    bcd = (tens << 4) | units;
9d002054:	00e23825 	or	a3,a3,v0
    a_time = (a_time & 0xFFFF00FF) | (dec2bcd(seconds)<<8);
}

void RTCCValue::date(unsigned char year, unsigned char month, unsigned char day)
{
    a_date = (a_date & 0xFF) | (dec2bcd(year)<<24) | (dec2bcd(month)<<16) | (dec2bcd(day)<<8);
9d002058:	30e700ff 	andi	a3,a3,0xff
9d00205c:	00073a00 	sll	a3,a3,0x8
9d002060:	00671025 	or	v0,v1,a3
}
9d002064:	03e00008 	jr	ra
9d002068:	ac820004 	sw	v0,4(a0)

9d00206c <_ZN3TFT8getWidthEv>:
        uint16_t _width;
        uint16_t _height;
        uint8_t rotation;
        uint8_t drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg);

        virtual uint16_t getWidth() { return _width; };
9d00206c:	03e00008 	jr	ra
9d002070:	94820012 	lhu	v0,18(a0)

9d002074 <_ZN3TFT9getHeightEv>:
        virtual uint16_t getHeight() { return _height; };
9d002074:	03e00008 	jr	ra
9d002078:	94820014 	lhu	v0,20(a0)

9d00207c <_ZN6ST77359displayOnEv>:
        void drawVerticalLine(int16_t x, int16_t y, int16_t h, uint16_t color);
        void drawHorizontalLine(int16_t x, int16_t y, int16_t w, uint16_t color);
        void fillRectangle(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color);
        void setRotation(uint8_t r);
        void invertDisplay(boolean i);
        void displayOn() {} // Not implemented
9d00207c:	03e00008 	jr	ra
9d002080:	00000000 	nop

9d002084 <_ZN6ST773510displayOffEv>:
        void displayOff() {} // Not implemented
9d002084:	03e00008 	jr	ra
9d002088:	00000000 	nop

9d00208c <_ZN6ST773513invertDisplayEh>:
			break;
	}
}

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
9d00208c:	8c840004 	lw	a0,4(a0)
			_height = ST7735::Width;
			break;
	}
}

void ST7735::invertDisplay(boolean i) {
9d002090:	30a500ff 	andi	a1,a1,0xff
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
9d002094:	24030020 	li	v1,32
9d002098:	8c820000 	lw	v0,0(a0)
9d00209c:	8c590018 	lw	t9,24(v0)
9d0020a0:	24020021 	li	v0,33
9d0020a4:	0065100a 	movz	v0,v1,a1
9d0020a8:	03200008 	jr	t9
9d0020ac:	00402821 	move	a1,v0

9d0020b0 <_ZN6ST773514streamCommandsEPh>:
            streamCommands(Bcmd);
            break;
    }
}

void ST7735::streamCommands(uint8_t *cmdlist) {
9d0020b0:	27bdffd0 	addiu	sp,sp,-48
9d0020b4:	afb60028 	sw	s6,40(sp)
9d0020b8:	afb00010 	sw	s0,16(sp)
9d0020bc:	afbf002c 	sw	ra,44(sp)
9d0020c0:	afb50024 	sw	s5,36(sp)
9d0020c4:	afb40020 	sw	s4,32(sp)
9d0020c8:	afb3001c 	sw	s3,28(sp)
9d0020cc:	afb20018 	sw	s2,24(sp)
9d0020d0:	afb10014 	sw	s1,20(sp)
    uint8_t  numCommands, numArgs;
    uint16_t ms;

    numCommands = *cmdlist;
9d0020d4:	90b10000 	lbu	s1,0(a1)
            streamCommands(Bcmd);
            break;
    }
}

void ST7735::streamCommands(uint8_t *cmdlist) {
9d0020d8:	0080b021 	move	s6,a0
    uint16_t ms;

    numCommands = *cmdlist;
    cmdlist++;

    while(numCommands--) {
9d0020dc:	1220001f 	beqz	s1,9d00215c <_ZN6ST773514streamCommandsEPh+0xac>
9d0020e0:	24b00001 	addiu	s0,a1,1
        _comm->writeCommand8(*cmdlist);
9d0020e4:	8ec40004 	lw	a0,4(s6)
9d0020e8:	8c820000 	lw	v0,0(a0)
9d0020ec:	8c420018 	lw	v0,24(v0)
9d0020f0:	0040f809 	jalr	v0
9d0020f4:	92050000 	lbu	a1,0(s0)
        cmdlist++;
        numArgs  = *cmdlist; 
9d0020f8:	92150001 	lbu	s5,1(s0)
        cmdlist++; 
9d0020fc:	26100002 	addiu	s0,s0,2
        ms       = numArgs & DELAY;
9d002100:	32b20080 	andi	s2,s5,0x80
        numArgs &= ~DELAY;
9d002104:	32b5007f 	andi	s5,s5,0x7f
        while(numArgs--) {
9d002108:	12a0000f 	beqz	s5,9d002148 <_ZN6ST773514streamCommandsEPh+0x98>
9d00210c:	3252ffff 	andi	s2,s2,0xffff
9d002110:	26b5ffff 	addiu	s5,s5,-1
9d002114:	32b300ff 	andi	s3,s5,0xff
9d002118:	0200a021 	move	s4,s0
            _comm->writeData8(*cmdlist);
9d00211c:	8ec40004 	lw	a0,4(s6)
9d002120:	92850000 	lbu	a1,0(s4)
            cmdlist++;
9d002124:	32b500ff 	andi	s5,s5,0xff
        numArgs  = *cmdlist; 
        cmdlist++; 
        ms       = numArgs & DELAY;
        numArgs &= ~DELAY;
        while(numArgs--) {
            _comm->writeData8(*cmdlist);
9d002128:	8c820000 	lw	v0,0(a0)
9d00212c:	8c420024 	lw	v0,36(v0)
9d002130:	0040f809 	jalr	v0
9d002134:	26940001 	addiu	s4,s4,1
        cmdlist++;
        numArgs  = *cmdlist; 
        cmdlist++; 
        ms       = numArgs & DELAY;
        numArgs &= ~DELAY;
        while(numArgs--) {
9d002138:	16a0fff8 	bnez	s5,9d00211c <_ZN6ST773514streamCommandsEPh+0x6c>
9d00213c:	26b5ffff 	addiu	s5,s5,-1
            streamCommands(Bcmd);
            break;
    }
}

void ST7735::streamCommands(uint8_t *cmdlist) {
9d002140:	26730001 	addiu	s3,s3,1
        cmdlist++;
        numArgs  = *cmdlist; 
        cmdlist++; 
        ms       = numArgs & DELAY;
        numArgs &= ~DELAY;
        while(numArgs--) {
9d002144:	02138021 	addu	s0,s0,s3
        if(ms) {
            ms = *cmdlist;
#ifndef __PIC32MX__
            delay(ms);
#endif
            cmdlist++;
9d002148:	2631ffff 	addiu	s1,s1,-1
9d00214c:	0012902b 	sltu	s2,zero,s2
9d002150:	323100ff 	andi	s1,s1,0xff
    uint16_t ms;

    numCommands = *cmdlist;
    cmdlist++;

    while(numCommands--) {
9d002154:	1620ffe3 	bnez	s1,9d0020e4 <_ZN6ST773514streamCommandsEPh+0x34>
9d002158:	02128021 	addu	s0,s0,s2
            delay(ms);
#endif
            cmdlist++;
        }
    }
}
9d00215c:	8fbf002c 	lw	ra,44(sp)
9d002160:	8fb60028 	lw	s6,40(sp)
9d002164:	8fb50024 	lw	s5,36(sp)
9d002168:	8fb40020 	lw	s4,32(sp)
9d00216c:	8fb3001c 	lw	s3,28(sp)
9d002170:	8fb20018 	lw	s2,24(sp)
9d002174:	8fb10014 	lw	s1,20(sp)
9d002178:	8fb00010 	lw	s0,16(sp)
9d00217c:	03e00008 	jr	ra
9d002180:	27bd0030 	addiu	sp,sp,48

9d002184 <_ZN6ST773516initializeDeviceEv>:

inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
}

void ST7735::initializeDevice() {
9d002184:	27bdffe0 	addiu	sp,sp,-32
9d002188:	afb10018 	sw	s1,24(sp)
9d00218c:	00808821 	move	s1,a0
    _comm->initializeDevice();
9d002190:	8c840004 	lw	a0,4(a0)

inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
}

void ST7735::initializeDevice() {
9d002194:	afb00014 	sw	s0,20(sp)
9d002198:	afbf001c 	sw	ra,28(sp)
    _comm->initializeDevice();
9d00219c:	8c820000 	lw	v0,0(a0)
9d0021a0:	8c420078 	lw	v0,120(v0)
9d0021a4:	0040f809 	jalr	v0
9d0021a8:	24100001 	li	s0,1
    colstart = rowstart = 0;
    _width  = ST7735::Width;
    _height = ST7735::Height;
    switch (_variant) {
9d0021ac:	9222002a 	lbu	v0,42(s1)
}

void ST7735::initializeDevice() {
    _comm->initializeDevice();
    colstart = rowstart = 0;
    _width  = ST7735::Width;
9d0021b0:	24030080 	li	v1,128
9d0021b4:	a6230012 	sh	v1,18(s1)
    _height = ST7735::Height;
9d0021b8:	240300a0 	li	v1,160
	return (x << 11) | (x & 0x07E0) | (x >> 11);
}

void ST7735::initializeDevice() {
    _comm->initializeDevice();
    colstart = rowstart = 0;
9d0021bc:	a2200029 	sb	zero,41(s1)
9d0021c0:	a2200028 	sb	zero,40(s1)
    _width  = ST7735::Width;
    _height = ST7735::Height;
    switch (_variant) {
9d0021c4:	10500025 	beq	v0,s0,9d00225c <_ZN6ST773516initializeDeviceEv+0xd8>
9d0021c8:	a6230014 	sh	v1,20(s1)
9d0021cc:	14400014 	bnez	v0,9d002220 <_ZN6ST773516initializeDeviceEv+0x9c>
9d0021d0:	24030002 	li	v1,2
        case GreenTab:
            streamCommands(Rcmd1);
9d0021d4:	3c05a000 	lui	a1,0xa000
9d0021d8:	02202021 	move	a0,s1
9d0021dc:	0f40082c 	jal	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d0021e0:	24a50024 	addiu	a1,a1,36
		    streamCommands(Rcmd2green);
9d0021e4:	3c05a000 	lui	a1,0xa000
9d0021e8:	02202021 	move	a0,s1
9d0021ec:	0f40082c 	jal	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d0021f0:	24a50060 	addiu	a1,a1,96
            colstart = 2;
9d0021f4:	24020002 	li	v0,2
9d0021f8:	a2220028 	sb	v0,40(s1)
            rowstart = 1;
9d0021fc:	a2300029 	sb	s0,41(s1)
            streamCommands(Rcmd3);
9d002200:	3c05a000 	lui	a1,0xa000
9d002204:	02202021 	move	a0,s1
            break;
        case TypeB:
            streamCommands(Bcmd);
            break;
    }
}
9d002208:	8fbf001c 	lw	ra,28(sp)
9d00220c:	8fb10018 	lw	s1,24(sp)
9d002210:	8fb00014 	lw	s0,20(sp)
        case GreenTab:
            streamCommands(Rcmd1);
		    streamCommands(Rcmd2green);
            colstart = 2;
            rowstart = 1;
            streamCommands(Rcmd3);
9d002214:	24a50070 	addiu	a1,a1,112
            streamCommands(Rcmd1);
            streamCommands(Rcmd2red);
            streamCommands(Rcmd3);
            break;
        case TypeB:
            streamCommands(Bcmd);
9d002218:	0b40082c 	j	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d00221c:	27bd0020 	addiu	sp,sp,32
void ST7735::initializeDevice() {
    _comm->initializeDevice();
    colstart = rowstart = 0;
    _width  = ST7735::Width;
    _height = ST7735::Height;
    switch (_variant) {
9d002220:	1043000e 	beq	v0,v1,9d00225c <_ZN6ST773516initializeDeviceEv+0xd8>
9d002224:	24030003 	li	v1,3
9d002228:	10430005 	beq	v0,v1,9d002240 <_ZN6ST773516initializeDeviceEv+0xbc>
9d00222c:	8fbf001c 	lw	ra,28(sp)
            break;
        case TypeB:
            streamCommands(Bcmd);
            break;
    }
}
9d002230:	8fb10018 	lw	s1,24(sp)
9d002234:	8fb00014 	lw	s0,20(sp)
9d002238:	03e00008 	jr	ra
9d00223c:	27bd0020 	addiu	sp,sp,32
            streamCommands(Rcmd1);
            streamCommands(Rcmd2red);
            streamCommands(Rcmd3);
            break;
        case TypeB:
            streamCommands(Bcmd);
9d002240:	3c05a000 	lui	a1,0xa000
9d002244:	02202021 	move	a0,s1
            break;
    }
}
9d002248:	8fb10018 	lw	s1,24(sp)
9d00224c:	8fb00014 	lw	s0,20(sp)
            streamCommands(Rcmd1);
            streamCommands(Rcmd2red);
            streamCommands(Rcmd3);
            break;
        case TypeB:
            streamCommands(Bcmd);
9d002250:	24a500ac 	addiu	a1,a1,172
9d002254:	0b40082c 	j	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d002258:	27bd0020 	addiu	sp,sp,32
            streamCommands(Rcmd1);
            streamCommands(Rcmd2red);
            streamCommands(Rcmd3);
            break;
        case BlackTab:
            streamCommands(Rcmd1);
9d00225c:	3c05a000 	lui	a1,0xa000
9d002260:	02202021 	move	a0,s1
9d002264:	0f40082c 	jal	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d002268:	24a50024 	addiu	a1,a1,36
            streamCommands(Rcmd2red);
9d00226c:	3c05a000 	lui	a1,0xa000
9d002270:	02202021 	move	a0,s1
9d002274:	0f40082c 	jal	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d002278:	24a5009c 	addiu	a1,a1,156
            streamCommands(Rcmd3);
9d00227c:	3c05a000 	lui	a1,0xa000
9d002280:	02202021 	move	a0,s1
            break;
        case TypeB:
            streamCommands(Bcmd);
            break;
    }
}
9d002284:	8fbf001c 	lw	ra,28(sp)
9d002288:	8fb10018 	lw	s1,24(sp)
9d00228c:	8fb00014 	lw	s0,20(sp)
            streamCommands(Rcmd3);
            break;
        case BlackTab:
            streamCommands(Rcmd1);
            streamCommands(Rcmd2red);
            streamCommands(Rcmd3);
9d002290:	24a50070 	addiu	a1,a1,112
            break;
        case TypeB:
            streamCommands(Bcmd);
9d002294:	0b40082c 	j	9d0020b0 <_ZN6ST773514streamCommandsEPh>
9d002298:	27bd0020 	addiu	sp,sp,32

9d00229c <_ZN6ST773513setAddrWindowEtttt>:
            cmdlist++;
        }
    }
}

void ST7735::setAddrWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
9d00229c:	27bdffd8 	addiu	sp,sp,-40
9d0022a0:	afb00010 	sw	s0,16(sp)
9d0022a4:	00808021 	move	s0,a0
	_comm->writeCommand8(ST7735_CASET); // Column addr set
9d0022a8:	8c840004 	lw	a0,4(a0)
            cmdlist++;
        }
    }
}

void ST7735::setAddrWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
9d0022ac:	afbf0024 	sw	ra,36(sp)
9d0022b0:	afb40020 	sw	s4,32(sp)
	_comm->writeCommand8(ST7735_CASET); // Column addr set
9d0022b4:	8c820000 	lw	v0,0(a0)
            cmdlist++;
        }
    }
}

void ST7735::setAddrWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
9d0022b8:	afb3001c 	sw	s3,28(sp)
9d0022bc:	afb20018 	sw	s2,24(sp)
	_comm->writeCommand8(ST7735_CASET); // Column addr set
9d0022c0:	8c420018 	lw	v0,24(v0)
            cmdlist++;
        }
    }
}

void ST7735::setAddrWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
9d0022c4:	afb10014 	sw	s1,20(sp)
9d0022c8:	30b1ffff 	andi	s1,a1,0xffff
	_comm->writeCommand8(ST7735_CASET); // Column addr set
9d0022cc:	2405002a 	li	a1,42
            cmdlist++;
        }
    }
}

void ST7735::setAddrWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
9d0022d0:	30d2ffff 	andi	s2,a2,0xffff
9d0022d4:	30f4ffff 	andi	s4,a3,0xffff
	_comm->writeCommand8(ST7735_CASET); // Column addr set
9d0022d8:	0040f809 	jalr	v0
9d0022dc:	97b30038 	lhu	s3,56(sp)
	_comm->writeData8(0x00);
9d0022e0:	8e040004 	lw	a0,4(s0)
9d0022e4:	8c820000 	lw	v0,0(a0)
9d0022e8:	8c420024 	lw	v0,36(v0)
9d0022ec:	0040f809 	jalr	v0
9d0022f0:	00002821 	move	a1,zero
	_comm->writeData8(x0+colstart);     // XSTART 
9d0022f4:	8e040004 	lw	a0,4(s0)
9d0022f8:	92030028 	lbu	v1,40(s0)
9d0022fc:	8c820000 	lw	v0,0(a0)
9d002300:	02238821 	addu	s1,s1,v1
9d002304:	8c420024 	lw	v0,36(v0)
9d002308:	0040f809 	jalr	v0
9d00230c:	322500ff 	andi	a1,s1,0xff
	_comm->writeData8(0x00);
9d002310:	8e040004 	lw	a0,4(s0)
9d002314:	8c820000 	lw	v0,0(a0)
9d002318:	8c420024 	lw	v0,36(v0)
9d00231c:	0040f809 	jalr	v0
9d002320:	00002821 	move	a1,zero
	_comm->writeData8(x1+colstart);     // XEND
9d002324:	8e040004 	lw	a0,4(s0)
9d002328:	92030028 	lbu	v1,40(s0)
9d00232c:	8c820000 	lw	v0,0(a0)
9d002330:	0283a021 	addu	s4,s4,v1
9d002334:	8c420024 	lw	v0,36(v0)
9d002338:	0040f809 	jalr	v0
9d00233c:	328500ff 	andi	a1,s4,0xff

	_comm->writeCommand8(ST7735_RASET); // Row addr set
9d002340:	8e040004 	lw	a0,4(s0)
9d002344:	8c820000 	lw	v0,0(a0)
9d002348:	8c420018 	lw	v0,24(v0)
9d00234c:	0040f809 	jalr	v0
9d002350:	2405002b 	li	a1,43
	_comm->writeData8(0x00);
9d002354:	8e040004 	lw	a0,4(s0)
9d002358:	8c820000 	lw	v0,0(a0)
9d00235c:	8c420024 	lw	v0,36(v0)
9d002360:	0040f809 	jalr	v0
9d002364:	00002821 	move	a1,zero
	_comm->writeData8(y0+rowstart);     // YSTART
9d002368:	8e040004 	lw	a0,4(s0)
9d00236c:	92030029 	lbu	v1,41(s0)
9d002370:	8c820000 	lw	v0,0(a0)
9d002374:	02439021 	addu	s2,s2,v1
9d002378:	8c420024 	lw	v0,36(v0)
9d00237c:	0040f809 	jalr	v0
9d002380:	324500ff 	andi	a1,s2,0xff
	_comm->writeData8(0x00);
9d002384:	8e040004 	lw	a0,4(s0)
9d002388:	8c820000 	lw	v0,0(a0)
9d00238c:	8c420024 	lw	v0,36(v0)
9d002390:	0040f809 	jalr	v0
9d002394:	00002821 	move	a1,zero
	_comm->writeData8(y1+rowstart);     // YEND
9d002398:	8e040004 	lw	a0,4(s0)
9d00239c:	92030029 	lbu	v1,41(s0)
9d0023a0:	8c820000 	lw	v0,0(a0)
9d0023a4:	02639821 	addu	s3,s3,v1
9d0023a8:	8c420024 	lw	v0,36(v0)
9d0023ac:	0040f809 	jalr	v0
9d0023b0:	326500ff 	andi	a1,s3,0xff

	_comm->writeCommand8(ST7735_RAMWR); // write to RAM
9d0023b4:	8e040004 	lw	a0,4(s0)
}
9d0023b8:	8fbf0024 	lw	ra,36(sp)
9d0023bc:	8fb40020 	lw	s4,32(sp)
	_comm->writeData8(0x00);
	_comm->writeData8(y0+rowstart);     // YSTART
	_comm->writeData8(0x00);
	_comm->writeData8(y1+rowstart);     // YEND

	_comm->writeCommand8(ST7735_RAMWR); // write to RAM
9d0023c0:	8c820000 	lw	v0,0(a0)
}
9d0023c4:	8fb3001c 	lw	s3,28(sp)
9d0023c8:	8fb20018 	lw	s2,24(sp)
	_comm->writeData8(0x00);
	_comm->writeData8(y0+rowstart);     // YSTART
	_comm->writeData8(0x00);
	_comm->writeData8(y1+rowstart);     // YEND

	_comm->writeCommand8(ST7735_RAMWR); // write to RAM
9d0023cc:	8c590018 	lw	t9,24(v0)
}
9d0023d0:	8fb10014 	lw	s1,20(sp)
9d0023d4:	8fb00010 	lw	s0,16(sp)
	_comm->writeData8(0x00);
	_comm->writeData8(y0+rowstart);     // YSTART
	_comm->writeData8(0x00);
	_comm->writeData8(y1+rowstart);     // YEND

	_comm->writeCommand8(ST7735_RAMWR); // write to RAM
9d0023d8:	2405002c 	li	a1,44
9d0023dc:	03200008 	jr	t9
9d0023e0:	27bd0028 	addiu	sp,sp,40

9d0023e4 <_ZN6ST77356updateEP11Framebuffer>:
void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
    setAddrWindow(0, 0, _width, _height);
9d0023e4:	94870012 	lhu	a3,18(a0)
9d0023e8:	94820014 	lhu	v0,20(a0)

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d0023ec:	27bdffb8 	addiu	sp,sp,-72
9d0023f0:	afbe0040 	sw	s8,64(sp)
9d0023f4:	afb7003c 	sw	s7,60(sp)
    setAddrWindow(0, 0, _width, _height);
9d0023f8:	00003021 	move	a2,zero

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d0023fc:	0080b821 	move	s7,a0
9d002400:	00a0f021 	move	s8,a1
    setAddrWindow(0, 0, _width, _height);
9d002404:	00002821 	move	a1,zero

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d002408:	afbf0044 	sw	ra,68(sp)
    setAddrWindow(0, 0, _width, _height);
9d00240c:	afa20010 	sw	v0,16(sp)

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d002410:	afb60038 	sw	s6,56(sp)
9d002414:	afb50034 	sw	s5,52(sp)
9d002418:	afb40030 	sw	s4,48(sp)
9d00241c:	afb3002c 	sw	s3,44(sp)
9d002420:	afb20028 	sw	s2,40(sp)
9d002424:	afb10024 	sw	s1,36(sp)
    setAddrWindow(0, 0, _width, _height);
9d002428:	0f4008a7 	jal	9d00229c <_ZN6ST773513setAddrWindowEtttt>
9d00242c:	afb00020 	sw	s0,32(sp)
    uint32_t pixpair = 0;
    uint16_t color = 0;

    _comm->streamStart();
9d002430:	8ee40004 	lw	a0,4(s7)
9d002434:	8c820000 	lw	v0,0(a0)
9d002438:	8c420030 	lw	v0,48(v0)
9d00243c:	0040f809 	jalr	v0
9d002440:	00000000 	nop
    for (int16_t y = 0; y < _height; y++) {
9d002444:	96e20014 	lhu	v0,20(s7)
9d002448:	10400053 	beqz	v0,9d002598 <_ZN6ST77356updateEP11Framebuffer+0x1b4>
9d00244c:	0000a021 	move	s4,zero
9d002450:	00008821 	move	s1,zero
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
9d002454:	24120002 	li	s2,2

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d002458:	96e20012 	lhu	v0,18(s7)
9d00245c:	1040005d 	beqz	v0,9d0025d4 <_ZN6ST77356updateEP11Framebuffer+0x1f0>
9d002460:	32950001 	andi	s5,s4,0x1
9d002464:	00159940 	sll	s3,s5,0x5
9d002468:	0015b1c0 	sll	s6,s5,0x7
9d00246c:	00001821 	move	v1,zero
9d002470:	00008021 	move	s0,zero
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
9d002474:	0b400936 	j	9d0024d8 <_ZN6ST77356updateEP11Framebuffer+0xf4>
9d002478:	02769821 	addu	s3,s3,s6

        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
9d00247c:	8fc80000 	lw	t0,0(s8)
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
9d002480:	00023c00 	sll	a3,v0,0x10

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d002484:	26100002 	addiu	s0,s0,2

        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
9d002488:	8d02004c 	lw	v0,76(t0)
9d00248c:	afa3001c 	sw	v1,28(sp)
9d002490:	0040f809 	jalr	v0
9d002494:	afa70018 	sw	a3,24(sp)
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
9d002498:	8fa3001c 	lw	v1,28(sp)
        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
9d00249c:	92e5002a 	lbu	a1,42(s7)
9d0024a0:	8fa70018 	lw	a3,24(sp)
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
9d0024a4:	00032043 	sra	a0,v1,0x1
9d0024a8:	02642021 	addu	a0,s3,a0
9d0024ac:	2484000a 	addiu	a0,a0,10
9d0024b0:	00042080 	sll	a0,a0,0x2
9d0024b4:	7c101e20 	seh	v1,s0
        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
9d0024b8:	10b2001d 	beq	a1,s2,9d002530 <_ZN6ST77356updateEP11Framebuffer+0x14c>
9d0024bc:	02e42021 	addu	a0,s7,a0

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d0024c0:	96e60012 	lhu	a2,18(s7)
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
9d0024c4:	00473825 	or	a3,v0,a3
            _linebuffer[l][x >> 1] = pixpair;
9d0024c8:	ac870004 	sw	a3,4(a0)

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d0024cc:	0066102a 	slt	v0,v1,a2
9d0024d0:	10400023 	beqz	v0,9d002560 <_ZN6ST77356updateEP11Framebuffer+0x17c>
9d0024d4:	00608021 	move	s0,v1
            color = fb->colorAt(x, y);
9d0024d8:	8fc20000 	lw	v0,0(s8)
9d0024dc:	00602821 	move	a1,v1
9d0024e0:	03c02021 	move	a0,s8
9d0024e4:	8c42004c 	lw	v0,76(v0)
9d0024e8:	02203021 	move	a2,s1
9d0024ec:	0040f809 	jalr	v0
9d0024f0:	afa3001c 	sw	v1,28(sp)
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
9d0024f4:	92e7002a 	lbu	a3,42(s7)

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d0024f8:	3210ffff 	andi	s0,s0,0xffff
9d0024fc:	26050001 	addiu	a1,s0,1

        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
9d002500:	03c02021 	move	a0,s8
9d002504:	7c052e20 	seh	a1,a1
9d002508:	02203021 	move	a2,s1
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
9d00250c:	14f2ffdb 	bne	a3,s2,9d00247c <_ZN6ST77356updateEP11Framebuffer+0x98>
9d002510:	8fa3001c 	lw	v1,28(sp)
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay


inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
9d002514:	00024ac0 	sll	t1,v0,0xb
9d002518:	000242c3 	sra	t0,v0,0xb
9d00251c:	304707e0 	andi	a3,v0,0x7e0
9d002520:	01281025 	or	v0,t1,t0
9d002524:	00471025 	or	v0,v0,a3
9d002528:	0b40091f 	j	9d00247c <_ZN6ST77356updateEP11Framebuffer+0x98>
9d00252c:	3042ffff 	andi	v0,v0,0xffff
9d002530:	000232c0 	sll	a2,v0,0xb
9d002534:	00022ac3 	sra	a1,v0,0xb
9d002538:	00c52825 	or	a1,a2,a1
9d00253c:	304207e0 	andi	v0,v0,0x7e0

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d002540:	96e60012 	lhu	a2,18(s7)
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay


inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
9d002544:	00a21025 	or	v0,a1,v0
9d002548:	3042ffff 	andi	v0,v0,0xffff
            color = fb->colorAt(x, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
9d00254c:	00473825 	or	a3,v0,a3

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d002550:	0066102a 	slt	v0,v1,a2
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair = color << 16;
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
9d002554:	ac870004 	sw	a3,4(a0)

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d002558:	1440ffdf 	bnez	v0,9d0024d8 <_ZN6ST77356updateEP11Framebuffer+0xf4>
9d00255c:	00608021 	move	s0,v1
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
9d002560:	8ee40004 	lw	a0,4(s7)
9d002564:	0015aa40 	sll	s5,s5,0x9
9d002568:	02d5b021 	addu	s6,s6,s5
9d00256c:	8c820000 	lw	v0,0(a0)
9d002570:	02f62821 	addu	a1,s7,s6
9d002574:	24a5002c 	addiu	a1,a1,44
9d002578:	8c420074 	lw	v0,116(v0)
9d00257c:	00063042 	srl	a2,a2,0x1
9d002580:	0040f809 	jalr	v0
9d002584:	26940001 	addiu	s4,s4,1
    setAddrWindow(0, 0, _width, _height);
    uint32_t pixpair = 0;
    uint16_t color = 0;

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
9d002588:	96e20014 	lhu	v0,20(s7)
9d00258c:	0282102a 	slt	v0,s4,v0
9d002590:	1440ffb1 	bnez	v0,9d002458 <_ZN6ST77356updateEP11Framebuffer+0x74>
9d002594:	02808821 	move	s1,s4
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
    }
    _comm->streamEnd();
9d002598:	8ee40004 	lw	a0,4(s7)
}
9d00259c:	8fbf0044 	lw	ra,68(sp)
9d0025a0:	8fbe0040 	lw	s8,64(sp)
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
    }
    _comm->streamEnd();
9d0025a4:	8c820000 	lw	v0,0(a0)
}
9d0025a8:	8fb7003c 	lw	s7,60(sp)
9d0025ac:	8fb60038 	lw	s6,56(sp)
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
    }
    _comm->streamEnd();
9d0025b0:	8c590034 	lw	t9,52(v0)
}
9d0025b4:	8fb50034 	lw	s5,52(sp)
9d0025b8:	8fb40030 	lw	s4,48(sp)
9d0025bc:	8fb3002c 	lw	s3,44(sp)
9d0025c0:	8fb20028 	lw	s2,40(sp)
9d0025c4:	8fb10024 	lw	s1,36(sp)
9d0025c8:	8fb00020 	lw	s0,32(sp)
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
    }
    _comm->streamEnd();
9d0025cc:	03200008 	jr	t9
9d0025d0:	27bd0048 	addiu	sp,sp,72
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
9d0025d4:	8ee40004 	lw	a0,4(s7)
9d0025d8:	0015b1c0 	sll	s6,s5,0x7
9d0025dc:	0015aa40 	sll	s5,s5,0x9
9d0025e0:	8c820000 	lw	v0,0(a0)
9d0025e4:	02d5b021 	addu	s6,s6,s5

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
        uint16_t l = y & 1;

        for (int16_t x = 0; x < _width; x+=2) {
9d0025e8:	00003021 	move	a2,zero
            color = fb->colorAt(x+1, y);
            if (_variant == ST7735::BlackTab) color = swapcolor(color);
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
9d0025ec:	8c420074 	lw	v0,116(v0)
9d0025f0:	02f62821 	addu	a1,s7,s6
9d0025f4:	24a5002c 	addiu	a1,a1,44
9d0025f8:	0040f809 	jalr	v0
9d0025fc:	00063042 	srl	a2,a2,0x1
    setAddrWindow(0, 0, _width, _height);
    uint32_t pixpair = 0;
    uint16_t color = 0;

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
9d002600:	96e20014 	lhu	v0,20(s7)

void ST7735::invertDisplay(boolean i) {
	_comm->writeCommand8(i ? ST7735_INVON : ST7735_INVOFF);
}

void ST7735::update(Framebuffer *fb) {
9d002604:	26940001 	addiu	s4,s4,1
    setAddrWindow(0, 0, _width, _height);
    uint32_t pixpair = 0;
    uint16_t color = 0;

    _comm->streamStart();
    for (int16_t y = 0; y < _height; y++) {
9d002608:	0282102a 	slt	v0,s4,v0
9d00260c:	1440ff92 	bnez	v0,9d002458 <_ZN6ST77356updateEP11Framebuffer+0x74>
9d002610:	02808821 	move	s1,s4
            pixpair |= color;
            _linebuffer[l][x >> 1] = pixpair;
        }
        _comm->blockData(_linebuffer[l], _width>>1);
    }
    _comm->streamEnd();
9d002614:	0b400967 	j	9d00259c <_ZN6ST77356updateEP11Framebuffer+0x1b8>
9d002618:	8ee40004 	lw	a0,4(s7)

9d00261c <_ZN6ST773516drawVerticalLineEssst>:
		_comm->streamData16(color);
	}
    _comm->streamEnd();
}

void ST7735::drawVerticalLine(int16_t x, int16_t y, int16_t h, uint16_t color) {
9d00261c:	27bdffd0 	addiu	sp,sp,-48
9d002620:	7c063620 	seh	a2,a2
9d002624:	afb30028 	sw	s3,40(sp)
9d002628:	afb20024 	sw	s2,36(sp)
9d00262c:	afb0001c 	sw	s0,28(sp)
9d002630:	afbf002c 	sw	ra,44(sp)
9d002634:	afb10020 	sw	s1,32(sp)
9d002638:	00809021 	move	s2,a0
9d00263c:	7c052e20 	seh	a1,a1
9d002640:	7c079e20 	seh	s3,a3
    if (y < 0) {
9d002644:	04c00039 	bltz	a2,9d00272c <_ZN6ST773516drawVerticalLineEssst+0x110>
9d002648:	97b00040 	lhu	s0,64(sp)
        h += y;
        y = 0;
    }

	if((x >= _width) || (y >= _height) || (x < 0))  {
9d00264c:	96420012 	lhu	v0,18(s2)
9d002650:	00a2102a 	slt	v0,a1,v0
9d002654:	1040002f 	beqz	v0,9d002714 <_ZN6ST773516drawVerticalLineEssst+0xf8>
9d002658:	8fbf002c 	lw	ra,44(sp)
9d00265c:	96420014 	lhu	v0,20(s2)
9d002660:	00c2182a 	slt	v1,a2,v0
9d002664:	5060002c 	beqzl	v1,9d002718 <_ZN6ST773516drawVerticalLineEssst+0xfc>
9d002668:	8fb30028 	lw	s3,40(sp)
9d00266c:	04a00029 	bltz	a1,9d002714 <_ZN6ST773516drawVerticalLineEssst+0xf8>
9d002670:	02661821 	addu	v1,s3,a2
		return;
    }

	if((y+h-1) >= _height) {
9d002674:	0043182a 	slt	v1,v0,v1
9d002678:	14600030 	bnez	v1,9d00273c <_ZN6ST773516drawVerticalLineEssst+0x120>
9d00267c:	30c6ffff 	andi	a2,a2,0xffff
		h = _height-y;
    }

	setAddrWindow(x, y, x, y+h-1);
9d002680:	24c2ffff 	addiu	v0,a2,-1
9d002684:	3271ffff 	andi	s1,s3,0xffff
9d002688:	30a5ffff 	andi	a1,a1,0xffff
9d00268c:	02221021 	addu	v0,s1,v0
9d002690:	3042ffff 	andi	v0,v0,0xffff
9d002694:	02402021 	move	a0,s2
9d002698:	00a03821 	move	a3,a1
9d00269c:	0f4008a7 	jal	9d00229c <_ZN6ST773513setAddrWindowEtttt>
9d0026a0:	afa20010 	sw	v0,16(sp)

	if (_variant == BlackTab)   
9d0026a4:	9243002a 	lbu	v1,42(s2)
9d0026a8:	24020002 	li	v0,2
9d0026ac:	10620026 	beq	v1,v0,9d002748 <_ZN6ST773516drawVerticalLineEssst+0x12c>
9d0026b0:	00101ac0 	sll	v1,s0,0xb
		color = swapcolor(color);


    _comm->streamStart();
9d0026b4:	8e440004 	lw	a0,4(s2)
9d0026b8:	8c820000 	lw	v0,0(a0)
9d0026bc:	8c420030 	lw	v0,48(v0)
9d0026c0:	0040f809 	jalr	v0
9d0026c4:	00000000 	nop
	while (h--) {
9d0026c8:	12600009 	beqz	s3,9d0026f0 <_ZN6ST773516drawVerticalLineEssst+0xd4>
9d0026cc:	8e440004 	lw	a0,4(s2)
		_comm->streamData16(color);
9d0026d0:	2631ffff 	addiu	s1,s1,-1
9d0026d4:	02002821 	move	a1,s0
9d0026d8:	8c820000 	lw	v0,0(a0)
9d0026dc:	8c420054 	lw	v0,84(v0)
9d0026e0:	0040f809 	jalr	v0
9d0026e4:	3231ffff 	andi	s1,s1,0xffff
	if (_variant == BlackTab)   
		color = swapcolor(color);


    _comm->streamStart();
	while (h--) {
9d0026e8:	1620fff9 	bnez	s1,9d0026d0 <_ZN6ST773516drawVerticalLineEssst+0xb4>
9d0026ec:	8e440004 	lw	a0,4(s2)
		_comm->streamData16(color);
	}
    _comm->streamEnd();
}
9d0026f0:	8fbf002c 	lw	ra,44(sp)
9d0026f4:	8fb30028 	lw	s3,40(sp)

    _comm->streamStart();
	while (h--) {
		_comm->streamData16(color);
	}
    _comm->streamEnd();
9d0026f8:	8c820000 	lw	v0,0(a0)
}
9d0026fc:	8fb20024 	lw	s2,36(sp)
9d002700:	8fb10020 	lw	s1,32(sp)

    _comm->streamStart();
	while (h--) {
		_comm->streamData16(color);
	}
    _comm->streamEnd();
9d002704:	8c590034 	lw	t9,52(v0)
}
9d002708:	8fb0001c 	lw	s0,28(sp)

    _comm->streamStart();
	while (h--) {
		_comm->streamData16(color);
	}
    _comm->streamEnd();
9d00270c:	03200008 	jr	t9
9d002710:	27bd0030 	addiu	sp,sp,48
}
9d002714:	8fb30028 	lw	s3,40(sp)
9d002718:	8fb20024 	lw	s2,36(sp)
9d00271c:	8fb10020 	lw	s1,32(sp)
9d002720:	8fb0001c 	lw	s0,28(sp)
9d002724:	03e00008 	jr	ra
9d002728:	27bd0030 	addiu	sp,sp,48
    _comm->streamEnd();
}

void ST7735::drawVerticalLine(int16_t x, int16_t y, int16_t h, uint16_t color) {
    if (y < 0) {
        h += y;
9d00272c:	02669821 	addu	s3,s3,a2
9d002730:	7c139e20 	seh	s3,s3
        y = 0;
9d002734:	0b400993 	j	9d00264c <_ZN6ST773516drawVerticalLineEssst+0x30>
9d002738:	00003021 	move	a2,zero
	if((x >= _width) || (y >= _height) || (x < 0))  {
		return;
    }

	if((y+h-1) >= _height) {
		h = _height-y;
9d00273c:	00469823 	subu	s3,v0,a2
9d002740:	0b4009a0 	j	9d002680 <_ZN6ST773516drawVerticalLineEssst+0x64>
9d002744:	7c139e20 	seh	s3,s3
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay


inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
9d002748:	001012c3 	sra	v0,s0,0xb
9d00274c:	00621025 	or	v0,v1,v0
9d002750:	321007e0 	andi	s0,s0,0x7e0
9d002754:	00508025 	or	s0,v0,s0
9d002758:	0b4009ad 	j	9d0026b4 <_ZN6ST773516drawVerticalLineEssst+0x98>
9d00275c:	3210ffff 	andi	s0,s0,0xffff

9d002760 <_ZN6ST773518drawHorizontalLineEssst>:
		}
	}
    _comm->streamEnd();
}

void ST7735::drawHorizontalLine(int16_t x, int16_t y, int16_t w, uint16_t color) {
9d002760:	27bdffd0 	addiu	sp,sp,-48
9d002764:	7c052e20 	seh	a1,a1
9d002768:	afb30028 	sw	s3,40(sp)
9d00276c:	afb20024 	sw	s2,36(sp)
9d002770:	afb0001c 	sw	s0,28(sp)
9d002774:	afbf002c 	sw	ra,44(sp)
9d002778:	afb10020 	sw	s1,32(sp)
9d00277c:	00809021 	move	s2,a0
9d002780:	7c063620 	seh	a2,a2
9d002784:	7c079e20 	seh	s3,a3
9d002788:	97b00040 	lhu	s0,64(sp)
	// Rudimentary clipping

    if (x < 0) {
9d00278c:	04a00039 	bltz	a1,9d002874 <_ZN6ST773518drawHorizontalLineEssst+0x114>
9d002790:	00a01821 	move	v1,a1
        w += x;
        x = 0;
    }
	if((x >= _width) || (y >= _height) || (y < 0)) {
9d002794:	96420012 	lhu	v0,18(s2)
9d002798:	0062202a 	slt	a0,v1,v0
9d00279c:	1080002f 	beqz	a0,9d00285c <_ZN6ST773518drawHorizontalLineEssst+0xfc>
9d0027a0:	8fbf002c 	lw	ra,44(sp)
9d0027a4:	96440014 	lhu	a0,20(s2)
9d0027a8:	00c4202a 	slt	a0,a2,a0
9d0027ac:	5080002c 	beqzl	a0,9d002860 <_ZN6ST773518drawHorizontalLineEssst+0x100>
9d0027b0:	8fb30028 	lw	s3,40(sp)
9d0027b4:	04c00029 	bltz	a2,9d00285c <_ZN6ST773518drawHorizontalLineEssst+0xfc>
9d0027b8:	02631821 	addu	v1,s3,v1
		return;
    }
	if((x+w-1) >= _width) {
9d0027bc:	0043182a 	slt	v1,v0,v1
9d0027c0:	14600031 	bnez	v1,9d002888 <_ZN6ST773518drawHorizontalLineEssst+0x128>
9d0027c4:	30a5ffff 	andi	a1,a1,0xffff
		w = _width-x;
    }

	setAddrWindow(x, y, x+w-1, y);
9d0027c8:	24a7ffff 	addiu	a3,a1,-1
9d0027cc:	3271ffff 	andi	s1,s3,0xffff
9d0027d0:	30c2ffff 	andi	v0,a2,0xffff
9d0027d4:	02273821 	addu	a3,s1,a3
9d0027d8:	00403021 	move	a2,v0
9d0027dc:	02402021 	move	a0,s2
9d0027e0:	30e7ffff 	andi	a3,a3,0xffff
9d0027e4:	0f4008a7 	jal	9d00229c <_ZN6ST773513setAddrWindowEtttt>
9d0027e8:	afa20010 	sw	v0,16(sp)

	if (_variant == BlackTab)   
9d0027ec:	9243002a 	lbu	v1,42(s2)
9d0027f0:	24020002 	li	v0,2
9d0027f4:	10620027 	beq	v1,v0,9d002894 <_ZN6ST773518drawHorizontalLineEssst+0x134>
9d0027f8:	00101ac0 	sll	v1,s0,0xb
		color = swapcolor(color);

    _comm->streamStart();
9d0027fc:	8e440004 	lw	a0,4(s2)
9d002800:	8c820000 	lw	v0,0(a0)
9d002804:	8c420030 	lw	v0,48(v0)
9d002808:	0040f809 	jalr	v0
9d00280c:	00000000 	nop
	while (w--) {
9d002810:	12600009 	beqz	s3,9d002838 <_ZN6ST773518drawHorizontalLineEssst+0xd8>
9d002814:	8e440004 	lw	a0,4(s2)
		_comm->streamData16(color);
9d002818:	2631ffff 	addiu	s1,s1,-1
9d00281c:	02002821 	move	a1,s0
9d002820:	8c820000 	lw	v0,0(a0)
9d002824:	8c420054 	lw	v0,84(v0)
9d002828:	0040f809 	jalr	v0
9d00282c:	3231ffff 	andi	s1,s1,0xffff

	if (_variant == BlackTab)   
		color = swapcolor(color);

    _comm->streamStart();
	while (w--) {
9d002830:	1620fff9 	bnez	s1,9d002818 <_ZN6ST773518drawHorizontalLineEssst+0xb8>
9d002834:	8e440004 	lw	a0,4(s2)
		_comm->streamData16(color);
	}
    _comm->streamEnd();
}
9d002838:	8fbf002c 	lw	ra,44(sp)
9d00283c:	8fb30028 	lw	s3,40(sp)

    _comm->streamStart();
	while (w--) {
		_comm->streamData16(color);
	}
    _comm->streamEnd();
9d002840:	8c820000 	lw	v0,0(a0)
}
9d002844:	8fb20024 	lw	s2,36(sp)
9d002848:	8fb10020 	lw	s1,32(sp)

    _comm->streamStart();
	while (w--) {
		_comm->streamData16(color);
	}
    _comm->streamEnd();
9d00284c:	8c590034 	lw	t9,52(v0)
}
9d002850:	8fb0001c 	lw	s0,28(sp)

    _comm->streamStart();
	while (w--) {
		_comm->streamData16(color);
	}
    _comm->streamEnd();
9d002854:	03200008 	jr	t9
9d002858:	27bd0030 	addiu	sp,sp,48
}
9d00285c:	8fb30028 	lw	s3,40(sp)
9d002860:	8fb20024 	lw	s2,36(sp)
9d002864:	8fb10020 	lw	s1,32(sp)
9d002868:	8fb0001c 	lw	s0,28(sp)
9d00286c:	03e00008 	jr	ra
9d002870:	27bd0030 	addiu	sp,sp,48

void ST7735::drawHorizontalLine(int16_t x, int16_t y, int16_t w, uint16_t color) {
	// Rudimentary clipping

    if (x < 0) {
        w += x;
9d002874:	02659821 	addu	s3,s3,a1
9d002878:	7c139e20 	seh	s3,s3
9d00287c:	00001821 	move	v1,zero
        x = 0;
9d002880:	0b4009e5 	j	9d002794 <_ZN6ST773518drawHorizontalLineEssst+0x34>
9d002884:	00002821 	move	a1,zero
    }
	if((x >= _width) || (y >= _height) || (y < 0)) {
		return;
    }
	if((x+w-1) >= _width) {
		w = _width-x;
9d002888:	00459823 	subu	s3,v0,a1
9d00288c:	0b4009f2 	j	9d0027c8 <_ZN6ST773518drawHorizontalLineEssst+0x68>
9d002890:	7c139e20 	seh	s3,s3
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay


inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
9d002894:	001012c3 	sra	v0,s0,0xb
9d002898:	00621025 	or	v0,v1,v0
9d00289c:	321007e0 	andi	s0,s0,0x7e0
9d0028a0:	00508025 	or	s0,v0,s0
9d0028a4:	0b4009ff 	j	9d0027fc <_ZN6ST773518drawHorizontalLineEssst+0x9c>
9d0028a8:	3210ffff 	andi	s0,s0,0xffff

9d0028ac <_ZN6ST77358setPixelEsst>:
	_comm->writeData8(y1+rowstart);     // YEND

	_comm->writeCommand8(ST7735_RAMWR); // write to RAM
}

void ST7735::setPixel(int16_t x, int16_t y, uint16_t color) {
9d0028ac:	27bdffd8 	addiu	sp,sp,-40
9d0028b0:	7c052e20 	seh	a1,a1
9d0028b4:	afb10020 	sw	s1,32(sp)
9d0028b8:	afb0001c 	sw	s0,28(sp)
9d0028bc:	afbf0024 	sw	ra,36(sp)
9d0028c0:	00808021 	move	s0,a0
9d0028c4:	7c063620 	seh	a2,a2
	if((x < 0) ||(x >= _width) || (y < 0) || (y >= _height)) 
9d0028c8:	04a0000b 	bltz	a1,9d0028f8 <_ZN6ST77358setPixelEsst+0x4c>
9d0028cc:	30f1ffff 	andi	s1,a3,0xffff
9d0028d0:	94820012 	lhu	v0,18(a0)
9d0028d4:	00a2102a 	slt	v0,a1,v0
9d0028d8:	10400008 	beqz	v0,9d0028fc <_ZN6ST77358setPixelEsst+0x50>
9d0028dc:	8fbf0024 	lw	ra,36(sp)
9d0028e0:	04c20007 	bltzl	a2,9d002900 <_ZN6ST77358setPixelEsst+0x54>
9d0028e4:	8fb10020 	lw	s1,32(sp)
9d0028e8:	94820014 	lhu	v0,20(a0)
9d0028ec:	00c2102a 	slt	v0,a2,v0
9d0028f0:	54400006 	bnezl	v0,9d00290c <_ZN6ST77358setPixelEsst+0x60>
9d0028f4:	30a5ffff 	andi	a1,a1,0xffff
		return;
	setAddrWindow(x,y,x+1,y+1);
	if (_variant == BlackTab) color = swapcolor(color);
	_comm->writeData16(color);
}
9d0028f8:	8fbf0024 	lw	ra,36(sp)
9d0028fc:	8fb10020 	lw	s1,32(sp)
9d002900:	8fb0001c 	lw	s0,28(sp)
9d002904:	03e00008 	jr	ra
9d002908:	27bd0028 	addiu	sp,sp,40
}

void ST7735::setPixel(int16_t x, int16_t y, uint16_t color) {
	if((x < 0) ||(x >= _width) || (y < 0) || (y >= _height)) 
		return;
	setAddrWindow(x,y,x+1,y+1);
9d00290c:	30c6ffff 	andi	a2,a2,0xffff
9d002910:	24a70001 	addiu	a3,a1,1
9d002914:	24c20001 	addiu	v0,a2,1
9d002918:	3042ffff 	andi	v0,v0,0xffff
9d00291c:	30e7ffff 	andi	a3,a3,0xffff
9d002920:	0f4008a7 	jal	9d00229c <_ZN6ST773513setAddrWindowEtttt>
9d002924:	afa20010 	sw	v0,16(sp)
	if (_variant == BlackTab) color = swapcolor(color);
9d002928:	9203002a 	lbu	v1,42(s0)
9d00292c:	24020002 	li	v0,2
9d002930:	1062000a 	beq	v1,v0,9d00295c <_ZN6ST77358setPixelEsst+0xb0>
9d002934:	00111ac0 	sll	v1,s1,0xb
	_comm->writeData16(color);
9d002938:	8e040004 	lw	a0,4(s0)
9d00293c:	02202821 	move	a1,s1
}
9d002940:	8fbf0024 	lw	ra,36(sp)
void ST7735::setPixel(int16_t x, int16_t y, uint16_t color) {
	if((x < 0) ||(x >= _width) || (y < 0) || (y >= _height)) 
		return;
	setAddrWindow(x,y,x+1,y+1);
	if (_variant == BlackTab) color = swapcolor(color);
	_comm->writeData16(color);
9d002944:	8c820000 	lw	v0,0(a0)
}
9d002948:	8fb10020 	lw	s1,32(sp)
9d00294c:	8fb0001c 	lw	s0,28(sp)
void ST7735::setPixel(int16_t x, int16_t y, uint16_t color) {
	if((x < 0) ||(x >= _width) || (y < 0) || (y >= _height)) 
		return;
	setAddrWindow(x,y,x+1,y+1);
	if (_variant == BlackTab) color = swapcolor(color);
	_comm->writeData16(color);
9d002950:	8c590028 	lw	t9,40(v0)
9d002954:	03200008 	jr	t9
9d002958:	27bd0028 	addiu	sp,sp,40
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay


inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
9d00295c:	001112c3 	sra	v0,s1,0xb
9d002960:	00621025 	or	v0,v1,v0
9d002964:	323107e0 	andi	s1,s1,0x7e0
9d002968:	00518825 	or	s1,v0,s1
9d00296c:	0b400a4e 	j	9d002938 <_ZN6ST77358setPixelEsst+0x8c>
9d002970:	3231ffff 	andi	s1,s1,0xffff

9d002974 <_ZN6ST773513fillRectangleEsssst>:
void ST7735::fillScreen(uint16_t color) {
	fillRectangle(0, 0,  _width, _height, color);
}

void ST7735::fillRectangle(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color) {
	if((x >= _width) || (y >= _height)) 
9d002974:	94820012 	lhu	v0,18(a0)

void ST7735::fillScreen(uint16_t color) {
	fillRectangle(0, 0,  _width, _height, color);
}

void ST7735::fillRectangle(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color) {
9d002978:	7c052e20 	seh	a1,a1
9d00297c:	27bdffd0 	addiu	sp,sp,-48
	if((x >= _width) || (y >= _height)) 
9d002980:	00a2182a 	slt	v1,a1,v0

void ST7735::fillScreen(uint16_t color) {
	fillRectangle(0, 0,  _width, _height, color);
}

void ST7735::fillRectangle(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color) {
9d002984:	afb30024 	sw	s3,36(sp)
9d002988:	afb20020 	sw	s2,32(sp)
9d00298c:	afb1001c 	sw	s1,28(sp)
9d002990:	afb00018 	sw	s0,24(sp)
9d002994:	afbf002c 	sw	ra,44(sp)
9d002998:	afb40028 	sw	s4,40(sp)
9d00299c:	00809821 	move	s3,a0
9d0029a0:	7c063620 	seh	a2,a2
9d0029a4:	7c078e20 	seh	s1,a3
9d0029a8:	87b20040 	lh	s2,64(sp)
	if((x >= _width) || (y >= _height)) 
9d0029ac:	1060003a 	beqz	v1,9d002a98 <_ZN6ST773513fillRectangleEsssst+0x124>
9d0029b0:	97b00044 	lhu	s0,68(sp)
9d0029b4:	94830014 	lhu	v1,20(a0)
9d0029b8:	00c3202a 	slt	a0,a2,v1
9d0029bc:	10800036 	beqz	a0,9d002a98 <_ZN6ST773513fillRectangleEsssst+0x124>
9d0029c0:	02252021 	addu	a0,s1,a1
		return;
	if((x + w - 1) >= _width)  
9d0029c4:	0044202a 	slt	a0,v0,a0
9d0029c8:	1480003b 	bnez	a0,9d002ab8 <_ZN6ST773513fillRectangleEsssst+0x144>
9d0029cc:	30a5ffff 	andi	a1,a1,0xffff
		w = _width  - x;
	if((y + h - 1) >= _height) 
9d0029d0:	02461021 	addu	v0,s2,a2
9d0029d4:	0062102a 	slt	v0,v1,v0
9d0029d8:	5440003e 	bnezl	v0,9d002ad4 <_ZN6ST773513fillRectangleEsssst+0x160>
9d0029dc:	30c6ffff 	andi	a2,a2,0xffff
		h = _height - y;
	if (_variant == BlackTab)   
9d0029e0:	9263002a 	lbu	v1,42(s3)
9d0029e4:	24020002 	li	v0,2
9d0029e8:	1062003f 	beq	v1,v0,9d002ae8 <_ZN6ST773513fillRectangleEsssst+0x174>
9d0029ec:	30c6ffff 	andi	a2,a2,0xffff
		color = swapcolor(color);
	setAddrWindow(x, y, x+w-1, y+h-1);
9d0029f0:	24a7ffff 	addiu	a3,a1,-1
9d0029f4:	24c2ffff 	addiu	v0,a2,-1
9d0029f8:	00f13821 	addu	a3,a3,s1
9d0029fc:	00521021 	addu	v0,v0,s2
9d002a00:	3042ffff 	andi	v0,v0,0xffff
9d002a04:	02602021 	move	a0,s3
9d002a08:	30e7ffff 	andi	a3,a3,0xffff
9d002a0c:	0f4008a7 	jal	9d00229c <_ZN6ST773513setAddrWindowEtttt>
9d002a10:	afa20010 	sw	v0,16(sp)
	uint8_t hi = color >> 8, lo = color;

    _comm->streamStart();
9d002a14:	8e640004 	lw	a0,4(s3)
9d002a18:	8c820000 	lw	v0,0(a0)
9d002a1c:	8c420030 	lw	v0,48(v0)
9d002a20:	0040f809 	jalr	v0
9d002a24:	00000000 	nop
	for(y=h; y>0; y--) {
9d002a28:	5a400011 	blezl	s2,9d002a70 <_ZN6ST773513fillRectangleEsssst+0xfc>
9d002a2c:	8e640004 	lw	a0,4(s3)
		for(x=w; x>0; x--) {
9d002a30:	1a20000a 	blez	s1,9d002a5c <_ZN6ST773513fillRectangleEsssst+0xe8>
9d002a34:	0220a021 	move	s4,s1
            _comm->streamData16(color);
9d002a38:	8e640004 	lw	a0,4(s3)
	setAddrWindow(x, y, x+w-1, y+h-1);
	uint8_t hi = color >> 8, lo = color;

    _comm->streamStart();
	for(y=h; y>0; y--) {
		for(x=w; x>0; x--) {
9d002a3c:	2694ffff 	addiu	s4,s4,-1
            _comm->streamData16(color);
9d002a40:	02002821 	move	a1,s0
9d002a44:	8c820000 	lw	v0,0(a0)
9d002a48:	8c420054 	lw	v0,84(v0)
9d002a4c:	0040f809 	jalr	v0
9d002a50:	7c14a620 	seh	s4,s4
	setAddrWindow(x, y, x+w-1, y+h-1);
	uint8_t hi = color >> 8, lo = color;

    _comm->streamStart();
	for(y=h; y>0; y--) {
		for(x=w; x>0; x--) {
9d002a54:	5e80fff9 	bgtzl	s4,9d002a3c <_ZN6ST773513fillRectangleEsssst+0xc8>
9d002a58:	8e640004 	lw	a0,4(s3)
		color = swapcolor(color);
	setAddrWindow(x, y, x+w-1, y+h-1);
	uint8_t hi = color >> 8, lo = color;

    _comm->streamStart();
	for(y=h; y>0; y--) {
9d002a5c:	2652ffff 	addiu	s2,s2,-1
9d002a60:	7c129620 	seh	s2,s2
9d002a64:	1e40fff2 	bgtz	s2,9d002a30 <_ZN6ST773513fillRectangleEsssst+0xbc>
9d002a68:	00000000 	nop
		for(x=w; x>0; x--) {
            _comm->streamData16(color);
		}
	}
    _comm->streamEnd();
9d002a6c:	8e640004 	lw	a0,4(s3)
}
9d002a70:	8fbf002c 	lw	ra,44(sp)
9d002a74:	8fb40028 	lw	s4,40(sp)
	for(y=h; y>0; y--) {
		for(x=w; x>0; x--) {
            _comm->streamData16(color);
		}
	}
    _comm->streamEnd();
9d002a78:	8c820000 	lw	v0,0(a0)
}
9d002a7c:	8fb30024 	lw	s3,36(sp)
9d002a80:	8fb20020 	lw	s2,32(sp)
	for(y=h; y>0; y--) {
		for(x=w; x>0; x--) {
            _comm->streamData16(color);
		}
	}
    _comm->streamEnd();
9d002a84:	8c590034 	lw	t9,52(v0)
}
9d002a88:	8fb1001c 	lw	s1,28(sp)
9d002a8c:	8fb00018 	lw	s0,24(sp)
	for(y=h; y>0; y--) {
		for(x=w; x>0; x--) {
            _comm->streamData16(color);
		}
	}
    _comm->streamEnd();
9d002a90:	03200008 	jr	t9
9d002a94:	27bd0030 	addiu	sp,sp,48
}
9d002a98:	8fbf002c 	lw	ra,44(sp)
9d002a9c:	8fb40028 	lw	s4,40(sp)
9d002aa0:	8fb30024 	lw	s3,36(sp)
9d002aa4:	8fb20020 	lw	s2,32(sp)
9d002aa8:	8fb1001c 	lw	s1,28(sp)
9d002aac:	8fb00018 	lw	s0,24(sp)
9d002ab0:	03e00008 	jr	ra
9d002ab4:	27bd0030 	addiu	sp,sp,48

void ST7735::fillRectangle(int16_t x, int16_t y, int16_t w, int16_t h, uint16_t color) {
	if((x >= _width) || (y >= _height)) 
		return;
	if((x + w - 1) >= _width)  
		w = _width  - x;
9d002ab8:	00451023 	subu	v0,v0,a1
9d002abc:	7c028e20 	seh	s1,v0
	if((y + h - 1) >= _height) 
9d002ac0:	02461021 	addu	v0,s2,a2
9d002ac4:	0062102a 	slt	v0,v1,v0
9d002ac8:	5040ffc6 	beqzl	v0,9d0029e4 <_ZN6ST773513fillRectangleEsssst+0x70>
9d002acc:	9263002a 	lbu	v1,42(s3)
		h = _height - y;
9d002ad0:	30c6ffff 	andi	a2,a2,0xffff
9d002ad4:	00669023 	subu	s2,v1,a2
	if (_variant == BlackTab)   
9d002ad8:	9263002a 	lbu	v1,42(s3)
9d002adc:	24020002 	li	v0,2
9d002ae0:	1462ffc3 	bne	v1,v0,9d0029f0 <_ZN6ST773513fillRectangleEsssst+0x7c>
9d002ae4:	7c129620 	seh	s2,s2
    ST7735_DISPON ,    DELAY, //  4: Main screen turn on, no args w/delay
      100 };                  //     100 ms delay


inline uint16_t swapcolor(uint16_t x) { 
	return (x << 11) | (x & 0x07E0) | (x >> 11);
9d002ae8:	00101ac0 	sll	v1,s0,0xb
9d002aec:	001012c3 	sra	v0,s0,0xb
9d002af0:	00621025 	or	v0,v1,v0
9d002af4:	321007e0 	andi	s0,s0,0x7e0
9d002af8:	00508025 	or	s0,v0,s0
9d002afc:	0b400a7c 	j	9d0029f0 <_ZN6ST773513fillRectangleEsssst+0x7c>
9d002b00:	3210ffff 	andi	s0,s0,0xffff

9d002b04 <_ZN6ST773510fillScreenEt>:
	if (_variant == BlackTab) color = swapcolor(color);
	_comm->writeData16(color);
}

void ST7735::fillScreen(uint16_t color) {
	fillRectangle(0, 0,  _width, _height, color);
9d002b04:	84830014 	lh	v1,20(a0)
9d002b08:	84870012 	lh	a3,18(a0)
	setAddrWindow(x,y,x+1,y+1);
	if (_variant == BlackTab) color = swapcolor(color);
	_comm->writeData16(color);
}

void ST7735::fillScreen(uint16_t color) {
9d002b0c:	27bdffe0 	addiu	sp,sp,-32
9d002b10:	30a2ffff 	andi	v0,a1,0xffff
	fillRectangle(0, 0,  _width, _height, color);
9d002b14:	00003021 	move	a2,zero
9d002b18:	00002821 	move	a1,zero
	setAddrWindow(x,y,x+1,y+1);
	if (_variant == BlackTab) color = swapcolor(color);
	_comm->writeData16(color);
}

void ST7735::fillScreen(uint16_t color) {
9d002b1c:	afbf001c 	sw	ra,28(sp)
	fillRectangle(0, 0,  _width, _height, color);
9d002b20:	afa30010 	sw	v1,16(sp)
9d002b24:	0f400a5d 	jal	9d002974 <_ZN6ST773513fillRectangleEsssst>
9d002b28:	afa20014 	sw	v0,20(sp)
}
9d002b2c:	8fbf001c 	lw	ra,28(sp)
9d002b30:	03e00008 	jr	ra
9d002b34:	27bd0020 	addiu	sp,sp,32

9d002b38 <_ZN6ST773511setRotationEh>:
#define MADCTL_MV  0x20
#define MADCTL_ML  0x10
#define MADCTL_RGB 0x08
#define MADCTL_MH  0x04

void ST7735::setRotation(uint8_t m) {
9d002b38:	27bdffe0 	addiu	sp,sp,-32
9d002b3c:	afb00014 	sw	s0,20(sp)
9d002b40:	00808021 	move	s0,a0
	_comm->writeCommand8(ST7735_MADCTL);
9d002b44:	8c840004 	lw	a0,4(a0)
#define MADCTL_MV  0x20
#define MADCTL_ML  0x10
#define MADCTL_RGB 0x08
#define MADCTL_MH  0x04

void ST7735::setRotation(uint8_t m) {
9d002b48:	afb10018 	sw	s1,24(sp)
9d002b4c:	afbf001c 	sw	ra,28(sp)
	_comm->writeCommand8(ST7735_MADCTL);
9d002b50:	8c820000 	lw	v0,0(a0)
#define MADCTL_MV  0x20
#define MADCTL_ML  0x10
#define MADCTL_RGB 0x08
#define MADCTL_MH  0x04

void ST7735::setRotation(uint8_t m) {
9d002b54:	30b100ff 	andi	s1,a1,0xff
	_comm->writeCommand8(ST7735_MADCTL);
9d002b58:	24050036 	li	a1,54
9d002b5c:	8c420018 	lw	v0,24(v0)
9d002b60:	0040f809 	jalr	v0
9d002b64:	32310003 	andi	s1,s1,0x3
	rotation = m % 4; // can't be higher than 3
	switch (rotation) {
9d002b68:	24020002 	li	v0,2
9d002b6c:	12220026 	beq	s1,v0,9d002c08 <_ZN6ST773511setRotationEh+0xd0>
9d002b70:	a2110016 	sb	s1,22(s0)
9d002b74:	24020003 	li	v0,3
9d002b78:	12220020 	beq	s1,v0,9d002bfc <_ZN6ST773511setRotationEh+0xc4>
9d002b7c:	24020001 	li	v0,1
9d002b80:	1222000f 	beq	s1,v0,9d002bc0 <_ZN6ST773511setRotationEh+0x88>
9d002b84:	240500c8 	li	a1,200
		case 0:
			_comm->writeData8(MADCTL_MX | MADCTL_MY | MADCTL_RGB);
9d002b88:	8e040004 	lw	a0,4(s0)
		    _comm->writeData8(MADCTL_MY | MADCTL_MV | MADCTL_RGB);
			_width  = ST7735::Height;
			_height = ST7735::Width;
			break;
		case 2:
			_comm->writeData8(MADCTL_RGB);
9d002b8c:	8c820000 	lw	v0,0(a0)
9d002b90:	8c420024 	lw	v0,36(v0)
9d002b94:	0040f809 	jalr	v0
9d002b98:	00000000 	nop
			_comm->writeData8(MADCTL_MX | MADCTL_MV | MADCTL_RGB);
			_width  = ST7735::Height;
			_height = ST7735::Width;
			break;
	}
}
9d002b9c:	8fbf001c 	lw	ra,28(sp)
			_width  = ST7735::Height;
			_height = ST7735::Width;
			break;
		case 2:
			_comm->writeData8(MADCTL_RGB);
			_width  = ST7735::Width;
9d002ba0:	24020080 	li	v0,128
9d002ba4:	a6020012 	sh	v0,18(s0)
			_height = ST7735::Height;
9d002ba8:	240200a0 	li	v0,160
9d002bac:	a6020014 	sh	v0,20(s0)
			_comm->writeData8(MADCTL_MX | MADCTL_MV | MADCTL_RGB);
			_width  = ST7735::Height;
			_height = ST7735::Width;
			break;
	}
}
9d002bb0:	8fb10018 	lw	s1,24(sp)
9d002bb4:	8fb00014 	lw	s0,20(sp)
9d002bb8:	03e00008 	jr	ra
9d002bbc:	27bd0020 	addiu	sp,sp,32
			_comm->writeData8(MADCTL_MX | MADCTL_MY | MADCTL_RGB);
			_width  = ST7735::Width;
			_height = ST7735::Height;
			break;
		case 1:
		    _comm->writeData8(MADCTL_MY | MADCTL_MV | MADCTL_RGB);
9d002bc0:	8e040004 	lw	a0,4(s0)
9d002bc4:	240500a8 	li	a1,168
			_comm->writeData8(MADCTL_RGB);
			_width  = ST7735::Width;
			_height = ST7735::Height;
			break;
		case 3:
			_comm->writeData8(MADCTL_MX | MADCTL_MV | MADCTL_RGB);
9d002bc8:	8c820000 	lw	v0,0(a0)
9d002bcc:	8c420024 	lw	v0,36(v0)
9d002bd0:	0040f809 	jalr	v0
9d002bd4:	00000000 	nop
			_width  = ST7735::Height;
			_height = ST7735::Width;
			break;
	}
}
9d002bd8:	8fbf001c 	lw	ra,28(sp)
			_width  = ST7735::Width;
			_height = ST7735::Height;
			break;
		case 3:
			_comm->writeData8(MADCTL_MX | MADCTL_MV | MADCTL_RGB);
			_width  = ST7735::Height;
9d002bdc:	240200a0 	li	v0,160
9d002be0:	a6020012 	sh	v0,18(s0)
			_height = ST7735::Width;
9d002be4:	24020080 	li	v0,128
9d002be8:	a6020014 	sh	v0,20(s0)
			break;
	}
}
9d002bec:	8fb10018 	lw	s1,24(sp)
9d002bf0:	8fb00014 	lw	s0,20(sp)
9d002bf4:	03e00008 	jr	ra
9d002bf8:	27bd0020 	addiu	sp,sp,32
			_comm->writeData8(MADCTL_RGB);
			_width  = ST7735::Width;
			_height = ST7735::Height;
			break;
		case 3:
			_comm->writeData8(MADCTL_MX | MADCTL_MV | MADCTL_RGB);
9d002bfc:	8e040004 	lw	a0,4(s0)
9d002c00:	0b400af2 	j	9d002bc8 <_ZN6ST773511setRotationEh+0x90>
9d002c04:	24050068 	li	a1,104
		    _comm->writeData8(MADCTL_MY | MADCTL_MV | MADCTL_RGB);
			_width  = ST7735::Height;
			_height = ST7735::Width;
			break;
		case 2:
			_comm->writeData8(MADCTL_RGB);
9d002c08:	8e040004 	lw	a0,4(s0)
9d002c0c:	0b400ae3 	j	9d002b8c <_ZN6ST773511setRotationEh+0x54>
9d002c10:	24050008 	li	a1,8

9d002c14 <_ZN3TFT11stringWidthEPc>:
    }
}

uint16_t TFT::stringWidth(char *text) {
    uint16_t w = 0;
    if (font == NULL) {
9d002c14:	8c830018 	lw	v1,24(a0)
9d002c18:	1060001b 	beqz	v1,9d002c88 <_ZN3TFT11stringWidthEPc+0x74>
9d002c1c:	00001021 	move	v0,zero
    uint8_t lpc = font[0];
    uint8_t bpl = font[1];
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    for (char *t = text; *t; t++) {
9d002c20:	80a40000 	lb	a0,0(a1)
    uint16_t w = 0;
    if (font == NULL) {
        return 0;
    }

    uint8_t lpc = font[0];
9d002c24:	90660000 	lbu	a2,0(v1)
    uint8_t bpl = font[1];
9d002c28:	906a0001 	lbu	t2,1(v1)
    uint8_t startGlyph = font[2]; // First character in data
9d002c2c:	90670002 	lbu	a3,2(v1)
    uint8_t endGlyph = font[3]; // Last character in data

    for (char *t = text; *t; t++) {
9d002c30:	10800015 	beqz	a0,9d002c88 <_ZN3TFT11stringWidthEPc+0x74>
9d002c34:	90690003 	lbu	t1,3(v1)
        char c = *t;
        if (c >= startGlyph && c <= endGlyph) {
            uint8_t co = c - startGlyph;
            uint16_t charstart = (co * ((lpc * bpl) + 1)) + 4; // Start of character data
9d002c38:	71465002 	mul	t2,t2,a2
9d002c3c:	254a0001 	addiu	t2,t2,1
9d002c40:	314affff 	andi	t2,t2,0xffff
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    for (char *t = text; *t; t++) {
        char c = *t;
        if (c >= startGlyph && c <= endGlyph) {
9d002c44:	0087302a 	slt	a2,a0,a3
    uint8_t lpc = font[0];
    uint8_t bpl = font[1];
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    for (char *t = text; *t; t++) {
9d002c48:	24a50001 	addiu	a1,a1,1
        char c = *t;
        if (c >= startGlyph && c <= endGlyph) {
9d002c4c:	14c0000b 	bnez	a2,9d002c7c <_ZN3TFT11stringWidthEPc+0x68>
9d002c50:	0124402a 	slt	t0,t1,a0
            uint8_t co = c - startGlyph;
9d002c54:	00872023 	subu	a0,a0,a3
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    for (char *t = text; *t; t++) {
        char c = *t;
        if (c >= startGlyph && c <= endGlyph) {
9d002c58:	15000008 	bnez	t0,9d002c7c <_ZN3TFT11stringWidthEPc+0x68>
9d002c5c:	308400ff 	andi	a0,a0,0xff
            uint8_t co = c - startGlyph;
            uint16_t charstart = (co * ((lpc * bpl) + 1)) + 4; // Start of character data
9d002c60:	71442002 	mul	a0,t2,a0
9d002c64:	24840004 	addiu	a0,a0,4
            uint8_t charwidth = font[charstart++];
9d002c68:	3084ffff 	andi	a0,a0,0xffff
9d002c6c:	00642021 	addu	a0,v1,a0
            w += charwidth;
9d002c70:	90840000 	lbu	a0,0(a0)
9d002c74:	00441021 	addu	v0,v0,a0
9d002c78:	3042ffff 	andi	v0,v0,0xffff
    uint8_t lpc = font[0];
    uint8_t bpl = font[1];
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    for (char *t = text; *t; t++) {
9d002c7c:	80a40000 	lb	a0,0(a1)
9d002c80:	1480fff1 	bnez	a0,9d002c48 <_ZN3TFT11stringWidthEPc+0x34>
9d002c84:	0087302a 	slt	a2,a0,a3
            uint8_t charwidth = font[charstart++];
            w += charwidth;
        }
    }
    return w;
}
9d002c88:	03e00008 	jr	ra
9d002c8c:	00000000 	nop

9d002c90 <_ZN3TFT12stringHeightEPc>:
        
uint16_t TFT::stringHeight(char *text) {
    uint16_t w = 0;
    if (font == NULL) {
9d002c90:	8c830018 	lw	v1,24(a0)
9d002c94:	10600002 	beqz	v1,9d002ca0 <_ZN3TFT12stringHeightEPc+0x10>
9d002c98:	00001021 	move	v0,zero
        return 0;
    }

    uint8_t lpc = font[0];

    return lpc;
9d002c9c:	90620000 	lbu	v0,0(v1)
}
9d002ca0:	03e00008 	jr	ra
9d002ca4:	00000000 	nop

9d002ca8 <_ZN3TFT6updateEP11Framebuffer>:
void TFT::setFont(const uint8_t *f) {
    font = f;
}

void TFT::update(Framebuffer *fb) {
    update(fb, 0, 0);
9d002ca8:	8c820000 	lw	v0,0(a0)
9d002cac:	00003021 	move	a2,zero
9d002cb0:	8c59002c 	lw	t9,44(v0)
9d002cb4:	03200008 	jr	t9
9d002cb8:	00003821 	move	a3,zero

9d002cbc <_ZN3TFT6updateEP11Framebufferss>:
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
9d002cbc:	27bdffc0 	addiu	sp,sp,-64
9d002cc0:	afbe0038 	sw	s8,56(sp)
9d002cc4:	0080f021 	move	s8,a0
    for (int y = 0; y < getHeight(); y++) {
9d002cc8:	8fc20000 	lw	v0,0(s8)

void TFT::update(Framebuffer *fb) {
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
9d002ccc:	afb70034 	sw	s7,52(sp)
9d002cd0:	afb60030 	sw	s6,48(sp)
    for (int y = 0; y < getHeight(); y++) {
9d002cd4:	8c420054 	lw	v0,84(v0)

void TFT::update(Framebuffer *fb) {
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
9d002cd8:	afb5002c 	sw	s5,44(sp)
9d002cdc:	afb20020 	sw	s2,32(sp)
9d002ce0:	afbf003c 	sw	ra,60(sp)
9d002ce4:	afb40028 	sw	s4,40(sp)
9d002ce8:	afb30024 	sw	s3,36(sp)
9d002cec:	afb1001c 	sw	s1,28(sp)
9d002cf0:	afb00018 	sw	s0,24(sp)
    for (int y = 0; y < getHeight(); y++) {
9d002cf4:	03c02021 	move	a0,s8

void TFT::update(Framebuffer *fb) {
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
9d002cf8:	00a09021 	move	s2,a1
    for (int y = 0; y < getHeight(); y++) {
9d002cfc:	30f6ffff 	andi	s6,a3,0xffff
9d002d00:	0000a821 	move	s5,zero
9d002d04:	0040f809 	jalr	v0
9d002d08:	30d7ffff 	andi	s7,a2,0xffff
9d002d0c:	02a2102a 	slt	v0,s5,v0
9d002d10:	10400029 	beqz	v0,9d002db8 <_ZN3TFT6updateEP11Framebufferss+0xfc>
9d002d14:	8fbf003c 	lw	ra,60(sp)
9d002d18:	02e08821 	move	s1,s7
9d002d1c:	00008021 	move	s0,zero
        for (int x = 0; x < getWidth(); x++) {
            setPixel(x, y, fb->colorAt(x + dx, y + dy));
9d002d20:	7c169e20 	seh	s3,s6
9d002d24:	0b400b5a 	j	9d002d68 <_ZN3TFT6updateEP11Framebufferss+0xac>
9d002d28:	7c15a620 	seh	s4,s5
9d002d2c:	8fc30000 	lw	v1,0(s8)
9d002d30:	8e420000 	lw	v0,0(s2)
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
    for (int y = 0; y < getHeight(); y++) {
        for (int x = 0; x < getWidth(); x++) {
9d002d34:	26310001 	addiu	s1,s1,1
            setPixel(x, y, fb->colorAt(x + dx, y + dy));
9d002d38:	8c63000c 	lw	v1,12(v1)
9d002d3c:	8c42004c 	lw	v0,76(v0)
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
    for (int y = 0; y < getHeight(); y++) {
        for (int x = 0; x < getWidth(); x++) {
9d002d40:	3231ffff 	andi	s1,s1,0xffff
            setPixel(x, y, fb->colorAt(x + dx, y + dy));
9d002d44:	0040f809 	jalr	v0
9d002d48:	afa30010 	sw	v1,16(sp)
9d002d4c:	8fa30010 	lw	v1,16(sp)
9d002d50:	7c102e20 	seh	a1,s0
9d002d54:	03c02021 	move	a0,s8
9d002d58:	02803021 	move	a2,s4
9d002d5c:	0060f809 	jalr	v1
9d002d60:	00403821 	move	a3,v0
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
    for (int y = 0; y < getHeight(); y++) {
        for (int x = 0; x < getWidth(); x++) {
9d002d64:	26100001 	addiu	s0,s0,1
9d002d68:	8fc20000 	lw	v0,0(s8)
9d002d6c:	8c420050 	lw	v0,80(v0)
9d002d70:	0040f809 	jalr	v0
9d002d74:	03c02021 	move	a0,s8
9d002d78:	0202102a 	slt	v0,s0,v0
            setPixel(x, y, fb->colorAt(x + dx, y + dy));
9d002d7c:	7c112e20 	seh	a1,s1
9d002d80:	02603021 	move	a2,s3
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
    for (int y = 0; y < getHeight(); y++) {
        for (int x = 0; x < getWidth(); x++) {
9d002d84:	1440ffe9 	bnez	v0,9d002d2c <_ZN3TFT6updateEP11Framebufferss+0x70>
9d002d88:	02402021 	move	a0,s2
void TFT::update(Framebuffer *fb) {
    update(fb, 0, 0);
}

void TFT::update(Framebuffer *fb, int16_t dx, int16_t dy) {
    for (int y = 0; y < getHeight(); y++) {
9d002d8c:	8fc20000 	lw	v0,0(s8)
9d002d90:	03c02021 	move	a0,s8
9d002d94:	26b50001 	addiu	s5,s5,1
9d002d98:	8c420054 	lw	v0,84(v0)
9d002d9c:	26d60001 	addiu	s6,s6,1
9d002da0:	0040f809 	jalr	v0
9d002da4:	32d6ffff 	andi	s6,s6,0xffff
9d002da8:	02a2102a 	slt	v0,s5,v0
9d002dac:	1440ffdb 	bnez	v0,9d002d1c <_ZN3TFT6updateEP11Framebufferss+0x60>
9d002db0:	02e08821 	move	s1,s7
        for (int x = 0; x < getWidth(); x++) {
            setPixel(x, y, fb->colorAt(x + dx, y + dy));
        }
    }
}
9d002db4:	8fbf003c 	lw	ra,60(sp)
9d002db8:	8fbe0038 	lw	s8,56(sp)
9d002dbc:	8fb70034 	lw	s7,52(sp)
9d002dc0:	8fb60030 	lw	s6,48(sp)
9d002dc4:	8fb5002c 	lw	s5,44(sp)
9d002dc8:	8fb40028 	lw	s4,40(sp)
9d002dcc:	8fb30024 	lw	s3,36(sp)
9d002dd0:	8fb20020 	lw	s2,32(sp)
9d002dd4:	8fb1001c 	lw	s1,28(sp)
9d002dd8:	8fb00018 	lw	s0,24(sp)
9d002ddc:	03e00008 	jr	ra
9d002de0:	27bd0040 	addiu	sp,sp,64

9d002de4 <_ZN3TFT7colorAtEss>:
    return (h << 16) | (s << 8) | v;
}

uint16_t TFT::colorAt(int16_t x, int16_t y) {
    return Color::Black;
}
9d002de4:	03e00008 	jr	ra
9d002de8:	00001021 	move	v0,zero

9d002dec <_ZN3TFT9bgColorAtEss>:

uint16_t TFT::bgColorAt(int16_t x, int16_t y) {
    return Color::Black;
}
9d002dec:	03e00008 	jr	ra
9d002df0:	00001021 	move	v0,zero

9d002df4 <_ZN3TFT10openWindowEtttt>:

void TFT::openWindow(uint16_t x0, uint16_t y0, uint16_t x1, uint16_t y1) {
9d002df4:	97a20010 	lhu	v0,16(sp)
    winx0 = x0;
9d002df8:	a485001c 	sh	a1,28(a0)
    winy0 = y0;
9d002dfc:	a486001e 	sh	a2,30(a0)
    winx1 = x1;
9d002e00:	a4870020 	sh	a3,32(a0)
    winy1 = y1;
9d002e04:	a4820022 	sh	v0,34(a0)
    winpx = 0;
9d002e08:	a4800024 	sh	zero,36(a0)
    winpy = 0;
}
9d002e0c:	03e00008 	jr	ra
9d002e10:	a4800026 	sh	zero,38(a0)

9d002e14 <_ZN3TFT10windowDataEt>:

void TFT::windowData(uint16_t d) {
    setPixel(winx0 + winpx, winy0 + winpy, d);
9d002e14:	8c820000 	lw	v0,0(a0)
9d002e18:	9483001e 	lhu	v1,30(a0)
9d002e1c:	94890024 	lhu	t1,36(a0)
9d002e20:	9488001c 	lhu	t0,28(a0)
9d002e24:	94860026 	lhu	a2,38(a0)
9d002e28:	8c42000c 	lw	v0,12(v0)
    winy1 = y1;
    winpx = 0;
    winpy = 0;
}

void TFT::windowData(uint16_t d) {
9d002e2c:	27bdffe8 	addiu	sp,sp,-24
    setPixel(winx0 + winpx, winy0 + winpy, d);
9d002e30:	00c33021 	addu	a2,a2,v1
9d002e34:	01284021 	addu	t0,t1,t0
    winy1 = y1;
    winpx = 0;
    winpy = 0;
}

void TFT::windowData(uint16_t d) {
9d002e38:	afb00010 	sw	s0,16(sp)
9d002e3c:	30a7ffff 	andi	a3,a1,0xffff
9d002e40:	00808021 	move	s0,a0
9d002e44:	afbf0014 	sw	ra,20(sp)
    setPixel(winx0 + winpx, winy0 + winpy, d);
9d002e48:	7c082e20 	seh	a1,t0
9d002e4c:	0040f809 	jalr	v0
9d002e50:	7c063620 	seh	a2,a2
    winpx++;
9d002e54:	96020024 	lhu	v0,36(s0)
    if (winpx + winx0 > winx1) {
9d002e58:	9603001c 	lhu	v1,28(s0)
9d002e5c:	96040020 	lhu	a0,32(s0)
    winpy = 0;
}

void TFT::windowData(uint16_t d) {
    setPixel(winx0 + winpx, winy0 + winpy, d);
    winpx++;
9d002e60:	24420001 	addiu	v0,v0,1
9d002e64:	3042ffff 	andi	v0,v0,0xffff
    if (winpx + winx0 > winx1) {
9d002e68:	00431821 	addu	v1,v0,v1
9d002e6c:	0083182a 	slt	v1,a0,v1
9d002e70:	1460000c 	bnez	v1,9d002ea4 <_ZN3TFT10windowDataEt+0x90>
9d002e74:	a6020024 	sh	v0,36(s0)
9d002e78:	96020026 	lhu	v0,38(s0)
        winpx = 0;
        winpy++;
    }
    if (winpy + winy0 > winy1) {
9d002e7c:	9604001e 	lhu	a0,30(s0)
9d002e80:	96030022 	lhu	v1,34(s0)
9d002e84:	00441021 	addu	v0,v0,a0
9d002e88:	0062102a 	slt	v0,v1,v0
9d002e8c:	54400001 	bnezl	v0,9d002e94 <_ZN3TFT10windowDataEt+0x80>
9d002e90:	a6000026 	sh	zero,38(s0)
        winpy = 0;
    }
}
9d002e94:	8fbf0014 	lw	ra,20(sp)
9d002e98:	8fb00010 	lw	s0,16(sp)
9d002e9c:	03e00008 	jr	ra
9d002ea0:	27bd0018 	addiu	sp,sp,24
void TFT::windowData(uint16_t d) {
    setPixel(winx0 + winpx, winy0 + winpy, d);
    winpx++;
    if (winpx + winx0 > winx1) {
        winpx = 0;
        winpy++;
9d002ea4:	96020026 	lhu	v0,38(s0)

void TFT::windowData(uint16_t d) {
    setPixel(winx0 + winpx, winy0 + winpy, d);
    winpx++;
    if (winpx + winx0 > winx1) {
        winpx = 0;
9d002ea8:	a6000024 	sh	zero,36(s0)
        winpy++;
9d002eac:	24420001 	addiu	v0,v0,1
9d002eb0:	3042ffff 	andi	v0,v0,0xffff
9d002eb4:	0b400b9f 	j	9d002e7c <_ZN3TFT10windowDataEt+0x68>
9d002eb8:	a6020026 	sh	v0,38(s0)

9d002ebc <_ZN3TFT10windowDataEPtm>:
    if (winpy + winy0 > winy1) {
        winpy = 0;
    }
}

void TFT::windowData(uint16_t *d, uint32_t l) {
9d002ebc:	27bdffd8 	addiu	sp,sp,-40
9d002ec0:	afb30020 	sw	s3,32(sp)
9d002ec4:	afb00014 	sw	s0,20(sp)
9d002ec8:	afbf0024 	sw	ra,36(sp)
9d002ecc:	afb2001c 	sw	s2,28(sp)
9d002ed0:	afb10018 	sw	s1,24(sp)
9d002ed4:	00c08021 	move	s0,a2
    for (uint32_t i = 0; i < l; i++) {
9d002ed8:	10c0000d 	beqz	a2,9d002f10 <_ZN3TFT10windowDataEPtm+0x54>
9d002edc:	00809821 	move	s3,a0
9d002ee0:	00a09021 	move	s2,a1
9d002ee4:	00008821 	move	s1,zero
        windowData(d[i]);
9d002ee8:	8e620000 	lw	v0,0(s3)
9d002eec:	96450000 	lhu	a1,0(s2)
9d002ef0:	02602021 	move	a0,s3
9d002ef4:	8c42003c 	lw	v0,60(v0)
        winpy = 0;
    }
}

void TFT::windowData(uint16_t *d, uint32_t l) {
    for (uint32_t i = 0; i < l; i++) {
9d002ef8:	26310001 	addiu	s1,s1,1
        windowData(d[i]);
9d002efc:	0040f809 	jalr	v0
9d002f00:	26520002 	addiu	s2,s2,2
        winpy = 0;
    }
}

void TFT::windowData(uint16_t *d, uint32_t l) {
    for (uint32_t i = 0; i < l; i++) {
9d002f04:	0230102b 	sltu	v0,s1,s0
9d002f08:	5440fff8 	bnezl	v0,9d002eec <_ZN3TFT10windowDataEPtm+0x30>
9d002f0c:	8e620000 	lw	v0,0(s3)
        windowData(d[i]);
    }
}
9d002f10:	8fbf0024 	lw	ra,36(sp)
9d002f14:	8fb30020 	lw	s3,32(sp)
9d002f18:	8fb2001c 	lw	s2,28(sp)
9d002f1c:	8fb10018 	lw	s1,24(sp)
9d002f20:	8fb00014 	lw	s0,20(sp)
9d002f24:	03e00008 	jr	ra
9d002f28:	27bd0028 	addiu	sp,sp,40

9d002f2c <_ZN3TFT11closeWindowEv>:

void TFT::closeWindow() {
}
9d002f2c:	03e00008 	jr	ra
9d002f30:	00000000 	nop

9d002f34 <_ZN3TFTC1EP15TFTCommunicator>:
    textbgcolor = 0;
    wrap = true;
    font = NULL; //Fonts::Default;
}

TFT::TFT(TFTCommunicator *comm) {
9d002f34:	3c029d01 	lui	v0,0x9d01
9d002f38:	24425850 	addiu	v0,v0,22608
9d002f3c:	ac820000 	sw	v0,0(a0)
    _comm = comm;
    cursor_y = cursor_x = 0;
    textcolor = 0xFFFF;
9d002f40:	2402ffff 	li	v0,-1
9d002f44:	a482000e 	sh	v0,14(a0)
    textbgcolor = 0;
    wrap = true;
9d002f48:	24020001 	li	v0,1
    wrap = true;
    font = NULL; //Fonts::Default;
}

TFT::TFT(TFTCommunicator *comm) {
    _comm = comm;
9d002f4c:	ac850004 	sw	a1,4(a0)
    cursor_y = cursor_x = 0;
9d002f50:	a4800008 	sh	zero,8(a0)
9d002f54:	a480000a 	sh	zero,10(a0)
    textcolor = 0xFFFF;
    textbgcolor = 0;
9d002f58:	a4800010 	sh	zero,16(a0)
    wrap = true;
9d002f5c:	a082000d 	sb	v0,13(a0)
    font = NULL; //Fonts::Default;
}
9d002f60:	03e00008 	jr	ra
9d002f64:	ac800018 	sw	zero,24(a0)

9d002f68 <_ZN3TFT8drawCharEsshtt>:
#endif
}

// draw a character
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
    if (font == NULL) {
9d002f68:	8c820018 	lw	v0,24(a0)
    return 1;
#endif
}

// draw a character
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
9d002f6c:	27bdffb0 	addiu	sp,sp,-80
9d002f70:	afb30034 	sw	s3,52(sp)
9d002f74:	afb20030 	sw	s2,48(sp)
9d002f78:	afb00028 	sw	s0,40(sp)
9d002f7c:	afbf004c 	sw	ra,76(sp)
9d002f80:	afbe0048 	sw	s8,72(sp)
9d002f84:	afb70044 	sw	s7,68(sp)
9d002f88:	afb60040 	sw	s6,64(sp)
9d002f8c:	afb5003c 	sw	s5,60(sp)
9d002f90:	afb40038 	sw	s4,56(sp)
9d002f94:	afb1002c 	sw	s1,44(sp)
9d002f98:	00804821 	move	t1,a0
9d002f9c:	7c059e20 	seh	s3,a1
9d002fa0:	7c063620 	seh	a2,a2
9d002fa4:	30e700ff 	andi	a3,a3,0xff
9d002fa8:	97b20060 	lhu	s2,96(sp)
9d002fac:	97aa0064 	lhu	t2,100(sp)
    if (font == NULL) {
9d002fb0:	10400067 	beqz	v0,9d003150 <_ZN3TFT8drawCharEsshtt+0x1e8>
9d002fb4:	00008021 	move	s0,zero
        return 0;
    }

    uint8_t lpc = font[0];  // Lines per character
    uint8_t bpl = font[1];  // Bytes per line
    uint8_t startGlyph = font[2]; // First character in data
9d002fb8:	90430002 	lbu	v1,2(v0)
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
    if (font == NULL) {
        return 0;
    }

    uint8_t lpc = font[0];  // Lines per character
9d002fbc:	90570000 	lbu	s7,0(v0)
    uint8_t bpl = font[1];  // Bytes per line
9d002fc0:	90550001 	lbu	s5,1(v0)
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    if (c < startGlyph || c > endGlyph) {
9d002fc4:	00e3202b 	sltu	a0,a3,v1
9d002fc8:	14800061 	bnez	a0,9d003150 <_ZN3TFT8drawCharEsshtt+0x1e8>
9d002fcc:	90450003 	lbu	a1,3(v0)
9d002fd0:	00a7282b 	sltu	a1,a1,a3
9d002fd4:	14a0005e 	bnez	a1,9d003150 <_ZN3TFT8drawCharEsshtt+0x1e8>
9d002fd8:	72b72002 	mul	a0,s5,s7
        return 0;
    }

    c = c - startGlyph;
9d002fdc:	00e3f023 	subu	s8,a3,v1

    // Start of this character's data is the character number multiplied by the
    // number of lines in a character (plus one for the character width) multiplied
    // by the number of bytes in a line, and then offset by 4 for the header.
    uint32_t charstart = (c * ((lpc * bpl) + 1)) + 4; // Start of character data
9d002fe0:	33de00ff 	andi	s8,s8,0xff
9d002fe4:	24840001 	addiu	a0,a0,1
9d002fe8:	73c4f002 	mul	s8,s8,a0
    uint8_t charwidth = font[charstart++]; // The first byte of a block is the width of the character
9d002fec:	005e1021 	addu	v0,v0,s8
9d002ff0:	90500004 	lbu	s0,4(v0)

    for (int8_t i = 0; i < lpc; i++ ) {
9d002ff4:	12e00056 	beqz	s7,9d003150 <_ZN3TFT8drawCharEsshtt+0x1e8>
9d002ff8:	27de0005 	addiu	s8,s8,5
9d002ffc:	30d6ffff 	andi	s6,a2,0xffff
9d003000:	0000a021 	move	s4,zero
9d003004:	00005821 	move	t3,zero
        uint64_t line = 0;
        for (int8_t j = 0; j < bpl; j++) {
9d003008:	00001021 	move	v0,zero
9d00300c:	12a0000f 	beqz	s5,9d00304c <_ZN3TFT8drawCharEsshtt+0xe4>
9d003010:	00001821 	move	v1,zero
9d003014:	71752002 	mul	a0,t3,s5
9d003018:	009e5821 	addu	t3,a0,s8
9d00301c:	8d240018 	lw	a0,24(t1)
    return 1;
#endif
}

// draw a character
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
9d003020:	00952821 	addu	a1,a0,s5
9d003024:	008b2021 	addu	a0,a0,t3
9d003028:	00ab5821 	addu	t3,a1,t3

    for (int8_t i = 0; i < lpc; i++ ) {
        uint64_t line = 0;
        for (int8_t j = 0; j < bpl; j++) {
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
9d00302c:	90870000 	lbu	a3,0(a0)
    uint8_t charwidth = font[charstart++]; // The first byte of a block is the width of the character

    for (int8_t i = 0; i < lpc; i++ ) {
        uint64_t line = 0;
        for (int8_t j = 0; j < bpl; j++) {
            line <<= 8;
9d003030:	00023602 	srl	a2,v0,0x18
9d003034:	00024200 	sll	t0,v0,0x8
9d003038:	00032a00 	sll	a1,v1,0x8
            line |= font[charstart + (i * bpl) + j];
9d00303c:	24840001 	addiu	a0,a0,1
9d003040:	01071025 	or	v0,t0,a3
    uint32_t charstart = (c * ((lpc * bpl) + 1)) + 4; // Start of character data
    uint8_t charwidth = font[charstart++]; // The first byte of a block is the width of the character

    for (int8_t i = 0; i < lpc; i++ ) {
        uint64_t line = 0;
        for (int8_t j = 0; j < bpl; j++) {
9d003044:	148bfff9 	bne	a0,t3,9d00302c <_ZN3TFT8drawCharEsshtt+0xc4>
9d003048:	00c51825 	or	v1,a2,a1
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
9d00304c:	5200003b 	beqzl	s0,9d00313c <_ZN3TFT8drawCharEsshtt+0x1d4>
9d003050:	26940001 	addiu	s4,s4,1
9d003054:	00004021 	move	t0,zero
            if (line & 0x1) {
                setPixel(x+j, y+i, color);
            } else if (bg != color) {
                setPixel(x+j, y+i, bg);
9d003058:	0b400c32 	j	9d0030c8 <_ZN3TFT8drawCharEsshtt+0x160>
9d00305c:	7c168e20 	seh	s1,s6
9d003060:	01202021 	move	a0,t1
9d003064:	7c052e20 	seh	a1,a1
9d003068:	02203021 	move	a2,s1
        }

        for (int8_t j = 0; j < charwidth; j++) {
            if (line & 0x1) {
                setPixel(x+j, y+i, color);
            } else if (bg != color) {
9d00306c:	1152000e 	beq	t2,s2,9d0030a8 <_ZN3TFT8drawCharEsshtt+0x140>
9d003070:	01403821 	move	a3,t2
                setPixel(x+j, y+i, bg);
9d003074:	8d2b0000 	lw	t3,0(t1)
9d003078:	8d6b000c 	lw	t3,12(t3)
9d00307c:	afa20010 	sw	v0,16(sp)
9d003080:	afa30014 	sw	v1,20(sp)
9d003084:	afa80018 	sw	t0,24(sp)
9d003088:	afa9001c 	sw	t1,28(sp)
9d00308c:	0160f809 	jalr	t3
9d003090:	afaa0020 	sw	t2,32(sp)
9d003094:	8faa0020 	lw	t2,32(sp)
9d003098:	8fa9001c 	lw	t1,28(sp)
9d00309c:	8fa80018 	lw	t0,24(sp)
9d0030a0:	8fa30014 	lw	v1,20(sp)
9d0030a4:	8fa20010 	lw	v0,16(sp)
9d0030a8:	25080001 	addiu	t0,t0,1
            }
            line >>= 1;
9d0030ac:	00033fc0 	sll	a3,v1,0x1f
9d0030b0:	00023042 	srl	a2,v0,0x1
        for (int8_t j = 0; j < bpl; j++) {
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
9d0030b4:	0110102a 	slt	v0,t0,s0
            if (line & 0x1) {
                setPixel(x+j, y+i, color);
            } else if (bg != color) {
                setPixel(x+j, y+i, bg);
            }
            line >>= 1;
9d0030b8:	00e63025 	or	a2,a3,a2
        for (int8_t j = 0; j < bpl; j++) {
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
9d0030bc:	1040001e 	beqz	v0,9d003138 <_ZN3TFT8drawCharEsshtt+0x1d0>
9d0030c0:	00031842 	srl	v1,v1,0x1
            if (line & 0x1) {
                setPixel(x+j, y+i, color);
            } else if (bg != color) {
                setPixel(x+j, y+i, bg);
            }
            line >>= 1;
9d0030c4:	00c01021 	move	v0,a2
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
            if (line & 0x1) {
9d0030c8:	30440001 	andi	a0,v0,0x1
9d0030cc:	5080ffe4 	beqzl	a0,9d003060 <_ZN3TFT8drawCharEsshtt+0xf8>
9d0030d0:	01132821 	addu	a1,t0,s3
                setPixel(x+j, y+i, color);
9d0030d4:	8d260000 	lw	a2,0(t1)
    return 1;
#endif
}

// draw a character
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
9d0030d8:	02682821 	addu	a1,s3,t0
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
            if (line & 0x1) {
                setPixel(x+j, y+i, color);
9d0030dc:	01202021 	move	a0,t1
9d0030e0:	8ccb000c 	lw	t3,12(a2)
9d0030e4:	02403821 	move	a3,s2
9d0030e8:	02203021 	move	a2,s1
9d0030ec:	afa20010 	sw	v0,16(sp)
9d0030f0:	afa30014 	sw	v1,20(sp)
9d0030f4:	afa80018 	sw	t0,24(sp)
9d0030f8:	afa9001c 	sw	t1,28(sp)
9d0030fc:	afaa0020 	sw	t2,32(sp)
9d003100:	0160f809 	jalr	t3
9d003104:	7c052e20 	seh	a1,a1
9d003108:	8fa80018 	lw	t0,24(sp)
9d00310c:	8fa20010 	lw	v0,16(sp)
9d003110:	8fa30014 	lw	v1,20(sp)
            } else if (bg != color) {
                setPixel(x+j, y+i, bg);
9d003114:	25080001 	addiu	t0,t0,1
            }
            line >>= 1;
9d003118:	00023042 	srl	a2,v0,0x1
9d00311c:	00033fc0 	sll	a3,v1,0x1f
        for (int8_t j = 0; j < bpl; j++) {
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
9d003120:	0110102a 	slt	v0,t0,s0
9d003124:	8fa9001c 	lw	t1,28(sp)
9d003128:	8faa0020 	lw	t2,32(sp)
            if (line & 0x1) {
                setPixel(x+j, y+i, color);
            } else if (bg != color) {
                setPixel(x+j, y+i, bg);
            }
            line >>= 1;
9d00312c:	00e63025 	or	a2,a3,a2
        for (int8_t j = 0; j < bpl; j++) {
            line <<= 8;
            line |= font[charstart + (i * bpl) + j];
        }

        for (int8_t j = 0; j < charwidth; j++) {
9d003130:	1440ffe4 	bnez	v0,9d0030c4 <_ZN3TFT8drawCharEsshtt+0x15c>
9d003134:	00031842 	srl	v1,v1,0x1
    return 1;
#endif
}

// draw a character
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
9d003138:	26940001 	addiu	s4,s4,1
9d00313c:	26d60001 	addiu	s6,s6,1
    // number of lines in a character (plus one for the character width) multiplied
    // by the number of bytes in a line, and then offset by 4 for the header.
    uint32_t charstart = (c * ((lpc * bpl) + 1)) + 4; // Start of character data
    uint8_t charwidth = font[charstart++]; // The first byte of a block is the width of the character

    for (int8_t i = 0; i < lpc; i++ ) {
9d003140:	0297102a 	slt	v0,s4,s7
    return 1;
#endif
}

// draw a character
uint8_t TFT::drawChar(int16_t x, int16_t y, unsigned char c, uint16_t color, uint16_t bg) {
9d003144:	02805821 	move	t3,s4
    // number of lines in a character (plus one for the character width) multiplied
    // by the number of bytes in a line, and then offset by 4 for the header.
    uint32_t charstart = (c * ((lpc * bpl) + 1)) + 4; // Start of character data
    uint8_t charwidth = font[charstart++]; // The first byte of a block is the width of the character

    for (int8_t i = 0; i < lpc; i++ ) {
9d003148:	1440ffaf 	bnez	v0,9d003008 <_ZN3TFT8drawCharEsshtt+0xa0>
9d00314c:	32d6ffff 	andi	s6,s6,0xffff
            }
            line >>= 1;
        }
    }
    return charwidth;
}
9d003150:	8fbf004c 	lw	ra,76(sp)
9d003154:	02001021 	move	v0,s0
9d003158:	8fbe0048 	lw	s8,72(sp)
9d00315c:	8fb70044 	lw	s7,68(sp)
9d003160:	8fb60040 	lw	s6,64(sp)
9d003164:	8fb5003c 	lw	s5,60(sp)
9d003168:	8fb40038 	lw	s4,56(sp)
9d00316c:	8fb30034 	lw	s3,52(sp)
9d003170:	8fb20030 	lw	s2,48(sp)
9d003174:	8fb1002c 	lw	s1,44(sp)
9d003178:	8fb00028 	lw	s0,40(sp)
9d00317c:	03e00008 	jr	ra
9d003180:	27bd0050 	addiu	sp,sp,80

9d003184 <_ZN3TFT5writeEh>:
    if (font == NULL) {
        return 0;
    }
#else
void TFT::write(uint8_t c) {
    if (font == NULL) {
9d003184:	8c820018 	lw	v0,24(a0)
size_t TFT::write(uint8_t c) {
    if (font == NULL) {
        return 0;
    }
#else
void TFT::write(uint8_t c) {
9d003188:	27bdffc8 	addiu	sp,sp,-56
9d00318c:	afb00024 	sw	s0,36(sp)
9d003190:	afbf0034 	sw	ra,52(sp)
9d003194:	afb30030 	sw	s3,48(sp)
9d003198:	afb2002c 	sw	s2,44(sp)
9d00319c:	afb10028 	sw	s1,40(sp)
9d0031a0:	00808021 	move	s0,a0
    if (font == NULL) {
9d0031a4:	10400023 	beqz	v0,9d003234 <_ZN3TFT5writeEh+0xb0>
9d0031a8:	30a700ff 	andi	a3,a1,0xff
    uint8_t lpc = font[0];
    uint8_t bpl = font[1];
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    if (c == '\n') {
9d0031ac:	2403000a 	li	v1,10
void TFT::write(uint8_t c) {
    if (font == NULL) {
        return;
    }
#endif
    uint8_t lpc = font[0];
9d0031b0:	90510000 	lbu	s1,0(v0)
    uint8_t bpl = font[1];
9d0031b4:	90480001 	lbu	t0,1(v0)
    uint8_t startGlyph = font[2]; // First character in data
9d0031b8:	90450002 	lbu	a1,2(v0)
    uint8_t endGlyph = font[3]; // Last character in data

    if (c == '\n') {
9d0031bc:	10e30035 	beq	a3,v1,9d003294 <_ZN3TFT5writeEh+0x110>
9d0031c0:	90460003 	lbu	a2,3(v0)
        cursor_y += lpc;
        cursor_x = 0;
    } else if (c == '\r') {
9d0031c4:	2403000d 	li	v1,13
9d0031c8:	10e3001a 	beq	a3,v1,9d003234 <_ZN3TFT5writeEh+0xb0>
9d0031cc:	00e5182b 	sltu	v1,a3,a1
        // skip em
    } else {
        if (c >= startGlyph && c <= endGlyph) {
9d0031d0:	14600018 	bnez	v1,9d003234 <_ZN3TFT5writeEh+0xb0>
9d0031d4:	00c7302b 	sltu	a2,a2,a3
9d0031d8:	14c00016 	bnez	a2,9d003234 <_ZN3TFT5writeEh+0xb0>
9d0031dc:	71114002 	mul	t0,t0,s1
            uint8_t co = c - startGlyph;
9d0031e0:	00e52823 	subu	a1,a3,a1
            uint16_t charstart = (co * ((lpc * bpl) + 1)) + 4; // Start of character data
9d0031e4:	30a600ff 	andi	a2,a1,0xff
            uint8_t charwidth = font[charstart++];
            if (wrap && (cursor_x > (getWidth() - charwidth))) {
9d0031e8:	9083000d 	lbu	v1,13(a0)
    } else if (c == '\r') {
        // skip em
    } else {
        if (c >= startGlyph && c <= endGlyph) {
            uint8_t co = c - startGlyph;
            uint16_t charstart = (co * ((lpc * bpl) + 1)) + 4; // Start of character data
9d0031ec:	25050001 	addiu	a1,t0,1
9d0031f0:	70a62802 	mul	a1,a1,a2
9d0031f4:	24a50004 	addiu	a1,a1,4
            uint8_t charwidth = font[charstart++];
9d0031f8:	30a5ffff 	andi	a1,a1,0xffff
9d0031fc:	00451021 	addu	v0,v0,a1
            if (wrap && (cursor_x > (getWidth() - charwidth))) {
9d003200:	14600013 	bnez	v1,9d003250 <_ZN3TFT5writeEh+0xcc>
9d003204:	90520000 	lbu	s2,0(v0)
                cursor_y += lpc;
                cursor_x = 0;
            }
            cursor_x += drawChar(cursor_x, cursor_y, c, textcolor, textbgcolor);
9d003208:	86050008 	lh	a1,8(s0)
9d00320c:	8606000a 	lh	a2,10(s0)
9d003210:	30b1ffff 	andi	s1,a1,0xffff
9d003214:	9603000e 	lhu	v1,14(s0)
9d003218:	96020010 	lhu	v0,16(s0)
9d00321c:	02002021 	move	a0,s0
9d003220:	afa30010 	sw	v1,16(sp)
9d003224:	0f400bda 	jal	9d002f68 <_ZN3TFT8drawCharEsshtt>
9d003228:	afa20014 	sw	v0,20(sp)
9d00322c:	00511021 	addu	v0,v0,s1
9d003230:	a6020008 	sh	v0,8(s0)
        }
    }
#if ARDUINO >= 100
    return 1;
#endif
}
9d003234:	8fbf0034 	lw	ra,52(sp)
9d003238:	8fb30030 	lw	s3,48(sp)
9d00323c:	8fb2002c 	lw	s2,44(sp)
9d003240:	8fb10028 	lw	s1,40(sp)
9d003244:	8fb00024 	lw	s0,36(sp)
9d003248:	03e00008 	jr	ra
9d00324c:	27bd0038 	addiu	sp,sp,56
    } else {
        if (c >= startGlyph && c <= endGlyph) {
            uint8_t co = c - startGlyph;
            uint16_t charstart = (co * ((lpc * bpl) + 1)) + 4; // Start of character data
            uint8_t charwidth = font[charstart++];
            if (wrap && (cursor_x > (getWidth() - charwidth))) {
9d003250:	8c820000 	lw	v0,0(a0)
9d003254:	84930008 	lh	s3,8(a0)
9d003258:	8c420050 	lw	v0,80(v0)
9d00325c:	0040f809 	jalr	v0
9d003260:	afa70018 	sw	a3,24(sp)
9d003264:	00529023 	subu	s2,v0,s2
9d003268:	0253982a 	slt	s3,s2,s3
9d00326c:	1260ffe6 	beqz	s3,9d003208 <_ZN3TFT5writeEh+0x84>
9d003270:	8fa70018 	lw	a3,24(sp)
                cursor_y += lpc;
9d003274:	9606000a 	lhu	a2,10(s0)
                cursor_x = 0;
9d003278:	a6000008 	sh	zero,8(s0)
9d00327c:	00002821 	move	a1,zero
        if (c >= startGlyph && c <= endGlyph) {
            uint8_t co = c - startGlyph;
            uint16_t charstart = (co * ((lpc * bpl) + 1)) + 4; // Start of character data
            uint8_t charwidth = font[charstart++];
            if (wrap && (cursor_x > (getWidth() - charwidth))) {
                cursor_y += lpc;
9d003280:	02268821 	addu	s1,s1,a2
9d003284:	7c113620 	seh	a2,s1
9d003288:	a606000a 	sh	a2,10(s0)
                cursor_x = 0;
9d00328c:	0b400c85 	j	9d003214 <_ZN3TFT5writeEh+0x90>
9d003290:	00008821 	move	s1,zero
    uint8_t bpl = font[1];
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    if (c == '\n') {
        cursor_y += lpc;
9d003294:	9482000a 	lhu	v0,10(a0)
        }
    }
#if ARDUINO >= 100
    return 1;
#endif
}
9d003298:	8fbf0034 	lw	ra,52(sp)
9d00329c:	8fb30030 	lw	s3,48(sp)
    uint8_t bpl = font[1];
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    if (c == '\n') {
        cursor_y += lpc;
9d0032a0:	02228821 	addu	s1,s1,v0
9d0032a4:	a491000a 	sh	s1,10(a0)
        }
    }
#if ARDUINO >= 100
    return 1;
#endif
}
9d0032a8:	8fb2002c 	lw	s2,44(sp)
9d0032ac:	8fb10028 	lw	s1,40(sp)
9d0032b0:	8fb00024 	lw	s0,36(sp)
    uint8_t startGlyph = font[2]; // First character in data
    uint8_t endGlyph = font[3]; // Last character in data

    if (c == '\n') {
        cursor_y += lpc;
        cursor_x = 0;
9d0032b4:	a4800008 	sh	zero,8(a0)
        }
    }
#if ARDUINO >= 100
    return 1;
#endif
}
9d0032b8:	03e00008 	jr	ra
9d0032bc:	27bd0038 	addiu	sp,sp,56

9d0032c0 <_ZN3TFT9setCursorEss>:
    }
    return charwidth;
}

void TFT::setCursor(int16_t x, int16_t y) {
    cursor_x = x;
9d0032c0:	a4850008 	sh	a1,8(a0)
    cursor_y = y;
}
9d0032c4:	03e00008 	jr	ra
9d0032c8:	a486000a 	sh	a2,10(a0)

9d0032cc <_ZN3TFT12setTextColorEt>:
    return cursor_y;
}

void TFT::setTextColor(uint16_t c) {
    textcolor = c;
}
9d0032cc:	03e00008 	jr	ra
9d0032d0:	a485000e 	sh	a1,14(a0)

9d0032d4 <_ZN3TFT7setFontEPKh>:
    return ((r & 0xF8) << 8) | ((g & 0xFC) << 3) | (b >> 3);
}

void TFT::setFont(const uint8_t *f) {
    font = f;
}
9d0032d4:	03e00008 	jr	ra
9d0032d8:	ac850018 	sw	a1,24(a0)

9d0032dc <_ZN7TFTDSPI11nativeWidthEv>:
        void streamData16(uint16_t);
        void streamData32(uint32_t);
        uint8_t streamData8();
        uint16_t streamData16();
        uint32_t streamData32();
        uint8_t nativeWidth() { return 32; };
9d0032dc:	03e00008 	jr	ra
9d0032e0:	24020020 	li	v0,32

9d0032e4 <_ZN7TFTDSPI9streamEndEv>:

void TFTDSPI::streamStart() {
    digitalWrite(_cs, LOW);
}

void TFTDSPI::streamEnd() {
9d0032e4:	27bdffe8 	addiu	sp,sp,-24
9d0032e8:	afbf0014 	sw	ra,20(sp)
9d0032ec:	afb00010 	sw	s0,16(sp)
9d0032f0:	00808021 	move	s0,a0
    digitalWrite(_cs, HIGH);
9d0032f4:	90840008 	lbu	a0,8(a0)
9d0032f8:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d0032fc:	24050001 	li	a1,1
    _spi->setTransferSize(DSPI_8BIT);
9d003300:	8e040004 	lw	a0,4(s0)
}
9d003304:	8fbf0014 	lw	ra,20(sp)
9d003308:	8fb00010 	lw	s0,16(sp)
    digitalWrite(_cs, LOW);
}

void TFTDSPI::streamEnd() {
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
9d00330c:	24050008 	li	a1,8
9d003310:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003314:	27bd0018 	addiu	sp,sp,24

9d003318 <_ZN7TFTDSPI11streamStartEv>:
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::streamStart() {
    digitalWrite(_cs, LOW);
9d003318:	90840008 	lbu	a0,8(a0)
9d00331c:	0b4010f9 	j	9d0043e4 <digitalWrite>
9d003320:	00002821 	move	a1,zero

9d003324 <_ZN7TFTDSPI9blockDataEPhm>:
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint8_t *data, uint32_t len) {
9d003324:	27bdffd8 	addiu	sp,sp,-40
9d003328:	afb00014 	sw	s0,20(sp)
9d00332c:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d003330:	8c840004 	lw	a0,4(a0)
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint8_t *data, uint32_t len) {
9d003334:	afb10018 	sw	s1,24(sp)
9d003338:	00a08821 	move	s1,a1
    _spi->setMode(SPI_MODE);
9d00333c:	24050100 	li	a1,256
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint8_t *data, uint32_t len) {
9d003340:	afbf0024 	sw	ra,36(sp)
9d003344:	afb2001c 	sw	s2,28(sp)
9d003348:	afb30020 	sw	s3,32(sp)
    _spi->setMode(SPI_MODE);
9d00334c:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003350:	00c09021 	move	s2,a2
    _spi->setSpeed(_speed);
9d003354:	8e040004 	lw	a0,4(s0)
9d003358:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d00335c:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d003360:	8e040004 	lw	a0,4(s0)
9d003364:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003368:	24050008 	li	a1,8
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d00336c:	92040009 	lbu	a0,9(s0)
9d003370:	240200ff 	li	v0,255
9d003374:	50820004 	beql	a0,v0,9d003388 <_ZN7TFTDSPI9blockDataEPhm+0x64>
9d003378:	8e020000 	lw	v0,0(s0)
9d00337c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003380:	24050001 	li	a1,1
    streamStart();
9d003384:	8e020000 	lw	v0,0(s0)
9d003388:	8c420030 	lw	v0,48(v0)
9d00338c:	0040f809 	jalr	v0
9d003390:	02002021 	move	a0,s0
    for (uint32_t i = 0; i < len; i++) {
9d003394:	12400009 	beqz	s2,9d0033bc <_ZN7TFTDSPI9blockDataEPhm+0x98>
9d003398:	00009821 	move	s3,zero
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint8_t *data, uint32_t len) {
9d00339c:	02331021 	addu	v0,s1,s3
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
        _spi->transfer(data[i]);
9d0033a0:	8e040004 	lw	a0,4(s0)
9d0033a4:	90450000 	lbu	a1,0(v0)
9d0033a8:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d0033ac:	26730001 	addiu	s3,s3,1
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
9d0033b0:	0272102b 	sltu	v0,s3,s2
9d0033b4:	1440fffa 	bnez	v0,9d0033a0 <_ZN7TFTDSPI9blockDataEPhm+0x7c>
9d0033b8:	02331021 	addu	v0,s1,s3
        _spi->transfer(data[i]);
    }
    streamEnd();
9d0033bc:	8e020000 	lw	v0,0(s0)
9d0033c0:	8c420034 	lw	v0,52(v0)
9d0033c4:	0040f809 	jalr	v0
9d0033c8:	02002021 	move	a0,s0
    _spi->setTransferSize(DSPI_8BIT);
9d0033cc:	8e040004 	lw	a0,4(s0)
}
9d0033d0:	8fbf0024 	lw	ra,36(sp)
9d0033d4:	8fb30020 	lw	s3,32(sp)
9d0033d8:	8fb2001c 	lw	s2,28(sp)
9d0033dc:	8fb10018 	lw	s1,24(sp)
9d0033e0:	8fb00014 	lw	s0,20(sp)
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
        _spi->transfer(data[i]);
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
9d0033e4:	24050008 	li	a1,8
9d0033e8:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0033ec:	27bd0028 	addiu	sp,sp,40

9d0033f0 <_ZN7TFTDSPI9blockDataEPtm>:
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint16_t *data, uint32_t len) {
9d0033f0:	27bdffd8 	addiu	sp,sp,-40
9d0033f4:	afb00014 	sw	s0,20(sp)
9d0033f8:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d0033fc:	8c840004 	lw	a0,4(a0)
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint16_t *data, uint32_t len) {
9d003400:	afb2001c 	sw	s2,28(sp)
9d003404:	00a09021 	move	s2,a1
    _spi->setMode(SPI_MODE);
9d003408:	24050100 	li	a1,256
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::blockData(uint16_t *data, uint32_t len) {
9d00340c:	afbf0024 	sw	ra,36(sp)
9d003410:	afb10018 	sw	s1,24(sp)
9d003414:	afb30020 	sw	s3,32(sp)
    _spi->setMode(SPI_MODE);
9d003418:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d00341c:	00c08821 	move	s1,a2
    _spi->setSpeed(_speed);
9d003420:	8e040004 	lw	a0,4(s0)
9d003424:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003428:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d00342c:	8e040004 	lw	a0,4(s0)
9d003430:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003434:	24050010 	li	a1,16
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003438:	92040009 	lbu	a0,9(s0)
9d00343c:	240200ff 	li	v0,255
9d003440:	50820004 	beql	a0,v0,9d003454 <_ZN7TFTDSPI9blockDataEPtm+0x64>
9d003444:	8e020000 	lw	v0,0(s0)
9d003448:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d00344c:	24050001 	li	a1,1
    streamStart();
9d003450:	8e020000 	lw	v0,0(s0)
9d003454:	8c420030 	lw	v0,48(v0)
9d003458:	0040f809 	jalr	v0
9d00345c:	02002021 	move	a0,s0
    for (uint32_t i = 0; i < len; i++) {
9d003460:	12200009 	beqz	s1,9d003488 <_ZN7TFTDSPI9blockDataEPtm+0x98>
9d003464:	00009821 	move	s3,zero
        _spi->transfer(data[i]);
9d003468:	96450000 	lhu	a1,0(s2)
9d00346c:	8e040004 	lw	a0,4(s0)
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_16BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
9d003470:	26730001 	addiu	s3,s3,1
        _spi->transfer(data[i]);
9d003474:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003478:	26520002 	addiu	s2,s2,2
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_16BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
9d00347c:	0271102b 	sltu	v0,s3,s1
9d003480:	5440fffa 	bnezl	v0,9d00346c <_ZN7TFTDSPI9blockDataEPtm+0x7c>
9d003484:	96450000 	lhu	a1,0(s2)
        _spi->transfer(data[i]);
    }
    streamEnd();
9d003488:	8e020000 	lw	v0,0(s0)
9d00348c:	8c420034 	lw	v0,52(v0)
9d003490:	0040f809 	jalr	v0
9d003494:	02002021 	move	a0,s0
    _spi->setTransferSize(DSPI_8BIT);
9d003498:	8e040004 	lw	a0,4(s0)
}
9d00349c:	8fbf0024 	lw	ra,36(sp)
9d0034a0:	8fb30020 	lw	s3,32(sp)
9d0034a4:	8fb2001c 	lw	s2,28(sp)
9d0034a8:	8fb10018 	lw	s1,24(sp)
9d0034ac:	8fb00014 	lw	s0,20(sp)
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
        _spi->transfer(data[i]);
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
9d0034b0:	24050008 	li	a1,8
9d0034b4:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0034b8:	27bd0028 	addiu	sp,sp,40

9d0034bc <_ZN7TFTDSPI9blockDataEPmm>:
    out = _spi->transfer(0);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::blockData(uint32_t *data, uint32_t len) {
9d0034bc:	27bdffd8 	addiu	sp,sp,-40
9d0034c0:	afb00014 	sw	s0,20(sp)
9d0034c4:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d0034c8:	8c840004 	lw	a0,4(a0)
    out = _spi->transfer(0);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::blockData(uint32_t *data, uint32_t len) {
9d0034cc:	afb2001c 	sw	s2,28(sp)
9d0034d0:	00a09021 	move	s2,a1
    _spi->setMode(SPI_MODE);
9d0034d4:	24050100 	li	a1,256
    out = _spi->transfer(0);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::blockData(uint32_t *data, uint32_t len) {
9d0034d8:	afbf0024 	sw	ra,36(sp)
9d0034dc:	afb10018 	sw	s1,24(sp)
9d0034e0:	afb30020 	sw	s3,32(sp)
    _spi->setMode(SPI_MODE);
9d0034e4:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0034e8:	00c08821 	move	s1,a2
    _spi->setSpeed(_speed);
9d0034ec:	8e040004 	lw	a0,4(s0)
9d0034f0:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d0034f4:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d0034f8:	8e040004 	lw	a0,4(s0)
9d0034fc:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003500:	24050020 	li	a1,32
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003504:	92040009 	lbu	a0,9(s0)
9d003508:	240200ff 	li	v0,255
9d00350c:	50820004 	beql	a0,v0,9d003520 <_ZN7TFTDSPI9blockDataEPmm+0x64>
9d003510:	8e020000 	lw	v0,0(s0)
9d003514:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003518:	24050001 	li	a1,1
    streamStart();
9d00351c:	8e020000 	lw	v0,0(s0)
9d003520:	8c420030 	lw	v0,48(v0)
9d003524:	0040f809 	jalr	v0
9d003528:	02002021 	move	a0,s0
    for (uint32_t i = 0; i < len; i++) {
9d00352c:	12200009 	beqz	s1,9d003554 <_ZN7TFTDSPI9blockDataEPmm+0x98>
9d003530:	00009821 	move	s3,zero
        _spi->transfer(data[i]);
9d003534:	8e450000 	lw	a1,0(s2)
9d003538:	8e040004 	lw	a0,4(s0)
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_32BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
9d00353c:	26730001 	addiu	s3,s3,1
        _spi->transfer(data[i]);
9d003540:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003544:	26520004 	addiu	s2,s2,4
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_32BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
9d003548:	0271102b 	sltu	v0,s3,s1
9d00354c:	5440fffa 	bnezl	v0,9d003538 <_ZN7TFTDSPI9blockDataEPmm+0x7c>
9d003550:	8e450000 	lw	a1,0(s2)
        _spi->transfer(data[i]);
    }
    streamEnd();
9d003554:	8e020000 	lw	v0,0(s0)
9d003558:	8c420034 	lw	v0,52(v0)
9d00355c:	0040f809 	jalr	v0
9d003560:	02002021 	move	a0,s0
    _spi->setTransferSize(DSPI_8BIT);
9d003564:	8e040004 	lw	a0,4(s0)
}
9d003568:	8fbf0024 	lw	ra,36(sp)
9d00356c:	8fb30020 	lw	s3,32(sp)
9d003570:	8fb2001c 	lw	s2,28(sp)
9d003574:	8fb10018 	lw	s1,24(sp)
9d003578:	8fb00014 	lw	s0,20(sp)
    streamStart();
    for (uint32_t i = 0; i < len; i++) {
        _spi->transfer(data[i]);
    }
    streamEnd();
    _spi->setTransferSize(DSPI_8BIT);
9d00357c:	24050008 	li	a1,8
9d003580:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003584:	27bd0028 	addiu	sp,sp,40

9d003588 <_ZN7TFTDSPI12streamData32Ev>:
    _spi->setTransferSize(DSPI_32BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
}

uint32_t TFTDSPI::streamData32() {
9d003588:	27bdffe0 	addiu	sp,sp,-32
9d00358c:	afb00018 	sw	s0,24(sp)
9d003590:	afbf001c 	sw	ra,28(sp)
9d003594:	00808021 	move	s0,a0
    uint32_t out;
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003598:	90840009 	lbu	a0,9(a0)
9d00359c:	240200ff 	li	v0,255
9d0035a0:	50820004 	beql	a0,v0,9d0035b4 <_ZN7TFTDSPI12streamData32Ev+0x2c>
9d0035a4:	8e040004 	lw	a0,4(s0)
9d0035a8:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d0035ac:	24050001 	li	a1,1
    _spi->setMode(SPI_MODE);
9d0035b0:	8e040004 	lw	a0,4(s0)
9d0035b4:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0035b8:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d0035bc:	8e040004 	lw	a0,4(s0)
9d0035c0:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d0035c4:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d0035c8:	8e040004 	lw	a0,4(s0)
9d0035cc:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0035d0:	24050020 	li	a1,32
    out = _spi->transfer(0);
9d0035d4:	8e040004 	lw	a0,4(s0)
9d0035d8:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d0035dc:	00002821 	move	a1,zero
    _spi->setTransferSize(DSPI_8BIT);
9d0035e0:	8e040004 	lw	a0,4(s0)
9d0035e4:	24050008 	li	a1,8
9d0035e8:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0035ec:	afa20010 	sw	v0,16(sp)
    return out;
}
9d0035f0:	8fbf001c 	lw	ra,28(sp)
9d0035f4:	8fa20010 	lw	v0,16(sp)
9d0035f8:	8fb00018 	lw	s0,24(sp)
9d0035fc:	03e00008 	jr	ra
9d003600:	27bd0020 	addiu	sp,sp,32

9d003604 <_ZN7TFTDSPI12streamData32Em>:
    out = _spi->transfer(0);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::streamData32(uint32_t data) {
9d003604:	27bdffe0 	addiu	sp,sp,-32
9d003608:	afb10018 	sw	s1,24(sp)
9d00360c:	afb00014 	sw	s0,20(sp)
9d003610:	afbf001c 	sw	ra,28(sp)
9d003614:	00808021 	move	s0,a0
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003618:	90840009 	lbu	a0,9(a0)
9d00361c:	240200ff 	li	v0,255
9d003620:	10820003 	beq	a0,v0,9d003630 <_ZN7TFTDSPI12streamData32Em+0x2c>
9d003624:	00a08821 	move	s1,a1
9d003628:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d00362c:	24050001 	li	a1,1
    _spi->setMode(SPI_MODE);
9d003630:	8e040004 	lw	a0,4(s0)
9d003634:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003638:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d00363c:	8e040004 	lw	a0,4(s0)
9d003640:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003644:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d003648:	8e040004 	lw	a0,4(s0)
9d00364c:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003650:	24050020 	li	a1,32
    _spi->transfer(data);
9d003654:	8e040004 	lw	a0,4(s0)
9d003658:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d00365c:	02202821 	move	a1,s1
    _spi->setTransferSize(DSPI_8BIT);
9d003660:	8e040004 	lw	a0,4(s0)
}
9d003664:	8fbf001c 	lw	ra,28(sp)
9d003668:	8fb10018 	lw	s1,24(sp)
9d00366c:	8fb00014 	lw	s0,20(sp)
    if (_dc != 255) digitalWrite(_dc, HIGH);
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_32BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
9d003670:	24050008 	li	a1,8
9d003674:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003678:	27bd0020 	addiu	sp,sp,32

9d00367c <_ZN7TFTDSPI12streamData16Ev>:
    _spi->setTransferSize(DSPI_16BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
}

uint16_t TFTDSPI::streamData16() {
9d00367c:	27bdffe0 	addiu	sp,sp,-32
9d003680:	afb00018 	sw	s0,24(sp)
9d003684:	afbf001c 	sw	ra,28(sp)
9d003688:	00808021 	move	s0,a0
    uint16_t out;
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d00368c:	90840009 	lbu	a0,9(a0)
9d003690:	240200ff 	li	v0,255
9d003694:	50820004 	beql	a0,v0,9d0036a8 <_ZN7TFTDSPI12streamData16Ev+0x2c>
9d003698:	8e040004 	lw	a0,4(s0)
9d00369c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d0036a0:	24050001 	li	a1,1
    _spi->setMode(SPI_MODE);
9d0036a4:	8e040004 	lw	a0,4(s0)
9d0036a8:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0036ac:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d0036b0:	8e040004 	lw	a0,4(s0)
9d0036b4:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d0036b8:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d0036bc:	8e040004 	lw	a0,4(s0)
9d0036c0:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0036c4:	24050010 	li	a1,16
    out = _spi->transfer(0);
9d0036c8:	8e040004 	lw	a0,4(s0)
9d0036cc:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d0036d0:	00002821 	move	a1,zero
    _spi->setTransferSize(DSPI_8BIT);
9d0036d4:	8e040004 	lw	a0,4(s0)
9d0036d8:	24050008 	li	a1,8
9d0036dc:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0036e0:	afa20010 	sw	v0,16(sp)
    return out;
}
9d0036e4:	8fa20010 	lw	v0,16(sp)
9d0036e8:	8fbf001c 	lw	ra,28(sp)
9d0036ec:	8fb00018 	lw	s0,24(sp)
9d0036f0:	3042ffff 	andi	v0,v0,0xffff
9d0036f4:	03e00008 	jr	ra
9d0036f8:	27bd0020 	addiu	sp,sp,32

9d0036fc <_ZN7TFTDSPI12streamData16Et>:
    _spi->setTransferSize(DSPI_8BIT);
    out = _spi->transfer(0);
    return out;
}

void TFTDSPI::streamData16(uint16_t data) {
9d0036fc:	27bdffe0 	addiu	sp,sp,-32
9d003700:	afb10018 	sw	s1,24(sp)
9d003704:	afb00014 	sw	s0,20(sp)
9d003708:	afbf001c 	sw	ra,28(sp)
9d00370c:	00808021 	move	s0,a0
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003710:	90840009 	lbu	a0,9(a0)
9d003714:	240200ff 	li	v0,255
9d003718:	10820003 	beq	a0,v0,9d003728 <_ZN7TFTDSPI12streamData16Et+0x2c>
9d00371c:	30b1ffff 	andi	s1,a1,0xffff
9d003720:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003724:	24050001 	li	a1,1
    _spi->setMode(SPI_MODE);
9d003728:	8e040004 	lw	a0,4(s0)
9d00372c:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003730:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003734:	8e040004 	lw	a0,4(s0)
9d003738:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d00373c:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d003740:	8e040004 	lw	a0,4(s0)
9d003744:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003748:	24050010 	li	a1,16
    _spi->transfer(data);
9d00374c:	8e040004 	lw	a0,4(s0)
9d003750:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003754:	02202821 	move	a1,s1
    _spi->setTransferSize(DSPI_8BIT);
9d003758:	8e040004 	lw	a0,4(s0)
}
9d00375c:	8fbf001c 	lw	ra,28(sp)
9d003760:	8fb10018 	lw	s1,24(sp)
9d003764:	8fb00014 	lw	s0,20(sp)
    if (_dc != 255) digitalWrite(_dc, HIGH);
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_16BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
9d003768:	24050008 	li	a1,8
9d00376c:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003770:	27bd0020 	addiu	sp,sp,32

9d003774 <_ZN7TFTDSPI11streamData8Ev>:
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    _spi->transfer(data);
}

uint8_t TFTDSPI::streamData8() {
9d003774:	27bdffe8 	addiu	sp,sp,-24
9d003778:	afb00010 	sw	s0,16(sp)
9d00377c:	afbf0014 	sw	ra,20(sp)
9d003780:	00808021 	move	s0,a0
    uint8_t out;
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003784:	90840009 	lbu	a0,9(a0)
9d003788:	240200ff 	li	v0,255
9d00378c:	50820004 	beql	a0,v0,9d0037a0 <_ZN7TFTDSPI11streamData8Ev+0x2c>
9d003790:	8e040004 	lw	a0,4(s0)
9d003794:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003798:	24050001 	li	a1,1
    _spi->setMode(SPI_MODE);
9d00379c:	8e040004 	lw	a0,4(s0)
9d0037a0:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0037a4:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d0037a8:	8e040004 	lw	a0,4(s0)
9d0037ac:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d0037b0:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d0037b4:	8e040004 	lw	a0,4(s0)
9d0037b8:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0037bc:	24050008 	li	a1,8
    out = _spi->transfer(0);
9d0037c0:	8e040004 	lw	a0,4(s0)
9d0037c4:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d0037c8:	00002821 	move	a1,zero
    return out;
}
9d0037cc:	8fbf0014 	lw	ra,20(sp)
9d0037d0:	304200ff 	andi	v0,v0,0xff
9d0037d4:	8fb00010 	lw	s0,16(sp)
9d0037d8:	03e00008 	jr	ra
9d0037dc:	27bd0018 	addiu	sp,sp,24

9d0037e0 <_ZN7TFTDSPI11streamData8Eh>:
    out = _spi->transfer(0);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::streamData8(uint8_t data) {
9d0037e0:	27bdffe0 	addiu	sp,sp,-32
9d0037e4:	afb10018 	sw	s1,24(sp)
9d0037e8:	afb00014 	sw	s0,20(sp)
9d0037ec:	afbf001c 	sw	ra,28(sp)
9d0037f0:	00808021 	move	s0,a0
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d0037f4:	90840009 	lbu	a0,9(a0)
9d0037f8:	240200ff 	li	v0,255
9d0037fc:	10820003 	beq	a0,v0,9d00380c <_ZN7TFTDSPI11streamData8Eh+0x2c>
9d003800:	30b100ff 	andi	s1,a1,0xff
9d003804:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003808:	24050001 	li	a1,1
    _spi->setMode(SPI_MODE);
9d00380c:	8e040004 	lw	a0,4(s0)
9d003810:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003814:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003818:	8e040004 	lw	a0,4(s0)
9d00381c:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003820:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d003824:	8e040004 	lw	a0,4(s0)
9d003828:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d00382c:	24050008 	li	a1,8
    _spi->transfer(data);
9d003830:	8e040004 	lw	a0,4(s0)
9d003834:	02202821 	move	a1,s1
}
9d003838:	8fbf001c 	lw	ra,28(sp)
9d00383c:	8fb10018 	lw	s1,24(sp)
9d003840:	8fb00014 	lw	s0,20(sp)
void TFTDSPI::streamData8(uint8_t data) {
    if (_dc != 255) digitalWrite(_dc, HIGH);
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    _spi->transfer(data);
9d003844:	0b400607 	j	9d00181c <_ZN4DSPI8transferEm>
9d003848:	27bd0020 	addiu	sp,sp,32

9d00384c <_ZN7TFTDSPI15streamCommand32Ev>:
    _spi->setTransferSize(DSPI_32BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
}

uint32_t TFTDSPI::streamCommand32() {
9d00384c:	27bdffe0 	addiu	sp,sp,-32
9d003850:	afb00018 	sw	s0,24(sp)
9d003854:	afbf001c 	sw	ra,28(sp)
9d003858:	00808021 	move	s0,a0
    uint32_t out;
    if (_dc != 255) digitalWrite(_dc, LOW);
9d00385c:	90840009 	lbu	a0,9(a0)
9d003860:	240200ff 	li	v0,255
9d003864:	50820004 	beql	a0,v0,9d003878 <_ZN7TFTDSPI15streamCommand32Ev+0x2c>
9d003868:	8e040004 	lw	a0,4(s0)
9d00386c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003870:	00002821 	move	a1,zero
    _spi->setMode(SPI_MODE);
9d003874:	8e040004 	lw	a0,4(s0)
9d003878:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d00387c:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003880:	8e040004 	lw	a0,4(s0)
9d003884:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003888:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d00388c:	8e040004 	lw	a0,4(s0)
9d003890:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003894:	24050020 	li	a1,32
    out = _spi->transfer(0);
9d003898:	8e040004 	lw	a0,4(s0)
9d00389c:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d0038a0:	00002821 	move	a1,zero
    _spi->setTransferSize(DSPI_8BIT);
9d0038a4:	8e040004 	lw	a0,4(s0)
9d0038a8:	24050008 	li	a1,8
9d0038ac:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0038b0:	afa20010 	sw	v0,16(sp)
    return out;
}
9d0038b4:	8fbf001c 	lw	ra,28(sp)
9d0038b8:	8fa20010 	lw	v0,16(sp)
9d0038bc:	8fb00018 	lw	s0,24(sp)
9d0038c0:	03e00008 	jr	ra
9d0038c4:	27bd0020 	addiu	sp,sp,32

9d0038c8 <_ZN7TFTDSPI15streamCommand32Em>:
    out = _spi->transfer(0);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::streamCommand32(uint32_t data) {
9d0038c8:	27bdffe0 	addiu	sp,sp,-32
9d0038cc:	afb10018 	sw	s1,24(sp)
9d0038d0:	afb00014 	sw	s0,20(sp)
9d0038d4:	afbf001c 	sw	ra,28(sp)
9d0038d8:	00808021 	move	s0,a0
    if (_dc != 255) digitalWrite(_dc, LOW);
9d0038dc:	90840009 	lbu	a0,9(a0)
9d0038e0:	240200ff 	li	v0,255
9d0038e4:	10820003 	beq	a0,v0,9d0038f4 <_ZN7TFTDSPI15streamCommand32Em+0x2c>
9d0038e8:	00a08821 	move	s1,a1
9d0038ec:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d0038f0:	00002821 	move	a1,zero
    _spi->setMode(SPI_MODE);
9d0038f4:	8e040004 	lw	a0,4(s0)
9d0038f8:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0038fc:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003900:	8e040004 	lw	a0,4(s0)
9d003904:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003908:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d00390c:	8e040004 	lw	a0,4(s0)
9d003910:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003914:	24050020 	li	a1,32
    _spi->transfer(data);
9d003918:	8e040004 	lw	a0,4(s0)
9d00391c:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003920:	02202821 	move	a1,s1
    _spi->setTransferSize(DSPI_8BIT);
9d003924:	8e040004 	lw	a0,4(s0)
}
9d003928:	8fbf001c 	lw	ra,28(sp)
9d00392c:	8fb10018 	lw	s1,24(sp)
9d003930:	8fb00014 	lw	s0,20(sp)
    if (_dc != 255) digitalWrite(_dc, LOW);
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_32BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
9d003934:	24050008 	li	a1,8
9d003938:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d00393c:	27bd0020 	addiu	sp,sp,32

9d003940 <_ZN7TFTDSPI15streamCommand16Ev>:
    _spi->setTransferSize(DSPI_16BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
}

uint16_t TFTDSPI::streamCommand16() {
9d003940:	27bdffe0 	addiu	sp,sp,-32
9d003944:	afb00018 	sw	s0,24(sp)
9d003948:	afbf001c 	sw	ra,28(sp)
9d00394c:	00808021 	move	s0,a0
    uint16_t out;
    if (_dc != 255) digitalWrite(_dc, LOW);
9d003950:	90840009 	lbu	a0,9(a0)
9d003954:	240200ff 	li	v0,255
9d003958:	50820004 	beql	a0,v0,9d00396c <_ZN7TFTDSPI15streamCommand16Ev+0x2c>
9d00395c:	8e040004 	lw	a0,4(s0)
9d003960:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003964:	00002821 	move	a1,zero
    _spi->setMode(SPI_MODE);
9d003968:	8e040004 	lw	a0,4(s0)
9d00396c:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003970:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003974:	8e040004 	lw	a0,4(s0)
9d003978:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d00397c:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d003980:	8e040004 	lw	a0,4(s0)
9d003984:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003988:	24050010 	li	a1,16
    out = _spi->transfer(0);
9d00398c:	8e040004 	lw	a0,4(s0)
9d003990:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003994:	00002821 	move	a1,zero
    _spi->setTransferSize(DSPI_8BIT);
9d003998:	8e040004 	lw	a0,4(s0)
9d00399c:	24050008 	li	a1,8
9d0039a0:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0039a4:	afa20010 	sw	v0,16(sp)
    return out;
}
9d0039a8:	8fa20010 	lw	v0,16(sp)
9d0039ac:	8fbf001c 	lw	ra,28(sp)
9d0039b0:	8fb00018 	lw	s0,24(sp)
9d0039b4:	3042ffff 	andi	v0,v0,0xffff
9d0039b8:	03e00008 	jr	ra
9d0039bc:	27bd0020 	addiu	sp,sp,32

9d0039c0 <_ZN7TFTDSPI15streamCommand16Et>:
    _spi->setTransferSize(DSPI_8BIT);
    out = _spi->transfer(0);
    return out;
}

void TFTDSPI::streamCommand16(uint16_t data) {
9d0039c0:	27bdffe0 	addiu	sp,sp,-32
9d0039c4:	afb10018 	sw	s1,24(sp)
9d0039c8:	afb00014 	sw	s0,20(sp)
9d0039cc:	afbf001c 	sw	ra,28(sp)
9d0039d0:	00808021 	move	s0,a0
    if (_dc != 255) digitalWrite(_dc, LOW);
9d0039d4:	90840009 	lbu	a0,9(a0)
9d0039d8:	240200ff 	li	v0,255
9d0039dc:	10820003 	beq	a0,v0,9d0039ec <_ZN7TFTDSPI15streamCommand16Et+0x2c>
9d0039e0:	30b1ffff 	andi	s1,a1,0xffff
9d0039e4:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d0039e8:	00002821 	move	a1,zero
    _spi->setMode(SPI_MODE);
9d0039ec:	8e040004 	lw	a0,4(s0)
9d0039f0:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0039f4:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d0039f8:	8e040004 	lw	a0,4(s0)
9d0039fc:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003a00:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d003a04:	8e040004 	lw	a0,4(s0)
9d003a08:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003a0c:	24050010 	li	a1,16
    _spi->transfer(data);
9d003a10:	8e040004 	lw	a0,4(s0)
9d003a14:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003a18:	02202821 	move	a1,s1
    _spi->setTransferSize(DSPI_8BIT);
9d003a1c:	8e040004 	lw	a0,4(s0)
}
9d003a20:	8fbf001c 	lw	ra,28(sp)
9d003a24:	8fb10018 	lw	s1,24(sp)
9d003a28:	8fb00014 	lw	s0,20(sp)
    if (_dc != 255) digitalWrite(_dc, LOW);
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_16BIT);
    _spi->transfer(data);
    _spi->setTransferSize(DSPI_8BIT);
9d003a2c:	24050008 	li	a1,8
9d003a30:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003a34:	27bd0020 	addiu	sp,sp,32

9d003a38 <_ZN7TFTDSPI14streamCommand8Ev>:
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    _spi->transfer(data);
}

uint8_t TFTDSPI::streamCommand8() {
9d003a38:	27bdffe8 	addiu	sp,sp,-24
9d003a3c:	afb00010 	sw	s0,16(sp)
9d003a40:	afbf0014 	sw	ra,20(sp)
9d003a44:	00808021 	move	s0,a0
    uint8_t out;
    if (_dc != 255) digitalWrite(_dc, LOW);
9d003a48:	90840009 	lbu	a0,9(a0)
9d003a4c:	240200ff 	li	v0,255
9d003a50:	50820004 	beql	a0,v0,9d003a64 <_ZN7TFTDSPI14streamCommand8Ev+0x2c>
9d003a54:	8e040004 	lw	a0,4(s0)
9d003a58:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003a5c:	00002821 	move	a1,zero
    _spi->setMode(SPI_MODE);
9d003a60:	8e040004 	lw	a0,4(s0)
9d003a64:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003a68:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003a6c:	8e040004 	lw	a0,4(s0)
9d003a70:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003a74:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d003a78:	8e040004 	lw	a0,4(s0)
9d003a7c:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003a80:	24050008 	li	a1,8
    out = _spi->transfer(0);
9d003a84:	8e040004 	lw	a0,4(s0)
9d003a88:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003a8c:	00002821 	move	a1,zero
    return out;
}
9d003a90:	8fbf0014 	lw	ra,20(sp)
9d003a94:	304200ff 	andi	v0,v0,0xff
9d003a98:	8fb00010 	lw	s0,16(sp)
9d003a9c:	03e00008 	jr	ra
9d003aa0:	27bd0018 	addiu	sp,sp,24

9d003aa4 <_ZN7TFTDSPI14streamCommand8Eh>:
void TFTDSPI::streamEnd() {
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::streamCommand8(uint8_t data) {
9d003aa4:	27bdffe0 	addiu	sp,sp,-32
9d003aa8:	afb10018 	sw	s1,24(sp)
9d003aac:	afb00014 	sw	s0,20(sp)
9d003ab0:	afbf001c 	sw	ra,28(sp)
9d003ab4:	00808021 	move	s0,a0
    if (_dc != 255) digitalWrite(_dc, LOW);
9d003ab8:	90840009 	lbu	a0,9(a0)
9d003abc:	240200ff 	li	v0,255
9d003ac0:	10820003 	beq	a0,v0,9d003ad0 <_ZN7TFTDSPI14streamCommand8Eh+0x2c>
9d003ac4:	30b100ff 	andi	s1,a1,0xff
9d003ac8:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003acc:	00002821 	move	a1,zero
    _spi->setMode(SPI_MODE);
9d003ad0:	8e040004 	lw	a0,4(s0)
9d003ad4:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003ad8:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003adc:	8e040004 	lw	a0,4(s0)
9d003ae0:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003ae4:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d003ae8:	8e040004 	lw	a0,4(s0)
9d003aec:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003af0:	24050008 	li	a1,8
    _spi->transfer(data);
9d003af4:	8e040004 	lw	a0,4(s0)
9d003af8:	02202821 	move	a1,s1
}
9d003afc:	8fbf001c 	lw	ra,28(sp)
9d003b00:	8fb10018 	lw	s1,24(sp)
9d003b04:	8fb00014 	lw	s0,20(sp)
void TFTDSPI::streamCommand8(uint8_t data) {
    if (_dc != 255) digitalWrite(_dc, LOW);
    _spi->setMode(SPI_MODE);
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    _spi->transfer(data);
9d003b08:	0b400607 	j	9d00181c <_ZN4DSPI8transferEm>
9d003b0c:	27bd0020 	addiu	sp,sp,32

9d003b10 <_ZN7TFTDSPI11writeData32Em>:
    digitalWrite(_cs, HIGH);
    return out;
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::writeData32(uint32_t data) {
9d003b10:	27bdffe0 	addiu	sp,sp,-32
9d003b14:	afb00014 	sw	s0,20(sp)
9d003b18:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d003b1c:	8c840004 	lw	a0,4(a0)
    digitalWrite(_cs, HIGH);
    return out;
    _spi->setTransferSize(DSPI_8BIT);
}

void TFTDSPI::writeData32(uint32_t data) {
9d003b20:	afb10018 	sw	s1,24(sp)
9d003b24:	00a08821 	move	s1,a1
9d003b28:	afbf001c 	sw	ra,28(sp)
    _spi->setMode(SPI_MODE);
9d003b2c:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003b30:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003b34:	8e040004 	lw	a0,4(s0)
9d003b38:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003b3c:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d003b40:	8e040004 	lw	a0,4(s0)
9d003b44:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003b48:	24050020 	li	a1,32
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003b4c:	92040009 	lbu	a0,9(s0)
9d003b50:	240200ff 	li	v0,255
9d003b54:	50820004 	beql	a0,v0,9d003b68 <_ZN7TFTDSPI11writeData32Em+0x58>
9d003b58:	92040008 	lbu	a0,8(s0)
9d003b5c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003b60:	24050001 	li	a1,1
    digitalWrite(_cs, LOW);
9d003b64:	92040008 	lbu	a0,8(s0)
9d003b68:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003b6c:	00002821 	move	a1,zero
    _spi->transfer(data);
9d003b70:	8e040004 	lw	a0,4(s0)
9d003b74:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003b78:	02202821 	move	a1,s1
    digitalWrite(_cs, HIGH);
9d003b7c:	92040008 	lbu	a0,8(s0)
9d003b80:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003b84:	24050001 	li	a1,1
    _spi->setTransferSize(DSPI_8BIT);
9d003b88:	8e040004 	lw	a0,4(s0)
}
9d003b8c:	8fbf001c 	lw	ra,28(sp)
9d003b90:	8fb10018 	lw	s1,24(sp)
9d003b94:	8fb00014 	lw	s0,20(sp)
    _spi->setTransferSize(DSPI_32BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    digitalWrite(_cs, LOW);
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
9d003b98:	24050008 	li	a1,8
9d003b9c:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003ba0:	27bd0020 	addiu	sp,sp,32

9d003ba4 <_ZN7TFTDSPI10readData32Ev>:
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

uint32_t TFTDSPI::readData32() {
9d003ba4:	27bdffe0 	addiu	sp,sp,-32
9d003ba8:	afb00018 	sw	s0,24(sp)
9d003bac:	00808021 	move	s0,a0
    uint32_t out;
    _spi->setMode(SPI_MODE);
9d003bb0:	8c840004 	lw	a0,4(a0)
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

uint32_t TFTDSPI::readData32() {
9d003bb4:	afbf001c 	sw	ra,28(sp)
    uint32_t out;
    _spi->setMode(SPI_MODE);
9d003bb8:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003bbc:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003bc0:	8e040004 	lw	a0,4(s0)
9d003bc4:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003bc8:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d003bcc:	8e040004 	lw	a0,4(s0)
9d003bd0:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003bd4:	24050020 	li	a1,32
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003bd8:	92040009 	lbu	a0,9(s0)
9d003bdc:	240200ff 	li	v0,255
9d003be0:	50820004 	beql	a0,v0,9d003bf4 <_ZN7TFTDSPI10readData32Ev+0x50>
9d003be4:	92040008 	lbu	a0,8(s0)
9d003be8:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003bec:	24050001 	li	a1,1
    digitalWrite(_cs, LOW);
9d003bf0:	92040008 	lbu	a0,8(s0)
9d003bf4:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003bf8:	00002821 	move	a1,zero
    out = _spi->transfer(0);
9d003bfc:	8e040004 	lw	a0,4(s0)
9d003c00:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003c04:	00002821 	move	a1,zero
    digitalWrite(_cs, HIGH);
9d003c08:	92040008 	lbu	a0,8(s0)
9d003c0c:	24050001 	li	a1,1
9d003c10:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003c14:	afa20010 	sw	v0,16(sp)
    return out;
    _spi->setTransferSize(DSPI_8BIT);
}
9d003c18:	8fbf001c 	lw	ra,28(sp)
9d003c1c:	8fa20010 	lw	v0,16(sp)
9d003c20:	8fb00018 	lw	s0,24(sp)
9d003c24:	03e00008 	jr	ra
9d003c28:	27bd0020 	addiu	sp,sp,32

9d003c2c <_ZN7TFTDSPI11writeData16Et>:
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::writeData16(uint16_t data) {
9d003c2c:	27bdffe0 	addiu	sp,sp,-32
9d003c30:	afb00014 	sw	s0,20(sp)
9d003c34:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d003c38:	8c840004 	lw	a0,4(a0)
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::writeData16(uint16_t data) {
9d003c3c:	afb10018 	sw	s1,24(sp)
9d003c40:	30b1ffff 	andi	s1,a1,0xffff
9d003c44:	afbf001c 	sw	ra,28(sp)
    _spi->setMode(SPI_MODE);
9d003c48:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003c4c:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003c50:	8e040004 	lw	a0,4(s0)
9d003c54:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003c58:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d003c5c:	8e040004 	lw	a0,4(s0)
9d003c60:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003c64:	24050010 	li	a1,16
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003c68:	92040009 	lbu	a0,9(s0)
9d003c6c:	240200ff 	li	v0,255
9d003c70:	50820004 	beql	a0,v0,9d003c84 <_ZN7TFTDSPI11writeData16Et+0x58>
9d003c74:	92040008 	lbu	a0,8(s0)
9d003c78:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003c7c:	24050001 	li	a1,1
    digitalWrite(_cs, LOW);
9d003c80:	92040008 	lbu	a0,8(s0)
9d003c84:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003c88:	00002821 	move	a1,zero
    _spi->transfer(data);
9d003c8c:	8e040004 	lw	a0,4(s0)
9d003c90:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003c94:	02202821 	move	a1,s1
    digitalWrite(_cs, HIGH);
9d003c98:	92040008 	lbu	a0,8(s0)
9d003c9c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003ca0:	24050001 	li	a1,1
    _spi->setTransferSize(DSPI_8BIT);
9d003ca4:	8e040004 	lw	a0,4(s0)
}
9d003ca8:	8fbf001c 	lw	ra,28(sp)
9d003cac:	8fb10018 	lw	s1,24(sp)
9d003cb0:	8fb00014 	lw	s0,20(sp)
    _spi->setTransferSize(DSPI_16BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    digitalWrite(_cs, LOW);
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
9d003cb4:	24050008 	li	a1,8
9d003cb8:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003cbc:	27bd0020 	addiu	sp,sp,32

9d003cc0 <_ZN7TFTDSPI10readData16Ev>:
    digitalWrite(_cs, LOW);
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
}

uint16_t TFTDSPI::readData16() {
9d003cc0:	27bdffe0 	addiu	sp,sp,-32
9d003cc4:	afb00018 	sw	s0,24(sp)
9d003cc8:	00808021 	move	s0,a0
    uint16_t out;
    _spi->setMode(SPI_MODE);
9d003ccc:	8c840004 	lw	a0,4(a0)
    digitalWrite(_cs, LOW);
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
}

uint16_t TFTDSPI::readData16() {
9d003cd0:	afbf001c 	sw	ra,28(sp)
    uint16_t out;
    _spi->setMode(SPI_MODE);
9d003cd4:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003cd8:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003cdc:	8e040004 	lw	a0,4(s0)
9d003ce0:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003ce4:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d003ce8:	8e040004 	lw	a0,4(s0)
9d003cec:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003cf0:	24050010 	li	a1,16
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003cf4:	92040009 	lbu	a0,9(s0)
9d003cf8:	240200ff 	li	v0,255
9d003cfc:	50820004 	beql	a0,v0,9d003d10 <_ZN7TFTDSPI10readData16Ev+0x50>
9d003d00:	92040008 	lbu	a0,8(s0)
9d003d04:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003d08:	24050001 	li	a1,1
    digitalWrite(_cs, LOW);
9d003d0c:	92040008 	lbu	a0,8(s0)
9d003d10:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003d14:	00002821 	move	a1,zero
    out = _spi->transfer(0);
9d003d18:	8e040004 	lw	a0,4(s0)
9d003d1c:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003d20:	00002821 	move	a1,zero
    digitalWrite(_cs, HIGH);
9d003d24:	92040008 	lbu	a0,8(s0)
9d003d28:	24050001 	li	a1,1
9d003d2c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003d30:	afa20010 	sw	v0,16(sp)
    _spi->setTransferSize(DSPI_8BIT);
9d003d34:	8e040004 	lw	a0,4(s0)
9d003d38:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003d3c:	24050008 	li	a1,8
    return out;
}
9d003d40:	8fa20010 	lw	v0,16(sp)
9d003d44:	8fbf001c 	lw	ra,28(sp)
9d003d48:	8fb00018 	lw	s0,24(sp)
9d003d4c:	3042ffff 	andi	v0,v0,0xffff
9d003d50:	03e00008 	jr	ra
9d003d54:	27bd0020 	addiu	sp,sp,32

9d003d58 <_ZN7TFTDSPI10writeData8Eh>:
    out = _spi->transfer(0);
    digitalWrite(_cs, HIGH);
    return out;
}

void TFTDSPI::writeData8(uint8_t data) {
9d003d58:	27bdffe0 	addiu	sp,sp,-32
9d003d5c:	afb00014 	sw	s0,20(sp)
9d003d60:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d003d64:	8c840004 	lw	a0,4(a0)
    out = _spi->transfer(0);
    digitalWrite(_cs, HIGH);
    return out;
}

void TFTDSPI::writeData8(uint8_t data) {
9d003d68:	afb10018 	sw	s1,24(sp)
9d003d6c:	30b100ff 	andi	s1,a1,0xff
9d003d70:	afbf001c 	sw	ra,28(sp)
    _spi->setMode(SPI_MODE);
9d003d74:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003d78:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003d7c:	8e040004 	lw	a0,4(s0)
9d003d80:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003d84:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d003d88:	8e040004 	lw	a0,4(s0)
9d003d8c:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003d90:	24050008 	li	a1,8
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003d94:	92040009 	lbu	a0,9(s0)
9d003d98:	240200ff 	li	v0,255
9d003d9c:	50820004 	beql	a0,v0,9d003db0 <_ZN7TFTDSPI10writeData8Eh+0x58>
9d003da0:	92040008 	lbu	a0,8(s0)
9d003da4:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003da8:	24050001 	li	a1,1
    digitalWrite(_cs, LOW);
9d003dac:	92040008 	lbu	a0,8(s0)
9d003db0:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003db4:	00002821 	move	a1,zero
    _spi->transfer(data);
9d003db8:	8e040004 	lw	a0,4(s0)
9d003dbc:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003dc0:	02202821 	move	a1,s1
    digitalWrite(_cs, HIGH);
9d003dc4:	92040008 	lbu	a0,8(s0)
}
9d003dc8:	8fbf001c 	lw	ra,28(sp)
9d003dcc:	8fb10018 	lw	s1,24(sp)
9d003dd0:	8fb00014 	lw	s0,20(sp)
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    if (_dc != 255) digitalWrite(_dc, HIGH);
    digitalWrite(_cs, LOW);
    _spi->transfer(data);
    digitalWrite(_cs, HIGH);
9d003dd4:	24050001 	li	a1,1
9d003dd8:	0b4010f9 	j	9d0043e4 <digitalWrite>
9d003ddc:	27bd0020 	addiu	sp,sp,32

9d003de0 <_ZN7TFTDSPI9readData8Ev>:
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

uint8_t TFTDSPI::readData8() {
9d003de0:	27bdffe0 	addiu	sp,sp,-32
9d003de4:	afb00018 	sw	s0,24(sp)
9d003de8:	00808021 	move	s0,a0
    uint8_t out;
    _spi->setMode(SPI_MODE);
9d003dec:	8c840004 	lw	a0,4(a0)
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

uint8_t TFTDSPI::readData8() {
9d003df0:	afbf001c 	sw	ra,28(sp)
    uint8_t out;
    _spi->setMode(SPI_MODE);
9d003df4:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003df8:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003dfc:	8e040004 	lw	a0,4(s0)
9d003e00:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003e04:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d003e08:	8e040004 	lw	a0,4(s0)
9d003e0c:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003e10:	24050008 	li	a1,8
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d003e14:	92040009 	lbu	a0,9(s0)
9d003e18:	240200ff 	li	v0,255
9d003e1c:	50820004 	beql	a0,v0,9d003e30 <_ZN7TFTDSPI9readData8Ev+0x50>
9d003e20:	92040008 	lbu	a0,8(s0)
9d003e24:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003e28:	24050001 	li	a1,1
    digitalWrite(_cs, LOW);
9d003e2c:	92040008 	lbu	a0,8(s0)
9d003e30:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003e34:	00002821 	move	a1,zero
    out = _spi->transfer(0);
9d003e38:	8e040004 	lw	a0,4(s0)
9d003e3c:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003e40:	00002821 	move	a1,zero
    digitalWrite(_cs, HIGH);
9d003e44:	92040008 	lbu	a0,8(s0)
9d003e48:	24050001 	li	a1,1
9d003e4c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003e50:	afa20010 	sw	v0,16(sp)
    return out;
}
9d003e54:	8fa20010 	lw	v0,16(sp)
9d003e58:	8fbf001c 	lw	ra,28(sp)
9d003e5c:	8fb00018 	lw	s0,24(sp)
9d003e60:	304200ff 	andi	v0,v0,0xff
9d003e64:	03e00008 	jr	ra
9d003e68:	27bd0020 	addiu	sp,sp,32

9d003e6c <_ZN7TFTDSPI14writeCommand32Em>:
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::writeCommand32(uint32_t command) {
9d003e6c:	27bdffe0 	addiu	sp,sp,-32
9d003e70:	afb00014 	sw	s0,20(sp)
9d003e74:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d003e78:	8c840004 	lw	a0,4(a0)
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::writeCommand32(uint32_t command) {
9d003e7c:	afb10018 	sw	s1,24(sp)
9d003e80:	00a08821 	move	s1,a1
9d003e84:	afbf001c 	sw	ra,28(sp)
    _spi->setMode(SPI_MODE);
9d003e88:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003e8c:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003e90:	8e040004 	lw	a0,4(s0)
9d003e94:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003e98:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d003e9c:	8e040004 	lw	a0,4(s0)
9d003ea0:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003ea4:	24050020 	li	a1,32
    if (_dc != 255) digitalWrite(_dc, LOW);
9d003ea8:	92040009 	lbu	a0,9(s0)
9d003eac:	240200ff 	li	v0,255
9d003eb0:	50820004 	beql	a0,v0,9d003ec4 <_ZN7TFTDSPI14writeCommand32Em+0x58>
9d003eb4:	92040008 	lbu	a0,8(s0)
9d003eb8:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003ebc:	00002821 	move	a1,zero
    digitalWrite(_cs, LOW);
9d003ec0:	92040008 	lbu	a0,8(s0)
9d003ec4:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003ec8:	00002821 	move	a1,zero
    _spi->transfer(command);
9d003ecc:	8e040004 	lw	a0,4(s0)
9d003ed0:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003ed4:	02202821 	move	a1,s1
    digitalWrite(_cs, HIGH);
9d003ed8:	92040008 	lbu	a0,8(s0)
9d003edc:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003ee0:	24050001 	li	a1,1
    _spi->setTransferSize(DSPI_8BIT);
9d003ee4:	8e040004 	lw	a0,4(s0)
}
9d003ee8:	8fbf001c 	lw	ra,28(sp)
9d003eec:	8fb10018 	lw	s1,24(sp)
9d003ef0:	8fb00014 	lw	s0,20(sp)
    _spi->setTransferSize(DSPI_32BIT);
    if (_dc != 255) digitalWrite(_dc, LOW);
    digitalWrite(_cs, LOW);
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
9d003ef4:	24050008 	li	a1,8
9d003ef8:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003efc:	27bd0020 	addiu	sp,sp,32

9d003f00 <_ZN7TFTDSPI13readCommand32Ev>:
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

uint32_t TFTDSPI::readCommand32() {
9d003f00:	27bdffe0 	addiu	sp,sp,-32
9d003f04:	afb00018 	sw	s0,24(sp)
9d003f08:	00808021 	move	s0,a0
    uint32_t out;
    _spi->setMode(SPI_MODE);
9d003f0c:	8c840004 	lw	a0,4(a0)
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
}

uint32_t TFTDSPI::readCommand32() {
9d003f10:	afbf001c 	sw	ra,28(sp)
    uint32_t out;
    _spi->setMode(SPI_MODE);
9d003f14:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003f18:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003f1c:	8e040004 	lw	a0,4(s0)
9d003f20:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003f24:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_32BIT);
9d003f28:	8e040004 	lw	a0,4(s0)
9d003f2c:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003f30:	24050020 	li	a1,32
    if (_dc != 255) digitalWrite(_dc, LOW);
9d003f34:	92040009 	lbu	a0,9(s0)
9d003f38:	240200ff 	li	v0,255
9d003f3c:	50820004 	beql	a0,v0,9d003f50 <_ZN7TFTDSPI13readCommand32Ev+0x50>
9d003f40:	92040008 	lbu	a0,8(s0)
9d003f44:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003f48:	00002821 	move	a1,zero
    digitalWrite(_cs, LOW);
9d003f4c:	92040008 	lbu	a0,8(s0)
9d003f50:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003f54:	00002821 	move	a1,zero
    out = _spi->transfer(0);
9d003f58:	8e040004 	lw	a0,4(s0)
9d003f5c:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003f60:	00002821 	move	a1,zero
    digitalWrite(_cs, HIGH);
9d003f64:	92040008 	lbu	a0,8(s0)
9d003f68:	24050001 	li	a1,1
9d003f6c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003f70:	afa20010 	sw	v0,16(sp)
    _spi->setTransferSize(DSPI_8BIT);
9d003f74:	8e040004 	lw	a0,4(s0)
9d003f78:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003f7c:	24050008 	li	a1,8
    return out;
}
9d003f80:	8fbf001c 	lw	ra,28(sp)
9d003f84:	8fa20010 	lw	v0,16(sp)
9d003f88:	8fb00018 	lw	s0,24(sp)
9d003f8c:	03e00008 	jr	ra
9d003f90:	27bd0020 	addiu	sp,sp,32

9d003f94 <_ZN7TFTDSPI14writeCommand16Et>:
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::writeCommand16(uint16_t command) {
9d003f94:	27bdffe0 	addiu	sp,sp,-32
9d003f98:	afb00014 	sw	s0,20(sp)
9d003f9c:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d003fa0:	8c840004 	lw	a0,4(a0)
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
    return out;
}

void TFTDSPI::writeCommand16(uint16_t command) {
9d003fa4:	afb10018 	sw	s1,24(sp)
9d003fa8:	30b1ffff 	andi	s1,a1,0xffff
9d003fac:	afbf001c 	sw	ra,28(sp)
    _spi->setMode(SPI_MODE);
9d003fb0:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d003fb4:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d003fb8:	8e040004 	lw	a0,4(s0)
9d003fbc:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d003fc0:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d003fc4:	8e040004 	lw	a0,4(s0)
9d003fc8:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d003fcc:	24050010 	li	a1,16
    if (_dc != 255) digitalWrite(_dc, LOW);
9d003fd0:	92040009 	lbu	a0,9(s0)
9d003fd4:	240200ff 	li	v0,255
9d003fd8:	50820004 	beql	a0,v0,9d003fec <_ZN7TFTDSPI14writeCommand16Et+0x58>
9d003fdc:	92040008 	lbu	a0,8(s0)
9d003fe0:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003fe4:	00002821 	move	a1,zero
    digitalWrite(_cs, LOW);
9d003fe8:	92040008 	lbu	a0,8(s0)
9d003fec:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d003ff0:	00002821 	move	a1,zero
    _spi->transfer(command);
9d003ff4:	8e040004 	lw	a0,4(s0)
9d003ff8:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d003ffc:	02202821 	move	a1,s1
    digitalWrite(_cs, HIGH);
9d004000:	92040008 	lbu	a0,8(s0)
9d004004:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004008:	24050001 	li	a1,1
    _spi->setTransferSize(DSPI_8BIT);
9d00400c:	8e040004 	lw	a0,4(s0)
}
9d004010:	8fbf001c 	lw	ra,28(sp)
9d004014:	8fb10018 	lw	s1,24(sp)
9d004018:	8fb00014 	lw	s0,20(sp)
    _spi->setTransferSize(DSPI_16BIT);
    if (_dc != 255) digitalWrite(_dc, LOW);
    digitalWrite(_cs, LOW);
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
    _spi->setTransferSize(DSPI_8BIT);
9d00401c:	24050008 	li	a1,8
9d004020:	0b4005ee 	j	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d004024:	27bd0020 	addiu	sp,sp,32

9d004028 <_ZN7TFTDSPI13readCommand16Ev>:
    digitalWrite(_cs, LOW);
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
}

uint16_t TFTDSPI::readCommand16() {
9d004028:	27bdffe0 	addiu	sp,sp,-32
9d00402c:	afb00018 	sw	s0,24(sp)
9d004030:	00808021 	move	s0,a0
    uint16_t out;
    _spi->setMode(SPI_MODE);
9d004034:	8c840004 	lw	a0,4(a0)
    digitalWrite(_cs, LOW);
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
}

uint16_t TFTDSPI::readCommand16() {
9d004038:	afbf001c 	sw	ra,28(sp)
    uint16_t out;
    _spi->setMode(SPI_MODE);
9d00403c:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d004040:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d004044:	8e040004 	lw	a0,4(s0)
9d004048:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d00404c:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_16BIT);
9d004050:	8e040004 	lw	a0,4(s0)
9d004054:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d004058:	24050010 	li	a1,16
    if (_dc != 255) digitalWrite(_dc, LOW);
9d00405c:	92040009 	lbu	a0,9(s0)
9d004060:	240200ff 	li	v0,255
9d004064:	50820004 	beql	a0,v0,9d004078 <_ZN7TFTDSPI13readCommand16Ev+0x50>
9d004068:	92040008 	lbu	a0,8(s0)
9d00406c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004070:	00002821 	move	a1,zero
    digitalWrite(_cs, LOW);
9d004074:	92040008 	lbu	a0,8(s0)
9d004078:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d00407c:	00002821 	move	a1,zero
    out = _spi->transfer(0);
9d004080:	8e040004 	lw	a0,4(s0)
9d004084:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d004088:	00002821 	move	a1,zero
    digitalWrite(_cs, HIGH);
9d00408c:	92040008 	lbu	a0,8(s0)
9d004090:	24050001 	li	a1,1
9d004094:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004098:	afa20010 	sw	v0,16(sp)
    _spi->setTransferSize(DSPI_8BIT);
9d00409c:	8e040004 	lw	a0,4(s0)
9d0040a0:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0040a4:	24050008 	li	a1,8
    return out;
}
9d0040a8:	8fa20010 	lw	v0,16(sp)
9d0040ac:	8fbf001c 	lw	ra,28(sp)
9d0040b0:	8fb00018 	lw	s0,24(sp)
9d0040b4:	3042ffff 	andi	v0,v0,0xffff
9d0040b8:	03e00008 	jr	ra
9d0040bc:	27bd0020 	addiu	sp,sp,32

9d0040c0 <_ZN7TFTDSPI13writeCommand8Eh>:
    out = _spi->transfer(0);
    digitalWrite(_cs, HIGH);
    return out;
}

void TFTDSPI::writeCommand8(uint8_t command) {
9d0040c0:	27bdffe0 	addiu	sp,sp,-32
9d0040c4:	afb00014 	sw	s0,20(sp)
9d0040c8:	00808021 	move	s0,a0
    _spi->setMode(SPI_MODE);
9d0040cc:	8c840004 	lw	a0,4(a0)
    out = _spi->transfer(0);
    digitalWrite(_cs, HIGH);
    return out;
}

void TFTDSPI::writeCommand8(uint8_t command) {
9d0040d0:	afb10018 	sw	s1,24(sp)
9d0040d4:	30b100ff 	andi	s1,a1,0xff
9d0040d8:	afbf001c 	sw	ra,28(sp)
    _spi->setMode(SPI_MODE);
9d0040dc:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d0040e0:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d0040e4:	8e040004 	lw	a0,4(s0)
9d0040e8:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d0040ec:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d0040f0:	8e040004 	lw	a0,4(s0)
9d0040f4:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d0040f8:	24050008 	li	a1,8
    if (_dc != 255) digitalWrite(_dc, LOW);
9d0040fc:	92040009 	lbu	a0,9(s0)
9d004100:	240200ff 	li	v0,255
9d004104:	50820004 	beql	a0,v0,9d004118 <_ZN7TFTDSPI13writeCommand8Eh+0x58>
9d004108:	92040008 	lbu	a0,8(s0)
9d00410c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004110:	00002821 	move	a1,zero
    digitalWrite(_cs, LOW);
9d004114:	92040008 	lbu	a0,8(s0)
9d004118:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d00411c:	00002821 	move	a1,zero
    _spi->transfer(command);
9d004120:	8e040004 	lw	a0,4(s0)
9d004124:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d004128:	02202821 	move	a1,s1
    digitalWrite(_cs, HIGH);
9d00412c:	92040008 	lbu	a0,8(s0)
}
9d004130:	8fbf001c 	lw	ra,28(sp)
9d004134:	8fb10018 	lw	s1,24(sp)
9d004138:	8fb00014 	lw	s0,20(sp)
    _spi->setSpeed(_speed);
    _spi->setTransferSize(DSPI_8BIT);
    if (_dc != 255) digitalWrite(_dc, LOW);
    digitalWrite(_cs, LOW);
    _spi->transfer(command);
    digitalWrite(_cs, HIGH);
9d00413c:	24050001 	li	a1,1
9d004140:	0b4010f9 	j	9d0043e4 <digitalWrite>
9d004144:	27bd0020 	addiu	sp,sp,32

9d004148 <_ZN7TFTDSPI12readCommand8Ev>:

    _spi->begin();
    _spi->setSpeed(_speed);
}

uint8_t TFTDSPI::readCommand8() {
9d004148:	27bdffe0 	addiu	sp,sp,-32
9d00414c:	afb00018 	sw	s0,24(sp)
9d004150:	00808021 	move	s0,a0
    uint8_t out;
    _spi->setMode(SPI_MODE);
9d004154:	8c840004 	lw	a0,4(a0)

    _spi->begin();
    _spi->setSpeed(_speed);
}

uint8_t TFTDSPI::readCommand8() {
9d004158:	afbf001c 	sw	ra,28(sp)
    uint8_t out;
    _spi->setMode(SPI_MODE);
9d00415c:	0f40059e 	jal	9d001678 <_ZN4DSPI7setModeEt>
9d004160:	24050100 	li	a1,256
    _spi->setSpeed(_speed);
9d004164:	8e040004 	lw	a0,4(s0)
9d004168:	0f400581 	jal	9d001604 <_ZN4DSPI8setSpeedEm>
9d00416c:	8e05000c 	lw	a1,12(s0)
    _spi->setTransferSize(DSPI_8BIT);
9d004170:	8e040004 	lw	a0,4(s0)
9d004174:	0f4005ee 	jal	9d0017b8 <_ZN4DSPI15setTransferSizeEh>
9d004178:	24050008 	li	a1,8
    if (_dc != 255) digitalWrite(_dc, LOW);
9d00417c:	92040009 	lbu	a0,9(s0)
9d004180:	240200ff 	li	v0,255
9d004184:	50820004 	beql	a0,v0,9d004198 <_ZN7TFTDSPI12readCommand8Ev+0x50>
9d004188:	92040008 	lbu	a0,8(s0)
9d00418c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004190:	00002821 	move	a1,zero
    digitalWrite(_cs, LOW);
9d004194:	92040008 	lbu	a0,8(s0)
9d004198:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d00419c:	00002821 	move	a1,zero
    out = _spi->transfer(0);
9d0041a0:	8e040004 	lw	a0,4(s0)
9d0041a4:	0f400607 	jal	9d00181c <_ZN4DSPI8transferEm>
9d0041a8:	00002821 	move	a1,zero
    digitalWrite(_cs, HIGH);
9d0041ac:	92040008 	lbu	a0,8(s0)
9d0041b0:	24050001 	li	a1,1
9d0041b4:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d0041b8:	afa20010 	sw	v0,16(sp)
    return out;
}
9d0041bc:	8fa20010 	lw	v0,16(sp)
9d0041c0:	8fbf001c 	lw	ra,28(sp)
9d0041c4:	8fb00018 	lw	s0,24(sp)
9d0041c8:	304200ff 	andi	v0,v0,0xff
9d0041cc:	03e00008 	jr	ra
9d0041d0:	27bd0020 	addiu	sp,sp,32

9d0041d4 <_ZN7TFTDSPI16initializeDeviceEv>:

#ifdef __PIC32MX__

#define SPI_MODE DSPI_MODE0

void TFTDSPI::initializeDevice() {
9d0041d4:	27bdffe8 	addiu	sp,sp,-24
9d0041d8:	afb00010 	sw	s0,16(sp)
9d0041dc:	afbf0014 	sw	ra,20(sp)
9d0041e0:	00808021 	move	s0,a0
    pinMode(_cs, OUTPUT);
9d0041e4:	90840008 	lbu	a0,8(a0)
9d0041e8:	0f401093 	jal	9d00424c <pinMode>
9d0041ec:	24050001 	li	a1,1
    if (_dc != 255) pinMode(_dc, OUTPUT);
9d0041f0:	92040009 	lbu	a0,9(s0)
9d0041f4:	240200ff 	li	v0,255
9d0041f8:	50820004 	beql	a0,v0,9d00420c <_ZN7TFTDSPI16initializeDeviceEv+0x38>
9d0041fc:	92040008 	lbu	a0,8(s0)
9d004200:	0f401093 	jal	9d00424c <pinMode>
9d004204:	24050001 	li	a1,1

    digitalWrite(_cs, HIGH);
9d004208:	92040008 	lbu	a0,8(s0)
9d00420c:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004210:	24050001 	li	a1,1
    if (_dc != 255) digitalWrite(_dc, HIGH);
9d004214:	92040009 	lbu	a0,9(s0)
9d004218:	240200ff 	li	v0,255
9d00421c:	10820003 	beq	a0,v0,9d00422c <_ZN7TFTDSPI16initializeDeviceEv+0x58>
9d004220:	00000000 	nop
9d004224:	0f4010f9 	jal	9d0043e4 <digitalWrite>
9d004228:	24050001 	li	a1,1

    _spi->begin();
9d00422c:	0f4005ec 	jal	9d0017b0 <_ZN4DSPI5beginEv>
9d004230:	8e040004 	lw	a0,4(s0)
    _spi->setSpeed(_speed);
9d004234:	8e040004 	lw	a0,4(s0)
9d004238:	8e05000c 	lw	a1,12(s0)
}
9d00423c:	8fbf0014 	lw	ra,20(sp)
9d004240:	8fb00010 	lw	s0,16(sp)

    digitalWrite(_cs, HIGH);
    if (_dc != 255) digitalWrite(_dc, HIGH);

    _spi->begin();
    _spi->setSpeed(_speed);
9d004244:	0b400581 	j	9d001604 <_ZN4DSPI8setSpeedEm>
9d004248:	27bd0018 	addiu	sp,sp,24

9d00424c <pinMode>:
#include "wiring_private.h"
#include "pins_arduino.h"

//************************************************************************
void pinMode(uint8_t pin, uint8_t mode)
{
9d00424c:	308400ff 	andi	a0,a0,0xff
9d004250:	27bdffe0 	addiu	sp,sp,-32
uint32_t                cn;
#endif

	/* Check if pin number is in valid range.
	*/
	if (pin >= NUM_DIGITAL_PINS_EXTENDED)
9d004254:	2c82002f 	sltiu	v0,a0,47
#include "wiring_private.h"
#include "pins_arduino.h"

//************************************************************************
void pinMode(uint8_t pin, uint8_t mode)
{
9d004258:	afbf001c 	sw	ra,28(sp)
9d00425c:	afb10018 	sw	s1,24(sp)
9d004260:	afb00014 	sw	s0,20(sp)
uint32_t                cn;
#endif

	/* Check if pin number is in valid range.
	*/
	if (pin >= NUM_DIGITAL_PINS_EXTENDED)
9d004264:	1040002d 	beqz	v0,9d00431c <pinMode+0xd0>
9d004268:	30a500ff 	andi	a1,a1,0xff
		return;
	}
#endif	// OPT_BOARD_DIGITAL_IO

	//* Get the port number for this pin.
	if ((port = digitalPinToPort(pin)) == NOT_A_PIN)
9d00426c:	3c029d01 	lui	v0,0x9d01
9d004270:	2442625c 	addiu	v0,v0,25180
9d004274:	00441021 	addu	v0,v0,a0
9d004278:	90420000 	lbu	v0,0(v0)
9d00427c:	10400027 	beqz	v0,9d00431c <pinMode+0xd0>
9d004280:	00023080 	sll	a2,v0,0x2
	{
		return;
	}

	//* Obtain pointer to the registers for this io port.
	iop = (p32_ioport *)portRegisters(port);
9d004284:	3c079d01 	lui	a3,0x9d01
9d004288:	24e76238 	addiu	a3,a3,25144
9d00428c:	00c73821 	addu	a3,a2,a3

	//* Obtain bit mask for the specific bit for this pin.
	bit = digitalPinToBitMask(pin);
9d004290:	3c069d01 	lui	a2,0x9d01
9d004294:	00041840 	sll	v1,a0,0x1
9d004298:	24c6628c 	addiu	a2,a2,25228
9d00429c:	00c33021 	addu	a2,a2,v1
9d0042a0:	94d00000 	lhu	s0,0(a2)
	// analog input capable pins.
	// Clear the bit in the ANSELx register to ensure that the pin is in
	// digital input mode.
	iop->ansel.clr = bit;
#else
	if (port == _IOPORT_PB)
9d0042a4:	24060002 	li	a2,2
9d0042a8:	1046003a 	beq	v0,a2,9d004394 <pinMode+0x148>
9d0042ac:	8cf10000 	lw	s1,0(a3)

	}
#endif	// defined(__PIC32MX1XX__) || defined(__PIC32MX2XX__)

	// Set the pin to the requested mode.
    switch (mode) {
9d0042b0:	24020002 	li	v0,2
9d0042b4:	10a20030 	beq	a1,v0,9d004378 <pinMode+0x12c>
9d0042b8:	2ca20003 	sltiu	v0,a1,3
9d0042bc:	1040001c 	beqz	v0,9d004330 <pinMode+0xe4>
9d0042c0:	2ca20006 	sltiu	v0,a1,6
9d0042c4:	14a0001d 	bnez	a1,9d00433c <pinMode+0xf0>
9d0042c8:	3c029d01 	lui	v0,0x9d01
            } else {
                iop->cnpu.clr = bit;
                iop->cnpd.clr = bit;
            }
#else
            if (mode == INPUT_PULLUP) {
9d0042cc:	24020003 	li	v0,3
9d0042d0:	10a2003a 	beq	a1,v0,9d0043bc <pinMode+0x170>
9d0042d4:	3c029d01 	lui	v0,0x9d01
                cn = digitalPinToCN(pin);
                if (cn != NOT_CN_PIN) {
                    CNPUESET = cn;
                } 
            } else {
                cn = digitalPinToCN(pin);
9d0042d8:	2442634c 	addiu	v0,v0,25420
9d0042dc:	00042080 	sll	a0,a0,0x2
9d0042e0:	00822021 	addu	a0,a0,v0
9d0042e4:	8c820000 	lw	v0,0(a0)
                if (cn != NOT_CN_PIN) {
9d0042e8:	240400ff 	li	a0,255
9d0042ec:	10440002 	beq	v0,a0,9d0042f8 <pinMode+0xac>
9d0042f0:	3c04bf88 	lui	a0,0xbf88
                    CNPUECLR = cn;
9d0042f4:	ac8261e4 	sw	v0,25060(a0)
            }
#endif
            // continue into INPUT case
            //* Determine if this is an output compare pin. If so,
            //* we need to make sure PWM output is off.
            timer = digitalPinToTimerOC(pin) >> _BN_TIMER_OC;
9d0042f8:	3c029d01 	lui	v0,0x9d01
9d0042fc:	244262ec 	addiu	v0,v0,25324
9d004300:	00431821 	addu	v1,v0,v1
9d004304:	90640000 	lbu	a0,0(v1)
9d004308:	3084000f 	andi	a0,a0,0xf
            if (timer != NOT_ON_TIMER)
9d00430c:	14800025 	bnez	a0,9d0043a4 <pinMode+0x158>
9d004310:	00000000 	nop
            }

            //*	May  1,	2011
            //*	according to item #26 in PIC32MX5XX-6XX-7XX Errata.pdf 
            //*	if we are setting to input, set the data bit to zero first
            iop->lat.clr  = bit;	//clear to output bit		
9d004314:	ae300024 	sw	s0,36(s1)
            iop->tris.set = bit;	//make the pin an input
9d004318:	ae300008 	sw	s0,8(s1)
            } 
#endif
            iop->tris.clr = bit;	//make the pin an output
            iop->odc.clr  = bit;	//make sure it isn't open drain
	}
}
9d00431c:	8fbf001c 	lw	ra,28(sp)
9d004320:	8fb10018 	lw	s1,24(sp)
9d004324:	8fb00014 	lw	s0,20(sp)
9d004328:	03e00008 	jr	ra
9d00432c:	27bd0020 	addiu	sp,sp,32

	}
#endif	// defined(__PIC32MX1XX__) || defined(__PIC32MX2XX__)

	// Set the pin to the requested mode.
    switch (mode) {
9d004330:	1440ffe7 	bnez	v0,9d0042d0 <pinMode+0x84>
9d004334:	24020003 	li	v0,3
            // than error checking the input value.
#if defined(__PIC32MX1XX__) || defined(__PIC32MX2XX__)
            iop->cnpu.clr = bit;
            iop->cnpd.clr = bit;
#else
            cn = digitalPinToCN(pin);
9d004338:	3c029d01 	lui	v0,0x9d01
9d00433c:	2442634c 	addiu	v0,v0,25420
9d004340:	00042080 	sll	a0,a0,0x2
9d004344:	00822021 	addu	a0,a0,v0
9d004348:	8c820000 	lw	v0,0(a0)
            if (cn != NOT_CN_PIN) {
9d00434c:	240300ff 	li	v1,255
9d004350:	10430002 	beq	v0,v1,9d00435c <pinMode+0x110>
9d004354:	3c03bf88 	lui	v1,0xbf88
                CNPUECLR = cn;
9d004358:	ac6261e4 	sw	v0,25060(v1)
            } 
#endif
            iop->tris.clr = bit;	//make the pin an output
            iop->odc.clr  = bit;	//make sure it isn't open drain
	}
}
9d00435c:	8fbf001c 	lw	ra,28(sp)
            cn = digitalPinToCN(pin);
            if (cn != NOT_CN_PIN) {
                CNPUECLR = cn;
            } 
#endif
            iop->tris.clr = bit;	//make the pin an output
9d004360:	ae300004 	sw	s0,4(s1)
            iop->odc.clr  = bit;	//make sure it isn't open drain
9d004364:	ae300034 	sw	s0,52(s1)
	}
}
9d004368:	8fb10018 	lw	s1,24(sp)
9d00436c:	8fb00014 	lw	s0,20(sp)
9d004370:	03e00008 	jr	ra
9d004374:	27bd0020 	addiu	sp,sp,32
9d004378:	8fbf001c 	lw	ra,28(sp)
            //*	if we are setting to input, set the data bit to zero first
            iop->lat.clr  = bit;	//clear to output bit		
            iop->tris.set = bit;	//make the pin an input
            break;
        case OPEN:
            iop->tris.clr = bit;	//OPEN implies output, make the pin an output
9d00437c:	ae300004 	sw	s0,4(s1)
            iop->odc.set  = bit;	//make the pin open drain
9d004380:	ae300038 	sw	s0,56(s1)
            } 
#endif
            iop->tris.clr = bit;	//make the pin an output
            iop->odc.clr  = bit;	//make sure it isn't open drain
	}
}
9d004384:	8fb10018 	lw	s1,24(sp)
9d004388:	8fb00014 	lw	s0,20(sp)
9d00438c:	03e00008 	jr	ra
9d004390:	27bd0020 	addiu	sp,sp,32
		//	You have to set the bit in the AD1PCFG for an analog pin to be used as a 
		//	digital input. They come up after reset as analog input with the digital 
		//	input disabled. For the PORTB pins you switch between analog input and 
		//	digital input using AD1PCFG.

		AD1PCFGSET = bit;
9d004394:	3c02bf81 	lui	v0,0xbf81
9d004398:	ac509068 	sw	s0,-28568(v0)

	}
#endif	// defined(__PIC32MX1XX__) || defined(__PIC32MX2XX__)

	// Set the pin to the requested mode.
    switch (mode) {
9d00439c:	0b4010ad 	j	9d0042b4 <pinMode+0x68>
9d0043a0:	24020002 	li	v0,2
            //* Determine if this is an output compare pin. If so,
            //* we need to make sure PWM output is off.
            timer = digitalPinToTimerOC(pin) >> _BN_TIMER_OC;
            if (timer != NOT_ON_TIMER)
            {
                turnOffPWM(timer);
9d0043a4:	0f4011b6 	jal	9d0046d8 <turnOffPWM>
9d0043a8:	00000000 	nop
            }

            //*	May  1,	2011
            //*	according to item #26 in PIC32MX5XX-6XX-7XX Errata.pdf 
            //*	if we are setting to input, set the data bit to zero first
            iop->lat.clr  = bit;	//clear to output bit		
9d0043ac:	ae300024 	sw	s0,36(s1)
            iop->tris.set = bit;	//make the pin an input
9d0043b0:	ae300008 	sw	s0,8(s1)
            } 
#endif
            iop->tris.clr = bit;	//make the pin an output
            iop->odc.clr  = bit;	//make sure it isn't open drain
	}
}
9d0043b4:	0b4010c8 	j	9d004320 <pinMode+0xd4>
9d0043b8:	8fbf001c 	lw	ra,28(sp)
                iop->cnpu.clr = bit;
                iop->cnpd.clr = bit;
            }
#else
            if (mode == INPUT_PULLUP) {
                cn = digitalPinToCN(pin);
9d0043bc:	2442634c 	addiu	v0,v0,25420
9d0043c0:	00042080 	sll	a0,a0,0x2
9d0043c4:	00822021 	addu	a0,a0,v0
9d0043c8:	8c820000 	lw	v0,0(a0)
                if (cn != NOT_CN_PIN) {
9d0043cc:	240400ff 	li	a0,255
9d0043d0:	1044ffc9 	beq	v0,a0,9d0042f8 <pinMode+0xac>
9d0043d4:	3c04bf88 	lui	a0,0xbf88
                    CNPUESET = cn;
9d0043d8:	ac8261e8 	sw	v0,25064(a0)
            }
#endif
            // continue into INPUT case
            //* Determine if this is an output compare pin. If so,
            //* we need to make sure PWM output is off.
            timer = digitalPinToTimerOC(pin) >> _BN_TIMER_OC;
9d0043dc:	0b4010bf 	j	9d0042fc <pinMode+0xb0>
9d0043e0:	3c029d01 	lui	v0,0x9d01

9d0043e4 <digitalWrite>:
//*	Reading from PORT gives you a snapshot of the actual pins state regardless of how, 
//*	if at all, the PIC is trying to drive them.  
//*	Reading from LAT gives you the values last written to the pins, whether thru LAT or PORT.
//************************************************************************
void digitalWrite(uint8_t pin, uint8_t val)
{
9d0043e4:	308400ff 	andi	a0,a0,0xff
9d0043e8:	27bdffd8 	addiu	sp,sp,-40
uint32_t                cn;
#endif

	/* Check if pin number is in valid range.
	*/
	if (pin >= NUM_DIGITAL_PINS_EXTENDED)
9d0043ec:	2c82002f 	sltiu	v0,a0,47
//*	Reading from PORT gives you a snapshot of the actual pins state regardless of how, 
//*	if at all, the PIC is trying to drive them.  
//*	Reading from LAT gives you the values last written to the pins, whether thru LAT or PORT.
//************************************************************************
void digitalWrite(uint8_t pin, uint8_t val)
{
9d0043f0:	afbf0024 	sw	ra,36(sp)
9d0043f4:	afb10020 	sw	s1,32(sp)
9d0043f8:	afb0001c 	sw	s0,28(sp)
uint32_t                cn;
#endif

	/* Check if pin number is in valid range.
	*/
	if (pin >= NUM_DIGITAL_PINS_EXTENDED)
9d0043fc:	10400020 	beqz	v0,9d004480 <digitalWrite+0x9c>
9d004400:	30a500ff 	andi	a1,a1,0xff
		return;
	}
#endif		// OPT_BOARD_DIGITAL_IO

	//* Get the port number for this pin.
	if ((port = digitalPinToPort(pin)) == NOT_A_PIN)
9d004404:	3c029d01 	lui	v0,0x9d01
9d004408:	2442625c 	addiu	v0,v0,25180
9d00440c:	00821021 	addu	v0,a0,v0
9d004410:	90420000 	lbu	v0,0(v0)
9d004414:	1040001a 	beqz	v0,9d004480 <digitalWrite+0x9c>
9d004418:	3c039d01 	lui	v1,0x9d01
	{
		return;
	}

	//* Obtain pointer to the registers for this io port.
	iop = (p32_ioport *)portRegisters(port);
9d00441c:	24636238 	addiu	v1,v1,25144
9d004420:	00021080 	sll	v0,v0,0x2
9d004424:	00431021 	addu	v0,v0,v1
9d004428:	8c500000 	lw	s0,0(v0)

	//* Obtain bit mask for the specific bit for this pin.
	bit = digitalPinToBitMask(pin);
9d00442c:	3c069d01 	lui	a2,0x9d01
9d004430:	00041040 	sll	v0,a0,0x1
9d004434:	24c6628c 	addiu	a2,a2,25228
9d004438:	00463021 	addu	a2,v0,a2

    //* If the port is in input mode and we write a value to it
    //* we must be enabling or disabling the internal pull-up
    //* resistor.  Only works for pins that have an associated
    //* change notification pin.
    if (iop->tris.reg & bit) {
9d00443c:	8e030000 	lw	v1,0(s0)
9d004440:	94d10000 	lhu	s1,0(a2)
9d004444:	02231824 	and	v1,s1,v1
9d004448:	10600012 	beqz	v1,9d004494 <digitalWrite+0xb0>
9d00444c:	3c039d01 	lui	v1,0x9d01
        } else {
            iop->cnpu.set = bit;
            iop->cnpd.clr = bit;
        }
#else
        cn = digitalPinToCN(pin);
9d004450:	3c029d01 	lui	v0,0x9d01
9d004454:	2442634c 	addiu	v0,v0,25420
9d004458:	00042080 	sll	a0,a0,0x2
9d00445c:	00822021 	addu	a0,a0,v0
9d004460:	8c820000 	lw	v0,0(a0)
        if (cn != NOT_CN_PIN) {
9d004464:	240300ff 	li	v1,255
9d004468:	10430006 	beq	v0,v1,9d004484 <digitalWrite+0xa0>
9d00446c:	8fbf0024 	lw	ra,36(sp)
            if (val == LOW) {
9d004470:	14a0001a 	bnez	a1,9d0044dc <digitalWrite+0xf8>
9d004474:	3c03bf88 	lui	v1,0xbf88
                CNPUECLR = cn;
9d004478:	3c03bf88 	lui	v1,0xbf88
9d00447c:	ac6261e4 	sw	v0,25060(v1)
        else
        {
            iop->lat.set = bit;
        }
    }
}
9d004480:	8fbf0024 	lw	ra,36(sp)
9d004484:	8fb10020 	lw	s1,32(sp)
9d004488:	8fb0001c 	lw	s0,28(sp)
9d00448c:	03e00008 	jr	ra
9d004490:	27bd0028 	addiu	sp,sp,40
#endif

    } else {
        //* Determine if this is an output compare pin. If so,
        //* we need to make sure PWM output is off.
        timer = digitalPinToTimerOC(pin);
9d004494:	246362ec 	addiu	v1,v1,25324
9d004498:	00431021 	addu	v0,v0,v1
9d00449c:	90440000 	lbu	a0,0(v0)
9d0044a0:	3084000f 	andi	a0,a0,0xf
        if (timer != NOT_ON_TIMER)
9d0044a4:	14800009 	bnez	a0,9d0044cc <digitalWrite+0xe8>
9d0044a8:	00000000 	nop
        {
            turnOffPWM(timer);
        }

        //* Set the pin state
        if (val == LOW)
9d0044ac:	10a0000e 	beqz	a1,9d0044e8 <digitalWrite+0x104>
9d0044b0:	00000000 	nop
        else
        {
            iop->lat.set = bit;
        }
    }
}
9d0044b4:	8fbf0024 	lw	ra,36(sp)
        {
            iop->lat.clr = bit;
        }
        else
        {
            iop->lat.set = bit;
9d0044b8:	ae110028 	sw	s1,40(s0)
        }
    }
}
9d0044bc:	8fb10020 	lw	s1,32(sp)
9d0044c0:	8fb0001c 	lw	s0,28(sp)
9d0044c4:	03e00008 	jr	ra
9d0044c8:	27bd0028 	addiu	sp,sp,40
        //* Determine if this is an output compare pin. If so,
        //* we need to make sure PWM output is off.
        timer = digitalPinToTimerOC(pin);
        if (timer != NOT_ON_TIMER)
        {
            turnOffPWM(timer);
9d0044cc:	0f4011b6 	jal	9d0046d8 <turnOffPWM>
9d0044d0:	afa50010 	sw	a1,16(sp)
9d0044d4:	0b40112b 	j	9d0044ac <digitalWrite+0xc8>
9d0044d8:	8fa50010 	lw	a1,16(sp)
        cn = digitalPinToCN(pin);
        if (cn != NOT_CN_PIN) {
            if (val == LOW) {
                CNPUECLR = cn;
            } else {
                CNPUESET = cn;
9d0044dc:	ac6261e8 	sw	v0,25064(v1)
        else
        {
            iop->lat.set = bit;
        }
    }
}
9d0044e0:	0b401121 	j	9d004484 <digitalWrite+0xa0>
9d0044e4:	8fbf0024 	lw	ra,36(sp)
        }

        //* Set the pin state
        if (val == LOW)
        {
            iop->lat.clr = bit;
9d0044e8:	ae110024 	sw	s1,36(s0)
        else
        {
            iop->lat.set = bit;
        }
    }
}
9d0044ec:	0b401121 	j	9d004484 <digitalWrite+0xa0>
9d0044f0:	8fbf0024 	lw	ra,36(sp)

9d0044f4 <initIntVector>:
*/
void initIntVector(void)
{
    const IMAGE_HEADER_INFO * pImageHeader = getImageHeaderInfoStructure();
    int i = 0;
    void * pvOrgIntVec = (void *)pImageHeader->pOrgVector0;
9d0044f4:	3c029d01 	lui	v0,0x9d01
9d0044f8:	2442577c 	addiu	v0,v0,22396
9d0044fc:	88430043 	lwl	v1,67(v0)
9d004500:	8846004b 	lwl	a2,75(v0)
    {
        // If a compiler installed interrupt handler exits, pre-load it
        // and don't fool with the priority
        if(*((uint32_t *) pvOrgIntVec) != 0xFFFFFFFF)
        {
            _isr_primary_install[i] = (isrFunc) pvOrgIntVec;
9d004504:	3c08a000 	lui	t0,0xa000
*/
void initIntVector(void)
{
    const IMAGE_HEADER_INFO * pImageHeader = getImageHeaderInfoStructure();
    int i = 0;
    void * pvOrgIntVec = (void *)pImageHeader->pOrgVector0;
9d004508:	98430040 	lwr	v1,64(v0)
9d00450c:	98460048 	lwr	a2,72(v0)

    for(i=0; i<NUM_INT_VECTOR; i++)
    {
        // If a compiler installed interrupt handler exits, pre-load it
        // and don't fool with the priority
        if(*((uint32_t *) pvOrgIntVec) != 0xFFFFFFFF)
9d004510:	2409ffff 	li	t1,-1
{
    const IMAGE_HEADER_INFO * pImageHeader = getImageHeaderInfoStructure();
    int i = 0;
    void * pvOrgIntVec = (void *)pImageHeader->pOrgVector0;

    for(i=0; i<NUM_INT_VECTOR; i++)
9d004514:	00001021 	move	v0,zero
    {
        // If a compiler installed interrupt handler exits, pre-load it
        // and don't fool with the priority
        if(*((uint32_t *) pvOrgIntVec) != 0xFFFFFFFF)
        {
            _isr_primary_install[i] = (isrFunc) pvOrgIntVec;
9d004518:	25080114 	addiu	t0,t0,276
{
    const IMAGE_HEADER_INFO * pImageHeader = getImageHeaderInfoStructure();
    int i = 0;
    void * pvOrgIntVec = (void *)pImageHeader->pOrgVector0;

    for(i=0; i<NUM_INT_VECTOR; i++)
9d00451c:	2407002d 	li	a3,45
    {
        // If a compiler installed interrupt handler exits, pre-load it
        // and don't fool with the priority
        if(*((uint32_t *) pvOrgIntVec) != 0xFFFFFFFF)
9d004520:	8c640000 	lw	a0,0(v1)
        {
            _isr_primary_install[i] = (isrFunc) pvOrgIntVec;
9d004524:	00022880 	sll	a1,v0,0x2
9d004528:	00a82821 	addu	a1,a1,t0

    for(i=0; i<NUM_INT_VECTOR; i++)
    {
        // If a compiler installed interrupt handler exits, pre-load it
        // and don't fool with the priority
        if(*((uint32_t *) pvOrgIntVec) != 0xFFFFFFFF)
9d00452c:	10890002 	beq	a0,t1,9d004538 <initIntVector+0x44>
9d004530:	24420001 	addiu	v0,v0,1
        {
            _isr_primary_install[i] = (isrFunc) pvOrgIntVec;
9d004534:	aca30000 	sw	v1,0(a1)
{
    const IMAGE_HEADER_INFO * pImageHeader = getImageHeaderInfoStructure();
    int i = 0;
    void * pvOrgIntVec = (void *)pImageHeader->pOrgVector0;

    for(i=0; i<NUM_INT_VECTOR; i++)
9d004538:	1447fff9 	bne	v0,a3,9d004520 <initIntVector+0x2c>
9d00453c:	00661821 	addu	v1,v1,a2
9d004540:	03e00008 	jr	ra
9d004544:	00000000 	nop

9d004548 <setIntVector>:
isrFunc setIntVector(int vec, isrFunc func)
{
 //   const IMAGE_HEADER_INFO * pImageHeader = getImageHeaderInfoStructure();
    isrFunc t = 0;

    if (vec < NUM_INT_VECTOR)
9d004548:	2883002d 	slti	v1,a0,45
9d00454c:	10600007 	beqz	v1,9d00456c <setIntVector+0x24>
9d004550:	00001021 	move	v0,zero
    {
        t = _isr_primary_install[vec];
9d004554:	3c02a000 	lui	v0,0xa000
9d004558:	24420114 	addiu	v0,v0,276
9d00455c:	00042080 	sll	a0,a0,0x2
9d004560:	00822021 	addu	a0,a0,v0
9d004564:	8c820000 	lw	v0,0(a0)
        _isr_primary_install[vec] = func;       
9d004568:	ac850000 	sw	a1,0(a0)
    }

    return t;
}
9d00456c:	03e00008 	jr	ra
9d004570:	00000000 	nop

9d004574 <setIntEnable>:
uint32_t setIntEnable(int irq)
{
	p32_regset *	iec;
	uint32_t		st;

	iec = ((p32_regset *)&IEC0) + (irq / 32);
9d004574:	28830000 	slti	v1,a0,0
9d004578:	2482001f 	addiu	v0,a0,31
9d00457c:	0083100a 	movz	v0,a0,v1
9d004580:	00021143 	sra	v0,v0,0x5
9d004584:	3c03bf88 	lui	v1,0xbf88
9d004588:	00021100 	sll	v0,v0,0x4
	st = iec->reg;
	iec->set = 1 << (irq % 32);
9d00458c:	24050001 	li	a1,1
uint32_t setIntEnable(int irq)
{
	p32_regset *	iec;
	uint32_t		st;

	iec = ((p32_regset *)&IEC0) + (irq / 32);
9d004590:	24631060 	addiu	v1,v1,4192
9d004594:	00621821 	addu	v1,v1,v0
	st = iec->reg;
	iec->set = 1 << (irq % 32);
9d004598:	00852004 	sllv	a0,a1,a0
{
	p32_regset *	iec;
	uint32_t		st;

	iec = ((p32_regset *)&IEC0) + (irq / 32);
	st = iec->reg;
9d00459c:	8c620000 	lw	v0,0(v1)
	iec->set = 1 << (irq % 32);
9d0045a0:	ac640008 	sw	a0,8(v1)
	return st;
}
9d0045a4:	03e00008 	jr	ra
9d0045a8:	00000000 	nop

9d0045ac <setIntPriority>:
	ipc = ((p32_regset *)&IPC0) + (vec / 4);

	/* Compute the number of bit positions to shift to get to the
	** correct position for the priority bits for this vector.
	*/
	bn = 8 * (vec % 4);
9d0045ac:	000417c3 	sra	v0,a0,0x1f
9d0045b0:	00021782 	srl	v0,v0,0x1e
9d0045b4:	00821821 	addu	v1,a0,v0
	int				bn;

	/* Compute the address of the interrupt priority control register used
	** by this interrupt vector
	*/
	ipc = ((p32_regset *)&IPC0) + (vec / 4);
9d0045b8:	24870003 	addiu	a3,a0,3
9d0045bc:	28880000 	slti	t0,a0,0

	/* Compute the number of bit positions to shift to get to the
	** correct position for the priority bits for this vector.
	*/
	bn = 8 * (vec % 4);
9d0045c0:	30630003 	andi	v1,v1,0x3
	int				bn;

	/* Compute the address of the interrupt priority control register used
	** by this interrupt vector
	*/
	ipc = ((p32_regset *)&IPC0) + (vec / 4);
9d0045c4:	00e8200b 	movn	a0,a3,t0

	/* Compute the number of bit positions to shift to get to the
	** correct position for the priority bits for this vector.
	*/
	bn = 8 * (vec % 4);
9d0045c8:	00621023 	subu	v0,v1,v0
	int				bn;

	/* Compute the address of the interrupt priority control register used
	** by this interrupt vector
	*/
	ipc = ((p32_regset *)&IPC0) + (vec / 4);
9d0045cc:	00042083 	sra	a0,a0,0x2
9d0045d0:	3c03bf88 	lui	v1,0xbf88
9d0045d4:	24631090 	addiu	v1,v1,4240
	bn = 8 * (vec % 4);

	/* Set the interrupt privilege level and sub-privilege level
	*/
	ipc->clr = (0x1F << bn);
	ipc->set = ((ipl << 2) + spl) << bn;
9d0045d8:	00052880 	sll	a1,a1,0x2
	int				bn;

	/* Compute the address of the interrupt priority control register used
	** by this interrupt vector
	*/
	ipc = ((p32_regset *)&IPC0) + (vec / 4);
9d0045dc:	00042100 	sll	a0,a0,0x4
9d0045e0:	00642021 	addu	a0,v1,a0

	/* Compute the number of bit positions to shift to get to the
	** correct position for the priority bits for this vector.
	*/
	bn = 8 * (vec % 4);
9d0045e4:	000210c0 	sll	v0,v0,0x3

	/* Set the interrupt privilege level and sub-privilege level
	*/
	ipc->clr = (0x1F << bn);
	ipc->set = ((ipl << 2) + spl) << bn;
9d0045e8:	00c52821 	addu	a1,a2,a1
	*/
	bn = 8 * (vec % 4);

	/* Set the interrupt privilege level and sub-privilege level
	*/
	ipc->clr = (0x1F << bn);
9d0045ec:	2403001f 	li	v1,31
9d0045f0:	00431804 	sllv	v1,v1,v0
	ipc->set = ((ipl << 2) + spl) << bn;
9d0045f4:	00451004 	sllv	v0,a1,v0
	*/
	bn = 8 * (vec % 4);

	/* Set the interrupt privilege level and sub-privilege level
	*/
	ipc->clr = (0x1F << bn);
9d0045f8:	ac830004 	sw	v1,4(a0)
	ipc->set = ((ipl << 2) + spl) << bn;
9d0045fc:	ac820008 	sw	v0,8(a0)
}
9d004600:	03e00008 	jr	ra
9d004604:	00000000 	nop

9d004608 <getPeripheralClock>:
uint32_t getPeripheralClock()
{
	uint32_t	clkPb;

    clkPb = F_CPU;
    clkPb >>= OSCCONbits.PBDIV;
9d004608:	3c02bf81 	lui	v0,0xbf81
9d00460c:	8c43f000 	lw	v1,-4096(v0)

    return clkPb;

}
9d004610:	3c0204c4 	lui	v0,0x4c4
9d004614:	3442b400 	ori	v0,v0,0xb400
uint32_t getPeripheralClock()
{
	uint32_t	clkPb;

    clkPb = F_CPU;
    clkPb >>= OSCCONbits.PBDIV;
9d004618:	7c630cc0 	ext	v1,v1,0x13,0x2

    return clkPb;

}
9d00461c:	03e00008 	jr	ra
9d004620:	00621006 	srlv	v0,v0,v1

9d004624 <_configSystem>:

uint32_t __attribute__((nomips16)) disableInterrupts(void)
{
    uint32_t status = 0;

    asm volatile("di    %0" : "=r"(status));
9d004624:	41686000 	di	t0

	stInt = disableInterrupts();

	/* Disable wait states in data ram.
	*/
	BMXCONCLR = (1 << _BMXCON_BMXWSDRM_POSITION);
9d004628:	24030040 	li	v1,64
9d00462c:	3c02bf88 	lui	v0,0xbf88
9d004630:	ac432004 	sw	v1,8196(v0)

#ifdef _PCACHE

	stCache = CHECON;
9d004634:	3c07bf88 	lui	a3,0xbf88
9d004638:	8ce94000 	lw	t1,16384(a3)
    stCache |= (3 << _CHECON_PREFEN_POSITION);

	/* Turn on caching for KSEG0
	*/
	asm("mfc0 %0,$16,0" :  "=r"(tmp));
	tmp = (tmp & ~7) | 3;
9d00463c:	2402fff8 	li	v0,-8
	*/
    stCache |= (3 << _CHECON_PREFEN_POSITION);

	/* Turn on caching for KSEG0
	*/
	asm("mfc0 %0,$16,0" :  "=r"(tmp));
9d004640:	40038000 	mfc0	v1,c0_config
	tmp = (tmp & ~7) | 3;
9d004644:	00621024 	and	v0,v1,v0
	stCache = CHECON;

	/* Configure predictive prefetch caching for both cached and
	** non-cached memory regions.
	*/
    stCache |= (3 << _CHECON_PREFEN_POSITION);
9d004648:	35290030 	ori	t1,t1,0x30

	/* Turn on caching for KSEG0
	*/
	asm("mfc0 %0,$16,0" :  "=r"(tmp));
	tmp = (tmp & ~7) | 3;
9d00464c:	34420003 	ori	v0,v0,0x3
	asm("mtc0 %0,$16,0" :: "r" (tmp));
9d004650:	40828000 	mtc0	v0,c0_config

	/* Configure the number of wait states in the program flash
	*/
    wait = 0;

    while(clk > FLASH_SPEED_HZ)
9d004654:	3c0501c9 	lui	a1,0x1c9
9d004658:	34a5c381 	ori	a1,a1,0xc381
9d00465c:	0085182b 	sltu	v1,a0,a1
9d004660:	14600007 	bnez	v1,9d004680 <_configSystem+0x5c>
9d004664:	00001021 	move	v0,zero
    {
        wait += 1;
        clk -= FLASH_SPEED_HZ;
9d004668:	3c06fe36 	lui	a2,0xfe36
9d00466c:	24c63c80 	addiu	a2,a2,15488
9d004670:	00862021 	addu	a0,a0,a2

	/* Configure the number of wait states in the program flash
	*/
    wait = 0;

    while(clk > FLASH_SPEED_HZ)
9d004674:	0085182b 	sltu	v1,a0,a1
9d004678:	1060fffd 	beqz	v1,9d004670 <_configSystem+0x4c>
9d00467c:	24420001 	addiu	v0,v0,1
    {
        wait += 1;
        clk -= FLASH_SPEED_HZ;
    }

    stCache &= ~_CHECON_PFMWS_MASK;
9d004680:	2404fff8 	li	a0,-8
9d004684:	01241824 	and	v1,t1,a0
	stCache |= (wait << _CHECON_PFMWS_POSITION);
9d004688:	00431025 	or	v0,v0,v1
**		enableInterrupts() or disableInterrupts().
*/

void __attribute__((nomips16))  restoreInterrupts(uint32_t st)
{
    if (st & 0x00000001)
9d00468c:	31030001 	andi	v1,t0,0x1
    }

    stCache &= ~_CHECON_PFMWS_MASK;
	stCache |= (wait << _CHECON_PFMWS_POSITION);

	CHECON = stCache;
9d004690:	14600003 	bnez	v1,9d0046a0 <_configSystem+0x7c>
**		enableInterrupts() or disableInterrupts().
*/

void __attribute__((nomips16))  restoreInterrupts(uint32_t st)
{
    if (st & 0x00000001)
9d004694:	ace24000 	sw	v0,16384(a3)
	{
        asm volatile("ei");
	}
    else
	{
        asm volatile("di");
9d004698:	03e00008 	jr	ra
9d00469c:	41606000 	di

void __attribute__((nomips16))  restoreInterrupts(uint32_t st)
{
    if (st & 0x00000001)
	{
        asm volatile("ei");
9d0046a0:	03e00008 	jr	ra
9d0046a4:	41606020 	ei

9d0046a8 <_enableMultiVectorInterrupts>:
    unsigned int val;

    /* Set the CP0 bit so that interrupt exceptions use the
	** special interrupt vector and not the general exception vector.
	*/
    asm volatile("mfc0   %0,$13" : "=r"(val));
9d0046a8:	40036800 	mfc0	v1,c0_cause
    val |= 0x00800000;
9d0046ac:	3c020080 	lui	v0,0x80
9d0046b0:	00621025 	or	v0,v1,v0
    asm volatile("mtc0   %0,$13" : "+r"(val));
9d0046b4:	40826800 	mtc0	v0,c0_cause

	/* Turn on multi-vectored interrupts.
	*/
    INTCONSET = _INTCON_MVEC_MASK;
9d0046b8:	24031000 	li	v1,4096
9d0046bc:	3c02bf88 	lui	v0,0xbf88
9d0046c0:	ac431008 	sw	v1,4104(v0)

uint32_t __attribute__((nomips16))  enableInterrupts(void)
{
    uint32_t status = 0;

    asm volatile("ei    %0" : "=r"(status));
9d0046c4:	03e00008 	jr	ra

    /* Enable interrupts.
	*/
    enableInterrupts();

}
9d0046c8:	41626020 	ei	v0

9d0046cc <_initCoreTimer>:

void __attribute__((nomips16)) _initCoreTimer(uint32_t prd)
{
	/* Clear the core timer counter
	*/
    asm volatile("mtc0   $0,$9");
9d0046cc:	40804800 	mtc0	zero,c0_count

    /* Store the requested value in the compare register
	*/
    asm volatile("mtc0   %0,$11" : "+r"(prd));
9d0046d0:	03e00008 	jr	ra
}
9d0046d4:	40845800 	mtc0	a0,c0_compare

9d0046d8 <turnOffPWM>:
}


//************************************************************************
void turnOffPWM(uint8_t timer)
{
9d0046d8:	308400ff 	andi	a0,a0,0xff
	*/
	ocp = (p32_oc *)(_OCMP1_BASE_ADDRESS + (0x200 * (timer - (_TIMER_OC1 >> _BN_TIMER_OC))));
	ocp->ocxCon.clr = OCCON_ON;

	// Turn off the bit saying that this PWM is active.
	pwm_active &= ~(1 << (timer - (_TIMER_OC1 >> _BN_TIMER_OC)));
9d0046dc:	2482ffff 	addiu	v0,a0,-1
9d0046e0:	24030001 	li	v1,1
9d0046e4:	9385802c 	lbu	a1,-32724(gp)
9d0046e8:	00431004 	sllv	v0,v1,v0
{
	p32_oc *	ocp;

	/* Disable the output compare.
	*/
	ocp = (p32_oc *)(_OCMP1_BASE_ADDRESS + (0x200 * (timer - (_TIMER_OC1 >> _BN_TIMER_OC))));
9d0046ec:	3c03005f 	lui	v1,0x5f
9d0046f0:	3463c017 	ori	v1,v1,0xc017
9d0046f4:	00832021 	addu	a0,a0,v1
	ocp->ocxCon.clr = OCCON_ON;

	// Turn off the bit saying that this PWM is active.
	pwm_active &= ~(1 << (timer - (_TIMER_OC1 >> _BN_TIMER_OC)));
9d0046f8:	00021027 	nor	v0,zero,v0
{
	p32_oc *	ocp;

	/* Disable the output compare.
	*/
	ocp = (p32_oc *)(_OCMP1_BASE_ADDRESS + (0x200 * (timer - (_TIMER_OC1 >> _BN_TIMER_OC))));
9d0046fc:	00042240 	sll	a0,a0,0x9
	ocp->ocxCon.clr = OCCON_ON;
9d004700:	34038000 	li	v1,0x8000

	// Turn off the bit saying that this PWM is active.
	pwm_active &= ~(1 << (timer - (_TIMER_OC1 >> _BN_TIMER_OC)));
9d004704:	00451024 	and	v0,v0,a1
	p32_oc *	ocp;

	/* Disable the output compare.
	*/
	ocp = (p32_oc *)(_OCMP1_BASE_ADDRESS + (0x200 * (timer - (_TIMER_OC1 >> _BN_TIMER_OC))));
	ocp->ocxCon.clr = OCCON_ON;
9d004708:	ac830004 	sw	v1,4(a0)

	// Turn off the bit saying that this PWM is active.
	pwm_active &= ~(1 << (timer - (_TIMER_OC1 >> _BN_TIMER_OC)));

	// If no PWM are active, turn off the timer.
	if (pwm_active == 0)
9d00470c:	14400003 	bnez	v0,9d00471c <turnOffPWM+0x44>
9d004710:	a382802c 	sb	v0,-32724(gp)
	{
    	T2CONCLR = TBCON_ON;
9d004714:	3c02bf80 	lui	v0,0xbf80
9d004718:	ac430804 	sw	v1,2052(v0)
9d00471c:	03e00008 	jr	ra
9d004720:	00000000 	nop

9d004724 <_ZN5Print5writeEPKc>:

//************************************************************************
/* default implementation: may be overridden */
//************************************************************************
void Print::write(const char *str)
{
9d004724:	27bdffe0 	addiu	sp,sp,-32
9d004728:	afb10018 	sw	s1,24(sp)
9d00472c:	afb00014 	sw	s0,20(sp)
9d004730:	afbf001c 	sw	ra,28(sp)
9d004734:	00a08021 	move	s0,a1
	while (*str)
9d004738:	80a50000 	lb	a1,0(a1)
9d00473c:	10a0000a 	beqz	a1,9d004768 <_ZN5Print5writeEPKc+0x44>
9d004740:	00808821 	move	s1,a0
	{
		write(*str++);
9d004744:	8e220000 	lw	v0,0(s1)
9d004748:	30a500ff 	andi	a1,a1,0xff
9d00474c:	26100001 	addiu	s0,s0,1
9d004750:	8c420000 	lw	v0,0(v0)
9d004754:	0040f809 	jalr	v0
9d004758:	02202021 	move	a0,s1
//************************************************************************
/* default implementation: may be overridden */
//************************************************************************
void Print::write(const char *str)
{
	while (*str)
9d00475c:	82050000 	lb	a1,0(s0)
9d004760:	54a0fff9 	bnezl	a1,9d004748 <_ZN5Print5writeEPKc+0x24>
9d004764:	8e220000 	lw	v0,0(s1)
	{
		write(*str++);
	}
}
9d004768:	8fbf001c 	lw	ra,28(sp)
9d00476c:	8fb10018 	lw	s1,24(sp)
9d004770:	8fb00014 	lw	s0,20(sp)
9d004774:	03e00008 	jr	ra
9d004778:	27bd0020 	addiu	sp,sp,32

9d00477c <_ZN5Print5writeEPKhm>:

//************************************************************************
/* default implementation: may be overridden */
//************************************************************************
void Print::write(const uint8_t *buffer, size_t size)
{
9d00477c:	27bdffe0 	addiu	sp,sp,-32
9d004780:	afb20018 	sw	s2,24(sp)
9d004784:	afb10014 	sw	s1,20(sp)
9d004788:	afb00010 	sw	s0,16(sp)
9d00478c:	afbf001c 	sw	ra,28(sp)
9d004790:	00c08021 	move	s0,a2
9d004794:	00809021 	move	s2,a0
	while (size--)
9d004798:	10c0000a 	beqz	a2,9d0047c4 <_ZN5Print5writeEPKhm+0x48>
9d00479c:	00a08821 	move	s1,a1
	{
		write(*buffer++);
9d0047a0:	8e420000 	lw	v0,0(s2)
9d0047a4:	92250000 	lbu	a1,0(s1)
9d0047a8:	2610ffff 	addiu	s0,s0,-1
9d0047ac:	8c420000 	lw	v0,0(v0)
9d0047b0:	02402021 	move	a0,s2
9d0047b4:	0040f809 	jalr	v0
9d0047b8:	26310001 	addiu	s1,s1,1
//************************************************************************
/* default implementation: may be overridden */
//************************************************************************
void Print::write(const uint8_t *buffer, size_t size)
{
	while (size--)
9d0047bc:	5600fff9 	bnezl	s0,9d0047a4 <_ZN5Print5writeEPKhm+0x28>
9d0047c0:	8e420000 	lw	v0,0(s2)
	{
		write(*buffer++);
	}
}
9d0047c4:	8fbf001c 	lw	ra,28(sp)
9d0047c8:	8fb20018 	lw	s2,24(sp)
9d0047cc:	8fb10014 	lw	s1,20(sp)
9d0047d0:	8fb00010 	lw	s0,16(sp)
9d0047d4:	03e00008 	jr	ra
9d0047d8:	27bd0020 	addiu	sp,sp,32

9d0047dc <_ZN5Print5printEPKc>:
	}
}
//************************************************************************
void Print::print(const char str[])
{
	write(str);
9d0047dc:	8c820000 	lw	v0,0(a0)
9d0047e0:	8c590004 	lw	t9,4(v0)
9d0047e4:	03200008 	jr	t9
9d0047e8:	00000000 	nop

9d0047ec <main>:
__attribute__((section(".comment"))) void (*__use_force_isr_install)(void) = &__use_isr_install;
}

//************************************************************************
int main(void)
{
9d0047ec:	27bdffe8 	addiu	sp,sp,-24
9d0047f0:	afbf0014 	sw	ra,20(sp)
	init();
9d0047f4:	0f40133f 	jal	9d004cfc <init>
9d0047f8:	00000000 	nop

	setup();
9d0047fc:	0f40051a 	jal	9d001468 <setup>
9d004800:	00000000 	nop

	while (1)
	{
		_scheduleTask();
9d004804:	0f401214 	jal	9d004850 <_scheduleTask>
9d004808:	00000000 	nop
		loop();
9d00480c:	0f400559 	jal	9d001564 <loop>
9d004810:	00000000 	nop
9d004814:	0b401201 	j	9d004804 <main+0x18>
9d004818:	00000000 	nop

9d00481c <_initTaskManager>:
void
_initTaskManager() {
	int		id;

	for (id = 0; id < NUM_TASKS; id++) {
		rgtaskTable[id].pfnTask = 0;
9d00481c:	3c03a000 	lui	v1,0xa000
9d004820:	2462103c 	addiu	v0,v1,4156
9d004824:	ac60103c 	sw	zero,4156(v1)
9d004828:	ac400014 	sw	zero,20(v0)
9d00482c:	ac400028 	sw	zero,40(v0)
9d004830:	ac40003c 	sw	zero,60(v0)
9d004834:	ac400050 	sw	zero,80(v0)
9d004838:	ac400064 	sw	zero,100(v0)
9d00483c:	ac400078 	sw	zero,120(v0)
9d004840:	ac40008c 	sw	zero,140(v0)
	}

	tmsLastEvent = 0;
9d004844:	af808038 	sw	zero,-32712(gp)
	tmsNextEvent = 0;

}
9d004848:	03e00008 	jr	ra
9d00484c:	af808034 	sw	zero,-32716(gp)

9d004850 <_scheduleTask>:
	unsigned long	tmsCur;		//current system time
	unsigned long	tmsNxt;		//time for next event for this task
	unsigned long	dtmsNext;
	unsigned long	dtms;

	if (cntActiveTask == 0) {
9d004850:	8f828030 	lw	v0,-32720(gp)
**	xxxN..C..........................................Lxx
**		current time and next time have wrapped: (N < L) && (C >= N)
*/

void
_scheduleTask() {
9d004854:	27bdffc8 	addiu	sp,sp,-56
9d004858:	afbf0034 	sw	ra,52(sp)
9d00485c:	afb50030 	sw	s5,48(sp)
9d004860:	afb4002c 	sw	s4,44(sp)
9d004864:	afb30028 	sw	s3,40(sp)
9d004868:	afb20024 	sw	s2,36(sp)
9d00486c:	afb10020 	sw	s1,32(sp)
	unsigned long	tmsCur;		//current system time
	unsigned long	tmsNxt;		//time for next event for this task
	unsigned long	dtmsNext;
	unsigned long	dtms;

	if (cntActiveTask == 0) {
9d004870:	1440000a 	bnez	v0,9d00489c <_scheduleTask+0x4c>
9d004874:	afb0001c 	sw	s0,28(sp)

	/* Compute when the next event time will be by adding the event
	** time delta to the current time.
	*/
	tmsNextEvent = tmsCur + dtmsNext;
}
9d004878:	8fbf0034 	lw	ra,52(sp)
9d00487c:	8fb50030 	lw	s5,48(sp)
9d004880:	8fb4002c 	lw	s4,44(sp)
9d004884:	8fb30028 	lw	s3,40(sp)
9d004888:	8fb20024 	lw	s2,36(sp)
9d00488c:	8fb10020 	lw	s1,32(sp)
9d004890:	8fb0001c 	lw	s0,28(sp)
9d004894:	03e00008 	jr	ra
9d004898:	27bd0038 	addiu	sp,sp,56

	if (cntActiveTask == 0) {
		return;
	}

	tmsCur = millis();
9d00489c:	0f401326 	jal	9d004c98 <millis>
9d0048a0:	00000000 	nop

	/* The system millisecond timer will overflow every 49.71 days. The complexity of
	** this conditional is to account for the cases where either the next event time has
	** wrapped around or the current time has wrapped around.
	*/
	if ( ((tmsNextEvent >= tmsLastEvent) &&
9d0048a4:	8f848034 	lw	a0,-32716(gp)
9d0048a8:	8f838038 	lw	v1,-32712(gp)
9d0048ac:	0083282b 	sltu	a1,a0,v1
9d0048b0:	14a00048 	bnez	a1,9d0049d4 <_scheduleTask+0x184>
9d0048b4:	0043182b 	sltu	v1,v0,v1
9d0048b8:	14600004 	bnez	v1,9d0048cc <_scheduleTask+0x7c>
9d0048bc:	3c10a000 	lui	s0,0xa000
				((tmsCur >= tmsLastEvent) && (tmsCur < tmsNextEvent))) ||
9d0048c0:	0044202b 	sltu	a0,v0,a0
9d0048c4:	1480ffec 	bnez	a0,9d004878 <_scheduleTask+0x28>
9d0048c8:	3c10a000 	lui	s0,0xa000
9d0048cc:	2610104c 	addiu	s0,s0,4172
**	xxxN..C..........................................Lxx
**		current time and next time have wrapped: (N < L) && (C >= N)
*/

void
_scheduleTask() {
9d0048d0:	2413ffff 	li	s3,-1
9d0048d4:	00008821 	move	s1,zero

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
			(*rgtaskTable[id].pfnTask)(id, rgtaskTable[id].varTask);
			rgtaskTable[id].fsFlags &= ~fsBusy;
9d0048d8:	2415fffe 	li	s5,-2

			/* Decrement the repeat count.
			*/
			if ((rgtaskTable[id].stTask > 0) &&
9d0048dc:	3414fffe 	li	s4,0xfffe
	** the table for all events that have elapsed and call their
	** associated functions, update their next event timers, and then
	** figure out when the next event time is.
	*/
	dtmsNext = 0xFFFFFFFF;
	for (id = 0; id < NUM_TASKS; id++) {
9d0048e0:	24120008 	li	s2,8
		/* If this isn't an active task, go to the next one.
		*/
		if ((rgtaskTable[id].pfnTask == 0) || 
9d0048e4:	8e03fff0 	lw	v1,-16(s0)
9d0048e8:	5060002c 	beqzl	v1,9d00499c <_scheduleTask+0x14c>
9d0048ec:	26310001 	addiu	s1,s1,1
9d0048f0:	96040000 	lhu	a0,0(s0)
9d0048f4:	50800029 	beqzl	a0,9d00499c <_scheduleTask+0x14c>
9d0048f8:	26310001 	addiu	s1,s1,1
		** occur if a user task function calls delay() or any other
		** function that causes _scheduleTask to be called recursively.
		** This prevents the task function from being called recursively
		** until the system crashes.
		*/
		if ((rgtaskTable[id].fsFlags & fsBusy) != 0) {
9d0048fc:	96040002 	lhu	a0,2(s0)
9d004900:	30840001 	andi	a0,a0,0x1
9d004904:	54800025 	bnezl	a0,9d00499c <_scheduleTask+0x14c>
9d004908:	26310001 	addiu	s1,s1,1
			continue;
		}

		/* Check if this task's period has timed out.
		*/
		tmsNxt = rgtaskTable[id].tmsNext;
9d00490c:	8e04fff8 	lw	a0,-8(s0)
		if ( ((tmsNxt >= tmsLastEvent) && 
9d004910:	8f858038 	lw	a1,-32712(gp)
9d004914:	0085302b 	sltu	a2,a0,a1
9d004918:	10c00032 	beqz	a2,9d0049e4 <_scheduleTask+0x194>
9d00491c:	0044302b 	sltu	a2,v0,a0
						((tmsCur >= tmsNxt) || (tmsCur < tmsLastEvent))) ||
			 ((tmsNxt <  tmsLastEvent) && 
9d004920:	54c0001b 	bnezl	a2,9d004990 <_scheduleTask+0x140>
9d004924:	00822023 	subu	a0,a0,v0
						((tmsCur >= tmsNxt) && (tmsCur < tmsLastEvent))) ) {
9d004928:	0045282b 	sltu	a1,v0,a1
9d00492c:	50a00018 	beqzl	a1,9d004990 <_scheduleTask+0x140>
9d004930:	00822023 	subu	a0,a0,v0
			*/
			rgtaskTable[id].tmsNext += rgtaskTable[id].tmsPeriod;

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
9d004934:	96060002 	lhu	a2,2(s0)
						((tmsCur >= tmsNxt) && (tmsCur < tmsLastEvent))) ) {

			/* This task event has timed out. Update the event time for the
			** next event on this task.
			*/
			rgtaskTable[id].tmsNext += rgtaskTable[id].tmsPeriod;
9d004938:	8e07fff4 	lw	a3,-12(s0)

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
			(*rgtaskTable[id].pfnTask)(id, rgtaskTable[id].varTask);
9d00493c:	8e05fffc 	lw	a1,-4(s0)
			*/
			rgtaskTable[id].tmsNext += rgtaskTable[id].tmsPeriod;

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
9d004940:	34c60001 	ori	a2,a2,0x1
						((tmsCur >= tmsNxt) && (tmsCur < tmsLastEvent))) ) {

			/* This task event has timed out. Update the event time for the
			** next event on this task.
			*/
			rgtaskTable[id].tmsNext += rgtaskTable[id].tmsPeriod;
9d004944:	00e42021 	addu	a0,a3,a0
9d004948:	ae04fff8 	sw	a0,-8(s0)

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
			(*rgtaskTable[id].pfnTask)(id, rgtaskTable[id].varTask);
9d00494c:	afa20010 	sw	v0,16(sp)
9d004950:	02202021 	move	a0,s1
9d004954:	0060f809 	jalr	v1
9d004958:	a6060002 	sh	a2,2(s0)
			rgtaskTable[id].fsFlags &= ~fsBusy;

			/* Decrement the repeat count.
			*/
			if ((rgtaskTable[id].stTask > 0) &&
9d00495c:	96030000 	lhu	v1,0(s0)

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
			(*rgtaskTable[id].pfnTask)(id, rgtaskTable[id].varTask);
			rgtaskTable[id].fsFlags &= ~fsBusy;
9d004960:	96050002 	lhu	a1,2(s0)

			/* Decrement the repeat count.
			*/
			if ((rgtaskTable[id].stTask > 0) &&
9d004964:	8fa20010 	lw	v0,16(sp)
9d004968:	2463ffff 	addiu	v1,v1,-1
9d00496c:	3063ffff 	andi	v1,v1,0xffff

			/* Call the event function.
			*/
			rgtaskTable[id].fsFlags |= fsBusy;
			(*rgtaskTable[id].pfnTask)(id, rgtaskTable[id].varTask);
			rgtaskTable[id].fsFlags &= ~fsBusy;
9d004970:	00b52824 	and	a1,a1,s5

			/* Decrement the repeat count.
			*/
			if ((rgtaskTable[id].stTask > 0) &&
9d004974:	0074202b 	sltu	a0,v1,s4
9d004978:	10800003 	beqz	a0,9d004988 <_scheduleTask+0x138>
9d00497c:	a6050002 	sh	a1,2(s0)
				rgtaskTable[id].stTask -= 1;

				/* The task state counter has gone to 0. This task is now
				** disabled.
				*/
				if (rgtaskTable[id].stTask == 0) {
9d004980:	1060001c 	beqz	v1,9d0049f4 <_scheduleTask+0x1a4>
9d004984:	a6030000 	sh	v1,0(s0)
9d004988:	8e04fff8 	lw	a0,-8(s0)
		}

		/* Compute delta of this event time from the current time and
		** remember it if it is less than the current delta.
		*/
		dtms = rgtaskTable[id].tmsNext - tmsCur;
9d00498c:	00822023 	subu	a0,a0,v0
		if (dtms < dtmsNext) {
9d004990:	0093182b 	sltu	v1,a0,s3
9d004994:	0083980b 	movn	s3,a0,v1
	** the table for all events that have elapsed and call their
	** associated functions, update their next event timers, and then
	** figure out when the next event time is.
	*/
	dtmsNext = 0xFFFFFFFF;
	for (id = 0; id < NUM_TASKS; id++) {
9d004998:	26310001 	addiu	s1,s1,1
9d00499c:	1632ffd1 	bne	s1,s2,9d0048e4 <_scheduleTask+0x94>
9d0049a0:	26100014 	addiu	s0,s0,20

	/* Compute when the next event time will be by adding the event
	** time delta to the current time.
	*/
	tmsNextEvent = tmsCur + dtmsNext;
}
9d0049a4:	8fbf0034 	lw	ra,52(sp)
	tmsLastEvent = tmsCur;

	/* Compute when the next event time will be by adding the event
	** time delta to the current time.
	*/
	tmsNextEvent = tmsCur + dtmsNext;
9d0049a8:	02629821 	addu	s3,s3,v0
9d0049ac:	af938034 	sw	s3,-32716(gp)
}
9d0049b0:	8fb50030 	lw	s5,48(sp)
9d0049b4:	8fb4002c 	lw	s4,44(sp)
9d0049b8:	8fb30028 	lw	s3,40(sp)
9d0049bc:	8fb20024 	lw	s2,36(sp)
9d0049c0:	8fb10020 	lw	s1,32(sp)
9d0049c4:	8fb0001c 	lw	s0,28(sp)
	}

	/* All done with event tasks. Update the last event time with
	** the current time.
	*/
	tmsLastEvent = tmsCur;
9d0049c8:	af828038 	sw	v0,-32712(gp)

	/* Compute when the next event time will be by adding the event
	** time delta to the current time.
	*/
	tmsNextEvent = tmsCur + dtmsNext;
}
9d0049cc:	03e00008 	jr	ra
9d0049d0:	27bd0038 	addiu	sp,sp,56
	** this conditional is to account for the cases where either the next event time has
	** wrapped around or the current time has wrapped around.
	*/
	if ( ((tmsNextEvent >= tmsLastEvent) &&
				((tmsCur >= tmsLastEvent) && (tmsCur < tmsNextEvent))) ||
		 ((tmsNextEvent < tmsLastEvent) &&
9d0049d4:	5460ffbb 	bnezl	v1,9d0048c4 <_scheduleTask+0x74>
9d0049d8:	0044202b 	sltu	a0,v0,a0

	/* Compute when the next event time will be by adding the event
	** time delta to the current time.
	*/
	tmsNextEvent = tmsCur + dtmsNext;
}
9d0049dc:	0b40121f 	j	9d00487c <_scheduleTask+0x2c>
9d0049e0:	8fbf0034 	lw	ra,52(sp)
		}

		/* Check if this task's period has timed out.
		*/
		tmsNxt = rgtaskTable[id].tmsNext;
		if ( ((tmsNxt >= tmsLastEvent) && 
9d0049e4:	50c0ffd4 	beqzl	a2,9d004938 <_scheduleTask+0xe8>
9d0049e8:	96060002 	lhu	a2,2(s0)
						((tmsCur >= tmsNxt) || (tmsCur < tmsLastEvent))) ||
			 ((tmsNxt <  tmsLastEvent) && 
						((tmsCur >= tmsNxt) && (tmsCur < tmsLastEvent))) ) {
9d0049ec:	0b40124b 	j	9d00492c <_scheduleTask+0xdc>
9d0049f0:	0045282b 	sltu	a1,v0,a1
				/* The task state counter has gone to 0. This task is now
				** disabled.
				*/
				if (rgtaskTable[id].stTask == 0) {
					rgtaskTable[id].tmsNext = 0;
					cntActiveTask -= 1;
9d0049f4:	8f838030 	lw	v1,-32720(gp)

				/* The task state counter has gone to 0. This task is now
				** disabled.
				*/
				if (rgtaskTable[id].stTask == 0) {
					rgtaskTable[id].tmsNext = 0;
9d0049f8:	ae00fff8 	sw	zero,-8(s0)
					cntActiveTask -= 1;
9d0049fc:	2463ffff 	addiu	v1,v1,-1
					continue;
9d004a00:	0b401266 	j	9d004998 <_scheduleTask+0x148>
9d004a04:	af838030 	sw	v1,-32720(gp)

9d004a08 <millisecondCoreTimerService>:
*/
uint32_t millisecondCoreTimerService(uint32_t curTime)
{
    static int nextInt = 0;
    uint32_t relWait = 0;
    uint32_t relTime = curTime - nextInt;
9d004a08:	8f858048 	lw	a1,-32696(gp)
    uint32_t millisLocal = gTimer0_millis;  // defeat volatility
9d004a0c:	8f83803c 	lw	v1,-32708(gp)
**
*/
uint32_t millisecondCoreTimerService(uint32_t curTime)
{
    static int nextInt = 0;
    uint32_t relWait = 0;
9d004a10:	00001021 	move	v0,zero
    uint32_t relTime = curTime - nextInt;
9d004a14:	00852023 	subu	a0,a0,a1

    // catch-up up to current time; we may have fallen behind due to interrupts being diabled.
    while(relWait <= relTime)
    {
        millisLocal++;                      // add a ms to our time
        relWait += CORE_TICK_RATE;          // add a ms to our next ISR time
9d004a18:	34079c40 	li	a3,0x9c40
9d004a1c:	00471021 	addu	v0,v0,a3
    uint32_t relWait = 0;
    uint32_t relTime = curTime - nextInt;
    uint32_t millisLocal = gTimer0_millis;  // defeat volatility

    // catch-up up to current time; we may have fallen behind due to interrupts being diabled.
    while(relWait <= relTime)
9d004a20:	0082302b 	sltu	a2,a0,v0
9d004a24:	10c0fffd 	beqz	a2,9d004a1c <millisecondCoreTimerService+0x14>
9d004a28:	24630001 	addiu	v1,v1,1
        millisLocal++;                      // add a ms to our time
        relWait += CORE_TICK_RATE;          // add a ms to our next ISR time
     }

    // set when we want to be called again
    nextInt += relWait;                     // calculate the absolute interrupt time we want.
9d004a2c:	00451021 	addu	v0,v0,a1

    // we want to sync gCore_timer_last_val with the last millisecond "count" value
    // curTime may not be exactly on a millisecond boundary, but we know where that is
    // we know nextInt is our next millisecond boundary, so less 1 CORE_TICK_RATE will be our last one
    // gCore_timer_last_val = curTime;         // This is the original bogus code
    gCore_timer_last_val =  nextInt - CORE_TICK_RATE;
9d004a30:	34049c40 	li	a0,0x9c40
9d004a34:	00442023 	subu	a0,v0,a0
9d004a38:	af848040 	sw	a0,-32704(gp)
        millisLocal++;                      // add a ms to our time
        relWait += CORE_TICK_RATE;          // add a ms to our next ISR time
     }

    // set when we want to be called again
    nextInt += relWait;                     // calculate the absolute interrupt time we want.
9d004a3c:	af828048 	sw	v0,-32696(gp)
    // we know nextInt is our next millisecond boundary, so less 1 CORE_TICK_RATE will be our last one
    // gCore_timer_last_val = curTime;         // This is the original bogus code
    gCore_timer_last_val =  nextInt - CORE_TICK_RATE;

    // update the global millisecond counter.
    gTimer0_millis = millisLocal;           // Total number of ms
9d004a40:	af83803c 	sw	v1,-32708(gp)

    return(nextInt);
}
9d004a44:	03e00008 	jr	ra
9d004a48:	00000000 	nop

9d004a4c <CoreTimerHandler>:
**      each service's logical compare values. And then the next and soonest logical compare value is searched for and set as
**      the real compare value to be interrupted to notify the Serivces when count hits that value.
**
*/
void __attribute__((interrupt(),nomips16)) CoreTimerHandler(void)
{
9d004a4c:	415de800 	rdpgpr	sp,sp
9d004a50:	401b7000 	mfc0	k1,c0_epc
9d004a54:	401a6002 	mfc0	k0,c0_srsctl
9d004a58:	27bdff58 	addiu	sp,sp,-168
9d004a5c:	afbb00a4 	sw	k1,164(sp)
9d004a60:	401b6000 	mfc0	k1,c0_status
9d004a64:	afba00a0 	sw	k0,160(sp)
9d004a68:	401a6800 	mfc0	k0,c0_cause
9d004a6c:	001ad282 	srl	k0,k0,0xa
9d004a70:	afbb009c 	sw	k1,156(sp)
9d004a74:	7f5b7a84 	ins	k1,k0,0xa,0x6
9d004a78:	7c1b2044 	ins	k1,zero,0x1,0x4
9d004a7c:	409b6000 	mtc0	k1,c0_status
9d004a80:	afa3002c 	sw	v1,44(sp)
9d004a84:	8fa300a0 	lw	v1,160(sp)
9d004a88:	3063000f 	andi	v1,v1,0xf
9d004a8c:	1460001a 	bnez	v1,9d004af8 <CoreTimerHandler+0xac>
9d004a90:	afa20028 	sw	v0,40(sp)
9d004a94:	afbf008c 	sw	ra,140(sp)
9d004a98:	afbe0088 	sw	s8,136(sp)
9d004a9c:	afb90084 	sw	t9,132(sp)
9d004aa0:	afb80080 	sw	t8,128(sp)
9d004aa4:	afb7007c 	sw	s7,124(sp)
9d004aa8:	afb60078 	sw	s6,120(sp)
9d004aac:	afb50074 	sw	s5,116(sp)
9d004ab0:	afb40070 	sw	s4,112(sp)
9d004ab4:	afb3006c 	sw	s3,108(sp)
9d004ab8:	afb20068 	sw	s2,104(sp)
9d004abc:	afb10064 	sw	s1,100(sp)
9d004ac0:	afb00060 	sw	s0,96(sp)
9d004ac4:	afaf005c 	sw	t7,92(sp)
9d004ac8:	afae0058 	sw	t6,88(sp)
9d004acc:	afad0054 	sw	t5,84(sp)
9d004ad0:	afac0050 	sw	t4,80(sp)
9d004ad4:	afab004c 	sw	t3,76(sp)
9d004ad8:	afaa0048 	sw	t2,72(sp)
9d004adc:	afa90044 	sw	t1,68(sp)
9d004ae0:	afa80040 	sw	t0,64(sp)
9d004ae4:	afa7003c 	sw	a3,60(sp)
9d004ae8:	afa60038 	sw	a2,56(sp)
9d004aec:	afa50034 	sw	a1,52(sp)
9d004af0:	afa40030 	sw	a0,48(sp)
9d004af4:	afa10024 	sw	at,36(sp)
9d004af8:	00001012 	mflo	v0
9d004afc:	afa20094 	sw	v0,148(sp)
9d004b00:	00001810 	mfhi	v1
9d004b04:	afa30090 	sw	v1,144(sp)

    // we know that count >= compare, otherwise we would not have been interrupted
    // we also know that count and compare >= gLastBaseCount as this was our last count value.

    // get our current time; this will establish our next base
    read_count(curTime); 
9d004b08:	40134800 	mfc0	s3,c0_count
    relCurTime = curTime - gLastBaseCount;
9d004b0c:	8f9e8044 	lw	s8,-32700(gp)
9d004b10:	3c10a000 	lui	s0,0xa000
        {
            // if the serivce exists
            if(gCoreTimerInfo[i].serivce != NULL)
            {
                // if their time has come up
                relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
9d004b14:	3c05a000 	lui	a1,0xa000
    // we know that count >= compare, otherwise we would not have been interrupted
    // we also know that count and compare >= gLastBaseCount as this was our last count value.

    // get our current time; this will establish our next base
    read_count(curTime); 
    relCurTime = curTime - gLastBaseCount;
9d004b18:	027ef023 	subu	s8,s3,s8

    // we know that count >= compare, otherwise we would not have been interrupted
    // we also know that count and compare >= gLastBaseCount as this was our last count value.

    // get our current time; this will establish our next base
    read_count(curTime); 
9d004b1c:	02603021 	move	a2,s3
9d004b20:	261001cc 	addiu	s0,s0,460
9d004b24:	3c12bf88 	lui	s2,0xbf88
        {
            // if the serivce exists
            if(gCoreTimerInfo[i].serivce != NULL)
            {
                // if their time has come up
                relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
9d004b28:	24a501c8 	addiu	a1,a1,456
    {
        // make sure we find the lowest int to set
        relNextInt = 0xFFFFFFFF;

        // check to see who all we need to call
        for(i=0; i<MaxNbrOfCoreTimerServices; i++)
9d004b2c:	24030003 	li	v1,3
        // we need to apply our base to convert from relative values to an absolute time.
        compare = relNextInt + gLastBaseCount;
        write_comp(compare); 

        // clear the CT flag
        mCTClearIntFlag();
9d004b30:	24110001 	li	s1,1
    // we know that count >= compare, otherwise we would not have been interrupted
    // we also know that count and compare >= gLastBaseCount as this was our last count value.

    // get our current time; this will establish our next base
    read_count(curTime); 
    relCurTime = curTime - gLastBaseCount;
9d004b34:	0200b021 	move	s6,s0
    {
        // make sure we find the lowest int to set
        relNextInt = 0xFFFFFFFF;

        // check to see who all we need to call
        for(i=0; i<MaxNbrOfCoreTimerServices; i++)
9d004b38:	0000a021 	move	s4,zero
    nextBase = curTime;

    do
    {
        // make sure we find the lowest int to set
        relNextInt = 0xFFFFFFFF;
9d004b3c:	2415ffff 	li	s5,-1

        // check to see who all we need to call
        for(i=0; i<MaxNbrOfCoreTimerServices; i++)
        {
            // if the serivce exists
            if(gCoreTimerInfo[i].serivce != NULL)
9d004b40:	8ec20000 	lw	v0,0(s6)
            {
                // if their time has come up
                relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
9d004b44:	0014b8c0 	sll	s7,s4,0x3
9d004b48:	02e5b821 	addu	s7,s7,a1
    {
        // make sure we find the lowest int to set
        relNextInt = 0xFFFFFFFF;

        // check to see who all we need to call
        for(i=0; i<MaxNbrOfCoreTimerServices; i++)
9d004b4c:	26940001 	addiu	s4,s4,1
        {
            // if the serivce exists
            if(gCoreTimerInfo[i].serivce != NULL)
9d004b50:	10400009 	beqz	v0,9d004b78 <CoreTimerHandler+0x12c>
9d004b54:	26d60008 	addiu	s6,s6,8
            {
                // if their time has come up
                relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
9d004b58:	8ee70000 	lw	a3,0(s7)
9d004b5c:	8f848044 	lw	a0,-32700(gp)
9d004b60:	00e42023 	subu	a0,a3,a0
                if(relInt <= relCurTime)
9d004b64:	03c4382b 	sltu	a3,s8,a0
9d004b68:	50e0003d 	beqzl	a3,9d004c60 <CoreTimerHandler+0x214>
9d004b6c:	00c02021 	move	a0,a2
                    relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
                }

                // see if this is the next interrupt we want to set
                // we are looking for the closest/lowest int to set.
                if(relInt < relNextInt)
9d004b70:	0095102b 	sltu	v0,a0,s5
9d004b74:	0082a80b 	movn	s5,a0,v0
    {
        // make sure we find the lowest int to set
        relNextInt = 0xFFFFFFFF;

        // check to see who all we need to call
        for(i=0; i<MaxNbrOfCoreTimerServices; i++)
9d004b78:	5683fff2 	bnel	s4,v1,9d004b44 <CoreTimerHandler+0xf8>
9d004b7c:	8ec20000 	lw	v0,0(s6)
        // other service may cause the compare value to be set for an earlier time; but we always know there will be a compare time
        // to set, so we know that relNextInt has a value other than 0xFFFFFFFF in it.

        // Go ahead and set the compare register to the next interrupt we want.
        // we need to apply our base to convert from relative values to an absolute time.
        compare = relNextInt + gLastBaseCount;
9d004b80:	8f828044 	lw	v0,-32700(gp)
9d004b84:	02a21021 	addu	v0,s5,v0
        write_comp(compare); 
9d004b88:	40825800 	mtc0	v0,c0_compare

        // clear the CT flag
        mCTClearIntFlag();
9d004b8c:	ae511034 	sw	s1,4148(s2)

        // read the count after the CT flag has been set so we can make sure count has not passed compare
        // during our processing of this int
        read_count(curTime); 
9d004b90:	40064800 	mfc0	a2,c0_count

        // get the relative time so we can operate in the linear portion of our uint32.
        relCurTime = curTime - gLastBaseCount;
9d004b94:	8f9e8044 	lw	s8,-32700(gp)
9d004b98:	00def023 	subu	s8,a2,s8

        // if the current time has passed our interrupt time, then we basically hit the interrupt again
        // so we probabaly missed the CT flag being set and we need to reprocess this interrupt and find the next one to set.
    } while(relNextInt <= relCurTime);
9d004b9c:	03d5a82b 	sltu	s5,s8,s5
9d004ba0:	52a0ffe5 	beqzl	s5,9d004b38 <CoreTimerHandler+0xec>
9d004ba4:	0200b021 	move	s6,s0
    // otherwise the next interrupt time (compare time) is after the current time and CT will catch it when count == compare.
    // we can safely exit the ISR.

    // but first we must set our new base so the next time we come into this routine we
    // have a valid lower base to shift our times to for comparisons.
    gLastBaseCount = nextBase;
9d004ba8:	af938044 	sw	s3,-32700(gp)
}
9d004bac:	8fa20094 	lw	v0,148(sp)
9d004bb0:	8fa30090 	lw	v1,144(sp)
9d004bb4:	00400013 	mtlo	v0
9d004bb8:	8fa200a0 	lw	v0,160(sp)
9d004bbc:	3042000f 	andi	v0,v0,0xf
9d004bc0:	1440001c 	bnez	v0,9d004c34 <CoreTimerHandler+0x1e8>
9d004bc4:	00600011 	mthi	v1
9d004bc8:	8fbf008c 	lw	ra,140(sp)
9d004bcc:	8fbe0088 	lw	s8,136(sp)
9d004bd0:	8fb90084 	lw	t9,132(sp)
9d004bd4:	8fb80080 	lw	t8,128(sp)
9d004bd8:	8fb7007c 	lw	s7,124(sp)
9d004bdc:	8fb60078 	lw	s6,120(sp)
9d004be0:	8fb50074 	lw	s5,116(sp)
9d004be4:	8fb40070 	lw	s4,112(sp)
9d004be8:	8fb3006c 	lw	s3,108(sp)
9d004bec:	8fb20068 	lw	s2,104(sp)
9d004bf0:	8fb10064 	lw	s1,100(sp)
9d004bf4:	8fb00060 	lw	s0,96(sp)
9d004bf8:	8faf005c 	lw	t7,92(sp)
9d004bfc:	8fae0058 	lw	t6,88(sp)
9d004c00:	8fad0054 	lw	t5,84(sp)
9d004c04:	8fac0050 	lw	t4,80(sp)
9d004c08:	8fab004c 	lw	t3,76(sp)
9d004c0c:	8faa0048 	lw	t2,72(sp)
9d004c10:	8fa90044 	lw	t1,68(sp)
9d004c14:	8fa80040 	lw	t0,64(sp)
9d004c18:	8fa7003c 	lw	a3,60(sp)
9d004c1c:	8fa60038 	lw	a2,56(sp)
9d004c20:	8fa50034 	lw	a1,52(sp)
9d004c24:	8fa40030 	lw	a0,48(sp)
9d004c28:	8fa3002c 	lw	v1,44(sp)
9d004c2c:	8fa20028 	lw	v0,40(sp)
9d004c30:	8fa10024 	lw	at,36(sp)
9d004c34:	41606000 	di
9d004c38:	000000c0 	ehb
9d004c3c:	8fba00a4 	lw	k0,164(sp)
9d004c40:	8fbb009c 	lw	k1,156(sp)
9d004c44:	409a7000 	mtc0	k0,c0_epc
9d004c48:	8fba00a0 	lw	k0,160(sp)
9d004c4c:	27bd00a8 	addiu	sp,sp,168
9d004c50:	409a6002 	mtc0	k0,c0_srsctl
9d004c54:	41dde800 	wrpgpr	sp,sp
9d004c58:	409b6000 	mtc0	k1,c0_status
9d004c5c:	42000018 	eret
                // if their time has come up
                relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
                if(relInt <= relCurTime)
                {
                    // call their routine to get their next interrupt time
                    gCoreTimerInfo[i].nextInt = gCoreTimerInfo[i].serivce(curTime);
9d004c60:	afa30018 	sw	v1,24(sp)
9d004c64:	afa50014 	sw	a1,20(sp)
9d004c68:	0040f809 	jalr	v0
9d004c6c:	afa60010 	sw	a2,16(sp)
9d004c70:	aee20000 	sw	v0,0(s7)

                    // recalculate the relative time of thier next int
                    // so we can see if this is the next int we need to set
                    relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
9d004c74:	8ee40000 	lw	a0,0(s7)
9d004c78:	8f828044 	lw	v0,-32700(gp)
9d004c7c:	8fa60010 	lw	a2,16(sp)
9d004c80:	8fa50014 	lw	a1,20(sp)
9d004c84:	00822023 	subu	a0,a0,v0
                }

                // see if this is the next interrupt we want to set
                // we are looking for the closest/lowest int to set.
                if(relInt < relNextInt)
9d004c88:	0095102b 	sltu	v0,a0,s5
                    // call their routine to get their next interrupt time
                    gCoreTimerInfo[i].nextInt = gCoreTimerInfo[i].serivce(curTime);

                    // recalculate the relative time of thier next int
                    // so we can see if this is the next int we need to set
                    relInt = gCoreTimerInfo[i].nextInt - gLastBaseCount;
9d004c8c:	8fa30018 	lw	v1,24(sp)
                }

                // see if this is the next interrupt we want to set
                // we are looking for the closest/lowest int to set.
                if(relInt < relNextInt)
9d004c90:	0b4012de 	j	9d004b78 <CoreTimerHandler+0x12c>
9d004c94:	0082a80b 	movn	s5,a0,v0

9d004c98 <millis>:
uint8_t ppsGlobalLock = false;

//************************************************************************
unsigned long millis()
{
	return(gTimer0_millis);
9d004c98:	8f82803c 	lw	v0,-32708(gp)
}
9d004c9c:	03e00008 	jr	ra
9d004ca0:	00000000 	nop

9d004ca4 <delay>:
}

//************************************************************************
// Delay for a given number of milliseconds.
void delay(unsigned long ms)
{
9d004ca4:	27bdffe0 	addiu	sp,sp,-32
9d004ca8:	afb10018 	sw	s1,24(sp)
unsigned long	startMillis;

	startMillis	=	gTimer0_millis;
9d004cac:	8f91803c 	lw	s1,-32708(gp)
	while ((gTimer0_millis - startMillis) < ms)
9d004cb0:	8f82803c 	lw	v0,-32708(gp)
}

//************************************************************************
// Delay for a given number of milliseconds.
void delay(unsigned long ms)
{
9d004cb4:	afb00014 	sw	s0,20(sp)
9d004cb8:	afbf001c 	sw	ra,28(sp)
unsigned long	startMillis;

	startMillis	=	gTimer0_millis;
	while ((gTimer0_millis - startMillis) < ms)
9d004cbc:	00511023 	subu	v0,v0,s1
9d004cc0:	0044102b 	sltu	v0,v0,a0
9d004cc4:	10400008 	beqz	v0,9d004ce8 <delay+0x44>
9d004cc8:	00808021 	move	s0,a0
	{
		_scheduleTask();
9d004ccc:	0f401214 	jal	9d004850 <_scheduleTask>
9d004cd0:	00000000 	nop
void delay(unsigned long ms)
{
unsigned long	startMillis;

	startMillis	=	gTimer0_millis;
	while ((gTimer0_millis - startMillis) < ms)
9d004cd4:	8f82803c 	lw	v0,-32708(gp)
9d004cd8:	00511023 	subu	v0,v0,s1
9d004cdc:	0050102b 	sltu	v0,v0,s0
9d004ce0:	1440fffa 	bnez	v0,9d004ccc <delay+0x28>
9d004ce4:	00000000 	nop
	{
		_scheduleTask();
	}
}
9d004ce8:	8fbf001c 	lw	ra,28(sp)
9d004cec:	8fb10018 	lw	s1,24(sp)
9d004cf0:	8fb00014 	lw	s0,20(sp)
9d004cf4:	03e00008 	jr	ra
9d004cf8:	27bd0020 	addiu	sp,sp,32

9d004cfc <init>:
	__PIC32_pbClk	=	SYSTEMConfigPerformance(F_CPU);
#endif
#endif

	// Configure the processor for the proper number of wait states and caching.
	_configSystem(F_CPU);
9d004cfc:	3c0404c4 	lui	a0,0x4c4
}


//************************************************************************
void init()
{
9d004d00:	27bdffe8 	addiu	sp,sp,-24
9d004d04:	afbf0014 	sw	ra,20(sp)
	__PIC32_pbClk	=	SYSTEMConfigPerformance(F_CPU);
#endif
#endif

	// Configure the processor for the proper number of wait states and caching.
	_configSystem(F_CPU);
9d004d08:	0f401189 	jal	9d004624 <_configSystem>
9d004d0c:	3484b400 	ori	a0,a0,0xb400

	// Enable multi-vector interrupts
	_enableMultiVectorInterrupts();
9d004d10:	0f4011aa 	jal	9d0046a8 <_enableMultiVectorInterrupts>
9d004d14:	00000000 	nop

	// Initialize the core timer for use to maintain the system timer tick.
	_initCoreTimer(CORE_TICK_RATE);
9d004d18:	0f4011b3 	jal	9d0046cc <_initCoreTimer>
9d004d1c:	34049c40 	li	a0,0x9c40

    initIntVector();
9d004d20:	0f40113d 	jal	9d0044f4 <initIntVector>
9d004d24:	00000000 	nop

	setIntPriority(_CORE_TIMER_VECTOR, _CT_IPL_IPC, _CT_SPL_IPC);
9d004d28:	00003021 	move	a2,zero
9d004d2c:	00002021 	move	a0,zero
9d004d30:	0f40116b 	jal	9d0045ac <setIntPriority>
9d004d34:	24050007 	li	a1,7
	setIntVector(_CORE_TIMER_VECTOR, CoreTimerHandler);
9d004d38:	3c059d00 	lui	a1,0x9d00
9d004d3c:	24a54a4c 	addiu	a1,a1,19020
9d004d40:	0f401152 	jal	9d004548 <setIntVector>
9d004d44:	00002021 	move	a0,zero
	setIntEnable(_CORE_TIMER_IRQ);
9d004d48:	0f40115d 	jal	9d004574 <setIntEnable>
9d004d4c:	00002021 	move	a0,zero

	// Save the peripheral bus frequency for later use.
	__PIC32_pbClk = getPeripheralClock();
9d004d50:	0f401182 	jal	9d004608 <getPeripheralClock>
9d004d54:	00000000 	nop

   // allow for debugging, this will stop the core timer when the debugger takes control
    _CP0_BIC_DEBUG(_CP0_DEBUG_COUNTDM_MASK); 
9d004d58:	3c030200 	lui	v1,0x200
	setIntPriority(_CORE_TIMER_VECTOR, _CT_IPL_IPC, _CT_SPL_IPC);
	setIntVector(_CORE_TIMER_VECTOR, CoreTimerHandler);
	setIntEnable(_CORE_TIMER_IRQ);

	// Save the peripheral bus frequency for later use.
	__PIC32_pbClk = getPeripheralClock();
9d004d5c:	af82806c 	sw	v0,-32660(gp)

   // allow for debugging, this will stop the core timer when the debugger takes control
    _CP0_BIC_DEBUG(_CP0_DEBUG_COUNTDM_MASK); 
9d004d60:	4002b800 	mfc0	v0,c0_debug
9d004d64:	00031827 	nor	v1,zero,v1
9d004d68:	00431824 	and	v1,v0,v1
9d004d6c:	4083b800 	mtc0	v1,c0_debug
9d004d70:	000000c0 	ehb
	RtccSetTimeDate(0x10073000, 0x10101701);
	// please note that the rsvd field has to be 0 in the time field!
#endif
#endif

	delay(50);
9d004d74:	0f401329 	jal	9d004ca4 <delay>
9d004d78:	24040032 	li	a0,50
#if defined(__PIC32MX1XX__) || defined(__PIC32MX2XX__)
	CFGCONbits.JTAGEN = 0;
	//CFGCONbits.TDOEN = 0;
	//OSCCONbits.SOSCEN = 0;
#else
	DDPCONbits.JTAGEN	=	0;
9d004d7c:	3c02bf81 	lui	v0,0xbf81
9d004d80:	8c43f200 	lw	v1,-3584(v0)
9d004d84:	7c0318c4 	ins	v1,zero,0x3,0x1
9d004d88:	ac43f200 	sw	v1,-3584(v0)
void	_board_init(void);
	_board_init();
#endif

	//* Initialize the periodic task manager
	_initTaskManager();
9d004d8c:	0f401207 	jal	9d00481c <_initTaskManager>
9d004d90:	00000000 	nop
#if defined(_SER0_BASE)
	p32_uart *	uart;
	uart = (p32_uart *)_SER0_BASE;
	uart->uxMode.clr = (1 << _UARTMODE_ON);
#endif
}
9d004d94:	8fbf0014 	lw	ra,20(sp)
	//*	Issue #84
	//*	disable the uart so that the pins can be used as general purpose I/O
#if defined(_SER0_BASE)
	p32_uart *	uart;
	uart = (p32_uart *)_SER0_BASE;
	uart->uxMode.clr = (1 << _UARTMODE_ON);
9d004d98:	34038000 	li	v1,0x8000
9d004d9c:	3c02bf80 	lui	v0,0xbf80
9d004da0:	ac436004 	sw	v1,24580(v0)
#endif
}
9d004da4:	03e00008 	jr	ra
9d004da8:	27bd0018 	addiu	sp,sp,24

9d004dac <__fpclassifyd>:
9d004dac:	00851825 	or	v1,a0,a1
9d004db0:	1060001d 	beqz	v1,9d004e28 <__fpclassifyd+0x7c>
9d004db4:	24020002 	li	v0,2
9d004db8:	3c038000 	lui	v1,0x8000
9d004dbc:	14a30003 	bne	a1,v1,9d004dcc <__fpclassifyd+0x20>
9d004dc0:	3c03fff0 	lui	v1,0xfff0
9d004dc4:	10800018 	beqz	a0,9d004e28 <__fpclassifyd+0x7c>
9d004dc8:	00000000 	nop
9d004dcc:	00a33021 	addu	a2,a1,v1
9d004dd0:	3c077fe0 	lui	a3,0x7fe0
9d004dd4:	00c7302b 	sltu	a2,a2,a3
9d004dd8:	14c00013 	bnez	a2,9d004e28 <__fpclassifyd+0x7c>
9d004ddc:	24020004 	li	v0,4
9d004de0:	3c067ff0 	lui	a2,0x7ff0
9d004de4:	00a64021 	addu	t0,a1,a2
9d004de8:	0107382b 	sltu	a3,t0,a3
9d004dec:	14e0000e 	bnez	a3,9d004e28 <__fpclassifyd+0x7c>
9d004df0:	3c070010 	lui	a3,0x10
9d004df4:	00a7402b 	sltu	t0,a1,a3
9d004df8:	1500000b 	bnez	t0,9d004e28 <__fpclassifyd+0x7c>
9d004dfc:	24020003 	li	v0,3
9d004e00:	3c088000 	lui	t0,0x8000
9d004e04:	00a84021 	addu	t0,a1,t0
9d004e08:	0107382b 	sltu	a3,t0,a3
9d004e0c:	14e00006 	bnez	a3,9d004e28 <__fpclassifyd+0x7c>
9d004e10:	00000000 	nop
9d004e14:	10a60004 	beq	a1,a2,9d004e28 <__fpclassifyd+0x7c>
9d004e18:	2c820001 	sltiu	v0,a0,1
9d004e1c:	14a30002 	bne	a1,v1,9d004e28 <__fpclassifyd+0x7c>
9d004e20:	00001021 	move	v0,zero
9d004e24:	2c820001 	sltiu	v0,a0,1
9d004e28:	03e00008 	jr	ra
9d004e2c:	00000000 	nop

9d004e30 <__adddf3>:
9d004e30:	7cad07c0 	ext	t5,a1,0x1f,0x1
9d004e34:	7cab9800 	ext	t3,a1,0x0,0x14
9d004e38:	7cea9800 	ext	t2,a3,0x0,0x14
9d004e3c:	00067742 	srl	t6,a2,0x1d
9d004e40:	000b58c0 	sll	t3,t3,0x3
9d004e44:	00047f42 	srl	t7,a0,0x1d
9d004e48:	000a50c0 	sll	t2,t2,0x3
9d004e4c:	000767c2 	srl	t4,a3,0x1f
9d004e50:	31a900ff 	andi	t1,t5,0xff
9d004e54:	7ca55500 	ext	a1,a1,0x14,0xb
9d004e58:	016f5825 	or	t3,t3,t7
9d004e5c:	000440c0 	sll	t0,a0,0x3
9d004e60:	7ce75500 	ext	a3,a3,0x14,0xb
9d004e64:	014e5025 	or	t2,t2,t6
9d004e68:	112c006e 	beq	t1,t4,9d005024 <__adddf3+0x1f4>
9d004e6c:	000630c0 	sll	a2,a2,0x3
9d004e70:	00a71823 	subu	v1,a1,a3
9d004e74:	186000bc 	blez	v1,9d005168 <__adddf3+0x338>
9d004e78:	00000000 	nop
9d004e7c:	14e0000d 	bnez	a3,9d004eb4 <__adddf3+0x84>
9d004e80:	240207ff 	li	v0,2047
9d004e84:	01461025 	or	v0,t2,a2
9d004e88:	50400096 	beqzl	v0,9d0050e4 <__adddf3+0x2b4>
9d004e8c:	24a30001 	addiu	v1,a1,1
9d004e90:	2463ffff 	addiu	v1,v1,-1
9d004e94:	546000a6 	bnezl	v1,9d005130 <__adddf3+0x300>
9d004e98:	240207ff 	li	v0,2047
9d004e9c:	01062023 	subu	a0,t0,a2
9d004ea0:	016a1023 	subu	v0,t3,t2
9d004ea4:	0104402b 	sltu	t0,t0,a0
9d004ea8:	00481023 	subu	v0,v0,t0
9d004eac:	0b4013c5 	j	9d004f14 <__adddf3+0xe4>
9d004eb0:	00a03821 	move	a3,a1
9d004eb4:	10a200a1 	beq	a1,v0,9d00513c <__adddf3+0x30c>
9d004eb8:	310e000f 	andi	t6,t0,0xf
9d004ebc:	3c020080 	lui	v0,0x80
9d004ec0:	01425025 	or	t2,t2,v0
9d004ec4:	28620039 	slti	v0,v1,57
9d004ec8:	104000c6 	beqz	v0,9d0051e4 <__adddf3+0x3b4>
9d004ecc:	01462025 	or	a0,t2,a2
9d004ed0:	28620020 	slti	v0,v1,32
9d004ed4:	104000e6 	beqz	v0,9d005270 <__adddf3+0x440>
9d004ed8:	24040020 	li	a0,32
9d004edc:	24020020 	li	v0,32
9d004ee0:	00431023 	subu	v0,v0,v1
9d004ee4:	004a3804 	sllv	a3,t2,v0
9d004ee8:	00662006 	srlv	a0,a2,v1
9d004eec:	00463004 	sllv	a2,a2,v0
9d004ef0:	00e42025 	or	a0,a3,a0
9d004ef4:	0006302b 	sltu	a2,zero,a2
9d004ef8:	00862025 	or	a0,a0,a2
9d004efc:	006a1006 	srlv	v0,t2,v1
9d004f00:	01042023 	subu	a0,t0,a0
9d004f04:	01621023 	subu	v0,t3,v0
9d004f08:	0104402b 	sltu	t0,t0,a0
9d004f0c:	00481023 	subu	v0,v0,t0
9d004f10:	00a03821 	move	a3,a1
9d004f14:	7c4305c0 	ext	v1,v0,0x17,0x1
9d004f18:	10600090 	beqz	v1,9d00515c <__adddf3+0x32c>
9d004f1c:	7c4db000 	ext	t5,v0,0x0,0x17
9d004f20:	15a00003 	bnez	t5,9d004f30 <__adddf3+0x100>
9d004f24:	71a21020 	clz	v0,t5
9d004f28:	70821020 	clz	v0,a0
9d004f2c:	24420020 	addiu	v0,v0,32
9d004f30:	2443fff8 	addiu	v1,v0,-8
9d004f34:	28650020 	slti	a1,v1,32
9d004f38:	10a000a7 	beqz	a1,9d0051d8 <__adddf3+0x3a8>
9d004f3c:	2442ffd8 	addiu	v0,v0,-40
9d004f40:	00031023 	negu	v0,v1
9d004f44:	00441006 	srlv	v0,a0,v0
9d004f48:	006d6804 	sllv	t5,t5,v1
9d004f4c:	004d6825 	or	t5,v0,t5
9d004f50:	00642004 	sllv	a0,a0,v1
9d004f54:	0067102a 	slt	v0,v1,a3
9d004f58:	1440007d 	bnez	v0,9d005150 <__adddf3+0x320>
9d004f5c:	3c02ff7f 	lui	v0,0xff7f
9d004f60:	00673823 	subu	a3,v1,a3
9d004f64:	24e70001 	addiu	a3,a3,1
9d004f68:	28e20020 	slti	v0,a3,32
9d004f6c:	104000b3 	beqz	v0,9d00523c <__adddf3+0x40c>
9d004f70:	24030020 	li	v1,32
9d004f74:	24020020 	li	v0,32
9d004f78:	00471023 	subu	v0,v0,a3
9d004f7c:	00e41806 	srlv	v1,a0,a3
9d004f80:	00442004 	sllv	a0,a0,v0
9d004f84:	004d1004 	sllv	v0,t5,v0
9d004f88:	00621025 	or	v0,v1,v0
9d004f8c:	0004202b 	sltu	a0,zero,a0
9d004f90:	00442025 	or	a0,v0,a0
9d004f94:	00ed1006 	srlv	v0,t5,a3
9d004f98:	308e000f 	andi	t6,a0,0xf
9d004f9c:	24030001 	li	v1,1
9d004fa0:	00003821 	move	a3,zero
9d004fa4:	24050004 	li	a1,4
9d004fa8:	11c50005 	beq	t6,a1,9d004fc0 <__adddf3+0x190>
9d004fac:	00802821 	move	a1,a0
9d004fb0:	24850004 	addiu	a1,a0,4
9d004fb4:	00a4202b 	sltu	a0,a1,a0
9d004fb8:	00441021 	addu	v0,v0,a0
9d004fbc:	24e30001 	addiu	v1,a3,1
9d004fc0:	7c4405c0 	ext	a0,v0,0x17,0x1
9d004fc4:	50800009 	beqzl	a0,9d004fec <__adddf3+0x1bc>
9d004fc8:	306307ff 	andi	v1,v1,0x7ff
9d004fcc:	240407ff 	li	a0,2047
9d004fd0:	10640078 	beq	v1,a0,9d0051b4 <__adddf3+0x384>
9d004fd4:	3c04ff7f 	lui	a0,0xff7f
9d004fd8:	3484ffff 	ori	a0,a0,0xffff
9d004fdc:	00603821 	move	a3,v1
9d004fe0:	00441024 	and	v0,v0,a0
9d004fe4:	24630001 	addiu	v1,v1,1
9d004fe8:	306307ff 	andi	v1,v1,0x7ff
9d004fec:	00023740 	sll	a2,v0,0x1d
9d004ff0:	000528c2 	srl	a1,a1,0x3
9d004ff4:	28630002 	slti	v1,v1,2
9d004ff8:	00c53025 	or	a2,a2,a1
9d004ffc:	14600031 	bnez	v1,9d0050c4 <__adddf3+0x294>
9d005000:	000210c2 	srl	v0,v0,0x3
9d005004:	7c429800 	ext	v0,v0,0x0,0x14
9d005008:	30e707ff 	andi	a3,a3,0x7ff
9d00500c:	00001821 	move	v1,zero
9d005010:	7c439804 	ins	v1,v0,0x0,0x14
9d005014:	7ce3f504 	ins	v1,a3,0x14,0xb
9d005018:	7d23ffc4 	ins	v1,t1,0x1f,0x1
9d00501c:	03e00008 	jr	ra
9d005020:	00c01021 	move	v0,a2
9d005024:	00a71023 	subu	v0,a1,a3
9d005028:	18400071 	blez	v0,9d0051f0 <__adddf3+0x3c0>
9d00502c:	00000000 	nop
9d005030:	10e00034 	beqz	a3,9d005104 <__adddf3+0x2d4>
9d005034:	01461825 	or	v1,t2,a2
9d005038:	240307ff 	li	v1,2047
9d00503c:	10a3003f 	beq	a1,v1,9d00513c <__adddf3+0x30c>
9d005040:	310e000f 	andi	t6,t0,0xf
9d005044:	3c030080 	lui	v1,0x80
9d005048:	01435025 	or	t2,t2,v1
9d00504c:	28430039 	slti	v1,v0,57
9d005050:	146000b5 	bnez	v1,9d005328 <__adddf3+0x4f8>
9d005054:	28430020 	slti	v1,v0,32
9d005058:	01462025 	or	a0,t2,a2
9d00505c:	00001021 	move	v0,zero
9d005060:	0004202b 	sltu	a0,zero,a0
9d005064:	00882021 	addu	a0,a0,t0
9d005068:	004b1021 	addu	v0,v0,t3
9d00506c:	0088402b 	sltu	t0,a0,t0
9d005070:	00481021 	addu	v0,v0,t0
9d005074:	00a03821 	move	a3,a1
9d005078:	7c4305c0 	ext	v1,v0,0x17,0x1
9d00507c:	10600038 	beqz	v1,9d005160 <__adddf3+0x330>
9d005080:	24e30001 	addiu	v1,a3,1
9d005084:	24e70001 	addiu	a3,a3,1
9d005088:	240307ff 	li	v1,2047
9d00508c:	50e300d7 	beql	a3,v1,9d0053ec <__adddf3+0x5bc>
9d005090:	31a90001 	andi	t1,t5,0x1
9d005094:	3c03ff7f 	lui	v1,0xff7f
9d005098:	3463ffff 	ori	v1,v1,0xffff
9d00509c:	00431024 	and	v0,v0,v1
9d0050a0:	30830001 	andi	v1,a0,0x1
9d0050a4:	00042042 	srl	a0,a0,0x1
9d0050a8:	00642025 	or	a0,v1,a0
9d0050ac:	00021fc0 	sll	v1,v0,0x1f
9d0050b0:	00832025 	or	a0,a0,v1
9d0050b4:	00021042 	srl	v0,v0,0x1
9d0050b8:	24e30001 	addiu	v1,a3,1
9d0050bc:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0050c0:	308e000f 	andi	t6,a0,0xf
9d0050c4:	00c21825 	or	v1,a2,v0
9d0050c8:	50600175 	beqzl	v1,9d0056a0 <__adddf3+0x870>
9d0050cc:	30e707ff 	andi	a3,a3,0x7ff
9d0050d0:	50e0ffce 	beqzl	a3,9d00500c <__adddf3+0x1dc>
9d0050d4:	7c429800 	ext	v0,v0,0x0,0x14
9d0050d8:	3c030008 	lui	v1,0x8
9d0050dc:	0b401401 	j	9d005004 <__adddf3+0x1d4>
9d0050e0:	00431025 	or	v0,v0,v1
9d0050e4:	00a03821 	move	a3,a1
9d0050e8:	310e000f 	andi	t6,t0,0xf
9d0050ec:	24050004 	li	a1,4
9d0050f0:	01601021 	move	v0,t3
9d0050f4:	15c5ffae 	bne	t6,a1,9d004fb0 <__adddf3+0x180>
9d0050f8:	01002021 	move	a0,t0
9d0050fc:	0b4013f0 	j	9d004fc0 <__adddf3+0x190>
9d005100:	00802821 	move	a1,a0
9d005104:	1060fff7 	beqz	v1,9d0050e4 <__adddf3+0x2b4>
9d005108:	24a30001 	addiu	v1,a1,1
9d00510c:	2442ffff 	addiu	v0,v0,-1
9d005110:	1440009a 	bnez	v0,9d00537c <__adddf3+0x54c>
9d005114:	240307ff 	li	v1,2047
9d005118:	00c82021 	addu	a0,a2,t0
9d00511c:	014b1021 	addu	v0,t2,t3
9d005120:	0088402b 	sltu	t0,a0,t0
9d005124:	00481021 	addu	v0,v0,t0
9d005128:	0b40141e 	j	9d005078 <__adddf3+0x248>
9d00512c:	00a03821 	move	a3,a1
9d005130:	54a2ff65 	bnel	a1,v0,9d004ec8 <__adddf3+0x98>
9d005134:	28620039 	slti	v0,v1,57
9d005138:	310e000f 	andi	t6,t0,0xf
9d00513c:	01601021 	move	v0,t3
9d005140:	01002021 	move	a0,t0
9d005144:	24030800 	li	v1,2048
9d005148:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d00514c:	240707ff 	li	a3,2047
9d005150:	3442ffff 	ori	v0,v0,0xffff
9d005154:	00e33823 	subu	a3,a3,v1
9d005158:	01a21024 	and	v0,t5,v0
9d00515c:	24e30001 	addiu	v1,a3,1
9d005160:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d005164:	308e000f 	andi	t6,a0,0xf
9d005168:	1460004b 	bnez	v1,9d005298 <__adddf3+0x468>
9d00516c:	24a20001 	addiu	v0,a1,1
9d005170:	304207ff 	andi	v0,v0,0x7ff
9d005174:	28420002 	slti	v0,v0,2
9d005178:	1440008e 	bnez	v0,9d0053b4 <__adddf3+0x584>
9d00517c:	01062023 	subu	a0,t0,a2
9d005180:	0104102b 	sltu	v0,t0,a0
9d005184:	016a6823 	subu	t5,t3,t2
9d005188:	01a26823 	subu	t5,t5,v0
9d00518c:	7da205c0 	ext	v0,t5,0x17,0x1
9d005190:	1040005d 	beqz	v0,9d005308 <__adddf3+0x4d8>
9d005194:	01a41025 	or	v0,t5,a0
9d005198:	00c82023 	subu	a0,a2,t0
9d00519c:	014b5023 	subu	t2,t2,t3
9d0051a0:	00c4302b 	sltu	a2,a2,a0
9d0051a4:	01466823 	subu	t5,t2,a2
9d0051a8:	00a03821 	move	a3,a1
9d0051ac:	0b4013c8 	j	9d004f20 <__adddf3+0xf0>
9d0051b0:	01804821 	move	t1,t4
9d0051b4:	00001021 	move	v0,zero
9d0051b8:	00001821 	move	v1,zero
9d0051bc:	240707ff 	li	a3,2047
9d0051c0:	7c439804 	ins	v1,v0,0x0,0x14
9d0051c4:	00003021 	move	a2,zero
9d0051c8:	7ce3f504 	ins	v1,a3,0x14,0xb
9d0051cc:	7d23ffc4 	ins	v1,t1,0x1f,0x1
9d0051d0:	03e00008 	jr	ra
9d0051d4:	00c01021 	move	v0,a2
9d0051d8:	00446804 	sllv	t5,a0,v0
9d0051dc:	0b4013d5 	j	9d004f54 <__adddf3+0x124>
9d0051e0:	00002021 	move	a0,zero
9d0051e4:	00001021 	move	v0,zero
9d0051e8:	0b4013c0 	j	9d004f00 <__adddf3+0xd0>
9d0051ec:	0004202b 	sltu	a0,zero,a0
9d0051f0:	1440008c 	bnez	v0,9d005424 <__adddf3+0x5f4>
9d0051f4:	00000000 	nop
9d0051f8:	24a70001 	addiu	a3,a1,1
9d0051fc:	30e207ff 	andi	v0,a3,0x7ff
9d005200:	28420002 	slti	v0,v0,2
9d005204:	14400061 	bnez	v0,9d00538c <__adddf3+0x55c>
9d005208:	240207ff 	li	v0,2047
9d00520c:	10e20076 	beq	a3,v0,9d0053e8 <__adddf3+0x5b8>
9d005210:	00c83021 	addu	a2,a2,t0
9d005214:	00c8402b 	sltu	t0,a2,t0
9d005218:	014b1021 	addu	v0,t2,t3
9d00521c:	00481021 	addu	v0,v0,t0
9d005220:	00021fc0 	sll	v1,v0,0x1f
9d005224:	00063042 	srl	a2,a2,0x1
9d005228:	00c32025 	or	a0,a2,v1
9d00522c:	00021042 	srl	v0,v0,0x1
9d005230:	24a30002 	addiu	v1,a1,2
9d005234:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d005238:	308e000f 	andi	t6,a0,0xf
9d00523c:	00ed2806 	srlv	a1,t5,a3
9d005240:	10e30003 	beq	a3,v1,9d005250 <__adddf3+0x420>
9d005244:	00001021 	move	v0,zero
9d005248:	00071023 	negu	v0,a3
9d00524c:	004d1004 	sllv	v0,t5,v0
9d005250:	00442025 	or	a0,v0,a0
9d005254:	0004202b 	sltu	a0,zero,a0
9d005258:	00852025 	or	a0,a0,a1
9d00525c:	308e000f 	andi	t6,a0,0xf
9d005260:	24030001 	li	v1,1
9d005264:	00001021 	move	v0,zero
9d005268:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d00526c:	00003821 	move	a3,zero
9d005270:	006a3806 	srlv	a3,t2,v1
9d005274:	10640003 	beq	v1,a0,9d005284 <__adddf3+0x454>
9d005278:	00001021 	move	v0,zero
9d00527c:	00031823 	negu	v1,v1
9d005280:	006a1004 	sllv	v0,t2,v1
9d005284:	00462025 	or	a0,v0,a2
9d005288:	0004202b 	sltu	a0,zero,a0
9d00528c:	00872025 	or	a0,a0,a3
9d005290:	0b4013c0 	j	9d004f00 <__adddf3+0xd0>
9d005294:	00001021 	move	v0,zero
9d005298:	10a0002f 	beqz	a1,9d005358 <__adddf3+0x528>
9d00529c:	00031823 	negu	v1,v1
9d0052a0:	240207ff 	li	v0,2047
9d0052a4:	10e20078 	beq	a3,v0,9d005488 <__adddf3+0x658>
9d0052a8:	30ce000f 	andi	t6,a2,0xf
9d0052ac:	3c020080 	lui	v0,0x80
9d0052b0:	01625825 	or	t3,t3,v0
9d0052b4:	28620039 	slti	v0,v1,57
9d0052b8:	10400094 	beqz	v0,9d00550c <__adddf3+0x6dc>
9d0052bc:	01682025 	or	a0,t3,t0
9d0052c0:	28620020 	slti	v0,v1,32
9d0052c4:	504000cc 	beqzl	v0,9d0055f8 <__adddf3+0x7c8>
9d0052c8:	24040020 	li	a0,32
9d0052cc:	24020020 	li	v0,32
9d0052d0:	00431023 	subu	v0,v0,v1
9d0052d4:	004b2804 	sllv	a1,t3,v0
9d0052d8:	00682006 	srlv	a0,t0,v1
9d0052dc:	00481004 	sllv	v0,t0,v0
9d0052e0:	0002102b 	sltu	v0,zero,v0
9d0052e4:	00a42025 	or	a0,a1,a0
9d0052e8:	00822025 	or	a0,a0,v0
9d0052ec:	006b1006 	srlv	v0,t3,v1
9d0052f0:	00c42023 	subu	a0,a2,a0
9d0052f4:	01421023 	subu	v0,t2,v0
9d0052f8:	00c4302b 	sltu	a2,a2,a0
9d0052fc:	00461023 	subu	v0,v0,a2
9d005300:	0b4013c5 	j	9d004f14 <__adddf3+0xe4>
9d005304:	01804821 	move	t1,t4
9d005308:	1440ff05 	bnez	v0,9d004f20 <__adddf3+0xf0>
9d00530c:	00a03821 	move	a3,a1
9d005310:	00004821 	move	t1,zero
9d005314:	24030001 	li	v1,1
9d005318:	00001021 	move	v0,zero
9d00531c:	24050004 	li	a1,4
9d005320:	0b4013f0 	j	9d004fc0 <__adddf3+0x190>
9d005324:	00003821 	move	a3,zero
9d005328:	50600034 	beqzl	v1,9d0053fc <__adddf3+0x5cc>
9d00532c:	24040020 	li	a0,32
9d005330:	24030020 	li	v1,32
9d005334:	00621823 	subu	v1,v1,v0
9d005338:	006a3804 	sllv	a3,t2,v1
9d00533c:	00462006 	srlv	a0,a2,v0
9d005340:	00661804 	sllv	v1,a2,v1
9d005344:	00e42025 	or	a0,a3,a0
9d005348:	0003182b 	sltu	v1,zero,v1
9d00534c:	00832025 	or	a0,a0,v1
9d005350:	0b401419 	j	9d005064 <__adddf3+0x234>
9d005354:	004a1006 	srlv	v0,t2,v0
9d005358:	01681025 	or	v0,t3,t0
9d00535c:	54400063 	bnezl	v0,9d0054ec <__adddf3+0x6bc>
9d005360:	2463ffff 	addiu	v1,v1,-1
9d005364:	24e30001 	addiu	v1,a3,1
9d005368:	30ce000f 	andi	t6,a2,0xf
9d00536c:	01401021 	move	v0,t2
9d005370:	00c02021 	move	a0,a2
9d005374:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d005378:	01804821 	move	t1,t4
9d00537c:	54a3ff34 	bnel	a1,v1,9d005050 <__adddf3+0x220>
9d005380:	28430039 	slti	v1,v0,57
9d005384:	0b40144f 	j	9d00513c <__adddf3+0x30c>
9d005388:	310e000f 	andi	t6,t0,0xf
9d00538c:	14a0008d 	bnez	a1,9d0055c4 <__adddf3+0x794>
9d005390:	01681025 	or	v0,t3,t0
9d005394:	544000ac 	bnezl	v0,9d005648 <__adddf3+0x818>
9d005398:	01461025 	or	v0,t2,a2
9d00539c:	30ce000f 	andi	t6,a2,0xf
9d0053a0:	01401021 	move	v0,t2
9d0053a4:	00c02021 	move	a0,a2
9d0053a8:	24030001 	li	v1,1
9d0053ac:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0053b0:	00003821 	move	a3,zero
9d0053b4:	14a00025 	bnez	a1,9d00544c <__adddf3+0x61c>
9d0053b8:	01681025 	or	v0,t3,t0
9d0053bc:	1440006f 	bnez	v0,9d00557c <__adddf3+0x74c>
9d0053c0:	01461025 	or	v0,t2,a2
9d0053c4:	5040ffd3 	beqzl	v0,9d005314 <__adddf3+0x4e4>
9d0053c8:	00004821 	move	t1,zero
9d0053cc:	30ce000f 	andi	t6,a2,0xf
9d0053d0:	01401021 	move	v0,t2
9d0053d4:	00c02021 	move	a0,a2
9d0053d8:	01804821 	move	t1,t4
9d0053dc:	24030001 	li	v1,1
9d0053e0:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0053e4:	00003821 	move	a3,zero
9d0053e8:	31a90001 	andi	t1,t5,0x1
9d0053ec:	24030800 	li	v1,2048
9d0053f0:	00001021 	move	v0,zero
9d0053f4:	0b4013f0 	j	9d004fc0 <__adddf3+0x190>
9d0053f8:	24050004 	li	a1,4
9d0053fc:	004a3806 	srlv	a3,t2,v0
9d005400:	10440003 	beq	v0,a0,9d005410 <__adddf3+0x5e0>
9d005404:	00001821 	move	v1,zero
9d005408:	00021023 	negu	v0,v0
9d00540c:	004a1804 	sllv	v1,t2,v0
9d005410:	00662025 	or	a0,v1,a2
9d005414:	0004202b 	sltu	a0,zero,a0
9d005418:	00872025 	or	a0,a0,a3
9d00541c:	0b401419 	j	9d005064 <__adddf3+0x234>
9d005420:	00001021 	move	v0,zero
9d005424:	14a0003c 	bnez	a1,9d005518 <__adddf3+0x6e8>
9d005428:	00021023 	negu	v0,v0
9d00542c:	01681825 	or	v1,t3,t0
9d005430:	5460007b 	bnezl	v1,9d005620 <__adddf3+0x7f0>
9d005434:	2442ffff 	addiu	v0,v0,-1
9d005438:	24e30001 	addiu	v1,a3,1
9d00543c:	30ce000f 	andi	t6,a2,0xf
9d005440:	01401021 	move	v0,t2
9d005444:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d005448:	00c02021 	move	a0,a2
9d00544c:	54400014 	bnezl	v0,9d0054a0 <__adddf3+0x670>
9d005450:	01463025 	or	a2,t2,a2
9d005454:	01461025 	or	v0,t2,a2
9d005458:	1440000b 	bnez	v0,9d005488 <__adddf3+0x658>
9d00545c:	30ce000f 	andi	t6,a2,0xf
9d005460:	3c02007f 	lui	v0,0x7f
9d005464:	00004821 	move	t1,zero
9d005468:	24030800 	li	v1,2048
9d00546c:	3442ffff 	ori	v0,v0,0xffff
9d005470:	2405fffc 	li	a1,-4
9d005474:	0b4013f0 	j	9d004fc0 <__adddf3+0x190>
9d005478:	240707ff 	li	a3,2047
9d00547c:	54e2ff8e 	bnel	a3,v0,9d0052b8 <__adddf3+0x488>
9d005480:	28620039 	slti	v0,v1,57
9d005484:	30ce000f 	andi	t6,a2,0xf
9d005488:	01401021 	move	v0,t2
9d00548c:	00c02021 	move	a0,a2
9d005490:	01804821 	move	t1,t4
9d005494:	24030800 	li	v1,2048
9d005498:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d00549c:	240707ff 	li	a3,2047
9d0054a0:	10c0ff26 	beqz	a2,9d00513c <__adddf3+0x30c>
9d0054a4:	310e000f 	andi	t6,t0,0xf
9d0054a8:	000b18c2 	srl	v1,t3,0x3
9d0054ac:	000a10c2 	srl	v0,t2,0x3
9d0054b0:	00431025 	or	v0,v0,v1
9d0054b4:	7c4204c0 	ext	v0,v0,0x13,0x1
9d0054b8:	54400072 	bnezl	v0,9d005684 <__adddf3+0x854>
9d0054bc:	3c02007f 	lui	v0,0x7f
9d0054c0:	000840c2 	srl	t0,t0,0x3
9d0054c4:	000b2740 	sll	a0,t3,0x1d
9d0054c8:	00882025 	or	a0,a0,t0
9d0054cc:	00041742 	srl	v0,a0,0x1d
9d0054d0:	000318c0 	sll	v1,v1,0x3
9d0054d4:	000420c0 	sll	a0,a0,0x3
9d0054d8:	00431025 	or	v0,v0,v1
9d0054dc:	308e000f 	andi	t6,a0,0xf
9d0054e0:	24030800 	li	v1,2048
9d0054e4:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0054e8:	240707ff 	li	a3,2047
9d0054ec:	5460ffe3 	bnezl	v1,9d00547c <__adddf3+0x64c>
9d0054f0:	240207ff 	li	v0,2047
9d0054f4:	00c82023 	subu	a0,a2,t0
9d0054f8:	014b1023 	subu	v0,t2,t3
9d0054fc:	00c4302b 	sltu	a2,a2,a0
9d005500:	00461023 	subu	v0,v0,a2
9d005504:	0b4013c5 	j	9d004f14 <__adddf3+0xe4>
9d005508:	01804821 	move	t1,t4
9d00550c:	00001021 	move	v0,zero
9d005510:	0b4014bc 	j	9d0052f0 <__adddf3+0x4c0>
9d005514:	0004202b 	sltu	a0,zero,a0
9d005518:	240307ff 	li	v1,2047
9d00551c:	10e3002c 	beq	a3,v1,9d0055d0 <__adddf3+0x7a0>
9d005520:	30ce000f 	andi	t6,a2,0xf
9d005524:	3c030080 	lui	v1,0x80
9d005528:	01635825 	or	t3,t3,v1
9d00552c:	28430039 	slti	v1,v0,57
9d005530:	10600042 	beqz	v1,9d00563c <__adddf3+0x80c>
9d005534:	01682025 	or	a0,t3,t0
9d005538:	28430020 	slti	v1,v0,32
9d00553c:	50600063 	beqzl	v1,9d0056cc <__adddf3+0x89c>
9d005540:	24040020 	li	a0,32
9d005544:	24030020 	li	v1,32
9d005548:	00621823 	subu	v1,v1,v0
9d00554c:	006b2804 	sllv	a1,t3,v1
9d005550:	00482006 	srlv	a0,t0,v0
9d005554:	00681804 	sllv	v1,t0,v1
9d005558:	00a42025 	or	a0,a1,a0
9d00555c:	0003182b 	sltu	v1,zero,v1
9d005560:	00832025 	or	a0,a0,v1
9d005564:	004b1006 	srlv	v0,t3,v0
9d005568:	00862021 	addu	a0,a0,a2
9d00556c:	004a1021 	addu	v0,v0,t2
9d005570:	0086302b 	sltu	a2,a0,a2
9d005574:	0b40141e 	j	9d005078 <__adddf3+0x248>
9d005578:	00461021 	addu	v0,v0,a2
9d00557c:	10400019 	beqz	v0,9d0055e4 <__adddf3+0x7b4>
9d005580:	310e000f 	andi	t6,t0,0xf
9d005584:	01062023 	subu	a0,t0,a2
9d005588:	016a1823 	subu	v1,t3,t2
9d00558c:	0104102b 	sltu	v0,t0,a0
9d005590:	00621023 	subu	v0,v1,v0
9d005594:	7c4305c0 	ext	v1,v0,0x17,0x1
9d005598:	50600048 	beqzl	v1,9d0056bc <__adddf3+0x88c>
9d00559c:	00441825 	or	v1,v0,a0
9d0055a0:	00c82023 	subu	a0,a2,t0
9d0055a4:	014b1023 	subu	v0,t2,t3
9d0055a8:	00c4302b 	sltu	a2,a2,a0
9d0055ac:	00461023 	subu	v0,v0,a2
9d0055b0:	308e000f 	andi	t6,a0,0xf
9d0055b4:	01804821 	move	t1,t4
9d0055b8:	24030001 	li	v1,1
9d0055bc:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0055c0:	00003821 	move	a3,zero
9d0055c4:	5440ffb6 	bnezl	v0,9d0054a0 <__adddf3+0x670>
9d0055c8:	01463025 	or	a2,t2,a2
9d0055cc:	30ce000f 	andi	t6,a2,0xf
9d0055d0:	01401021 	move	v0,t2
9d0055d4:	00c02021 	move	a0,a2
9d0055d8:	24030800 	li	v1,2048
9d0055dc:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0055e0:	240707ff 	li	a3,2047
9d0055e4:	01601021 	move	v0,t3
9d0055e8:	01002021 	move	a0,t0
9d0055ec:	24030001 	li	v1,1
9d0055f0:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d0055f4:	00003821 	move	a3,zero
9d0055f8:	006b2806 	srlv	a1,t3,v1
9d0055fc:	10640003 	beq	v1,a0,9d00560c <__adddf3+0x7dc>
9d005600:	00001021 	move	v0,zero
9d005604:	00031823 	negu	v1,v1
9d005608:	006b1004 	sllv	v0,t3,v1
9d00560c:	00482025 	or	a0,v0,t0
9d005610:	0004202b 	sltu	a0,zero,a0
9d005614:	00852025 	or	a0,a0,a1
9d005618:	0b4014bc 	j	9d0052f0 <__adddf3+0x4c0>
9d00561c:	00001021 	move	v0,zero
9d005620:	14400022 	bnez	v0,9d0056ac <__adddf3+0x87c>
9d005624:	240307ff 	li	v1,2047
9d005628:	00c82021 	addu	a0,a2,t0
9d00562c:	014b1021 	addu	v0,t2,t3
9d005630:	0086302b 	sltu	a2,a0,a2
9d005634:	0b40141e 	j	9d005078 <__adddf3+0x248>
9d005638:	00461021 	addu	v0,v0,a2
9d00563c:	00001021 	move	v0,zero
9d005640:	0b40155a 	j	9d005568 <__adddf3+0x738>
9d005644:	0004202b 	sltu	a0,zero,a0
9d005648:	1040ffe6 	beqz	v0,9d0055e4 <__adddf3+0x7b4>
9d00564c:	310e000f 	andi	t6,t0,0xf
9d005650:	00c82021 	addu	a0,a2,t0
9d005654:	014b1021 	addu	v0,t2,t3
9d005658:	0088402b 	sltu	t0,a0,t0
9d00565c:	00481021 	addu	v0,v0,t0
9d005660:	7c4305c0 	ext	v1,v0,0x17,0x1
9d005664:	1060fe4d 	beqz	v1,9d004f9c <__adddf3+0x16c>
9d005668:	308e000f 	andi	t6,a0,0xf
9d00566c:	3c03ff7f 	lui	v1,0xff7f
9d005670:	3463ffff 	ori	v1,v1,0xffff
9d005674:	00431024 	and	v0,v0,v1
9d005678:	24030002 	li	v1,2
9d00567c:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d005680:	24070001 	li	a3,1
9d005684:	240e0008 	li	t6,8
9d005688:	2404fff8 	li	a0,-8
9d00568c:	3442ffff 	ori	v0,v0,0xffff
9d005690:	00004821 	move	t1,zero
9d005694:	24030800 	li	v1,2048
9d005698:	0b4013e9 	j	9d004fa4 <__adddf3+0x174>
9d00569c:	240707ff 	li	a3,2047
9d0056a0:	00001021 	move	v0,zero
9d0056a4:	0b401403 	j	9d00500c <__adddf3+0x1dc>
9d0056a8:	00003021 	move	a2,zero
9d0056ac:	54e3ffa0 	bnel	a3,v1,9d005530 <__adddf3+0x700>
9d0056b0:	28430039 	slti	v1,v0,57
9d0056b4:	0b401574 	j	9d0055d0 <__adddf3+0x7a0>
9d0056b8:	30ce000f 	andi	t6,a2,0xf
9d0056bc:	5060ff15 	beqzl	v1,9d005314 <__adddf3+0x4e4>
9d0056c0:	00004821 	move	t1,zero
9d0056c4:	0b4013e7 	j	9d004f9c <__adddf3+0x16c>
9d0056c8:	308e000f 	andi	t6,a0,0xf
9d0056cc:	004b2806 	srlv	a1,t3,v0
9d0056d0:	10440003 	beq	v0,a0,9d0056e0 <__adddf3+0x8b0>
9d0056d4:	00001821 	move	v1,zero
9d0056d8:	00021023 	negu	v0,v0
9d0056dc:	004b1804 	sllv	v1,t3,v0
9d0056e0:	00682025 	or	a0,v1,t0
9d0056e4:	0004202b 	sltu	a0,zero,a0
9d0056e8:	00852025 	or	a0,a0,a1
9d0056ec:	0b40155a 	j	9d005568 <__adddf3+0x738>
9d0056f0:	00001021 	move	v0,zero

9d0056f4 <__divdf3>:
9d0056f4:	7ca807c0 	ext	t0,a1,0x1f,0x1
9d0056f8:	7ca35500 	ext	v1,a1,0x14,0xb
9d0056fc:	310d00ff 	andi	t5,t0,0xff
9d005700:	1460002e 	bnez	v1,9d0057bc <__divdf3+0xc8>
9d005704:	7ca59800 	ext	a1,a1,0x0,0x14
9d005708:	00a44825 	or	t1,a1,a0
9d00570c:	1120006c 	beqz	t1,9d0058c0 <__divdf3+0x1cc>
9d005710:	240c0004 	li	t4,4
9d005714:	14a00003 	bnez	a1,9d005724 <__divdf3+0x30>
9d005718:	70a94820 	clz	t1,a1
9d00571c:	70894820 	clz	t1,a0
9d005720:	25290020 	addiu	t1,t1,32
9d005724:	2523fff5 	addiu	v1,t1,-11
9d005728:	286a001d 	slti	t2,v1,29
9d00572c:	514000bb 	beqzl	t2,9d005a1c <__divdf3+0x328>
9d005730:	2525ffd8 	addiu	a1,t1,-40
9d005734:	240a001d 	li	t2,29
9d005738:	2529fff8 	addiu	t1,t1,-8
9d00573c:	01435023 	subu	t2,t2,v1
9d005740:	01445006 	srlv	t2,a0,t2
9d005744:	01252804 	sllv	a1,a1,t1
9d005748:	01452825 	or	a1,t2,a1
9d00574c:	01242004 	sllv	a0,a0,t1
9d005750:	2409fc02 	li	t1,-1022
9d005754:	7cea5500 	ext	t2,a3,0x14,0xb
9d005758:	01231823 	subu	v1,t1,v1
9d00575c:	00006021 	move	t4,zero
9d005760:	7ce99800 	ext	t1,a3,0x0,0x14
9d005764:	00007821 	move	t7,zero
9d005768:	11400023 	beqz	t2,9d0057f8 <__divdf3+0x104>
9d00576c:	00073fc2 	srl	a3,a3,0x1f
9d005770:	240b07ff 	li	t3,2047
9d005774:	514b0049 	beql	t2,t3,9d00589c <__divdf3+0x1a8>
9d005778:	01267025 	or	t6,t1,a2
9d00577c:	3c0b0010 	lui	t3,0x10
9d005780:	012b4825 	or	t1,t1,t3
9d005784:	000948c0 	sll	t1,t1,0x3
9d005788:	00065f42 	srl	t3,a2,0x1d
9d00578c:	012b4825 	or	t1,t1,t3
9d005790:	000630c0 	sll	a2,a2,0x3
9d005794:	254afc01 	addiu	t2,t2,-1023
9d005798:	00005821 	move	t3,zero
9d00579c:	016c6025 	or	t4,t3,t4
9d0057a0:	3c0e9d01 	lui	t6,0x9d01
9d0057a4:	25ce63fc 	addiu	t6,t6,25596
9d0057a8:	000c6080 	sll	t4,t4,0x2
9d0057ac:	01cc6021 	addu	t4,t6,t4
9d0057b0:	8d8c0000 	lw	t4,0(t4)
9d0057b4:	01800008 	jr	t4
9d0057b8:	00ed7026 	xor	t6,a3,t5
9d0057bc:	240907ff 	li	t1,2047
9d0057c0:	10690023 	beq	v1,t1,9d005850 <__divdf3+0x15c>
9d0057c4:	3c090010 	lui	t1,0x10
9d0057c8:	00a92825 	or	a1,a1,t1
9d0057cc:	000528c0 	sll	a1,a1,0x3
9d0057d0:	00044f42 	srl	t1,a0,0x1d
9d0057d4:	00a92825 	or	a1,a1,t1
9d0057d8:	000420c0 	sll	a0,a0,0x3
9d0057dc:	2463fc01 	addiu	v1,v1,-1023
9d0057e0:	00006021 	move	t4,zero
9d0057e4:	00007821 	move	t7,zero
9d0057e8:	7cea5500 	ext	t2,a3,0x14,0xb
9d0057ec:	7ce99800 	ext	t1,a3,0x0,0x14
9d0057f0:	1540ffdf 	bnez	t2,9d005770 <__divdf3+0x7c>
9d0057f4:	00073fc2 	srl	a3,a3,0x1f
9d0057f8:	01265825 	or	t3,t1,a2
9d0057fc:	5160002d 	beqzl	t3,9d0058b4 <__divdf3+0x1c0>
9d005800:	00004821 	move	t1,zero
9d005804:	15200003 	bnez	t1,9d005814 <__divdf3+0x120>
9d005808:	712b5820 	clz	t3,t1
9d00580c:	70cb5820 	clz	t3,a2
9d005810:	256b0020 	addiu	t3,t3,32
9d005814:	256afff5 	addiu	t2,t3,-11
9d005818:	294e001d 	slti	t6,t2,29
9d00581c:	51c0007c 	beqzl	t6,9d005a10 <__divdf3+0x31c>
9d005820:	2569ffd8 	addiu	t1,t3,-40
9d005824:	240e001d 	li	t6,29
9d005828:	256bfff8 	addiu	t3,t3,-8
9d00582c:	01ca7023 	subu	t6,t6,t2
9d005830:	01c67006 	srlv	t6,a2,t6
9d005834:	01694804 	sllv	t1,t1,t3
9d005838:	01c94825 	or	t1,t6,t1
9d00583c:	01663004 	sllv	a2,a2,t3
9d005840:	240bfc02 	li	t3,-1022
9d005844:	016a5023 	subu	t2,t3,t2
9d005848:	0b4015e7 	j	9d00579c <__divdf3+0xa8>
9d00584c:	00005821 	move	t3,zero
9d005850:	00a44825 	or	t1,a1,a0
9d005854:	240a000c 	li	t2,12
9d005858:	240c0008 	li	t4,8
9d00585c:	240f0002 	li	t7,2
9d005860:	0149600b 	movn	t4,t2,t1
9d005864:	240a0003 	li	t2,3
9d005868:	0009280a 	movz	a1,zero,t1
9d00586c:	0009200a 	movz	a0,zero,t1
9d005870:	0b4015fa 	j	9d0057e8 <__divdf3+0xf4>
9d005874:	0149780b 	movn	t7,t2,t1
9d005878:	240207ff 	li	v0,2047
9d00587c:	00002821 	move	a1,zero
9d005880:	00002021 	move	a0,zero
9d005884:	00001821 	move	v1,zero
9d005888:	7ca39804 	ins	v1,a1,0x0,0x14
9d00588c:	7c43f504 	ins	v1,v0,0x14,0xb
9d005890:	7dc3ffc4 	ins	v1,t6,0x1f,0x1
9d005894:	03e00008 	jr	ra
9d005898:	00801021 	move	v0,a0
9d00589c:	240b0002 	li	t3,2
9d0058a0:	24180003 	li	t8,3
9d0058a4:	000e480a 	movz	t1,zero,t6
9d0058a8:	000e300a 	movz	a2,zero,t6
9d0058ac:	0b4015e7 	j	9d00579c <__divdf3+0xa8>
9d0058b0:	030e580b 	movn	t3,t8,t6
9d0058b4:	00003021 	move	a2,zero
9d0058b8:	0b4015e7 	j	9d00579c <__divdf3+0xa8>
9d0058bc:	240b0001 	li	t3,1
9d0058c0:	00002821 	move	a1,zero
9d0058c4:	00002021 	move	a0,zero
9d0058c8:	0b4015fa 	j	9d0057e8 <__divdf3+0xf4>
9d0058cc:	240f0001 	li	t7,1
9d0058d0:	3c05000f 	lui	a1,0xf
9d0058d4:	34a5ffff 	ori	a1,a1,0xffff
9d0058d8:	00007021 	move	t6,zero
9d0058dc:	2404ffff 	li	a0,-1
9d0058e0:	7ca59800 	ext	a1,a1,0x0,0x14
9d0058e4:	240207ff 	li	v0,2047
9d0058e8:	00001821 	move	v1,zero
9d0058ec:	7ca39804 	ins	v1,a1,0x0,0x14
9d0058f0:	7c43f504 	ins	v1,v0,0x14,0xb
9d0058f4:	7dc3ffc4 	ins	v1,t6,0x1f,0x1
9d0058f8:	03e00008 	jr	ra
9d0058fc:	00801021 	move	v0,a0
9d005900:	00002821 	move	a1,zero
9d005904:	00001821 	move	v1,zero
9d005908:	00001021 	move	v0,zero
9d00590c:	7ca39804 	ins	v1,a1,0x0,0x14
9d005910:	00002021 	move	a0,zero
9d005914:	7c43f504 	ins	v1,v0,0x14,0xb
9d005918:	7dc3ffc4 	ins	v1,t6,0x1f,0x1
9d00591c:	03e00008 	jr	ra
9d005920:	00801021 	move	v0,a0
9d005924:	01a07021 	move	t6,t5
9d005928:	01e05821 	move	t3,t7
9d00592c:	24030002 	li	v1,2
9d005930:	5163ffd2 	beql	t3,v1,9d00587c <__divdf3+0x188>
9d005934:	240207ff 	li	v0,2047
9d005938:	24030003 	li	v1,3
9d00593c:	51630121 	beql	t3,v1,9d005dc4 <__divdf3+0x6d0>
9d005940:	3c020008 	lui	v0,0x8
9d005944:	24030001 	li	v1,1
9d005948:	5163ffee 	beql	t3,v1,9d005904 <__divdf3+0x210>
9d00594c:	00002821 	move	a1,zero
9d005950:	244203ff 	addiu	v0,v0,1023
9d005954:	184000ed 	blez	v0,9d005d0c <__divdf3+0x618>
9d005958:	3086000f 	andi	a2,a0,0xf
9d00595c:	24030004 	li	v1,4
9d005960:	10c30004 	beq	a2,v1,9d005974 <__divdf3+0x280>
9d005964:	24830004 	addiu	v1,a0,4
9d005968:	0064202b 	sltu	a0,v1,a0
9d00596c:	00a42821 	addu	a1,a1,a0
9d005970:	00602021 	move	a0,v1
9d005974:	7ca30600 	ext	v1,a1,0x18,0x1
9d005978:	10600006 	beqz	v1,9d005994 <__divdf3+0x2a0>
9d00597c:	284307ff 	slti	v1,v0,2047
9d005980:	3c03feff 	lui	v1,0xfeff
9d005984:	3463ffff 	ori	v1,v1,0xffff
9d005988:	00a32824 	and	a1,a1,v1
9d00598c:	24420001 	addiu	v0,v0,1
9d005990:	284307ff 	slti	v1,v0,2047
9d005994:	5060ffb9 	beqzl	v1,9d00587c <__divdf3+0x188>
9d005998:	240207ff 	li	v0,2047
9d00599c:	00053740 	sll	a2,a1,0x1d
9d0059a0:	000420c2 	srl	a0,a0,0x3
9d0059a4:	00c42025 	or	a0,a2,a0
9d0059a8:	7ca598c0 	ext	a1,a1,0x3,0x14
9d0059ac:	0b401621 	j	9d005884 <__divdf3+0x190>
9d0059b0:	304207ff 	andi	v0,v0,0x7ff
9d0059b4:	01202821 	move	a1,t1
9d0059b8:	00c02021 	move	a0,a2
9d0059bc:	0b40164b 	j	9d00592c <__divdf3+0x238>
9d0059c0:	00e07021 	move	t6,a3
9d0059c4:	01254825 	or	t1,t1,a1
9d0059c8:	3c020008 	lui	v0,0x8
9d0059cc:	01224824 	and	t1,t1,v0
9d0059d0:	5520ffc0 	bnezl	t1,9d0058d4 <__divdf3+0x1e0>
9d0059d4:	3c05000f 	lui	a1,0xf
9d0059d8:	00a22825 	or	a1,a1,v0
9d0059dc:	310e0001 	andi	t6,t0,0x1
9d0059e0:	7ca59800 	ext	a1,a1,0x0,0x14
9d0059e4:	0b40163a 	j	9d0058e8 <__divdf3+0x1f4>
9d0059e8:	240207ff 	li	v0,2047
9d0059ec:	0125382b 	sltu	a3,t1,a1
9d0059f0:	14e0000f 	bnez	a3,9d005a30 <__divdf3+0x33c>
9d0059f4:	006a1023 	subu	v0,v1,t2
9d0059f8:	10a9000b 	beq	a1,t1,9d005a28 <__divdf3+0x334>
9d0059fc:	00c4182b 	sltu	v1,a2,a0
9d005a00:	00806821 	move	t5,a0
9d005a04:	2442ffff 	addiu	v0,v0,-1
9d005a08:	0b401691 	j	9d005a44 <__divdf3+0x350>
9d005a0c:	00002021 	move	a0,zero
9d005a10:	01264804 	sllv	t1,a2,t1
9d005a14:	0b401610 	j	9d005840 <__divdf3+0x14c>
9d005a18:	00003021 	move	a2,zero
9d005a1c:	00a42804 	sllv	a1,a0,a1
9d005a20:	0b4015d4 	j	9d005750 <__divdf3+0x5c>
9d005a24:	00002021 	move	a0,zero
9d005a28:	1060fff6 	beqz	v1,9d005a04 <__divdf3+0x310>
9d005a2c:	00806821 	move	t5,a0
9d005a30:	00046842 	srl	t5,a0,0x1
9d005a34:	00051fc0 	sll	v1,a1,0x1f
9d005a38:	01a36825 	or	t5,t5,v1
9d005a3c:	00052842 	srl	a1,a1,0x1
9d005a40:	000427c0 	sll	a0,a0,0x1f
9d005a44:	00094a00 	sll	t1,t1,0x8
9d005a48:	00061e02 	srl	v1,a2,0x18
9d005a4c:	00691825 	or	v1,v1,t1
9d005a50:	00033c02 	srl	a3,v1,0x10
9d005a54:	00a7001b 	divu	zero,a1,a3
9d005a58:	00e001f4 	teq	a3,zero,0x7
9d005a5c:	306bffff 	andi	t3,v1,0xffff
9d005a60:	000d4402 	srl	t0,t5,0x10
9d005a64:	00006012 	mflo	t4
9d005a68:	00002810 	mfhi	a1
9d005a6c:	00055400 	sll	t2,a1,0x10
9d005a70:	01485025 	or	t2,t2,t0
9d005a74:	718b4802 	mul	t1,t4,t3
9d005a78:	0149282b 	sltu	a1,t2,t1
9d005a7c:	10a0000a 	beqz	a1,9d005aa8 <__divdf3+0x3b4>
9d005a80:	00063200 	sll	a2,a2,0x8
9d005a84:	01435021 	addu	t2,t2,v1
9d005a88:	0143282b 	sltu	a1,t2,v1
9d005a8c:	14a00006 	bnez	a1,9d005aa8 <__divdf3+0x3b4>
9d005a90:	258cffff 	addiu	t4,t4,-1
9d005a94:	0149282b 	sltu	a1,t2,t1
9d005a98:	50a00004 	beqzl	a1,9d005aac <__divdf3+0x3b8>
9d005a9c:	01494823 	subu	t1,t2,t1
9d005aa0:	258cffff 	addiu	t4,t4,-1
9d005aa4:	01435021 	addu	t2,t2,v1
9d005aa8:	01494823 	subu	t1,t2,t1
9d005aac:	0127001b 	divu	zero,t1,a3
9d005ab0:	00e001f4 	teq	a3,zero,0x7
9d005ab4:	31afffff 	andi	t7,t5,0xffff
9d005ab8:	00002812 	mflo	a1
9d005abc:	00004010 	mfhi	t0
9d005ac0:	00084400 	sll	t0,t0,0x10
9d005ac4:	010f4025 	or	t0,t0,t7
9d005ac8:	70ab6802 	mul	t5,a1,t3
9d005acc:	010d782b 	sltu	t7,t0,t5
9d005ad0:	51e0000b 	beqzl	t7,9d005b00 <__divdf3+0x40c>
9d005ad4:	000c6400 	sll	t4,t4,0x10
9d005ad8:	01034021 	addu	t0,t0,v1
9d005adc:	0103782b 	sltu	t7,t0,v1
9d005ae0:	15e00006 	bnez	t7,9d005afc <__divdf3+0x408>
9d005ae4:	24a5ffff 	addiu	a1,a1,-1
9d005ae8:	010d782b 	sltu	t7,t0,t5
9d005aec:	51e00004 	beqzl	t7,9d005b00 <__divdf3+0x40c>
9d005af0:	000c6400 	sll	t4,t4,0x10
9d005af4:	24a5ffff 	addiu	a1,a1,-1
9d005af8:	01034021 	addu	t0,t0,v1
9d005afc:	000c6400 	sll	t4,t4,0x10
9d005b00:	00ac2825 	or	a1,a1,t4
9d005b04:	00a60019 	multu	a1,a2
9d005b08:	010d4023 	subu	t0,t0,t5
9d005b0c:	0000c810 	mfhi	t9
9d005b10:	0119682b 	sltu	t5,t0,t9
9d005b14:	03206021 	move	t4,t9
9d005b18:	15a00041 	bnez	t5,9d005c20 <__divdf3+0x52c>
9d005b1c:	00005012 	mflo	t2
9d005b20:	1119003d 	beq	t0,t9,9d005c18 <__divdf3+0x524>
9d005b24:	008a482b 	sltu	t1,a0,t2
9d005b28:	01194023 	subu	t0,t0,t9
9d005b2c:	008a5023 	subu	t2,a0,t2
9d005b30:	008a202b 	sltu	a0,a0,t2
9d005b34:	01044023 	subu	t0,t0,a0
9d005b38:	1103ff85 	beq	t0,v1,9d005950 <__divdf3+0x25c>
9d005b3c:	2404ffff 	li	a0,-1
9d005b40:	0107001b 	divu	zero,t0,a3
9d005b44:	00e001f4 	teq	a3,zero,0x7
9d005b48:	000a6c02 	srl	t5,t2,0x10
9d005b4c:	00006012 	mflo	t4
9d005b50:	00004810 	mfhi	t1
9d005b54:	00094c00 	sll	t1,t1,0x10
9d005b58:	012d4825 	or	t1,t1,t5
9d005b5c:	718b2002 	mul	a0,t4,t3
9d005b60:	0124402b 	sltu	t0,t1,a0
9d005b64:	5100000b 	beqzl	t0,9d005b94 <__divdf3+0x4a0>
9d005b68:	01242023 	subu	a0,t1,a0
9d005b6c:	01234821 	addu	t1,t1,v1
9d005b70:	0123402b 	sltu	t0,t1,v1
9d005b74:	15000006 	bnez	t0,9d005b90 <__divdf3+0x49c>
9d005b78:	258cffff 	addiu	t4,t4,-1
9d005b7c:	0124402b 	sltu	t0,t1,a0
9d005b80:	51000004 	beqzl	t0,9d005b94 <__divdf3+0x4a0>
9d005b84:	01242023 	subu	a0,t1,a0
9d005b88:	258cffff 	addiu	t4,t4,-1
9d005b8c:	01234821 	addu	t1,t1,v1
9d005b90:	01242023 	subu	a0,t1,a0
9d005b94:	0087001b 	divu	zero,a0,a3
9d005b98:	00e001f4 	teq	a3,zero,0x7
9d005b9c:	314affff 	andi	t2,t2,0xffff
9d005ba0:	00002012 	mflo	a0
9d005ba4:	00004010 	mfhi	t0
9d005ba8:	00084400 	sll	t0,t0,0x10
9d005bac:	010a4025 	or	t0,t0,t2
9d005bb0:	708b5802 	mul	t3,a0,t3
9d005bb4:	010b502b 	sltu	t2,t0,t3
9d005bb8:	5140000b 	beqzl	t2,9d005be8 <__divdf3+0x4f4>
9d005bbc:	000c6400 	sll	t4,t4,0x10
9d005bc0:	01034021 	addu	t0,t0,v1
9d005bc4:	0103502b 	sltu	t2,t0,v1
9d005bc8:	15400006 	bnez	t2,9d005be4 <__divdf3+0x4f0>
9d005bcc:	2484ffff 	addiu	a0,a0,-1
9d005bd0:	010b502b 	sltu	t2,t0,t3
9d005bd4:	51400004 	beqzl	t2,9d005be8 <__divdf3+0x4f4>
9d005bd8:	000c6400 	sll	t4,t4,0x10
9d005bdc:	2484ffff 	addiu	a0,a0,-1
9d005be0:	01034021 	addu	t0,t0,v1
9d005be4:	000c6400 	sll	t4,t4,0x10
9d005be8:	008c2025 	or	a0,a0,t4
9d005bec:	00860019 	multu	a0,a2
9d005bf0:	010b5823 	subu	t3,t0,t3
9d005bf4:	00006810 	mfhi	t5
9d005bf8:	016d402b 	sltu	t0,t3,t5
9d005bfc:	01a03821 	move	a3,t5
9d005c00:	1500001e 	bnez	t0,9d005c7c <__divdf3+0x588>
9d005c04:	00004812 	mflo	t1
9d005c08:	116d001a 	beq	t3,t5,9d005c74 <__divdf3+0x580>
9d005c0c:	00000000 	nop
9d005c10:	0b401654 	j	9d005950 <__divdf3+0x25c>
9d005c14:	34840001 	ori	a0,a0,0x1
9d005c18:	5120ffc4 	beqzl	t1,9d005b2c <__divdf3+0x438>
9d005c1c:	00004021 	move	t0,zero
9d005c20:	00862021 	addu	a0,a0,a2
9d005c24:	0086482b 	sltu	t1,a0,a2
9d005c28:	01234821 	addu	t1,t1,v1
9d005c2c:	01284021 	addu	t0,t1,t0
9d005c30:	0068482b 	sltu	t1,v1,t0
9d005c34:	11200008 	beqz	t1,9d005c58 <__divdf3+0x564>
9d005c38:	24a5ffff 	addiu	a1,a1,-1
9d005c3c:	010c482b 	sltu	t1,t0,t4
9d005c40:	5520002c 	bnezl	t1,9d005cf4 <__divdf3+0x600>
9d005c44:	00862021 	addu	a0,a0,a2
9d005c48:	11880027 	beq	t4,t0,9d005ce8 <__divdf3+0x5f4>
9d005c4c:	008a482b 	sltu	t1,a0,t2
9d005c50:	0b4016cb 	j	9d005b2c <__divdf3+0x438>
9d005c54:	010c4023 	subu	t0,t0,t4
9d005c58:	5503ffb4 	bnel	t0,v1,9d005b2c <__divdf3+0x438>
9d005c5c:	010c4023 	subu	t0,t0,t4
9d005c60:	0086482b 	sltu	t1,a0,a2
9d005c64:	1120fff6 	beqz	t1,9d005c40 <__divdf3+0x54c>
9d005c68:	010c482b 	sltu	t1,t0,t4
9d005c6c:	0b4016cb 	j	9d005b2c <__divdf3+0x438>
9d005c70:	006c4023 	subu	t0,v1,t4
9d005c74:	11200008 	beqz	t1,9d005c98 <__divdf3+0x5a4>
9d005c78:	00004021 	move	t0,zero
9d005c7c:	01635821 	addu	t3,t3,v1
9d005c80:	0163502b 	sltu	t2,t3,v1
9d005c84:	2484ffff 	addiu	a0,a0,-1
9d005c88:	11400007 	beqz	t2,9d005ca8 <__divdf3+0x5b4>
9d005c8c:	00c04021 	move	t0,a2
9d005c90:	5567ff2f 	bnel	t3,a3,9d005950 <__divdf3+0x25c>
9d005c94:	34840001 	ori	a0,a0,0x1
9d005c98:	5509ff2d 	bnel	t0,t1,9d005950 <__divdf3+0x25c>
9d005c9c:	34840001 	ori	a0,a0,0x1
9d005ca0:	0b401655 	j	9d005954 <__divdf3+0x260>
9d005ca4:	244203ff 	addiu	v0,v0,1023
9d005ca8:	0167402b 	sltu	t0,t3,a3
9d005cac:	55000007 	bnezl	t0,9d005ccc <__divdf3+0x5d8>
9d005cb0:	00064040 	sll	t0,a2,0x1
9d005cb4:	54ebff26 	bnel	a3,t3,9d005950 <__divdf3+0x25c>
9d005cb8:	34840001 	ori	a0,a0,0x1
9d005cbc:	00c9502b 	sltu	t2,a2,t1
9d005cc0:	1140fff5 	beqz	t2,9d005c98 <__divdf3+0x5a4>
9d005cc4:	00c04021 	move	t0,a2
9d005cc8:	00064040 	sll	t0,a2,0x1
9d005ccc:	0106302b 	sltu	a2,t0,a2
9d005cd0:	00c31821 	addu	v1,a2,v1
9d005cd4:	01635821 	addu	t3,t3,v1
9d005cd8:	1567ffcd 	bne	t3,a3,9d005c10 <__divdf3+0x51c>
9d005cdc:	2484ffff 	addiu	a0,a0,-1
9d005ce0:	0b401726 	j	9d005c98 <__divdf3+0x5a4>
9d005ce4:	00000000 	nop
9d005ce8:	5120ff90 	beqzl	t1,9d005b2c <__divdf3+0x438>
9d005cec:	00004021 	move	t0,zero
9d005cf0:	00862021 	addu	a0,a0,a2
9d005cf4:	0086482b 	sltu	t1,a0,a2
9d005cf8:	01234821 	addu	t1,t1,v1
9d005cfc:	01284021 	addu	t0,t1,t0
9d005d00:	24a5ffff 	addiu	a1,a1,-1
9d005d04:	0b4016cb 	j	9d005b2c <__divdf3+0x438>
9d005d08:	010c4023 	subu	t0,t0,t4
9d005d0c:	24030001 	li	v1,1
9d005d10:	00621023 	subu	v0,v1,v0
9d005d14:	28430039 	slti	v1,v0,57
9d005d18:	5060fefa 	beqzl	v1,9d005904 <__divdf3+0x210>
9d005d1c:	00002821 	move	a1,zero
9d005d20:	28430020 	slti	v1,v0,32
9d005d24:	10600018 	beqz	v1,9d005d88 <__divdf3+0x694>
9d005d28:	24060020 	li	a2,32
9d005d2c:	24030020 	li	v1,32
9d005d30:	00621823 	subu	v1,v1,v0
9d005d34:	00653804 	sllv	a3,a1,v1
9d005d38:	00443006 	srlv	a2,a0,v0
9d005d3c:	00641804 	sllv	v1,a0,v1
9d005d40:	00e63825 	or	a3,a3,a2
9d005d44:	0003182b 	sltu	v1,zero,v1
9d005d48:	00e32025 	or	a0,a3,v1
9d005d4c:	00452806 	srlv	a1,a1,v0
9d005d50:	3083000f 	andi	v1,a0,0xf
9d005d54:	24020004 	li	v0,4
9d005d58:	10620004 	beq	v1,v0,9d005d6c <__divdf3+0x678>
9d005d5c:	24820004 	addiu	v0,a0,4
9d005d60:	0044202b 	sltu	a0,v0,a0
9d005d64:	00a42821 	addu	a1,a1,a0
9d005d68:	00402021 	move	a0,v0
9d005d6c:	7ca205c0 	ext	v0,a1,0x17,0x1
9d005d70:	1040000f 	beqz	v0,9d005db0 <__divdf3+0x6bc>
9d005d74:	00053740 	sll	a2,a1,0x1d
9d005d78:	24020001 	li	v0,1
9d005d7c:	00002821 	move	a1,zero
9d005d80:	0b401621 	j	9d005884 <__divdf3+0x190>
9d005d84:	00002021 	move	a0,zero
9d005d88:	00453806 	srlv	a3,a1,v0
9d005d8c:	10460003 	beq	v0,a2,9d005d9c <__divdf3+0x6a8>
9d005d90:	00001821 	move	v1,zero
9d005d94:	00021023 	negu	v0,v0
9d005d98:	00451804 	sllv	v1,a1,v0
9d005d9c:	00642025 	or	a0,v1,a0
9d005da0:	0004202b 	sltu	a0,zero,a0
9d005da4:	00872025 	or	a0,a0,a3
9d005da8:	0b401754 	j	9d005d50 <__divdf3+0x65c>
9d005dac:	00002821 	move	a1,zero
9d005db0:	000420c2 	srl	a0,a0,0x3
9d005db4:	00c42025 	or	a0,a2,a0
9d005db8:	7ca598c0 	ext	a1,a1,0x3,0x14
9d005dbc:	0b401621 	j	9d005884 <__divdf3+0x190>
9d005dc0:	00001021 	move	v0,zero
9d005dc4:	00a22825 	or	a1,a1,v0
9d005dc8:	7ca59800 	ext	a1,a1,0x0,0x14
9d005dcc:	0b40163a 	j	9d0058e8 <__divdf3+0x1f4>
9d005dd0:	240207ff 	li	v0,2047

9d005dd4 <__eqdf2>:
9d005dd4:	7ca35500 	ext	v1,a1,0x14,0xb
9d005dd8:	240907ff 	li	t1,2047
9d005ddc:	7caa9800 	ext	t2,a1,0x0,0x14
9d005de0:	7ceb9800 	ext	t3,a3,0x0,0x14
9d005de4:	7ce85500 	ext	t0,a3,0x14,0xb
9d005de8:	00052fc2 	srl	a1,a1,0x1f
9d005dec:	10690011 	beq	v1,t1,9d005e34 <__eqdf2+0x60>
9d005df0:	00073fc2 	srl	a3,a3,0x1f
9d005df4:	240907ff 	li	t1,2047
9d005df8:	11090014 	beq	t0,t1,9d005e4c <__eqdf2+0x78>
9d005dfc:	01664825 	or	t1,t3,a2
9d005e00:	14680014 	bne	v1,t0,9d005e54 <__eqdf2+0x80>
9d005e04:	24020001 	li	v0,1
9d005e08:	154b0012 	bne	t2,t3,9d005e54 <__eqdf2+0x80>
9d005e0c:	00000000 	nop
9d005e10:	14860010 	bne	a0,a2,9d005e54 <__eqdf2+0x80>
9d005e14:	00000000 	nop
9d005e18:	10a7000e 	beq	a1,a3,9d005e54 <__eqdf2+0x80>
9d005e1c:	00001021 	move	v0,zero
9d005e20:	1460000c 	bnez	v1,9d005e54 <__eqdf2+0x80>
9d005e24:	24020001 	li	v0,1
9d005e28:	01442025 	or	a0,t2,a0
9d005e2c:	03e00008 	jr	ra
9d005e30:	0004102b 	sltu	v0,zero,a0
9d005e34:	01444825 	or	t1,t2,a0
9d005e38:	15200006 	bnez	t1,9d005e54 <__eqdf2+0x80>
9d005e3c:	24020001 	li	v0,1
9d005e40:	240907ff 	li	t1,2047
9d005e44:	1509ffee 	bne	t0,t1,9d005e00 <__eqdf2+0x2c>
9d005e48:	01664825 	or	t1,t3,a2
9d005e4c:	1120ffec 	beqz	t1,9d005e00 <__eqdf2+0x2c>
9d005e50:	24020001 	li	v0,1
9d005e54:	03e00008 	jr	ra
9d005e58:	00000000 	nop

9d005e5c <__gedf2>:
9d005e5c:	7ca35500 	ext	v1,a1,0x14,0xb
9d005e60:	240207ff 	li	v0,2047
9d005e64:	7cab9800 	ext	t3,a1,0x0,0x14
9d005e68:	7cea9800 	ext	t2,a3,0x0,0x14
9d005e6c:	7ce85500 	ext	t0,a3,0x14,0xb
9d005e70:	00052fc2 	srl	a1,a1,0x1f
9d005e74:	1062002f 	beq	v1,v0,9d005f34 <__gedf2+0xd8>
9d005e78:	00073fc2 	srl	a3,a3,0x1f
9d005e7c:	240207ff 	li	v0,2047
9d005e80:	11020031 	beq	t0,v0,9d005f48 <__gedf2+0xec>
9d005e84:	01464825 	or	t1,t2,a2
9d005e88:	14600003 	bnez	v1,9d005e98 <__gedf2+0x3c>
9d005e8c:	00001021 	move	v0,zero
9d005e90:	01641025 	or	v0,t3,a0
9d005e94:	2c420001 	sltiu	v0,v0,1
9d005e98:	15000003 	bnez	t0,9d005ea8 <__gedf2+0x4c>
9d005e9c:	00004821 	move	t1,zero
9d005ea0:	01464825 	or	t1,t2,a2
9d005ea4:	2d290001 	sltiu	t1,t1,1
9d005ea8:	10400007 	beqz	v0,9d005ec8 <__gedf2+0x6c>
9d005eac:	00000000 	nop
9d005eb0:	15200023 	bnez	t1,9d005f40 <__gedf2+0xe4>
9d005eb4:	00001021 	move	v0,zero
9d005eb8:	24020001 	li	v0,1
9d005ebc:	2403ffff 	li	v1,-1
9d005ec0:	03e00008 	jr	ra
9d005ec4:	0067100a 	movz	v0,v1,a3
9d005ec8:	1520000d 	bnez	t1,9d005f00 <__gedf2+0xa4>
9d005ecc:	2402ffff 	li	v0,-1
9d005ed0:	54a7000c 	bnel	a1,a3,9d005f04 <__gedf2+0xa8>
9d005ed4:	24030001 	li	v1,1
9d005ed8:	0103102a 	slt	v0,t0,v1
9d005edc:	54400008 	bnezl	v0,9d005f00 <__gedf2+0xa4>
9d005ee0:	2402ffff 	li	v0,-1
9d005ee4:	0068182a 	slt	v1,v1,t0
9d005ee8:	50600008 	beqzl	v1,9d005f0c <__gedf2+0xb0>
9d005eec:	014b102b 	sltu	v0,t2,t3
9d005ef0:	24020001 	li	v0,1
9d005ef4:	2403ffff 	li	v1,-1
9d005ef8:	03e00008 	jr	ra
9d005efc:	0065100a 	movz	v0,v1,a1
9d005f00:	24030001 	li	v1,1
9d005f04:	03e00008 	jr	ra
9d005f08:	0065100a 	movz	v0,v1,a1
9d005f0c:	5440fffc 	bnezl	v0,9d005f00 <__gedf2+0xa4>
9d005f10:	2402ffff 	li	v0,-1
9d005f14:	116a0012 	beq	t3,t2,9d005f60 <__gedf2+0x104>
9d005f18:	016a502b 	sltu	t2,t3,t2
9d005f1c:	1140000e 	beqz	t2,9d005f58 <__gedf2+0xfc>
9d005f20:	00000000 	nop
9d005f24:	24020001 	li	v0,1
9d005f28:	2403ffff 	li	v1,-1
9d005f2c:	03e00008 	jr	ra
9d005f30:	0065100a 	movz	v0,v1,a1
9d005f34:	01644825 	or	t1,t3,a0
9d005f38:	1120ffd0 	beqz	t1,9d005e7c <__gedf2+0x20>
9d005f3c:	2402fffe 	li	v0,-2
9d005f40:	03e00008 	jr	ra
9d005f44:	00000000 	nop
9d005f48:	1120ffcf 	beqz	t1,9d005e88 <__gedf2+0x2c>
9d005f4c:	2402fffe 	li	v0,-2
9d005f50:	03e00008 	jr	ra
9d005f54:	00000000 	nop
9d005f58:	03e00008 	jr	ra
9d005f5c:	00001021 	move	v0,zero
9d005f60:	00c4102b 	sltu	v0,a2,a0
9d005f64:	1440ffe6 	bnez	v0,9d005f00 <__gedf2+0xa4>
9d005f68:	2402ffff 	li	v0,-1
9d005f6c:	0086202b 	sltu	a0,a0,a2
9d005f70:	1480ffec 	bnez	a0,9d005f24 <__gedf2+0xc8>
9d005f74:	00001021 	move	v0,zero
9d005f78:	03e00008 	jr	ra
9d005f7c:	00000000 	nop

9d005f80 <__ledf2>:
9d005f80:	7ca35500 	ext	v1,a1,0x14,0xb
9d005f84:	240207ff 	li	v0,2047
9d005f88:	7ca99800 	ext	t1,a1,0x0,0x14
9d005f8c:	7cea9800 	ext	t2,a3,0x0,0x14
9d005f90:	7ce85500 	ext	t0,a3,0x14,0xb
9d005f94:	00052fc2 	srl	a1,a1,0x1f
9d005f98:	1062001d 	beq	v1,v0,9d006010 <__ledf2+0x90>
9d005f9c:	00073fc2 	srl	a3,a3,0x1f
9d005fa0:	240207ff 	li	v0,2047
9d005fa4:	11020011 	beq	t0,v0,9d005fec <__ledf2+0x6c>
9d005fa8:	01465825 	or	t3,t2,a2
9d005fac:	14600003 	bnez	v1,9d005fbc <__ledf2+0x3c>
9d005fb0:	00001021 	move	v0,zero
9d005fb4:	01241025 	or	v0,t1,a0
9d005fb8:	2c420001 	sltiu	v0,v0,1
9d005fbc:	15000003 	bnez	t0,9d005fcc <__ledf2+0x4c>
9d005fc0:	00005821 	move	t3,zero
9d005fc4:	01465825 	or	t3,t2,a2
9d005fc8:	2d6b0001 	sltiu	t3,t3,1
9d005fcc:	1040000b 	beqz	v0,9d005ffc <__ledf2+0x7c>
9d005fd0:	00000000 	nop
9d005fd4:	15600007 	bnez	t3,9d005ff4 <__ledf2+0x74>
9d005fd8:	00001021 	move	v0,zero
9d005fdc:	24020001 	li	v0,1
9d005fe0:	2403ffff 	li	v1,-1
9d005fe4:	03e00008 	jr	ra
9d005fe8:	0067100a 	movz	v0,v1,a3
9d005fec:	1160ffef 	beqz	t3,9d005fac <__ledf2+0x2c>
9d005ff0:	24020002 	li	v0,2
9d005ff4:	03e00008 	jr	ra
9d005ff8:	00000000 	nop
9d005ffc:	11600009 	beqz	t3,9d006024 <__ledf2+0xa4>
9d006000:	2402ffff 	li	v0,-1
9d006004:	24030001 	li	v1,1
9d006008:	03e00008 	jr	ra
9d00600c:	0065100a 	movz	v0,v1,a1
9d006010:	01245825 	or	t3,t1,a0
9d006014:	1160ffe2 	beqz	t3,9d005fa0 <__ledf2+0x20>
9d006018:	24020002 	li	v0,2
9d00601c:	03e00008 	jr	ra
9d006020:	00000000 	nop
9d006024:	14a7fff7 	bne	a1,a3,9d006004 <__ledf2+0x84>
9d006028:	00000000 	nop
9d00602c:	0103102a 	slt	v0,t0,v1
9d006030:	5440fff4 	bnezl	v0,9d006004 <__ledf2+0x84>
9d006034:	2402ffff 	li	v0,-1
9d006038:	0068182a 	slt	v1,v1,t0
9d00603c:	50600005 	beqzl	v1,9d006054 <__ledf2+0xd4>
9d006040:	0149102b 	sltu	v0,t2,t1
9d006044:	24020001 	li	v0,1
9d006048:	2403ffff 	li	v1,-1
9d00604c:	03e00008 	jr	ra
9d006050:	0065100a 	movz	v0,v1,a1
9d006054:	5440ffeb 	bnezl	v0,9d006004 <__ledf2+0x84>
9d006058:	2402ffff 	li	v0,-1
9d00605c:	112a0007 	beq	t1,t2,9d00607c <__ledf2+0xfc>
9d006060:	012a482b 	sltu	t1,t1,t2
9d006064:	1120000d 	beqz	t1,9d00609c <__ledf2+0x11c>
9d006068:	00000000 	nop
9d00606c:	2403ffff 	li	v1,-1
9d006070:	24020001 	li	v0,1
9d006074:	03e00008 	jr	ra
9d006078:	0065100a 	movz	v0,v1,a1
9d00607c:	00c4102b 	sltu	v0,a2,a0
9d006080:	5440ffe0 	bnezl	v0,9d006004 <__ledf2+0x84>
9d006084:	2402ffff 	li	v0,-1
9d006088:	0086202b 	sltu	a0,a0,a2
9d00608c:	1480fff7 	bnez	a0,9d00606c <__ledf2+0xec>
9d006090:	00001021 	move	v0,zero
9d006094:	03e00008 	jr	ra
9d006098:	00000000 	nop
9d00609c:	03e00008 	jr	ra
9d0060a0:	00001021 	move	v0,zero

9d0060a4 <__muldf3>:
9d0060a4:	27bdfff0 	addiu	sp,sp,-16
9d0060a8:	7ca807c0 	ext	t0,a1,0x1f,0x1
9d0060ac:	7ca35500 	ext	v1,a1,0x14,0xb
9d0060b0:	afb3000c 	sw	s3,12(sp)
9d0060b4:	afb20008 	sw	s2,8(sp)
9d0060b8:	afb10004 	sw	s1,4(sp)
9d0060bc:	afb00000 	sw	s0,0(sp)
9d0060c0:	7ca59800 	ext	a1,a1,0x0,0x14
9d0060c4:	1460002f 	bnez	v1,9d006184 <__muldf3+0xe0>
9d0060c8:	310c00ff 	andi	t4,t0,0xff
9d0060cc:	00a44825 	or	t1,a1,a0
9d0060d0:	11200065 	beqz	t1,9d006268 <__muldf3+0x1c4>
9d0060d4:	240b0004 	li	t3,4
9d0060d8:	14a00003 	bnez	a1,9d0060e8 <__muldf3+0x44>
9d0060dc:	70a94820 	clz	t1,a1
9d0060e0:	70894820 	clz	t1,a0
9d0060e4:	25290020 	addiu	t1,t1,32
9d0060e8:	2523fff5 	addiu	v1,t1,-11
9d0060ec:	286a001d 	slti	t2,v1,29
9d0060f0:	5140010d 	beqzl	t2,9d006528 <__muldf3+0x484>
9d0060f4:	2525ffd8 	addiu	a1,t1,-40
9d0060f8:	240a001d 	li	t2,29
9d0060fc:	2529fff8 	addiu	t1,t1,-8
9d006100:	01435023 	subu	t2,t2,v1
9d006104:	01445006 	srlv	t2,a0,t2
9d006108:	01252804 	sllv	a1,a1,t1
9d00610c:	01452825 	or	a1,t2,a1
9d006110:	01242004 	sllv	a0,a0,t1
9d006114:	2409fc02 	li	t1,-1022
9d006118:	7cee07c0 	ext	t6,a3,0x1f,0x1
9d00611c:	01231823 	subu	v1,t1,v1
9d006120:	7ce95500 	ext	t1,a3,0x14,0xb
9d006124:	00005821 	move	t3,zero
9d006128:	0000c021 	move	t8,zero
9d00612c:	7ce79800 	ext	a3,a3,0x0,0x14
9d006130:	11200024 	beqz	t1,9d0061c4 <__muldf3+0x120>
9d006134:	31cd00ff 	andi	t5,t6,0xff
9d006138:	240a07ff 	li	t2,2047
9d00613c:	112a0041 	beq	t1,t2,9d006244 <__muldf3+0x1a0>
9d006140:	00e67825 	or	t7,a3,a2
9d006144:	3c0a0010 	lui	t2,0x10
9d006148:	00ea3825 	or	a3,a3,t2
9d00614c:	000738c0 	sll	a3,a3,0x3
9d006150:	00065742 	srl	t2,a2,0x1d
9d006154:	00ea3825 	or	a3,a3,t2
9d006158:	000630c0 	sll	a2,a2,0x3
9d00615c:	2529fc01 	addiu	t1,t1,-1023
9d006160:	00005021 	move	t2,zero
9d006164:	014b5825 	or	t3,t2,t3
9d006168:	3c0f9d01 	lui	t7,0x9d01
9d00616c:	25ef643c 	addiu	t7,t7,25660
9d006170:	000b5880 	sll	t3,t3,0x2
9d006174:	01eb5821 	addu	t3,t7,t3
9d006178:	8d6f0000 	lw	t7,0(t3)
9d00617c:	01e00008 	jr	t7
9d006180:	01ac5826 	xor	t3,t5,t4
9d006184:	240907ff 	li	t1,2047
9d006188:	10690024 	beq	v1,t1,9d00621c <__muldf3+0x178>
9d00618c:	3c090010 	lui	t1,0x10
9d006190:	00a92825 	or	a1,a1,t1
9d006194:	000528c0 	sll	a1,a1,0x3
9d006198:	00044f42 	srl	t1,a0,0x1d
9d00619c:	00a92825 	or	a1,a1,t1
9d0061a0:	000420c0 	sll	a0,a0,0x3
9d0061a4:	2463fc01 	addiu	v1,v1,-1023
9d0061a8:	00005821 	move	t3,zero
9d0061ac:	0000c021 	move	t8,zero
9d0061b0:	7cee07c0 	ext	t6,a3,0x1f,0x1
9d0061b4:	7ce95500 	ext	t1,a3,0x14,0xb
9d0061b8:	31cd00ff 	andi	t5,t6,0xff
9d0061bc:	1520ffde 	bnez	t1,9d006138 <__muldf3+0x94>
9d0061c0:	7ce79800 	ext	a3,a3,0x0,0x14
9d0061c4:	00e65025 	or	t2,a3,a2
9d0061c8:	51400024 	beqzl	t2,9d00625c <__muldf3+0x1b8>
9d0061cc:	00003821 	move	a3,zero
9d0061d0:	14e00003 	bnez	a3,9d0061e0 <__muldf3+0x13c>
9d0061d4:	70ea5020 	clz	t2,a3
9d0061d8:	70ca5020 	clz	t2,a2
9d0061dc:	254a0020 	addiu	t2,t2,32
9d0061e0:	2549fff5 	addiu	t1,t2,-11
9d0061e4:	292f001d 	slti	t7,t1,29
9d0061e8:	51e000cc 	beqzl	t7,9d00651c <__muldf3+0x478>
9d0061ec:	2547ffd8 	addiu	a3,t2,-40
9d0061f0:	240f001d 	li	t7,29
9d0061f4:	254afff8 	addiu	t2,t2,-8
9d0061f8:	01e97823 	subu	t7,t7,t1
9d0061fc:	01e67806 	srlv	t7,a2,t7
9d006200:	01473804 	sllv	a3,a3,t2
9d006204:	01e73825 	or	a3,t7,a3
9d006208:	01463004 	sllv	a2,a2,t2
9d00620c:	240afc02 	li	t2,-1022
9d006210:	01494823 	subu	t1,t2,t1
9d006214:	0b401859 	j	9d006164 <__muldf3+0xc0>
9d006218:	00005021 	move	t2,zero
9d00621c:	00a44825 	or	t1,a1,a0
9d006220:	240a000c 	li	t2,12
9d006224:	240b0008 	li	t3,8
9d006228:	24180002 	li	t8,2
9d00622c:	0149580b 	movn	t3,t2,t1
9d006230:	240a0003 	li	t2,3
9d006234:	0009280a 	movz	a1,zero,t1
9d006238:	0009200a 	movz	a0,zero,t1
9d00623c:	0b40186c 	j	9d0061b0 <__muldf3+0x10c>
9d006240:	0149c00b 	movn	t8,t2,t1
9d006244:	240a0002 	li	t2,2
9d006248:	24190003 	li	t9,3
9d00624c:	000f380a 	movz	a3,zero,t7
9d006250:	000f300a 	movz	a2,zero,t7
9d006254:	0b401859 	j	9d006164 <__muldf3+0xc0>
9d006258:	032f500b 	movn	t2,t9,t7
9d00625c:	00003021 	move	a2,zero
9d006260:	0b401859 	j	9d006164 <__muldf3+0xc0>
9d006264:	240a0001 	li	t2,1
9d006268:	00002821 	move	a1,zero
9d00626c:	00002021 	move	a0,zero
9d006270:	0b40186c 	j	9d0061b0 <__muldf3+0x10c>
9d006274:	24180001 	li	t8,1
9d006278:	01604021 	move	t0,t3
9d00627c:	03005021 	move	t2,t8
9d006280:	24030002 	li	v1,2
9d006284:	5143002e 	beql	t2,v1,9d006340 <__muldf3+0x29c>
9d006288:	00002821 	move	a1,zero
9d00628c:	24030003 	li	v1,3
9d006290:	114300b2 	beq	t2,v1,9d00655c <__muldf3+0x4b8>
9d006294:	24030001 	li	v1,1
9d006298:	51430093 	beql	t2,v1,9d0064e8 <__muldf3+0x444>
9d00629c:	00002821 	move	a1,zero
9d0062a0:	244203ff 	addiu	v0,v0,1023
9d0062a4:	18400089 	blez	v0,9d0064cc <__muldf3+0x428>
9d0062a8:	3086000f 	andi	a2,a0,0xf
9d0062ac:	24030004 	li	v1,4
9d0062b0:	10c30004 	beq	a2,v1,9d0062c4 <__muldf3+0x220>
9d0062b4:	24830004 	addiu	v1,a0,4
9d0062b8:	0064202b 	sltu	a0,v1,a0
9d0062bc:	00a42821 	addu	a1,a1,a0
9d0062c0:	00602021 	move	a0,v1
9d0062c4:	7ca30600 	ext	v1,a1,0x18,0x1
9d0062c8:	10600006 	beqz	v1,9d0062e4 <__muldf3+0x240>
9d0062cc:	284307ff 	slti	v1,v0,2047
9d0062d0:	3c03feff 	lui	v1,0xfeff
9d0062d4:	3463ffff 	ori	v1,v1,0xffff
9d0062d8:	00a32824 	and	a1,a1,v1
9d0062dc:	24420001 	addiu	v0,v0,1
9d0062e0:	284307ff 	slti	v1,v0,2047
9d0062e4:	14600093 	bnez	v1,9d006534 <__muldf3+0x490>
9d0062e8:	00053740 	sll	a2,a1,0x1d
9d0062ec:	01604021 	move	t0,t3
9d0062f0:	240207ff 	li	v0,2047
9d0062f4:	00002821 	move	a1,zero
9d0062f8:	00002021 	move	a0,zero
9d0062fc:	00001821 	move	v1,zero
9d006300:	7ca39804 	ins	v1,a1,0x0,0x14
9d006304:	7c43f504 	ins	v1,v0,0x14,0xb
9d006308:	7d03ffc4 	ins	v1,t0,0x1f,0x1
9d00630c:	00801021 	move	v0,a0
9d006310:	8fb3000c 	lw	s3,12(sp)
9d006314:	8fb20008 	lw	s2,8(sp)
9d006318:	8fb10004 	lw	s1,4(sp)
9d00631c:	8fb00000 	lw	s0,0(sp)
9d006320:	03e00008 	jr	ra
9d006324:	27bd0010 	addiu	sp,sp,16
9d006328:	03005021 	move	t2,t8
9d00632c:	24030002 	li	v1,2
9d006330:	31080001 	andi	t0,t0,0x1
9d006334:	1543ffd5 	bne	t2,v1,9d00628c <__muldf3+0x1e8>
9d006338:	01805821 	move	t3,t4
9d00633c:	00002821 	move	a1,zero
9d006340:	00001821 	move	v1,zero
9d006344:	240207ff 	li	v0,2047
9d006348:	7ca39804 	ins	v1,a1,0x0,0x14
9d00634c:	7c43f504 	ins	v1,v0,0x14,0xb
9d006350:	00002021 	move	a0,zero
9d006354:	7d03ffc4 	ins	v1,t0,0x1f,0x1
9d006358:	00801021 	move	v0,a0
9d00635c:	8fb3000c 	lw	s3,12(sp)
9d006360:	8fb20008 	lw	s2,8(sp)
9d006364:	8fb10004 	lw	s1,4(sp)
9d006368:	8fb00000 	lw	s0,0(sp)
9d00636c:	03e00008 	jr	ra
9d006370:	27bd0010 	addiu	sp,sp,16
9d006374:	01604021 	move	t0,t3
9d006378:	00e02821 	move	a1,a3
9d00637c:	0b4018a0 	j	9d006280 <__muldf3+0x1dc>
9d006380:	00c02021 	move	a0,a2
9d006384:	00e40019 	multu	a3,a0
9d006388:	01231021 	addu	v0,t1,v1
9d00638c:	00007012 	mflo	t6
9d006390:	00007810 	mfhi	t7
9d006394:	00c40019 	multu	a2,a0
9d006398:	0000c012 	mflo	t8
9d00639c:	0000c810 	mfhi	t9
9d0063a0:	01d91821 	addu	v1,t6,t9
9d0063a4:	006e682b 	sltu	t5,v1,t6
9d0063a8:	00c50019 	multu	a2,a1
9d0063ac:	00008012 	mflo	s0
9d0063b0:	00701821 	addu	v1,v1,s0
9d0063b4:	00032240 	sll	a0,v1,0x9
9d0063b8:	00008810 	mfhi	s1
9d0063bc:	0098c025 	or	t8,a0,t8
9d0063c0:	0070402b 	sltu	t0,v1,s0
9d0063c4:	0018c02b 	sltu	t8,zero,t8
9d0063c8:	00e50019 	multu	a3,a1
9d0063cc:	00031dc2 	srl	v1,v1,0x17
9d0063d0:	03032025 	or	a0,t8,v1
9d0063d4:	00009012 	mflo	s2
9d0063d8:	01f27021 	addu	t6,t7,s2
9d0063dc:	01ae6021 	addu	t4,t5,t6
9d0063e0:	01914821 	addu	t1,t4,s1
9d0063e4:	00009810 	mfhi	s3
9d0063e8:	01281821 	addu	v1,t1,t0
9d0063ec:	01cf702b 	sltu	t6,t6,t7
9d0063f0:	018d602b 	sltu	t4,t4,t5
9d0063f4:	0068402b 	sltu	t0,v1,t0
9d0063f8:	0131482b 	sltu	t1,t1,s1
9d0063fc:	018e6025 	or	t4,t4,t6
9d006400:	01932821 	addu	a1,t4,s3
9d006404:	01094025 	or	t0,t0,t1
9d006408:	00a82821 	addu	a1,a1,t0
9d00640c:	000335c2 	srl	a2,v1,0x17
9d006410:	00052a40 	sll	a1,a1,0x9
9d006414:	00a62825 	or	a1,a1,a2
9d006418:	00031a40 	sll	v1,v1,0x9
9d00641c:	7ca70600 	ext	a3,a1,0x18,0x1
9d006420:	10e0ff9f 	beqz	a3,9d0062a0 <__muldf3+0x1fc>
9d006424:	00832025 	or	a0,a0,v1
9d006428:	30860001 	andi	a2,a0,0x1
9d00642c:	00042042 	srl	a0,a0,0x1
9d006430:	00051fc0 	sll	v1,a1,0x1f
9d006434:	00c42025 	or	a0,a2,a0
9d006438:	24420001 	addiu	v0,v0,1
9d00643c:	00832025 	or	a0,a0,v1
9d006440:	0b4018a8 	j	9d0062a0 <__muldf3+0x1fc>
9d006444:	00052842 	srl	a1,a1,0x1
9d006448:	31c80001 	andi	t0,t6,0x1
9d00644c:	00e02821 	move	a1,a3
9d006450:	00c02021 	move	a0,a2
9d006454:	0b4018a0 	j	9d006280 <__muldf3+0x1dc>
9d006458:	01a05821 	move	t3,t5
9d00645c:	00e53825 	or	a3,a3,a1
9d006460:	3c020008 	lui	v0,0x8
9d006464:	00e23824 	and	a3,a3,v0
9d006468:	54e00038 	bnezl	a3,9d00654c <__muldf3+0x4a8>
9d00646c:	3c05000f 	lui	a1,0xf
9d006470:	00a22825 	or	a1,a1,v0
9d006474:	01805821 	move	t3,t4
9d006478:	7ca59800 	ext	a1,a1,0x0,0x14
9d00647c:	00001821 	move	v1,zero
9d006480:	240207ff 	li	v0,2047
9d006484:	7ca39804 	ins	v1,a1,0x0,0x14
9d006488:	7c43f504 	ins	v1,v0,0x14,0xb
9d00648c:	01604021 	move	t0,t3
9d006490:	7d03ffc4 	ins	v1,t0,0x1f,0x1
9d006494:	00801021 	move	v0,a0
9d006498:	8fb3000c 	lw	s3,12(sp)
9d00649c:	8fb20008 	lw	s2,8(sp)
9d0064a0:	8fb10004 	lw	s1,4(sp)
9d0064a4:	8fb00000 	lw	s0,0(sp)
9d0064a8:	03e00008 	jr	ra
9d0064ac:	27bd0010 	addiu	sp,sp,16
9d0064b0:	3c05000f 	lui	a1,0xf
9d0064b4:	00004021 	move	t0,zero
9d0064b8:	34a5ffff 	ori	a1,a1,0xffff
9d0064bc:	2404ffff 	li	a0,-1
9d0064c0:	00005821 	move	t3,zero
9d0064c4:	0b4018a0 	j	9d006280 <__muldf3+0x1dc>
9d0064c8:	240a0003 	li	t2,3
9d0064cc:	24030001 	li	v1,1
9d0064d0:	00621023 	subu	v0,v1,v0
9d0064d4:	28430039 	slti	v1,v0,57
9d0064d8:	14600023 	bnez	v1,9d006568 <__muldf3+0x4c4>
9d0064dc:	28430020 	slti	v1,v0,32
9d0064e0:	01604021 	move	t0,t3
9d0064e4:	00002821 	move	a1,zero
9d0064e8:	00001821 	move	v1,zero
9d0064ec:	00001021 	move	v0,zero
9d0064f0:	7ca39804 	ins	v1,a1,0x0,0x14
9d0064f4:	7c43f504 	ins	v1,v0,0x14,0xb
9d0064f8:	00002021 	move	a0,zero
9d0064fc:	7d03ffc4 	ins	v1,t0,0x1f,0x1
9d006500:	00801021 	move	v0,a0
9d006504:	8fb3000c 	lw	s3,12(sp)
9d006508:	8fb20008 	lw	s2,8(sp)
9d00650c:	8fb10004 	lw	s1,4(sp)
9d006510:	8fb00000 	lw	s0,0(sp)
9d006514:	03e00008 	jr	ra
9d006518:	27bd0010 	addiu	sp,sp,16
9d00651c:	00e63804 	sllv	a3,a2,a3
9d006520:	0b401883 	j	9d00620c <__muldf3+0x168>
9d006524:	00003021 	move	a2,zero
9d006528:	00a42804 	sllv	a1,a0,a1
9d00652c:	0b401845 	j	9d006114 <__muldf3+0x70>
9d006530:	00002021 	move	a0,zero
9d006534:	000420c2 	srl	a0,a0,0x3
9d006538:	00c42025 	or	a0,a2,a0
9d00653c:	7ca598c0 	ext	a1,a1,0x3,0x14
9d006540:	304207ff 	andi	v0,v0,0x7ff
9d006544:	0b4018bf 	j	9d0062fc <__muldf3+0x258>
9d006548:	01604021 	move	t0,t3
9d00654c:	34a5ffff 	ori	a1,a1,0xffff
9d006550:	2404ffff 	li	a0,-1
9d006554:	0b40191e 	j	9d006478 <__muldf3+0x3d4>
9d006558:	00005821 	move	t3,zero
9d00655c:	3c070008 	lui	a3,0x8
9d006560:	0b40191e 	j	9d006478 <__muldf3+0x3d4>
9d006564:	00a72825 	or	a1,a1,a3
9d006568:	10600019 	beqz	v1,9d0065d0 <__muldf3+0x52c>
9d00656c:	24060020 	li	a2,32
9d006570:	24030020 	li	v1,32
9d006574:	00621823 	subu	v1,v1,v0
9d006578:	00653804 	sllv	a3,a1,v1
9d00657c:	00443006 	srlv	a2,a0,v0
9d006580:	00641804 	sllv	v1,a0,v1
9d006584:	00e63825 	or	a3,a3,a2
9d006588:	0003182b 	sltu	v1,zero,v1
9d00658c:	00e32025 	or	a0,a3,v1
9d006590:	00452806 	srlv	a1,a1,v0
9d006594:	3083000f 	andi	v1,a0,0xf
9d006598:	24020004 	li	v0,4
9d00659c:	10620004 	beq	v1,v0,9d0065b0 <__muldf3+0x50c>
9d0065a0:	24820004 	addiu	v0,a0,4
9d0065a4:	0044202b 	sltu	a0,v0,a0
9d0065a8:	00a42821 	addu	a1,a1,a0
9d0065ac:	00402021 	move	a0,v0
9d0065b0:	7ca205c0 	ext	v0,a1,0x17,0x1
9d0065b4:	10400010 	beqz	v0,9d0065f8 <__muldf3+0x554>
9d0065b8:	00053740 	sll	a2,a1,0x1d
9d0065bc:	01604021 	move	t0,t3
9d0065c0:	24020001 	li	v0,1
9d0065c4:	00002821 	move	a1,zero
9d0065c8:	0b4018bf 	j	9d0062fc <__muldf3+0x258>
9d0065cc:	00002021 	move	a0,zero
9d0065d0:	00453806 	srlv	a3,a1,v0
9d0065d4:	10460003 	beq	v0,a2,9d0065e4 <__muldf3+0x540>
9d0065d8:	00001821 	move	v1,zero
9d0065dc:	00021023 	negu	v0,v0
9d0065e0:	00451804 	sllv	v1,a1,v0
9d0065e4:	00642025 	or	a0,v1,a0
9d0065e8:	0004202b 	sltu	a0,zero,a0
9d0065ec:	00872025 	or	a0,a0,a3
9d0065f0:	0b401965 	j	9d006594 <__muldf3+0x4f0>
9d0065f4:	00002821 	move	a1,zero
9d0065f8:	000420c2 	srl	a0,a0,0x3
9d0065fc:	00c42025 	or	a0,a2,a0
9d006600:	7ca598c0 	ext	a1,a1,0x3,0x14
9d006604:	01604021 	move	t0,t3
9d006608:	0b4018bf 	j	9d0062fc <__muldf3+0x258>
9d00660c:	00001021 	move	v0,zero

9d006610 <__subdf3>:
9d006610:	7cac9800 	ext	t4,a1,0x0,0x14
9d006614:	7ce99800 	ext	t1,a3,0x0,0x14
9d006618:	7cad07c0 	ext	t5,a1,0x1f,0x1
9d00661c:	00067742 	srl	t6,a2,0x1d
9d006620:	000c60c0 	sll	t4,t4,0x3
9d006624:	00044742 	srl	t0,a0,0x1d
9d006628:	000948c0 	sll	t1,t1,0x3
9d00662c:	7ce35500 	ext	v1,a3,0x14,0xb
9d006630:	240207ff 	li	v0,2047
9d006634:	7ca55500 	ext	a1,a1,0x14,0xb
9d006638:	31ab00ff 	andi	t3,t5,0xff
9d00663c:	01886025 	or	t4,t4,t0
9d006640:	000450c0 	sll	t2,a0,0x3
9d006644:	00073fc2 	srl	a3,a3,0x1f
9d006648:	012e4825 	or	t1,t1,t6
9d00664c:	10620014 	beq	v1,v0,9d0066a0 <__subdf3+0x90>
9d006650:	000630c0 	sll	a2,a2,0x3
9d006654:	38e70001 	xori	a3,a3,0x1
9d006658:	11670073 	beq	t3,a3,9d006828 <__subdf3+0x218>
9d00665c:	00a34023 	subu	t0,a1,v1
9d006660:	190000c4 	blez	t0,9d006974 <__subdf3+0x364>
9d006664:	00000000 	nop
9d006668:	14600012 	bnez	v1,9d0066b4 <__subdf3+0xa4>
9d00666c:	240207ff 	li	v0,2047
9d006670:	01261025 	or	v0,t1,a2
9d006674:	5040009b 	beqzl	v0,9d0068e4 <__subdf3+0x2d4>
9d006678:	24a80001 	addiu	t0,a1,1
9d00667c:	2508ffff 	addiu	t0,t0,-1
9d006680:	550000ae 	bnezl	t0,9d00693c <__subdf3+0x32c>
9d006684:	240207ff 	li	v0,2047
9d006688:	01462023 	subu	a0,t2,a2
9d00668c:	01891023 	subu	v0,t4,t1
9d006690:	0144502b 	sltu	t2,t2,a0
9d006694:	004a1023 	subu	v0,v0,t2
9d006698:	0b4019c5 	j	9d006714 <__subdf3+0x104>
9d00669c:	00a01821 	move	v1,a1
9d0066a0:	01261025 	or	v0,t1,a2
9d0066a4:	5040ffec 	beqzl	v0,9d006658 <__subdf3+0x48>
9d0066a8:	38e70001 	xori	a3,a3,0x1
9d0066ac:	0b401996 	j	9d006658 <__subdf3+0x48>
9d0066b0:	00000000 	nop
9d0066b4:	10a200a4 	beq	a1,v0,9d006948 <__subdf3+0x338>
9d0066b8:	314e000f 	andi	t6,t2,0xf
9d0066bc:	3c020080 	lui	v0,0x80
9d0066c0:	01224825 	or	t1,t1,v0
9d0066c4:	29020039 	slti	v0,t0,57
9d0066c8:	104000c9 	beqz	v0,9d0069f0 <__subdf3+0x3e0>
9d0066cc:	01262025 	or	a0,t1,a2
9d0066d0:	29020020 	slti	v0,t0,32
9d0066d4:	104000ec 	beqz	v0,9d006a88 <__subdf3+0x478>
9d0066d8:	24040020 	li	a0,32
9d0066dc:	24020020 	li	v0,32
9d0066e0:	00481023 	subu	v0,v0,t0
9d0066e4:	00492004 	sllv	a0,t1,v0
9d0066e8:	01061806 	srlv	v1,a2,t0
9d0066ec:	00463004 	sllv	a2,a2,v0
9d0066f0:	00832025 	or	a0,a0,v1
9d0066f4:	0006302b 	sltu	a2,zero,a2
9d0066f8:	00862025 	or	a0,a0,a2
9d0066fc:	01091006 	srlv	v0,t1,t0
9d006700:	01442023 	subu	a0,t2,a0
9d006704:	01821023 	subu	v0,t4,v0
9d006708:	0144502b 	sltu	t2,t2,a0
9d00670c:	004a1023 	subu	v0,v0,t2
9d006710:	00a01821 	move	v1,a1
9d006714:	7c4505c0 	ext	a1,v0,0x17,0x1
9d006718:	10a00093 	beqz	a1,9d006968 <__subdf3+0x358>
9d00671c:	7c48b000 	ext	t0,v0,0x0,0x17
9d006720:	15000003 	bnez	t0,9d006730 <__subdf3+0x120>
9d006724:	71021020 	clz	v0,t0
9d006728:	70821020 	clz	v0,a0
9d00672c:	24420020 	addiu	v0,v0,32
9d006730:	2445fff8 	addiu	a1,v0,-8
9d006734:	28a60020 	slti	a2,a1,32
9d006738:	10c000aa 	beqz	a2,9d0069e4 <__subdf3+0x3d4>
9d00673c:	2442ffd8 	addiu	v0,v0,-40
9d006740:	00051023 	negu	v0,a1
9d006744:	00441006 	srlv	v0,a0,v0
9d006748:	00a84004 	sllv	t0,t0,a1
9d00674c:	00484025 	or	t0,v0,t0
9d006750:	00a42004 	sllv	a0,a0,a1
9d006754:	00a3102a 	slt	v0,a1,v1
9d006758:	14400080 	bnez	v0,9d00695c <__subdf3+0x34c>
9d00675c:	3c02ff7f 	lui	v0,0xff7f
9d006760:	00a31823 	subu	v1,a1,v1
9d006764:	24630001 	addiu	v1,v1,1
9d006768:	28620020 	slti	v0,v1,32
9d00676c:	104000b9 	beqz	v0,9d006a54 <__subdf3+0x444>
9d006770:	24050020 	li	a1,32
9d006774:	24020020 	li	v0,32
9d006778:	00431023 	subu	v0,v0,v1
9d00677c:	00642806 	srlv	a1,a0,v1
9d006780:	00442004 	sllv	a0,a0,v0
9d006784:	00481004 	sllv	v0,t0,v0
9d006788:	00a21025 	or	v0,a1,v0
9d00678c:	0004202b 	sltu	a0,zero,a0
9d006790:	00442025 	or	a0,v0,a0
9d006794:	00681006 	srlv	v0,t0,v1
9d006798:	308e000f 	andi	t6,a0,0xf
9d00679c:	24080001 	li	t0,1
9d0067a0:	00001821 	move	v1,zero
9d0067a4:	24050004 	li	a1,4
9d0067a8:	51c50055 	beql	t6,a1,9d006900 <__subdf3+0x2f0>
9d0067ac:	316b0001 	andi	t3,t3,0x1
9d0067b0:	24850004 	addiu	a1,a0,4
9d0067b4:	00a4202b 	sltu	a0,a1,a0
9d0067b8:	00441021 	addu	v0,v0,a0
9d0067bc:	24680001 	addiu	t0,v1,1
9d0067c0:	316b0001 	andi	t3,t3,0x1
9d0067c4:	7c4405c0 	ext	a0,v0,0x17,0x1
9d0067c8:	50800009 	beqzl	a0,9d0067f0 <__subdf3+0x1e0>
9d0067cc:	310807ff 	andi	t0,t0,0x7ff
9d0067d0:	240307ff 	li	v1,2047
9d0067d4:	1103007a 	beq	t0,v1,9d0069c0 <__subdf3+0x3b0>
9d0067d8:	3c04ff7f 	lui	a0,0xff7f
9d0067dc:	3484ffff 	ori	a0,a0,0xffff
9d0067e0:	01001821 	move	v1,t0
9d0067e4:	00441024 	and	v0,v0,a0
9d0067e8:	25080001 	addiu	t0,t0,1
9d0067ec:	310807ff 	andi	t0,t0,0x7ff
9d0067f0:	00023740 	sll	a2,v0,0x1d
9d0067f4:	000528c2 	srl	a1,a1,0x3
9d0067f8:	29080002 	slti	t0,t0,2
9d0067fc:	00c53025 	or	a2,a2,a1
9d006800:	15000031 	bnez	t0,9d0068c8 <__subdf3+0x2b8>
9d006804:	000210c2 	srl	v0,v0,0x3
9d006808:	7c429800 	ext	v0,v0,0x0,0x14
9d00680c:	306807ff 	andi	t0,v1,0x7ff
9d006810:	00001821 	move	v1,zero
9d006814:	7c439804 	ins	v1,v0,0x0,0x14
9d006818:	7d03f504 	ins	v1,t0,0x14,0xb
9d00681c:	7d63ffc4 	ins	v1,t3,0x1f,0x1
9d006820:	03e00008 	jr	ra
9d006824:	00c01021 	move	v0,a2
9d006828:	00a31023 	subu	v0,a1,v1
9d00682c:	18400076 	blez	v0,9d006a08 <__subdf3+0x3f8>
9d006830:	00000000 	nop
9d006834:	10600034 	beqz	v1,9d006908 <__subdf3+0x2f8>
9d006838:	01261825 	or	v1,t1,a2
9d00683c:	240307ff 	li	v1,2047
9d006840:	10a3003a 	beq	a1,v1,9d00692c <__subdf3+0x31c>
9d006844:	314e000f 	andi	t6,t2,0xf
9d006848:	3c030080 	lui	v1,0x80
9d00684c:	01234825 	or	t1,t1,v1
9d006850:	28430039 	slti	v1,v0,57
9d006854:	146000ba 	bnez	v1,9d006b40 <__subdf3+0x530>
9d006858:	28430020 	slti	v1,v0,32
9d00685c:	01262025 	or	a0,t1,a2
9d006860:	00001021 	move	v0,zero
9d006864:	0004202b 	sltu	a0,zero,a0
9d006868:	008a2021 	addu	a0,a0,t2
9d00686c:	004c1021 	addu	v0,v0,t4
9d006870:	008a502b 	sltu	t2,a0,t2
9d006874:	004a1021 	addu	v0,v0,t2
9d006878:	00a01821 	move	v1,a1
9d00687c:	7c4505c0 	ext	a1,v0,0x17,0x1
9d006880:	10a0003a 	beqz	a1,9d00696c <__subdf3+0x35c>
9d006884:	24680001 	addiu	t0,v1,1
9d006888:	24630001 	addiu	v1,v1,1
9d00688c:	240507ff 	li	a1,2047
9d006890:	506500dd 	beql	v1,a1,9d006c08 <__subdf3+0x5f8>
9d006894:	31ab0001 	andi	t3,t5,0x1
9d006898:	3c05ff7f 	lui	a1,0xff7f
9d00689c:	34a5ffff 	ori	a1,a1,0xffff
9d0068a0:	00451024 	and	v0,v0,a1
9d0068a4:	30850001 	andi	a1,a0,0x1
9d0068a8:	00042042 	srl	a0,a0,0x1
9d0068ac:	00a42025 	or	a0,a1,a0
9d0068b0:	00022fc0 	sll	a1,v0,0x1f
9d0068b4:	00852025 	or	a0,a0,a1
9d0068b8:	00021042 	srl	v0,v0,0x1
9d0068bc:	24680001 	addiu	t0,v1,1
9d0068c0:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d0068c4:	308e000f 	andi	t6,a0,0xf
9d0068c8:	00c22025 	or	a0,a2,v0
9d0068cc:	1080017b 	beqz	a0,9d006ebc <__subdf3+0x8ac>
9d0068d0:	306807ff 	andi	t0,v1,0x7ff
9d0068d4:	10600049 	beqz	v1,9d0069fc <__subdf3+0x3ec>
9d0068d8:	3c040008 	lui	a0,0x8
9d0068dc:	0b401a02 	j	9d006808 <__subdf3+0x1f8>
9d0068e0:	00441025 	or	v0,v0,a0
9d0068e4:	00a01821 	move	v1,a1
9d0068e8:	314e000f 	andi	t6,t2,0xf
9d0068ec:	24050004 	li	a1,4
9d0068f0:	01801021 	move	v0,t4
9d0068f4:	15c5ffae 	bne	t6,a1,9d0067b0 <__subdf3+0x1a0>
9d0068f8:	01402021 	move	a0,t2
9d0068fc:	316b0001 	andi	t3,t3,0x1
9d006900:	0b4019f1 	j	9d0067c4 <__subdf3+0x1b4>
9d006904:	00802821 	move	a1,a0
9d006908:	1060fff6 	beqz	v1,9d0068e4 <__subdf3+0x2d4>
9d00690c:	24a80001 	addiu	t0,a1,1
9d006910:	2442ffff 	addiu	v0,v0,-1
9d006914:	1040009f 	beqz	v0,9d006b94 <__subdf3+0x584>
9d006918:	00ca2021 	addu	a0,a2,t2
9d00691c:	240307ff 	li	v1,2047
9d006920:	54a3ffcc 	bnel	a1,v1,9d006854 <__subdf3+0x244>
9d006924:	28430039 	slti	v1,v0,57
9d006928:	314e000f 	andi	t6,t2,0xf
9d00692c:	01801021 	move	v0,t4
9d006930:	01402021 	move	a0,t2
9d006934:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006938:	24080800 	li	t0,2048
9d00693c:	54a2ff62 	bnel	a1,v0,9d0066c8 <__subdf3+0xb8>
9d006940:	29020039 	slti	v0,t0,57
9d006944:	314e000f 	andi	t6,t2,0xf
9d006948:	01801021 	move	v0,t4
9d00694c:	01402021 	move	a0,t2
9d006950:	24080800 	li	t0,2048
9d006954:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006958:	240307ff 	li	v1,2047
9d00695c:	3442ffff 	ori	v0,v0,0xffff
9d006960:	00651823 	subu	v1,v1,a1
9d006964:	01021024 	and	v0,t0,v0
9d006968:	24680001 	addiu	t0,v1,1
9d00696c:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006970:	308e000f 	andi	t6,a0,0xf
9d006974:	1500004e 	bnez	t0,9d006ab0 <__subdf3+0x4a0>
9d006978:	24a20001 	addiu	v0,a1,1
9d00697c:	304207ff 	andi	v0,v0,0x7ff
9d006980:	28420002 	slti	v0,v0,2
9d006984:	14400092 	bnez	v0,9d006bd0 <__subdf3+0x5c0>
9d006988:	01462023 	subu	a0,t2,a2
9d00698c:	0144102b 	sltu	v0,t2,a0
9d006990:	01894023 	subu	t0,t4,t1
9d006994:	01024023 	subu	t0,t0,v0
9d006998:	7d0205c0 	ext	v0,t0,0x17,0x1
9d00699c:	10400060 	beqz	v0,9d006b20 <__subdf3+0x510>
9d0069a0:	01041025 	or	v0,t0,a0
9d0069a4:	00ca2023 	subu	a0,a2,t2
9d0069a8:	012c4823 	subu	t1,t1,t4
9d0069ac:	00c4302b 	sltu	a2,a2,a0
9d0069b0:	01264023 	subu	t0,t1,a2
9d0069b4:	00a01821 	move	v1,a1
9d0069b8:	0b4019c8 	j	9d006720 <__subdf3+0x110>
9d0069bc:	00e05821 	move	t3,a3
9d0069c0:	00001021 	move	v0,zero
9d0069c4:	00001821 	move	v1,zero
9d0069c8:	240807ff 	li	t0,2047
9d0069cc:	7c439804 	ins	v1,v0,0x0,0x14
9d0069d0:	00003021 	move	a2,zero
9d0069d4:	7d03f504 	ins	v1,t0,0x14,0xb
9d0069d8:	7d63ffc4 	ins	v1,t3,0x1f,0x1
9d0069dc:	03e00008 	jr	ra
9d0069e0:	00c01021 	move	v0,a2
9d0069e4:	00444004 	sllv	t0,a0,v0
9d0069e8:	0b4019d5 	j	9d006754 <__subdf3+0x144>
9d0069ec:	00002021 	move	a0,zero
9d0069f0:	00001021 	move	v0,zero
9d0069f4:	0b4019c0 	j	9d006700 <__subdf3+0xf0>
9d0069f8:	0004202b 	sltu	a0,zero,a0
9d0069fc:	7c429800 	ext	v0,v0,0x0,0x14
9d006a00:	0b401a04 	j	9d006810 <__subdf3+0x200>
9d006a04:	00004021 	move	t0,zero
9d006a08:	1440008d 	bnez	v0,9d006c40 <__subdf3+0x630>
9d006a0c:	00000000 	nop
9d006a10:	24a30001 	addiu	v1,a1,1
9d006a14:	306207ff 	andi	v0,v1,0x7ff
9d006a18:	28420002 	slti	v0,v0,2
9d006a1c:	14400062 	bnez	v0,9d006ba8 <__subdf3+0x598>
9d006a20:	240207ff 	li	v0,2047
9d006a24:	10620077 	beq	v1,v0,9d006c04 <__subdf3+0x5f4>
9d006a28:	00ca3021 	addu	a2,a2,t2
9d006a2c:	00ca502b 	sltu	t2,a2,t2
9d006a30:	012c1021 	addu	v0,t1,t4
9d006a34:	004a1021 	addu	v0,v0,t2
9d006a38:	00023fc0 	sll	a3,v0,0x1f
9d006a3c:	00063042 	srl	a2,a2,0x1
9d006a40:	00c72025 	or	a0,a2,a3
9d006a44:	00021042 	srl	v0,v0,0x1
9d006a48:	24a80002 	addiu	t0,a1,2
9d006a4c:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006a50:	308e000f 	andi	t6,a0,0xf
9d006a54:	00683006 	srlv	a2,t0,v1
9d006a58:	10650003 	beq	v1,a1,9d006a68 <__subdf3+0x458>
9d006a5c:	00001021 	move	v0,zero
9d006a60:	00031023 	negu	v0,v1
9d006a64:	00481004 	sllv	v0,t0,v0
9d006a68:	00442025 	or	a0,v0,a0
9d006a6c:	0004202b 	sltu	a0,zero,a0
9d006a70:	00862025 	or	a0,a0,a2
9d006a74:	308e000f 	andi	t6,a0,0xf
9d006a78:	24080001 	li	t0,1
9d006a7c:	00001021 	move	v0,zero
9d006a80:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006a84:	00001821 	move	v1,zero
9d006a88:	01091806 	srlv	v1,t1,t0
9d006a8c:	11040003 	beq	t0,a0,9d006a9c <__subdf3+0x48c>
9d006a90:	00001021 	move	v0,zero
9d006a94:	00084023 	negu	t0,t0
9d006a98:	01091004 	sllv	v0,t1,t0
9d006a9c:	00462025 	or	a0,v0,a2
9d006aa0:	0004202b 	sltu	a0,zero,a0
9d006aa4:	00832025 	or	a0,a0,v1
9d006aa8:	0b4019c0 	j	9d006700 <__subdf3+0xf0>
9d006aac:	00001021 	move	v0,zero
9d006ab0:	10a0002f 	beqz	a1,9d006b70 <__subdf3+0x560>
9d006ab4:	00084023 	negu	t0,t0
9d006ab8:	240207ff 	li	v0,2047
9d006abc:	10620079 	beq	v1,v0,9d006ca4 <__subdf3+0x694>
9d006ac0:	30ce000f 	andi	t6,a2,0xf
9d006ac4:	3c020080 	lui	v0,0x80
9d006ac8:	01826025 	or	t4,t4,v0
9d006acc:	29020039 	slti	v0,t0,57
9d006ad0:	10400095 	beqz	v0,9d006d28 <__subdf3+0x718>
9d006ad4:	018a2025 	or	a0,t4,t2
9d006ad8:	29020020 	slti	v0,t0,32
9d006adc:	504000cd 	beqzl	v0,9d006e14 <__subdf3+0x804>
9d006ae0:	24040020 	li	a0,32
9d006ae4:	24020020 	li	v0,32
9d006ae8:	00481023 	subu	v0,v0,t0
9d006aec:	004c2804 	sllv	a1,t4,v0
9d006af0:	010a2006 	srlv	a0,t2,t0
9d006af4:	004a1004 	sllv	v0,t2,v0
9d006af8:	0002102b 	sltu	v0,zero,v0
9d006afc:	00a42025 	or	a0,a1,a0
9d006b00:	00822025 	or	a0,a0,v0
9d006b04:	010c1006 	srlv	v0,t4,t0
9d006b08:	00c42023 	subu	a0,a2,a0
9d006b0c:	01221023 	subu	v0,t1,v0
9d006b10:	00c4302b 	sltu	a2,a2,a0
9d006b14:	00461023 	subu	v0,v0,a2
9d006b18:	0b4019c5 	j	9d006714 <__subdf3+0x104>
9d006b1c:	00e05821 	move	t3,a3
9d006b20:	1440feff 	bnez	v0,9d006720 <__subdf3+0x110>
9d006b24:	00a01821 	move	v1,a1
9d006b28:	00005821 	move	t3,zero
9d006b2c:	24080001 	li	t0,1
9d006b30:	00001021 	move	v0,zero
9d006b34:	24050004 	li	a1,4
9d006b38:	0b4019f1 	j	9d0067c4 <__subdf3+0x1b4>
9d006b3c:	00001821 	move	v1,zero
9d006b40:	50600035 	beqzl	v1,9d006c18 <__subdf3+0x608>
9d006b44:	24040020 	li	a0,32
9d006b48:	24030020 	li	v1,32
9d006b4c:	00621823 	subu	v1,v1,v0
9d006b50:	00693804 	sllv	a3,t1,v1
9d006b54:	00462006 	srlv	a0,a2,v0
9d006b58:	00661804 	sllv	v1,a2,v1
9d006b5c:	00e42025 	or	a0,a3,a0
9d006b60:	0003182b 	sltu	v1,zero,v1
9d006b64:	00832025 	or	a0,a0,v1
9d006b68:	0b401a1a 	j	9d006868 <__subdf3+0x258>
9d006b6c:	00491006 	srlv	v0,t1,v0
9d006b70:	018a1025 	or	v0,t4,t2
9d006b74:	54400064 	bnezl	v0,9d006d08 <__subdf3+0x6f8>
9d006b78:	2508ffff 	addiu	t0,t0,-1
9d006b7c:	24680001 	addiu	t0,v1,1
9d006b80:	30ce000f 	andi	t6,a2,0xf
9d006b84:	01201021 	move	v0,t1
9d006b88:	00c02021 	move	a0,a2
9d006b8c:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006b90:	00e05821 	move	t3,a3
9d006b94:	012c1021 	addu	v0,t1,t4
9d006b98:	008a502b 	sltu	t2,a0,t2
9d006b9c:	004a1021 	addu	v0,v0,t2
9d006ba0:	0b401a1f 	j	9d00687c <__subdf3+0x26c>
9d006ba4:	00a01821 	move	v1,a1
9d006ba8:	14a0008d 	bnez	a1,9d006de0 <__subdf3+0x7d0>
9d006bac:	018a1025 	or	v0,t4,t2
9d006bb0:	544000ac 	bnezl	v0,9d006e64 <__subdf3+0x854>
9d006bb4:	01261025 	or	v0,t1,a2
9d006bb8:	30ce000f 	andi	t6,a2,0xf
9d006bbc:	01201021 	move	v0,t1
9d006bc0:	00c02021 	move	a0,a2
9d006bc4:	24080001 	li	t0,1
9d006bc8:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006bcc:	00001821 	move	v1,zero
9d006bd0:	14a00025 	bnez	a1,9d006c68 <__subdf3+0x658>
9d006bd4:	018a1025 	or	v0,t4,t2
9d006bd8:	1440006f 	bnez	v0,9d006d98 <__subdf3+0x788>
9d006bdc:	01261025 	or	v0,t1,a2
9d006be0:	5040ffd2 	beqzl	v0,9d006b2c <__subdf3+0x51c>
9d006be4:	00005821 	move	t3,zero
9d006be8:	30ce000f 	andi	t6,a2,0xf
9d006bec:	01201021 	move	v0,t1
9d006bf0:	00c02021 	move	a0,a2
9d006bf4:	00e05821 	move	t3,a3
9d006bf8:	24080001 	li	t0,1
9d006bfc:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006c00:	00001821 	move	v1,zero
9d006c04:	31ab0001 	andi	t3,t5,0x1
9d006c08:	24080800 	li	t0,2048
9d006c0c:	00001021 	move	v0,zero
9d006c10:	0b4019f1 	j	9d0067c4 <__subdf3+0x1b4>
9d006c14:	24050004 	li	a1,4
9d006c18:	00493806 	srlv	a3,t1,v0
9d006c1c:	10440003 	beq	v0,a0,9d006c2c <__subdf3+0x61c>
9d006c20:	00001821 	move	v1,zero
9d006c24:	00021023 	negu	v0,v0
9d006c28:	00491804 	sllv	v1,t1,v0
9d006c2c:	00662025 	or	a0,v1,a2
9d006c30:	0004202b 	sltu	a0,zero,a0
9d006c34:	00872025 	or	a0,a0,a3
9d006c38:	0b401a1a 	j	9d006868 <__subdf3+0x258>
9d006c3c:	00001021 	move	v0,zero
9d006c40:	14a0003c 	bnez	a1,9d006d34 <__subdf3+0x724>
9d006c44:	00021023 	negu	v0,v0
9d006c48:	018a2025 	or	a0,t4,t2
9d006c4c:	5480007b 	bnezl	a0,9d006e3c <__subdf3+0x82c>
9d006c50:	2442ffff 	addiu	v0,v0,-1
9d006c54:	24680001 	addiu	t0,v1,1
9d006c58:	30ce000f 	andi	t6,a2,0xf
9d006c5c:	01201021 	move	v0,t1
9d006c60:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006c64:	00c02021 	move	a0,a2
9d006c68:	54400014 	bnezl	v0,9d006cbc <__subdf3+0x6ac>
9d006c6c:	01263025 	or	a2,t1,a2
9d006c70:	01261025 	or	v0,t1,a2
9d006c74:	1440000b 	bnez	v0,9d006ca4 <__subdf3+0x694>
9d006c78:	30ce000f 	andi	t6,a2,0xf
9d006c7c:	3c02007f 	lui	v0,0x7f
9d006c80:	00005821 	move	t3,zero
9d006c84:	24080800 	li	t0,2048
9d006c88:	3442ffff 	ori	v0,v0,0xffff
9d006c8c:	2405fffc 	li	a1,-4
9d006c90:	0b4019f1 	j	9d0067c4 <__subdf3+0x1b4>
9d006c94:	240307ff 	li	v1,2047
9d006c98:	5462ff8d 	bnel	v1,v0,9d006ad0 <__subdf3+0x4c0>
9d006c9c:	29020039 	slti	v0,t0,57
9d006ca0:	30ce000f 	andi	t6,a2,0xf
9d006ca4:	01201021 	move	v0,t1
9d006ca8:	00c02021 	move	a0,a2
9d006cac:	00e05821 	move	t3,a3
9d006cb0:	24080800 	li	t0,2048
9d006cb4:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006cb8:	240307ff 	li	v1,2047
9d006cbc:	10c0ff22 	beqz	a2,9d006948 <__subdf3+0x338>
9d006cc0:	314e000f 	andi	t6,t2,0xf
9d006cc4:	000c18c2 	srl	v1,t4,0x3
9d006cc8:	000910c2 	srl	v0,t1,0x3
9d006ccc:	00431025 	or	v0,v0,v1
9d006cd0:	7c4204c0 	ext	v0,v0,0x13,0x1
9d006cd4:	54400072 	bnezl	v0,9d006ea0 <__subdf3+0x890>
9d006cd8:	3c02007f 	lui	v0,0x7f
9d006cdc:	000a50c2 	srl	t2,t2,0x3
9d006ce0:	000c2740 	sll	a0,t4,0x1d
9d006ce4:	008a2025 	or	a0,a0,t2
9d006ce8:	00041742 	srl	v0,a0,0x1d
9d006cec:	000318c0 	sll	v1,v1,0x3
9d006cf0:	000420c0 	sll	a0,a0,0x3
9d006cf4:	00431025 	or	v0,v0,v1
9d006cf8:	308e000f 	andi	t6,a0,0xf
9d006cfc:	24080800 	li	t0,2048
9d006d00:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006d04:	240307ff 	li	v1,2047
9d006d08:	5500ffe3 	bnezl	t0,9d006c98 <__subdf3+0x688>
9d006d0c:	240207ff 	li	v0,2047
9d006d10:	00ca2023 	subu	a0,a2,t2
9d006d14:	012c1023 	subu	v0,t1,t4
9d006d18:	00c4302b 	sltu	a2,a2,a0
9d006d1c:	00461023 	subu	v0,v0,a2
9d006d20:	0b4019c5 	j	9d006714 <__subdf3+0x104>
9d006d24:	00e05821 	move	t3,a3
9d006d28:	00001021 	move	v0,zero
9d006d2c:	0b401ac2 	j	9d006b08 <__subdf3+0x4f8>
9d006d30:	0004202b 	sltu	a0,zero,a0
9d006d34:	240407ff 	li	a0,2047
9d006d38:	1064002c 	beq	v1,a0,9d006dec <__subdf3+0x7dc>
9d006d3c:	30ce000f 	andi	t6,a2,0xf
9d006d40:	3c040080 	lui	a0,0x80
9d006d44:	01846025 	or	t4,t4,a0
9d006d48:	28440039 	slti	a0,v0,57
9d006d4c:	10800042 	beqz	a0,9d006e58 <__subdf3+0x848>
9d006d50:	018a2025 	or	a0,t4,t2
9d006d54:	28440020 	slti	a0,v0,32
9d006d58:	50800063 	beqzl	a0,9d006ee8 <__subdf3+0x8d8>
9d006d5c:	24040020 	li	a0,32
9d006d60:	24050020 	li	a1,32
9d006d64:	00a22823 	subu	a1,a1,v0
9d006d68:	00ac3804 	sllv	a3,t4,a1
9d006d6c:	004a2006 	srlv	a0,t2,v0
9d006d70:	00aa2804 	sllv	a1,t2,a1
9d006d74:	00e42025 	or	a0,a3,a0
9d006d78:	0005282b 	sltu	a1,zero,a1
9d006d7c:	00852025 	or	a0,a0,a1
9d006d80:	004c1006 	srlv	v0,t4,v0
9d006d84:	00862021 	addu	a0,a0,a2
9d006d88:	00491021 	addu	v0,v0,t1
9d006d8c:	0086302b 	sltu	a2,a0,a2
9d006d90:	0b401a1f 	j	9d00687c <__subdf3+0x26c>
9d006d94:	00461021 	addu	v0,v0,a2
9d006d98:	10400019 	beqz	v0,9d006e00 <__subdf3+0x7f0>
9d006d9c:	314e000f 	andi	t6,t2,0xf
9d006da0:	01462023 	subu	a0,t2,a2
9d006da4:	01891823 	subu	v1,t4,t1
9d006da8:	0144102b 	sltu	v0,t2,a0
9d006dac:	00621023 	subu	v0,v1,v0
9d006db0:	7c4305c0 	ext	v1,v0,0x17,0x1
9d006db4:	50600048 	beqzl	v1,9d006ed8 <__subdf3+0x8c8>
9d006db8:	00441825 	or	v1,v0,a0
9d006dbc:	00ca2023 	subu	a0,a2,t2
9d006dc0:	012c1023 	subu	v0,t1,t4
9d006dc4:	00c4302b 	sltu	a2,a2,a0
9d006dc8:	00461023 	subu	v0,v0,a2
9d006dcc:	308e000f 	andi	t6,a0,0xf
9d006dd0:	00e05821 	move	t3,a3
9d006dd4:	24080001 	li	t0,1
9d006dd8:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006ddc:	00001821 	move	v1,zero
9d006de0:	5440ffb6 	bnezl	v0,9d006cbc <__subdf3+0x6ac>
9d006de4:	01263025 	or	a2,t1,a2
9d006de8:	30ce000f 	andi	t6,a2,0xf
9d006dec:	01201021 	move	v0,t1
9d006df0:	00c02021 	move	a0,a2
9d006df4:	24080800 	li	t0,2048
9d006df8:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006dfc:	240307ff 	li	v1,2047
9d006e00:	01801021 	move	v0,t4
9d006e04:	01402021 	move	a0,t2
9d006e08:	24080001 	li	t0,1
9d006e0c:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006e10:	00001821 	move	v1,zero
9d006e14:	010c2806 	srlv	a1,t4,t0
9d006e18:	11040003 	beq	t0,a0,9d006e28 <__subdf3+0x818>
9d006e1c:	00001021 	move	v0,zero
9d006e20:	00084023 	negu	t0,t0
9d006e24:	010c1004 	sllv	v0,t4,t0
9d006e28:	004a2025 	or	a0,v0,t2
9d006e2c:	0004202b 	sltu	a0,zero,a0
9d006e30:	00852025 	or	a0,a0,a1
9d006e34:	0b401ac2 	j	9d006b08 <__subdf3+0x4f8>
9d006e38:	00001021 	move	v0,zero
9d006e3c:	54400022 	bnezl	v0,9d006ec8 <__subdf3+0x8b8>
9d006e40:	240407ff 	li	a0,2047
9d006e44:	00ca2021 	addu	a0,a2,t2
9d006e48:	012c1021 	addu	v0,t1,t4
9d006e4c:	0086302b 	sltu	a2,a0,a2
9d006e50:	0b401a1f 	j	9d00687c <__subdf3+0x26c>
9d006e54:	00461021 	addu	v0,v0,a2
9d006e58:	00001021 	move	v0,zero
9d006e5c:	0b401b61 	j	9d006d84 <__subdf3+0x774>
9d006e60:	0004202b 	sltu	a0,zero,a0
9d006e64:	1040ffe6 	beqz	v0,9d006e00 <__subdf3+0x7f0>
9d006e68:	314e000f 	andi	t6,t2,0xf
9d006e6c:	00ca2021 	addu	a0,a2,t2
9d006e70:	012c1021 	addu	v0,t1,t4
9d006e74:	008a502b 	sltu	t2,a0,t2
9d006e78:	004a1021 	addu	v0,v0,t2
9d006e7c:	7c4305c0 	ext	v1,v0,0x17,0x1
9d006e80:	10600023 	beqz	v1,9d006f10 <__subdf3+0x900>
9d006e84:	308e000f 	andi	t6,a0,0xf
9d006e88:	3c03ff7f 	lui	v1,0xff7f
9d006e8c:	3463ffff 	ori	v1,v1,0xffff
9d006e90:	00431024 	and	v0,v0,v1
9d006e94:	24080002 	li	t0,2
9d006e98:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006e9c:	24030001 	li	v1,1
9d006ea0:	240e0008 	li	t6,8
9d006ea4:	2404fff8 	li	a0,-8
9d006ea8:	3442ffff 	ori	v0,v0,0xffff
9d006eac:	00005821 	move	t3,zero
9d006eb0:	24080800 	li	t0,2048
9d006eb4:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006eb8:	240307ff 	li	v1,2047
9d006ebc:	00001021 	move	v0,zero
9d006ec0:	0b401a04 	j	9d006810 <__subdf3+0x200>
9d006ec4:	00003021 	move	a2,zero
9d006ec8:	5464ffa0 	bnel	v1,a0,9d006d4c <__subdf3+0x73c>
9d006ecc:	28440039 	slti	a0,v0,57
9d006ed0:	0b401b7b 	j	9d006dec <__subdf3+0x7dc>
9d006ed4:	30ce000f 	andi	t6,a2,0xf
9d006ed8:	5060ff14 	beqzl	v1,9d006b2c <__subdf3+0x51c>
9d006edc:	00005821 	move	t3,zero
9d006ee0:	0b4019e7 	j	9d00679c <__subdf3+0x18c>
9d006ee4:	308e000f 	andi	t6,a0,0xf
9d006ee8:	004c3806 	srlv	a3,t4,v0
9d006eec:	10440003 	beq	v0,a0,9d006efc <__subdf3+0x8ec>
9d006ef0:	00002821 	move	a1,zero
9d006ef4:	00021023 	negu	v0,v0
9d006ef8:	004c2804 	sllv	a1,t4,v0
9d006efc:	00aa2025 	or	a0,a1,t2
9d006f00:	0004202b 	sltu	a0,zero,a0
9d006f04:	00872025 	or	a0,a0,a3
9d006f08:	0b401b61 	j	9d006d84 <__subdf3+0x774>
9d006f0c:	00001021 	move	v0,zero
9d006f10:	0b4019e9 	j	9d0067a4 <__subdf3+0x194>
9d006f14:	24080001 	li	t0,1

9d006f18 <__fixdfsi>:
9d006f18:	7ca35500 	ext	v1,a1,0x14,0xb
9d006f1c:	286603ff 	slti	a2,v1,1023
9d006f20:	7ca79800 	ext	a3,a1,0x0,0x14
9d006f24:	00001021 	move	v0,zero
9d006f28:	14c0000f 	bnez	a2,9d006f68 <__fixdfsi+0x50>
9d006f2c:	00052fc2 	srl	a1,a1,0x1f
9d006f30:	2866041e 	slti	a2,v1,1054
9d006f34:	10c0000e 	beqz	a2,9d006f70 <__fixdfsi+0x58>
9d006f38:	24060433 	li	a2,1075
9d006f3c:	00c33023 	subu	a2,a2,v1
9d006f40:	3c020010 	lui	v0,0x10
9d006f44:	28c80020 	slti	t0,a2,32
9d006f48:	1100000d 	beqz	t0,9d006f80 <__fixdfsi+0x68>
9d006f4c:	00e23825 	or	a3,a3,v0
9d006f50:	2463fbed 	addiu	v1,v1,-1043
9d006f54:	00c42006 	srlv	a0,a0,a2
9d006f58:	00673804 	sllv	a3,a3,v1
9d006f5c:	00872025 	or	a0,a0,a3
9d006f60:	00041023 	negu	v0,a0
9d006f64:	0085100a 	movz	v0,a0,a1
9d006f68:	03e00008 	jr	ra
9d006f6c:	00000000 	nop
9d006f70:	3c027fff 	lui	v0,0x7fff
9d006f74:	3442ffff 	ori	v0,v0,0xffff
9d006f78:	03e00008 	jr	ra
9d006f7c:	00a21021 	addu	v0,a1,v0
9d006f80:	24040413 	li	a0,1043
9d006f84:	00832023 	subu	a0,a0,v1
9d006f88:	00872006 	srlv	a0,a3,a0
9d006f8c:	00041023 	negu	v0,a0
9d006f90:	03e00008 	jr	ra
9d006f94:	0085100a 	movz	v0,a0,a1

9d006f98 <__floatsidf>:
9d006f98:	10800021 	beqz	a0,9d007020 <__floatsidf+0x88>
9d006f9c:	00042fc2 	srl	a1,a0,0x1f
9d006fa0:	00041023 	negu	v0,a0
9d006fa4:	0045200b 	movn	a0,v0,a1
9d006fa8:	70821020 	clz	v0,a0
9d006fac:	2403041e 	li	v1,1054
9d006fb0:	00621823 	subu	v1,v1,v0
9d006fb4:	24060433 	li	a2,1075
9d006fb8:	00c33023 	subu	a2,a2,v1
9d006fbc:	28c20020 	slti	v0,a2,32
9d006fc0:	5440000d 	bnezl	v0,9d006ff8 <__floatsidf+0x60>
9d006fc4:	2462fbed 	addiu	v0,v1,-1043
9d006fc8:	24020413 	li	v0,1043
9d006fcc:	00431023 	subu	v0,v0,v1
9d006fd0:	00441004 	sllv	v0,a0,v0
9d006fd4:	306807ff 	andi	t0,v1,0x7ff
9d006fd8:	7c429800 	ext	v0,v0,0x0,0x14
9d006fdc:	00001821 	move	v1,zero
9d006fe0:	7c439804 	ins	v1,v0,0x0,0x14
9d006fe4:	00002021 	move	a0,zero
9d006fe8:	7d03f504 	ins	v1,t0,0x14,0xb
9d006fec:	7ca3ffc4 	ins	v1,a1,0x1f,0x1
9d006ff0:	03e00008 	jr	ra
9d006ff4:	00801021 	move	v0,a0
9d006ff8:	00441006 	srlv	v0,a0,v0
9d006ffc:	306807ff 	andi	t0,v1,0x7ff
9d007000:	7c429800 	ext	v0,v0,0x0,0x14
9d007004:	00001821 	move	v1,zero
9d007008:	7c439804 	ins	v1,v0,0x0,0x14
9d00700c:	00c42004 	sllv	a0,a0,a2
9d007010:	7d03f504 	ins	v1,t0,0x14,0xb
9d007014:	7ca3ffc4 	ins	v1,a1,0x1f,0x1
9d007018:	03e00008 	jr	ra
9d00701c:	00801021 	move	v0,a0
9d007020:	00001021 	move	v0,zero
9d007024:	00001821 	move	v1,zero
9d007028:	00004021 	move	t0,zero
9d00702c:	7c439804 	ins	v1,v0,0x0,0x14
9d007030:	00002821 	move	a1,zero
9d007034:	00002021 	move	a0,zero
9d007038:	7d03f504 	ins	v1,t0,0x14,0xb
9d00703c:	7ca3ffc4 	ins	v1,a1,0x1f,0x1
9d007040:	03e00008 	jr	ra
9d007044:	00801021 	move	v0,a0

9d007048 <__floatunsidf>:
9d007048:	10800021 	beqz	a0,9d0070d0 <__floatunsidf+0x88>
9d00704c:	00003021 	move	a2,zero
9d007050:	2403041e 	li	v1,1054
9d007054:	70821020 	clz	v0,a0
9d007058:	00621023 	subu	v0,v1,v0
9d00705c:	24030433 	li	v1,1075
9d007060:	00621823 	subu	v1,v1,v0
9d007064:	28650020 	slti	a1,v1,32
9d007068:	14a0000e 	bnez	a1,9d0070a4 <__floatunsidf+0x5c>
9d00706c:	2446fbed 	addiu	a2,v0,-1043
9d007070:	24060413 	li	a2,1043
9d007074:	00c23023 	subu	a2,a2,v0
9d007078:	00c43004 	sllv	a2,a0,a2
9d00707c:	7cc69800 	ext	a2,a2,0x0,0x14
9d007080:	00002821 	move	a1,zero
9d007084:	304707ff 	andi	a3,v0,0x7ff
9d007088:	7cc59804 	ins	a1,a2,0x0,0x14
9d00708c:	7ce5f504 	ins	a1,a3,0x14,0xb
9d007090:	00002021 	move	a0,zero
9d007094:	7ca5f000 	ext	a1,a1,0x0,0x1f
9d007098:	00801021 	move	v0,a0
9d00709c:	03e00008 	jr	ra
9d0070a0:	00a01821 	move	v1,a1
9d0070a4:	00c43006 	srlv	a2,a0,a2
9d0070a8:	7cc69800 	ext	a2,a2,0x0,0x14
9d0070ac:	00002821 	move	a1,zero
9d0070b0:	304707ff 	andi	a3,v0,0x7ff
9d0070b4:	7cc59804 	ins	a1,a2,0x0,0x14
9d0070b8:	7ce5f504 	ins	a1,a3,0x14,0xb
9d0070bc:	00642004 	sllv	a0,a0,v1
9d0070c0:	7ca5f000 	ext	a1,a1,0x0,0x1f
9d0070c4:	00801021 	move	v0,a0
9d0070c8:	03e00008 	jr	ra
9d0070cc:	00a01821 	move	v1,a1
9d0070d0:	00002821 	move	a1,zero
9d0070d4:	00003821 	move	a3,zero
9d0070d8:	7cc59804 	ins	a1,a2,0x0,0x14
9d0070dc:	7ce5f504 	ins	a1,a3,0x14,0xb
9d0070e0:	00002021 	move	a0,zero
9d0070e4:	7ca5f000 	ext	a1,a1,0x0,0x1f
9d0070e8:	00801021 	move	v0,a0
9d0070ec:	03e00008 	jr	ra
9d0070f0:	00a01821 	move	v1,a1

9d0070f4 <__errno>:
9d0070f4:	3c02a000 	lui	v0,0xa000
9d0070f8:	03e00008 	jr	ra
9d0070fc:	8c420a38 	lw	v0,2616(v0)

9d007100 <free>:
9d007100:	3c02a000 	lui	v0,0xa000
9d007104:	00802821 	move	a1,a0
9d007108:	8c440a38 	lw	a0,2616(v0)
9d00710c:	27bdffe8 	addiu	sp,sp,-24
9d007110:	afbf0014 	sw	ra,20(sp)
9d007114:	0f402b6e 	jal	9d00adb8 <_free_r>
9d007118:	00000000 	nop
9d00711c:	8fbf0014 	lw	ra,20(sp)
9d007120:	03e00008 	jr	ra
9d007124:	27bd0018 	addiu	sp,sp,24

9d007128 <_malloc_r>:
9d007128:	24a2000b 	addiu	v0,a1,11
9d00712c:	27bdffc8 	addiu	sp,sp,-56
9d007130:	2c430017 	sltiu	v1,v0,23
9d007134:	afb3001c 	sw	s3,28(sp)
9d007138:	afb00010 	sw	s0,16(sp)
9d00713c:	afbf0034 	sw	ra,52(sp)
9d007140:	afbe0030 	sw	s8,48(sp)
9d007144:	afb7002c 	sw	s7,44(sp)
9d007148:	afb60028 	sw	s6,40(sp)
9d00714c:	afb50024 	sw	s5,36(sp)
9d007150:	afb40020 	sw	s4,32(sp)
9d007154:	afb20018 	sw	s2,24(sp)
9d007158:	afb10014 	sw	s1,20(sp)
9d00715c:	00809821 	move	s3,a0
9d007160:	14600005 	bnez	v1,9d007178 <_malloc_r+0x50>
9d007164:	24100010 	li	s0,16
9d007168:	2410fff8 	li	s0,-8
9d00716c:	00508024 	and	s0,v0,s0
9d007170:	06000004 	bltz	s0,9d007184 <_malloc_r+0x5c>
9d007174:	2402000c 	li	v0,12
9d007178:	0205282b 	sltu	a1,s0,a1
9d00717c:	10a00003 	beqz	a1,9d00718c <_malloc_r+0x64>
9d007180:	2402000c 	li	v0,12
9d007184:	0b401dd3 	j	9d00774c <_malloc_r+0x624>
9d007188:	ae620000 	sw	v0,0(s3)
9d00718c:	0f401dea 	jal	9d0077a8 <__malloc_lock>
9d007190:	02602021 	move	a0,s3
9d007194:	2e0201f8 	sltiu	v0,s0,504
9d007198:	1040000e 	beqz	v0,9d0071d4 <_malloc_r+0xac>
9d00719c:	3c11a000 	lui	s1,0xa000
9d0071a0:	262205f8 	addiu	v0,s1,1528
9d0071a4:	00501021 	addu	v0,v0,s0
9d0071a8:	8c52000c 	lw	s2,12(v0)
9d0071ac:	16420005 	bne	s2,v0,9d0071c4 <_malloc_r+0x9c>
9d0071b0:	001020c2 	srl	a0,s0,0x3
9d0071b4:	26420008 	addiu	v0,s2,8
9d0071b8:	8e520014 	lw	s2,20(s2)
9d0071bc:	12420038 	beq	s2,v0,9d0072a0 <_malloc_r+0x178>
9d0071c0:	24840002 	addiu	a0,a0,2
9d0071c4:	8e420004 	lw	v0,4(s2)
9d0071c8:	2403fffc 	li	v1,-4
9d0071cc:	0b401ca0 	j	9d007280 <_malloc_r+0x158>
9d0071d0:	00621024 	and	v0,v1,v0
9d0071d4:	00102242 	srl	a0,s0,0x9
9d0071d8:	14800003 	bnez	a0,9d0071e8 <_malloc_r+0xc0>
9d0071dc:	2c820005 	sltiu	v0,a0,5
9d0071e0:	0b401c91 	j	9d007244 <_malloc_r+0x11c>
9d0071e4:	001020c2 	srl	a0,s0,0x3
9d0071e8:	10400004 	beqz	v0,9d0071fc <_malloc_r+0xd4>
9d0071ec:	2c820015 	sltiu	v0,a0,21
9d0071f0:	00102182 	srl	a0,s0,0x6
9d0071f4:	0b401c91 	j	9d007244 <_malloc_r+0x11c>
9d0071f8:	24840038 	addiu	a0,a0,56
9d0071fc:	10400003 	beqz	v0,9d00720c <_malloc_r+0xe4>
9d007200:	2c820055 	sltiu	v0,a0,85
9d007204:	0b401c91 	j	9d007244 <_malloc_r+0x11c>
9d007208:	2484005b 	addiu	a0,a0,91
9d00720c:	10400004 	beqz	v0,9d007220 <_malloc_r+0xf8>
9d007210:	2c820155 	sltiu	v0,a0,341
9d007214:	00102302 	srl	a0,s0,0xc
9d007218:	0b401c91 	j	9d007244 <_malloc_r+0x11c>
9d00721c:	2484006e 	addiu	a0,a0,110
9d007220:	10400004 	beqz	v0,9d007234 <_malloc_r+0x10c>
9d007224:	2c820555 	sltiu	v0,a0,1365
9d007228:	001023c2 	srl	a0,s0,0xf
9d00722c:	0b401c91 	j	9d007244 <_malloc_r+0x11c>
9d007230:	24840077 	addiu	a0,a0,119
9d007234:	10400003 	beqz	v0,9d007244 <_malloc_r+0x11c>
9d007238:	2404007e 	li	a0,126
9d00723c:	00102482 	srl	a0,s0,0x12
9d007240:	2484007c 	addiu	a0,a0,124
9d007244:	000410c0 	sll	v0,a0,0x3
9d007248:	262305f8 	addiu	v1,s1,1528
9d00724c:	00621821 	addu	v1,v1,v0
9d007250:	8c72000c 	lw	s2,12(v1)
9d007254:	0b401ca5 	j	9d007294 <_malloc_r+0x16c>
9d007258:	2406fffc 	li	a2,-4
9d00725c:	00c21024 	and	v0,a2,v0
9d007260:	00502823 	subu	a1,v0,s0
9d007264:	28a70010 	slti	a3,a1,16
9d007268:	14e00003 	bnez	a3,9d007278 <_malloc_r+0x150>
9d00726c:	00000000 	nop
9d007270:	0b401ca7 	j	9d00729c <_malloc_r+0x174>
9d007274:	2484ffff 	addiu	a0,a0,-1
9d007278:	04a20006 	bltzl	a1,9d007294 <_malloc_r+0x16c>
9d00727c:	8e52000c 	lw	s2,12(s2)
9d007280:	8e43000c 	lw	v1,12(s2)
9d007284:	8e440008 	lw	a0,8(s2)
9d007288:	ac83000c 	sw	v1,12(a0)
9d00728c:	0b401cb9 	j	9d0072e4 <_malloc_r+0x1bc>
9d007290:	ac640008 	sw	a0,8(v1)
9d007294:	5643fff1 	bnel	s2,v1,9d00725c <_malloc_r+0x134>
9d007298:	8e420004 	lw	v0,4(s2)
9d00729c:	24840001 	addiu	a0,a0,1
9d0072a0:	263105f8 	addiu	s1,s1,1528
9d0072a4:	26230008 	addiu	v1,s1,8
9d0072a8:	8c720008 	lw	s2,8(v1)
9d0072ac:	12430051 	beq	s2,v1,9d0073f4 <_malloc_r+0x2cc>
9d0072b0:	2405fffc 	li	a1,-4
9d0072b4:	8e420004 	lw	v0,4(s2)
9d0072b8:	00a21024 	and	v0,a1,v0
9d0072bc:	00502823 	subu	a1,v0,s0
9d0072c0:	28a60010 	slti	a2,a1,16
9d0072c4:	54c00005 	bnezl	a2,9d0072dc <_malloc_r+0x1b4>
9d0072c8:	ac63000c 	sw	v1,12(v1)
9d0072cc:	02501021 	addu	v0,s2,s0
9d0072d0:	36100001 	ori	s0,s0,0x1
9d0072d4:	0b401d20 	j	9d007480 <_malloc_r+0x358>
9d0072d8:	ae500004 	sw	s0,4(s2)
9d0072dc:	04a00006 	bltz	a1,9d0072f8 <_malloc_r+0x1d0>
9d0072e0:	ac630008 	sw	v1,8(v1)
9d0072e4:	02421021 	addu	v0,s2,v0
9d0072e8:	8c430004 	lw	v1,4(v0)
9d0072ec:	34630001 	ori	v1,v1,0x1
9d0072f0:	0b401ddb 	j	9d00776c <_malloc_r+0x644>
9d0072f4:	ac430004 	sw	v1,4(v0)
9d0072f8:	2c450200 	sltiu	a1,v0,512
9d0072fc:	10a0000c 	beqz	a1,9d007330 <_malloc_r+0x208>
9d007300:	00023242 	srl	a2,v0,0x9
9d007304:	000210c2 	srl	v0,v0,0x3
9d007308:	00022883 	sra	a1,v0,0x2
9d00730c:	24060001 	li	a2,1
9d007310:	00a62804 	sllv	a1,a2,a1
9d007314:	8e260004 	lw	a2,4(s1)
9d007318:	000210c0 	sll	v0,v0,0x3
9d00731c:	02221021 	addu	v0,s1,v0
9d007320:	00c52825 	or	a1,a2,a1
9d007324:	ae250004 	sw	a1,4(s1)
9d007328:	0b401cf9 	j	9d0073e4 <_malloc_r+0x2bc>
9d00732c:	8c450008 	lw	a1,8(v0)
9d007330:	2cc50005 	sltiu	a1,a2,5
9d007334:	10a00004 	beqz	a1,9d007348 <_malloc_r+0x220>
9d007338:	2cc50015 	sltiu	a1,a2,21
9d00733c:	00023182 	srl	a2,v0,0x6
9d007340:	0b401ce4 	j	9d007390 <_malloc_r+0x268>
9d007344:	24c60038 	addiu	a2,a2,56
9d007348:	10a00003 	beqz	a1,9d007358 <_malloc_r+0x230>
9d00734c:	2cc50055 	sltiu	a1,a2,85
9d007350:	0b401ce4 	j	9d007390 <_malloc_r+0x268>
9d007354:	24c6005b 	addiu	a2,a2,91
9d007358:	10a00004 	beqz	a1,9d00736c <_malloc_r+0x244>
9d00735c:	2cc50155 	sltiu	a1,a2,341
9d007360:	00023302 	srl	a2,v0,0xc
9d007364:	0b401ce4 	j	9d007390 <_malloc_r+0x268>
9d007368:	24c6006e 	addiu	a2,a2,110
9d00736c:	10a00004 	beqz	a1,9d007380 <_malloc_r+0x258>
9d007370:	2cc50555 	sltiu	a1,a2,1365
9d007374:	000233c2 	srl	a2,v0,0xf
9d007378:	0b401ce4 	j	9d007390 <_malloc_r+0x268>
9d00737c:	24c60077 	addiu	a2,a2,119
9d007380:	10a00003 	beqz	a1,9d007390 <_malloc_r+0x268>
9d007384:	2406007e 	li	a2,126
9d007388:	00023482 	srl	a2,v0,0x12
9d00738c:	24c6007c 	addiu	a2,a2,124
9d007390:	000638c0 	sll	a3,a2,0x3
9d007394:	02273821 	addu	a3,s1,a3
9d007398:	8ce50008 	lw	a1,8(a3)
9d00739c:	14a7000b 	bne	a1,a3,9d0073cc <_malloc_r+0x2a4>
9d0073a0:	2408fffc 	li	t0,-4
9d0073a4:	24020001 	li	v0,1
9d0073a8:	00063083 	sra	a2,a2,0x2
9d0073ac:	00c23004 	sllv	a2,v0,a2
9d0073b0:	8e220004 	lw	v0,4(s1)
9d0073b4:	00463025 	or	a2,v0,a2
9d0073b8:	ae260004 	sw	a2,4(s1)
9d0073bc:	0b401cf9 	j	9d0073e4 <_malloc_r+0x2bc>
9d0073c0:	00a01021 	move	v0,a1
9d0073c4:	50a70007 	beql	a1,a3,9d0073e4 <_malloc_r+0x2bc>
9d0073c8:	8ca2000c 	lw	v0,12(a1)
9d0073cc:	8ca60004 	lw	a2,4(a1)
9d0073d0:	01063024 	and	a2,t0,a2
9d0073d4:	0046302b 	sltu	a2,v0,a2
9d0073d8:	54c0fffa 	bnezl	a2,9d0073c4 <_malloc_r+0x29c>
9d0073dc:	8ca50008 	lw	a1,8(a1)
9d0073e0:	8ca2000c 	lw	v0,12(a1)
9d0073e4:	ae42000c 	sw	v0,12(s2)
9d0073e8:	ae450008 	sw	a1,8(s2)
9d0073ec:	ac520008 	sw	s2,8(v0)
9d0073f0:	acb2000c 	sw	s2,12(a1)
9d0073f4:	24050001 	li	a1,1
9d0073f8:	00041083 	sra	v0,a0,0x2
9d0073fc:	00451004 	sllv	v0,a1,v0
9d007400:	8e250004 	lw	a1,4(s1)
9d007404:	00a2302b 	sltu	a2,a1,v0
9d007408:	54c00053 	bnezl	a2,9d007558 <_malloc_r+0x430>
9d00740c:	8e340008 	lw	s4,8(s1)
9d007410:	00453024 	and	a2,v0,a1
9d007414:	14c00008 	bnez	a2,9d007438 <_malloc_r+0x310>
9d007418:	240afffc 	li	t2,-4
9d00741c:	2406fffc 	li	a2,-4
9d007420:	00862024 	and	a0,a0,a2
9d007424:	00021040 	sll	v0,v0,0x1
9d007428:	00453024 	and	a2,v0,a1
9d00742c:	10c0fffd 	beqz	a2,9d007424 <_malloc_r+0x2fc>
9d007430:	24840004 	addiu	a0,a0,4
9d007434:	240afffc 	li	t2,-4
9d007438:	000448c0 	sll	t1,a0,0x3
9d00743c:	02294821 	addu	t1,s1,t1
9d007440:	01203821 	move	a3,t1
9d007444:	00803021 	move	a2,a0
9d007448:	0b401d34 	j	9d0074d0 <_malloc_r+0x3a8>
9d00744c:	8cf2000c 	lw	s2,12(a3)
9d007450:	01484024 	and	t0,t2,t0
9d007454:	01102823 	subu	a1,t0,s0
9d007458:	28ab0010 	slti	t3,a1,16
9d00745c:	15600011 	bnez	t3,9d0074a4 <_malloc_r+0x37c>
9d007460:	00000000 	nop
9d007464:	8e44000c 	lw	a0,12(s2)
9d007468:	8e460008 	lw	a2,8(s2)
9d00746c:	02501021 	addu	v0,s2,s0
9d007470:	36100001 	ori	s0,s0,0x1
9d007474:	ae500004 	sw	s0,4(s2)
9d007478:	acc4000c 	sw	a0,12(a2)
9d00747c:	ac860008 	sw	a2,8(a0)
9d007480:	ac62000c 	sw	v0,12(v1)
9d007484:	ac620008 	sw	v0,8(v1)
9d007488:	ac43000c 	sw	v1,12(v0)
9d00748c:	ac430008 	sw	v1,8(v0)
9d007490:	34a30001 	ori	v1,a1,0x1
9d007494:	ac430004 	sw	v1,4(v0)
9d007498:	00451021 	addu	v0,v0,a1
9d00749c:	0b401ddb 	j	9d00776c <_malloc_r+0x644>
9d0074a0:	ac450000 	sw	a1,0(v0)
9d0074a4:	04a2000a 	bltzl	a1,9d0074d0 <_malloc_r+0x3a8>
9d0074a8:	8e52000c 	lw	s2,12(s2)
9d0074ac:	02481021 	addu	v0,s2,t0
9d0074b0:	8c430004 	lw	v1,4(v0)
9d0074b4:	34630001 	ori	v1,v1,0x1
9d0074b8:	ac430004 	sw	v1,4(v0)
9d0074bc:	8e42000c 	lw	v0,12(s2)
9d0074c0:	8e430008 	lw	v1,8(s2)
9d0074c4:	ac62000c 	sw	v0,12(v1)
9d0074c8:	0b401ddb 	j	9d00776c <_malloc_r+0x644>
9d0074cc:	ac430008 	sw	v1,8(v0)
9d0074d0:	5647ffdf 	bnel	s2,a3,9d007450 <_malloc_r+0x328>
9d0074d4:	8e480004 	lw	t0,4(s2)
9d0074d8:	24c60001 	addiu	a2,a2,1
9d0074dc:	30c50003 	andi	a1,a2,0x3
9d0074e0:	14a0ffd9 	bnez	a1,9d007448 <_malloc_r+0x320>
9d0074e4:	24e70008 	addiu	a3,a3,8
9d0074e8:	01202821 	move	a1,t1
9d0074ec:	30870003 	andi	a3,a0,0x3
9d0074f0:	14e00006 	bnez	a3,9d00750c <_malloc_r+0x3e4>
9d0074f4:	24a7fff8 	addiu	a3,a1,-8
9d0074f8:	8e250004 	lw	a1,4(s1)
9d0074fc:	00022027 	nor	a0,zero,v0
9d007500:	00a42024 	and	a0,a1,a0
9d007504:	0b401d46 	j	9d007518 <_malloc_r+0x3f0>
9d007508:	ae240004 	sw	a0,4(s1)
9d00750c:	8ca50000 	lw	a1,0(a1)
9d007510:	10a7fff6 	beq	a1,a3,9d0074ec <_malloc_r+0x3c4>
9d007514:	2484ffff 	addiu	a0,a0,-1
9d007518:	8e250004 	lw	a1,4(s1)
9d00751c:	00021040 	sll	v0,v0,0x1
9d007520:	00a2202b 	sltu	a0,a1,v0
9d007524:	5480000c 	bnezl	a0,9d007558 <_malloc_r+0x430>
9d007528:	8e340008 	lw	s4,8(s1)
9d00752c:	10400009 	beqz	v0,9d007554 <_malloc_r+0x42c>
9d007530:	00c02021 	move	a0,a2
9d007534:	0b401d51 	j	9d007544 <_malloc_r+0x41c>
9d007538:	00453024 	and	a2,v0,a1
9d00753c:	00021040 	sll	v0,v0,0x1
9d007540:	00453024 	and	a2,v0,a1
9d007544:	14c0ffbd 	bnez	a2,9d00743c <_malloc_r+0x314>
9d007548:	000448c0 	sll	t1,a0,0x3
9d00754c:	0b401d4f 	j	9d00753c <_malloc_r+0x414>
9d007550:	24840004 	addiu	a0,a0,4
9d007554:	8e340008 	lw	s4,8(s1)
9d007558:	2415fffc 	li	s5,-4
9d00755c:	8e820004 	lw	v0,4(s4)
9d007560:	02a2a824 	and	s5,s5,v0
9d007564:	02b0102b 	sltu	v0,s5,s0
9d007568:	14400004 	bnez	v0,9d00757c <_malloc_r+0x454>
9d00756c:	02b01023 	subu	v0,s5,s0
9d007570:	28430010 	slti	v1,v0,16
9d007574:	50600077 	beqzl	v1,9d007754 <_malloc_r+0x62c>
9d007578:	8e320008 	lw	s2,8(s1)
9d00757c:	3c02a000 	lui	v0,0xa000
9d007580:	8c560a7c 	lw	s6,2684(v0)
9d007584:	3c1ea000 	lui	s8,0xa000
9d007588:	8fc30a44 	lw	v1,2628(s8)
9d00758c:	26d60010 	addiu	s6,s6,16
9d007590:	2402ffff 	li	v0,-1
9d007594:	10620004 	beq	v1,v0,9d0075a8 <_malloc_r+0x480>
9d007598:	02d0b021 	addu	s6,s6,s0
9d00759c:	26d6007f 	addiu	s6,s6,127
9d0075a0:	2402ff80 	li	v0,-128
9d0075a4:	02c2b024 	and	s6,s6,v0
9d0075a8:	02602021 	move	a0,s3
9d0075ac:	0f401f37 	jal	9d007cdc <_sbrk_r>
9d0075b0:	02c02821 	move	a1,s6
9d0075b4:	00409021 	move	s2,v0
9d0075b8:	2402ffff 	li	v0,-1
9d0075bc:	12420056 	beq	s2,v0,9d007718 <_malloc_r+0x5f0>
9d0075c0:	02951021 	addu	v0,s4,s5
9d0075c4:	0242182b 	sltu	v1,s2,v0
9d0075c8:	10600004 	beqz	v1,9d0075dc <_malloc_r+0x4b4>
9d0075cc:	3c17a000 	lui	s7,0xa000
9d0075d0:	56910052 	bnel	s4,s1,9d00771c <_malloc_r+0x5f4>
9d0075d4:	8e220008 	lw	v0,8(s1)
9d0075d8:	3c17a000 	lui	s7,0xa000
9d0075dc:	8ee310dc 	lw	v1,4316(s7)
9d0075e0:	02c31821 	addu	v1,s6,v1
9d0075e4:	16420009 	bne	s2,v0,9d00760c <_malloc_r+0x4e4>
9d0075e8:	aee310dc 	sw	v1,4316(s7)
9d0075ec:	3244007f 	andi	a0,s2,0x7f
9d0075f0:	54800007 	bnezl	a0,9d007610 <_malloc_r+0x4e8>
9d0075f4:	8fc50a44 	lw	a1,2628(s8)
9d0075f8:	8e220008 	lw	v0,8(s1)
9d0075fc:	02d5a821 	addu	s5,s6,s5
9d007600:	36b50001 	ori	s5,s5,0x1
9d007604:	0b401dbb 	j	9d0076ec <_malloc_r+0x5c4>
9d007608:	ac550004 	sw	s5,4(v0)
9d00760c:	8fc50a44 	lw	a1,2628(s8)
9d007610:	2404ffff 	li	a0,-1
9d007614:	14a40004 	bne	a1,a0,9d007628 <_malloc_r+0x500>
9d007618:	02431821 	addu	v1,s2,v1
9d00761c:	3c02a000 	lui	v0,0xa000
9d007620:	0b401d8c 	j	9d007630 <_malloc_r+0x508>
9d007624:	ac520a44 	sw	s2,2628(v0)
9d007628:	00621023 	subu	v0,v1,v0
9d00762c:	aee210dc 	sw	v0,4316(s7)
9d007630:	32430007 	andi	v1,s2,0x7
9d007634:	10600004 	beqz	v1,9d007648 <_malloc_r+0x520>
9d007638:	00001021 	move	v0,zero
9d00763c:	24020008 	li	v0,8
9d007640:	00431023 	subu	v0,v0,v1
9d007644:	02429021 	addu	s2,s2,v0
9d007648:	0256b021 	addu	s6,s2,s6
9d00764c:	24420080 	addiu	v0,v0,128
9d007650:	32d6007f 	andi	s6,s6,0x7f
9d007654:	0056b023 	subu	s6,v0,s6
9d007658:	02602021 	move	a0,s3
9d00765c:	0f401f37 	jal	9d007cdc <_sbrk_r>
9d007660:	02c02821 	move	a1,s6
9d007664:	2403ffff 	li	v1,-1
9d007668:	14430003 	bne	v0,v1,9d007678 <_malloc_r+0x550>
9d00766c:	8ee310dc 	lw	v1,4316(s7)
9d007670:	02401021 	move	v0,s2
9d007674:	0000b021 	move	s6,zero
9d007678:	00521023 	subu	v0,v0,s2
9d00767c:	ae320008 	sw	s2,8(s1)
9d007680:	02c31821 	addu	v1,s6,v1
9d007684:	0056b021 	addu	s6,v0,s6
9d007688:	36d60001 	ori	s6,s6,0x1
9d00768c:	aee310dc 	sw	v1,4316(s7)
9d007690:	12910016 	beq	s4,s1,9d0076ec <_malloc_r+0x5c4>
9d007694:	ae560004 	sw	s6,4(s2)
9d007698:	2ea20010 	sltiu	v0,s5,16
9d00769c:	10400004 	beqz	v0,9d0076b0 <_malloc_r+0x588>
9d0076a0:	2402fff8 	li	v0,-8
9d0076a4:	24020001 	li	v0,1
9d0076a8:	0b401dc6 	j	9d007718 <_malloc_r+0x5f0>
9d0076ac:	ae420004 	sw	v0,4(s2)
9d0076b0:	26b5fff4 	addiu	s5,s5,-12
9d0076b4:	02a2a824 	and	s5,s5,v0
9d0076b8:	8e820004 	lw	v0,4(s4)
9d0076bc:	24030005 	li	v1,5
9d0076c0:	30420001 	andi	v0,v0,0x1
9d0076c4:	02a21025 	or	v0,s5,v0
9d0076c8:	ae820004 	sw	v0,4(s4)
9d0076cc:	02951021 	addu	v0,s4,s5
9d0076d0:	2eb50010 	sltiu	s5,s5,16
9d0076d4:	ac430004 	sw	v1,4(v0)
9d0076d8:	16a00004 	bnez	s5,9d0076ec <_malloc_r+0x5c4>
9d0076dc:	ac430008 	sw	v1,8(v0)
9d0076e0:	02602021 	move	a0,s3
9d0076e4:	0f402b6e 	jal	9d00adb8 <_free_r>
9d0076e8:	26850008 	addiu	a1,s4,8
9d0076ec:	3c03a000 	lui	v1,0xa000
9d0076f0:	8ee210dc 	lw	v0,4316(s7)
9d0076f4:	8c640a80 	lw	a0,2688(v1)
9d0076f8:	0082202b 	sltu	a0,a0,v0
9d0076fc:	54800001 	bnezl	a0,9d007704 <_malloc_r+0x5dc>
9d007700:	ac620a80 	sw	v0,2688(v1)
9d007704:	3c03a000 	lui	v1,0xa000
9d007708:	8c640a84 	lw	a0,2692(v1)
9d00770c:	0082202b 	sltu	a0,a0,v0
9d007710:	54800001 	bnezl	a0,9d007718 <_malloc_r+0x5f0>
9d007714:	ac620a84 	sw	v0,2692(v1)
9d007718:	8e220008 	lw	v0,8(s1)
9d00771c:	2403fffc 	li	v1,-4
9d007720:	8c420004 	lw	v0,4(v0)
9d007724:	00621024 	and	v0,v1,v0
9d007728:	0050182b 	sltu	v1,v0,s0
9d00772c:	14600005 	bnez	v1,9d007744 <_malloc_r+0x61c>
9d007730:	00000000 	nop
9d007734:	00501023 	subu	v0,v0,s0
9d007738:	28430010 	slti	v1,v0,16
9d00773c:	50600005 	beqzl	v1,9d007754 <_malloc_r+0x62c>
9d007740:	8e320008 	lw	s2,8(s1)
9d007744:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d007748:	02602021 	move	a0,s3
9d00774c:	0b401dde 	j	9d007778 <_malloc_r+0x650>
9d007750:	00001021 	move	v0,zero
9d007754:	36030001 	ori	v1,s0,0x1
9d007758:	34420001 	ori	v0,v0,0x1
9d00775c:	02508021 	addu	s0,s2,s0
9d007760:	ae430004 	sw	v1,4(s2)
9d007764:	ae300008 	sw	s0,8(s1)
9d007768:	ae020004 	sw	v0,4(s0)
9d00776c:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d007770:	02602021 	move	a0,s3
9d007774:	26420008 	addiu	v0,s2,8
9d007778:	8fbf0034 	lw	ra,52(sp)
9d00777c:	8fbe0030 	lw	s8,48(sp)
9d007780:	8fb7002c 	lw	s7,44(sp)
9d007784:	8fb60028 	lw	s6,40(sp)
9d007788:	8fb50024 	lw	s5,36(sp)
9d00778c:	8fb40020 	lw	s4,32(sp)
9d007790:	8fb3001c 	lw	s3,28(sp)
9d007794:	8fb20018 	lw	s2,24(sp)
9d007798:	8fb10014 	lw	s1,20(sp)
9d00779c:	8fb00010 	lw	s0,16(sp)
9d0077a0:	03e00008 	jr	ra
9d0077a4:	27bd0038 	addiu	sp,sp,56

9d0077a8 <__malloc_lock>:
9d0077a8:	03e00008 	jr	ra
9d0077ac:	00000000 	nop

9d0077b0 <__malloc_unlock>:
9d0077b0:	03e00008 	jr	ra
9d0077b4:	00000000 	nop

9d0077b8 <realloc>:
9d0077b8:	3c03a000 	lui	v1,0xa000
9d0077bc:	00801021 	move	v0,a0
9d0077c0:	8c640a38 	lw	a0,2616(v1)
9d0077c4:	27bdffe8 	addiu	sp,sp,-24
9d0077c8:	00a03021 	move	a2,a1
9d0077cc:	afbf0014 	sw	ra,20(sp)
9d0077d0:	0f401df9 	jal	9d0077e4 <_realloc_r>
9d0077d4:	00402821 	move	a1,v0
9d0077d8:	8fbf0014 	lw	ra,20(sp)
9d0077dc:	03e00008 	jr	ra
9d0077e0:	27bd0018 	addiu	sp,sp,24

9d0077e4 <_realloc_r>:
9d0077e4:	27bdffc0 	addiu	sp,sp,-64
9d0077e8:	afb20020 	sw	s2,32(sp)
9d0077ec:	00a09021 	move	s2,a1
9d0077f0:	afb00018 	sw	s0,24(sp)
9d0077f4:	afbf003c 	sw	ra,60(sp)
9d0077f8:	afbe0038 	sw	s8,56(sp)
9d0077fc:	afb70034 	sw	s7,52(sp)
9d007800:	afb60030 	sw	s6,48(sp)
9d007804:	afb5002c 	sw	s5,44(sp)
9d007808:	afb40028 	sw	s4,40(sp)
9d00780c:	afb30024 	sw	s3,36(sp)
9d007810:	afb1001c 	sw	s1,28(sp)
9d007814:	00808021 	move	s0,a0
9d007818:	16400005 	bnez	s2,9d007830 <_realloc_r+0x4c>
9d00781c:	00c02821 	move	a1,a2
9d007820:	0f401c4a 	jal	9d007128 <_malloc_r>
9d007824:	00000000 	nop
9d007828:	0b401f2a 	j	9d007ca8 <_realloc_r+0x4c4>
9d00782c:	00409821 	move	s3,v0
9d007830:	0f401dea 	jal	9d0077a8 <__malloc_lock>
9d007834:	afa60010 	sw	a2,16(sp)
9d007838:	8fa50010 	lw	a1,16(sp)
9d00783c:	2657fff8 	addiu	s7,s2,-8
9d007840:	8ee20004 	lw	v0,4(s7)
9d007844:	24a3000b 	addiu	v1,a1,11
9d007848:	2c640017 	sltiu	a0,v1,23
9d00784c:	14800005 	bnez	a0,9d007864 <_realloc_r+0x80>
9d007850:	24140010 	li	s4,16
9d007854:	2414fff8 	li	s4,-8
9d007858:	0074a024 	and	s4,v1,s4
9d00785c:	06820005 	bltzl	s4,9d007874 <_realloc_r+0x90>
9d007860:	2402000c 	li	v0,12
9d007864:	0285182b 	sltu	v1,s4,a1
9d007868:	10600005 	beqz	v1,9d007880 <_realloc_r+0x9c>
9d00786c:	241efffc 	li	s8,-4
9d007870:	2402000c 	li	v0,12
9d007874:	ae020000 	sw	v0,0(s0)
9d007878:	0b401f2a 	j	9d007ca8 <_realloc_r+0x4c4>
9d00787c:	00009821 	move	s3,zero
9d007880:	005ef024 	and	s8,v0,s8
9d007884:	03d4182a 	slt	v1,s8,s4
9d007888:	106000e9 	beqz	v1,9d007c30 <_realloc_r+0x44c>
9d00788c:	03c0a821 	move	s5,s8
9d007890:	3c16a000 	lui	s6,0xa000
9d007894:	26d605f8 	addiu	s6,s6,1528
9d007898:	8ec60008 	lw	a2,8(s6)
9d00789c:	02fe1821 	addu	v1,s7,s8
9d0078a0:	10660008 	beq	v1,a2,9d0078c4 <_realloc_r+0xe0>
9d0078a4:	2407fffe 	li	a3,-2
9d0078a8:	8c640004 	lw	a0,4(v1)
9d0078ac:	00e42024 	and	a0,a3,a0
9d0078b0:	00642021 	addu	a0,v1,a0
9d0078b4:	8c840004 	lw	a0,4(a0)
9d0078b8:	30840001 	andi	a0,a0,0x1
9d0078bc:	14800020 	bnez	a0,9d007940 <_realloc_r+0x15c>
9d0078c0:	00002021 	move	a0,zero
9d0078c4:	8c640004 	lw	a0,4(v1)
9d0078c8:	2415fffc 	li	s5,-4
9d0078cc:	02a42024 	and	a0,s5,a0
9d0078d0:	14660013 	bne	v1,a2,9d007920 <_realloc_r+0x13c>
9d0078d4:	009ea821 	addu	s5,a0,s8
9d0078d8:	26870010 	addiu	a3,s4,16
9d0078dc:	02a7382a 	slt	a3,s5,a3
9d0078e0:	14e00019 	bnez	a3,9d007948 <_realloc_r+0x164>
9d0078e4:	30420001 	andi	v0,v0,0x1
9d0078e8:	02b4a823 	subu	s5,s5,s4
9d0078ec:	02f41021 	addu	v0,s7,s4
9d0078f0:	36b50001 	ori	s5,s5,0x1
9d0078f4:	ac550004 	sw	s5,4(v0)
9d0078f8:	aec20008 	sw	v0,8(s6)
9d0078fc:	8ee20004 	lw	v0,4(s7)
9d007900:	02002021 	move	a0,s0
9d007904:	02409821 	move	s3,s2
9d007908:	30420001 	andi	v0,v0,0x1
9d00790c:	0282a025 	or	s4,s4,v0
9d007910:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d007914:	aef40004 	sw	s4,4(s7)
9d007918:	0b401f2b 	j	9d007cac <_realloc_r+0x4c8>
9d00791c:	8fbf003c 	lw	ra,60(sp)
9d007920:	02b4382a 	slt	a3,s5,s4
9d007924:	14e00008 	bnez	a3,9d007948 <_realloc_r+0x164>
9d007928:	30420001 	andi	v0,v0,0x1
9d00792c:	8c62000c 	lw	v0,12(v1)
9d007930:	8c630008 	lw	v1,8(v1)
9d007934:	ac62000c 	sw	v0,12(v1)
9d007938:	0b401f0c 	j	9d007c30 <_realloc_r+0x44c>
9d00793c:	ac430008 	sw	v1,8(v0)
9d007940:	00001821 	move	v1,zero
9d007944:	30420001 	andi	v0,v0,0x1
9d007948:	1440007c 	bnez	v0,9d007b3c <_realloc_r+0x358>
9d00794c:	2407fffc 	li	a3,-4
9d007950:	8e51fff8 	lw	s1,-8(s2)
9d007954:	02f18823 	subu	s1,s7,s1
9d007958:	8e220004 	lw	v0,4(s1)
9d00795c:	10600047 	beqz	v1,9d007a7c <_realloc_r+0x298>
9d007960:	00e21024 	and	v0,a3,v0
9d007964:	1466003c 	bne	v1,a2,9d007a58 <_realloc_r+0x274>
9d007968:	005ea821 	addu	s5,v0,s8
9d00796c:	02a4a821 	addu	s5,s5,a0
9d007970:	26830010 	addiu	v1,s4,16
9d007974:	02a3182a 	slt	v1,s5,v1
9d007978:	54600041 	bnezl	v1,9d007a80 <_realloc_r+0x29c>
9d00797c:	005ea821 	addu	s5,v0,s8
9d007980:	8e22000c 	lw	v0,12(s1)
9d007984:	8e230008 	lw	v1,8(s1)
9d007988:	27c6fffc 	addiu	a2,s8,-4
9d00798c:	ac62000c 	sw	v0,12(v1)
9d007990:	ac430008 	sw	v1,8(v0)
9d007994:	2cc20025 	sltiu	v0,a2,37
9d007998:	10400022 	beqz	v0,9d007a24 <_realloc_r+0x240>
9d00799c:	26330008 	addiu	s3,s1,8
9d0079a0:	2cc40014 	sltiu	a0,a2,20
9d0079a4:	02401021 	move	v0,s2
9d0079a8:	14800017 	bnez	a0,9d007a08 <_realloc_r+0x224>
9d0079ac:	02601821 	move	v1,s3
9d0079b0:	8e430000 	lw	v1,0(s2)
9d0079b4:	2cc4001c 	sltiu	a0,a2,28
9d0079b8:	26420008 	addiu	v0,s2,8
9d0079bc:	ae230008 	sw	v1,8(s1)
9d0079c0:	8e430004 	lw	v1,4(s2)
9d0079c4:	ae23000c 	sw	v1,12(s1)
9d0079c8:	1480000f 	bnez	a0,9d007a08 <_realloc_r+0x224>
9d0079cc:	26230010 	addiu	v1,s1,16
9d0079d0:	8e430008 	lw	v1,8(s2)
9d0079d4:	24040024 	li	a0,36
9d0079d8:	ae230010 	sw	v1,16(s1)
9d0079dc:	8c430004 	lw	v1,4(v0)
9d0079e0:	24420008 	addiu	v0,v0,8
9d0079e4:	ae230014 	sw	v1,20(s1)
9d0079e8:	14c40007 	bne	a2,a0,9d007a08 <_realloc_r+0x224>
9d0079ec:	26230018 	addiu	v1,s1,24
9d0079f0:	8c430000 	lw	v1,0(v0)
9d0079f4:	ae230018 	sw	v1,24(s1)
9d0079f8:	8c430004 	lw	v1,4(v0)
9d0079fc:	24420008 	addiu	v0,v0,8
9d007a00:	ae23001c 	sw	v1,28(s1)
9d007a04:	26230020 	addiu	v1,s1,32
9d007a08:	8c440000 	lw	a0,0(v0)
9d007a0c:	ac640000 	sw	a0,0(v1)
9d007a10:	8c440004 	lw	a0,4(v0)
9d007a14:	ac640004 	sw	a0,4(v1)
9d007a18:	8c420008 	lw	v0,8(v0)
9d007a1c:	0b401e8c 	j	9d007a30 <_realloc_r+0x24c>
9d007a20:	ac620008 	sw	v0,8(v1)
9d007a24:	02602021 	move	a0,s3
9d007a28:	0f402c22 	jal	9d00b088 <memmove>
9d007a2c:	02402821 	move	a1,s2
9d007a30:	02b4a823 	subu	s5,s5,s4
9d007a34:	02341021 	addu	v0,s1,s4
9d007a38:	36b50001 	ori	s5,s5,0x1
9d007a3c:	ac550004 	sw	s5,4(v0)
9d007a40:	aec20008 	sw	v0,8(s6)
9d007a44:	8e220004 	lw	v0,4(s1)
9d007a48:	30420001 	andi	v0,v0,0x1
9d007a4c:	0282a025 	or	s4,s4,v0
9d007a50:	0b401f08 	j	9d007c20 <_realloc_r+0x43c>
9d007a54:	ae340004 	sw	s4,4(s1)
9d007a58:	02a4a821 	addu	s5,s5,a0
9d007a5c:	02b4202a 	slt	a0,s5,s4
9d007a60:	54800007 	bnezl	a0,9d007a80 <_realloc_r+0x29c>
9d007a64:	005ea821 	addu	s5,v0,s8
9d007a68:	8c62000c 	lw	v0,12(v1)
9d007a6c:	8c630008 	lw	v1,8(v1)
9d007a70:	ac62000c 	sw	v0,12(v1)
9d007a74:	0b401ea3 	j	9d007a8c <_realloc_r+0x2a8>
9d007a78:	ac430008 	sw	v1,8(v0)
9d007a7c:	005ea821 	addu	s5,v0,s8
9d007a80:	02b4102a 	slt	v0,s5,s4
9d007a84:	1440002d 	bnez	v0,9d007b3c <_realloc_r+0x358>
9d007a88:	00000000 	nop
9d007a8c:	8e22000c 	lw	v0,12(s1)
9d007a90:	8e230008 	lw	v1,8(s1)
9d007a94:	27c6fffc 	addiu	a2,s8,-4
9d007a98:	ac62000c 	sw	v0,12(v1)
9d007a9c:	ac430008 	sw	v1,8(v0)
9d007aa0:	2cc20025 	sltiu	v0,a2,37
9d007aa4:	10400021 	beqz	v0,9d007b2c <_realloc_r+0x348>
9d007aa8:	26240008 	addiu	a0,s1,8
9d007aac:	2cc30014 	sltiu	v1,a2,20
9d007ab0:	14600017 	bnez	v1,9d007b10 <_realloc_r+0x32c>
9d007ab4:	02401021 	move	v0,s2
9d007ab8:	8e430000 	lw	v1,0(s2)
9d007abc:	26240010 	addiu	a0,s1,16
9d007ac0:	ae230008 	sw	v1,8(s1)
9d007ac4:	8e430004 	lw	v1,4(s2)
9d007ac8:	ae23000c 	sw	v1,12(s1)
9d007acc:	2cc3001c 	sltiu	v1,a2,28
9d007ad0:	1460000f 	bnez	v1,9d007b10 <_realloc_r+0x32c>
9d007ad4:	26420008 	addiu	v0,s2,8
9d007ad8:	8e430008 	lw	v1,8(s2)
9d007adc:	26240018 	addiu	a0,s1,24
9d007ae0:	ae230010 	sw	v1,16(s1)
9d007ae4:	8c430004 	lw	v1,4(v0)
9d007ae8:	ae230014 	sw	v1,20(s1)
9d007aec:	24030024 	li	v1,36
9d007af0:	14c30007 	bne	a2,v1,9d007b10 <_realloc_r+0x32c>
9d007af4:	24420008 	addiu	v0,v0,8
9d007af8:	8c430000 	lw	v1,0(v0)
9d007afc:	26240020 	addiu	a0,s1,32
9d007b00:	ae230018 	sw	v1,24(s1)
9d007b04:	8c430004 	lw	v1,4(v0)
9d007b08:	24420008 	addiu	v0,v0,8
9d007b0c:	ae23001c 	sw	v1,28(s1)
9d007b10:	8c430000 	lw	v1,0(v0)
9d007b14:	ac830000 	sw	v1,0(a0)
9d007b18:	8c430004 	lw	v1,4(v0)
9d007b1c:	ac830004 	sw	v1,4(a0)
9d007b20:	8c420008 	lw	v0,8(v0)
9d007b24:	0b401f0d 	j	9d007c34 <_realloc_r+0x450>
9d007b28:	ac820008 	sw	v0,8(a0)
9d007b2c:	0f402c22 	jal	9d00b088 <memmove>
9d007b30:	02402821 	move	a1,s2
9d007b34:	0b401f0e 	j	9d007c38 <_realloc_r+0x454>
9d007b38:	02b41023 	subu	v0,s5,s4
9d007b3c:	0f401c4a 	jal	9d007128 <_malloc_r>
9d007b40:	02002021 	move	a0,s0
9d007b44:	10400036 	beqz	v0,9d007c20 <_realloc_r+0x43c>
9d007b48:	00409821 	move	s3,v0
9d007b4c:	8ee30004 	lw	v1,4(s7)
9d007b50:	2404fffe 	li	a0,-2
9d007b54:	2442fff8 	addiu	v0,v0,-8
9d007b58:	00831824 	and	v1,a0,v1
9d007b5c:	02e31821 	addu	v1,s7,v1
9d007b60:	14430006 	bne	v0,v1,9d007b7c <_realloc_r+0x398>
9d007b64:	27c6fffc 	addiu	a2,s8,-4
9d007b68:	8e62fffc 	lw	v0,-4(s3)
9d007b6c:	2415fffc 	li	s5,-4
9d007b70:	02a2a824 	and	s5,s5,v0
9d007b74:	0b401f0c 	j	9d007c30 <_realloc_r+0x44c>
9d007b78:	02bea821 	addu	s5,s5,s8
9d007b7c:	2cc20025 	sltiu	v0,a2,37
9d007b80:	10400021 	beqz	v0,9d007c08 <_realloc_r+0x424>
9d007b84:	02401821 	move	v1,s2
9d007b88:	2cc40014 	sltiu	a0,a2,20
9d007b8c:	14800017 	bnez	a0,9d007bec <_realloc_r+0x408>
9d007b90:	02601021 	move	v0,s3
9d007b94:	8e420000 	lw	v0,0(s2)
9d007b98:	2cc4001c 	sltiu	a0,a2,28
9d007b9c:	26430008 	addiu	v1,s2,8
9d007ba0:	ae620000 	sw	v0,0(s3)
9d007ba4:	8e420004 	lw	v0,4(s2)
9d007ba8:	ae620004 	sw	v0,4(s3)
9d007bac:	1480000f 	bnez	a0,9d007bec <_realloc_r+0x408>
9d007bb0:	26620008 	addiu	v0,s3,8
9d007bb4:	8e420008 	lw	v0,8(s2)
9d007bb8:	24040024 	li	a0,36
9d007bbc:	26430010 	addiu	v1,s2,16
9d007bc0:	ae620008 	sw	v0,8(s3)
9d007bc4:	8e42000c 	lw	v0,12(s2)
9d007bc8:	ae62000c 	sw	v0,12(s3)
9d007bcc:	14c40007 	bne	a2,a0,9d007bec <_realloc_r+0x408>
9d007bd0:	26620010 	addiu	v0,s3,16
9d007bd4:	8e420010 	lw	v0,16(s2)
9d007bd8:	26430018 	addiu	v1,s2,24
9d007bdc:	ae620010 	sw	v0,16(s3)
9d007be0:	8e420014 	lw	v0,20(s2)
9d007be4:	ae620014 	sw	v0,20(s3)
9d007be8:	26620018 	addiu	v0,s3,24
9d007bec:	8c640000 	lw	a0,0(v1)
9d007bf0:	ac440000 	sw	a0,0(v0)
9d007bf4:	8c640004 	lw	a0,4(v1)
9d007bf8:	ac440004 	sw	a0,4(v0)
9d007bfc:	8c630008 	lw	v1,8(v1)
9d007c00:	0b401f05 	j	9d007c14 <_realloc_r+0x430>
9d007c04:	ac430008 	sw	v1,8(v0)
9d007c08:	02602021 	move	a0,s3
9d007c0c:	0f402c22 	jal	9d00b088 <memmove>
9d007c10:	02402821 	move	a1,s2
9d007c14:	02002021 	move	a0,s0
9d007c18:	0f402b6e 	jal	9d00adb8 <_free_r>
9d007c1c:	02402821 	move	a1,s2
9d007c20:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d007c24:	02002021 	move	a0,s0
9d007c28:	0b401f2b 	j	9d007cac <_realloc_r+0x4c8>
9d007c2c:	8fbf003c 	lw	ra,60(sp)
9d007c30:	02e08821 	move	s1,s7
9d007c34:	02b41023 	subu	v0,s5,s4
9d007c38:	2c440010 	sltiu	a0,v0,16
9d007c3c:	14800010 	bnez	a0,9d007c80 <_realloc_r+0x49c>
9d007c40:	8e230004 	lw	v1,4(s1)
9d007c44:	30630001 	andi	v1,v1,0x1
9d007c48:	02342821 	addu	a1,s1,s4
9d007c4c:	0283a025 	or	s4,s4,v1
9d007c50:	34430001 	ori	v1,v0,0x1
9d007c54:	ae340004 	sw	s4,4(s1)
9d007c58:	00a21021 	addu	v0,a1,v0
9d007c5c:	aca30004 	sw	v1,4(a1)
9d007c60:	8c430004 	lw	v1,4(v0)
9d007c64:	02002021 	move	a0,s0
9d007c68:	24a50008 	addiu	a1,a1,8
9d007c6c:	34630001 	ori	v1,v1,0x1
9d007c70:	0f402b6e 	jal	9d00adb8 <_free_r>
9d007c74:	ac430004 	sw	v1,4(v0)
9d007c78:	0b401f27 	j	9d007c9c <_realloc_r+0x4b8>
9d007c7c:	00000000 	nop
9d007c80:	30630001 	andi	v1,v1,0x1
9d007c84:	02a31825 	or	v1,s5,v1
9d007c88:	ae230004 	sw	v1,4(s1)
9d007c8c:	0235a821 	addu	s5,s1,s5
9d007c90:	8ea20004 	lw	v0,4(s5)
9d007c94:	34420001 	ori	v0,v0,0x1
9d007c98:	aea20004 	sw	v0,4(s5)
9d007c9c:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d007ca0:	02002021 	move	a0,s0
9d007ca4:	26330008 	addiu	s3,s1,8
9d007ca8:	8fbf003c 	lw	ra,60(sp)
9d007cac:	02601021 	move	v0,s3
9d007cb0:	8fbe0038 	lw	s8,56(sp)
9d007cb4:	8fb70034 	lw	s7,52(sp)
9d007cb8:	8fb60030 	lw	s6,48(sp)
9d007cbc:	8fb5002c 	lw	s5,44(sp)
9d007cc0:	8fb40028 	lw	s4,40(sp)
9d007cc4:	8fb30024 	lw	s3,36(sp)
9d007cc8:	8fb20020 	lw	s2,32(sp)
9d007ccc:	8fb1001c 	lw	s1,28(sp)
9d007cd0:	8fb00018 	lw	s0,24(sp)
9d007cd4:	03e00008 	jr	ra
9d007cd8:	27bd0040 	addiu	sp,sp,64

9d007cdc <_sbrk_r>:
9d007cdc:	27bdffe0 	addiu	sp,sp,-32
9d007ce0:	afb10018 	sw	s1,24(sp)
9d007ce4:	afb00014 	sw	s0,20(sp)
9d007ce8:	00808821 	move	s1,a0
9d007cec:	3c10a000 	lui	s0,0xa000
9d007cf0:	00a02021 	move	a0,a1
9d007cf4:	afbf001c 	sw	ra,28(sp)
9d007cf8:	0f404dda 	jal	9d013768 <sbrk>
9d007cfc:	ae000aa0 	sw	zero,2720(s0)
9d007d00:	2403ffff 	li	v1,-1
9d007d04:	14430005 	bne	v0,v1,9d007d1c <_sbrk_r+0x40>
9d007d08:	8fbf001c 	lw	ra,28(sp)
9d007d0c:	8e030aa0 	lw	v1,2720(s0)
9d007d10:	54600001 	bnezl	v1,9d007d18 <_sbrk_r+0x3c>
9d007d14:	ae230000 	sw	v1,0(s1)
9d007d18:	8fbf001c 	lw	ra,28(sp)
9d007d1c:	8fb10018 	lw	s1,24(sp)
9d007d20:	8fb00014 	lw	s0,20(sp)
9d007d24:	03e00008 	jr	ra
9d007d28:	27bd0020 	addiu	sp,sp,32

9d007d2c <sprintf>:
9d007d2c:	27bdff80 	addiu	sp,sp,-128
9d007d30:	24020208 	li	v0,520
9d007d34:	a7a20020 	sh	v0,32(sp)
9d007d38:	3c027fff 	lui	v0,0x7fff
9d007d3c:	3442ffff 	ori	v0,v0,0xffff
9d007d40:	afa2001c 	sw	v0,28(sp)
9d007d44:	afa20028 	sw	v0,40(sp)
9d007d48:	2402ffff 	li	v0,-1
9d007d4c:	a7a20022 	sh	v0,34(sp)
9d007d50:	3c02a000 	lui	v0,0xa000
9d007d54:	afa40014 	sw	a0,20(sp)
9d007d58:	afa40024 	sw	a0,36(sp)
9d007d5c:	8c440a38 	lw	a0,2616(v0)
9d007d60:	afa60088 	sw	a2,136(sp)
9d007d64:	afa7008c 	sw	a3,140(sp)
9d007d68:	00a03021 	move	a2,a1
9d007d6c:	27a70088 	addiu	a3,sp,136
9d007d70:	27a50014 	addiu	a1,sp,20
9d007d74:	afbf007c 	sw	ra,124(sp)
9d007d78:	0f401f9f 	jal	9d007e7c <_svfprintf_r>
9d007d7c:	afa70010 	sw	a3,16(sp)
9d007d80:	8fa30014 	lw	v1,20(sp)
9d007d84:	a0600000 	sb	zero,0(v1)
9d007d88:	8fbf007c 	lw	ra,124(sp)
9d007d8c:	03e00008 	jr	ra
9d007d90:	27bd0080 	addiu	sp,sp,128

9d007d94 <strcmp>:
9d007d94:	00a41025 	or	v0,a1,a0
9d007d98:	30420001 	andi	v0,v0,0x1
9d007d9c:	1440000e 	bnez	v0,9d007dd8 <strcmp+0x44>
9d007da0:	90830000 	lbu	v1,0(a0)
9d007da4:	10600012 	beqz	v1,9d007df0 <strcmp+0x5c>
9d007da8:	90a20000 	lbu	v0,0(a1)
9d007dac:	24840002 	addiu	a0,a0,2
9d007db0:	1462000f 	bne	v1,v0,9d007df0 <strcmp+0x5c>
9d007db4:	9086ffff 	lbu	a2,-1(a0)
9d007db8:	10c00005 	beqz	a2,9d007dd0 <strcmp+0x3c>
9d007dbc:	90a20001 	lbu	v0,1(a1)
9d007dc0:	14c20003 	bne	a2,v0,9d007dd0 <strcmp+0x3c>
9d007dc4:	90830000 	lbu	v1,0(a0)
9d007dc8:	0b401f69 	j	9d007da4 <strcmp+0x10>
9d007dcc:	24a50002 	addiu	a1,a1,2
9d007dd0:	03e00008 	jr	ra
9d007dd4:	00c21023 	subu	v0,a2,v0
9d007dd8:	90a20000 	lbu	v0,0(a1)
9d007ddc:	24840001 	addiu	a0,a0,1
9d007de0:	10600003 	beqz	v1,9d007df0 <strcmp+0x5c>
9d007de4:	24a50001 	addiu	a1,a1,1
9d007de8:	5062fffb 	beql	v1,v0,9d007dd8 <strcmp+0x44>
9d007dec:	90830000 	lbu	v1,0(a0)
9d007df0:	03e00008 	jr	ra
9d007df4:	00621023 	subu	v0,v1,v0

9d007df8 <strcpy>:
9d007df8:	00801021 	move	v0,a0
9d007dfc:	00801821 	move	v1,a0
9d007e00:	80a40000 	lb	a0,0(a1)
9d007e04:	24a50001 	addiu	a1,a1,1
9d007e08:	a0640000 	sb	a0,0(v1)
9d007e0c:	1480fffc 	bnez	a0,9d007e00 <strcpy+0x8>
9d007e10:	24630001 	addiu	v1,v1,1
9d007e14:	03e00008 	jr	ra
9d007e18:	00000000 	nop

9d007e1c <strlen>:
9d007e1c:	24820001 	addiu	v0,a0,1
9d007e20:	90830000 	lbu	v1,0(a0)
9d007e24:	1460fffe 	bnez	v1,9d007e20 <strlen+0x4>
9d007e28:	24840001 	addiu	a0,a0,1
9d007e2c:	03e00008 	jr	ra
9d007e30:	00821023 	subu	v0,a0,v0

9d007e34 <strncmp>:
9d007e34:	14c00009 	bnez	a2,9d007e5c <strncmp+0x28>
9d007e38:	00001021 	move	v0,zero
9d007e3c:	03e00008 	jr	ra
9d007e40:	00000000 	nop
9d007e44:	50c0000a 	beqzl	a2,9d007e70 <strncmp+0x3c>
9d007e48:	90830000 	lbu	v1,0(a0)
9d007e4c:	50400008 	beqzl	v0,9d007e70 <strncmp+0x3c>
9d007e50:	90830000 	lbu	v1,0(a0)
9d007e54:	24840001 	addiu	a0,a0,1
9d007e58:	24a50001 	addiu	a1,a1,1
9d007e5c:	80830000 	lb	v1,0(a0)
9d007e60:	80a20000 	lb	v0,0(a1)
9d007e64:	5043fff7 	beql	v0,v1,9d007e44 <strncmp+0x10>
9d007e68:	24c6ffff 	addiu	a2,a2,-1
9d007e6c:	90830000 	lbu	v1,0(a0)
9d007e70:	90a20000 	lbu	v0,0(a1)
9d007e74:	03e00008 	jr	ra
9d007e78:	00621023 	subu	v0,v1,v0

9d007e7c <_svfprintf_r>:
9d007e7c:	27bdfed8 	addiu	sp,sp,-296
9d007e80:	afbf0124 	sw	ra,292(sp)
9d007e84:	afb3010c 	sw	s3,268(sp)
9d007e88:	afb20108 	sw	s2,264(sp)
9d007e8c:	afb10104 	sw	s1,260(sp)
9d007e90:	00a09021 	move	s2,a1
9d007e94:	afb00100 	sw	s0,256(sp)
9d007e98:	00809821 	move	s3,a0
9d007e9c:	00c08021 	move	s0,a2
9d007ea0:	00e08821 	move	s1,a3
9d007ea4:	afbe0120 	sw	s8,288(sp)
9d007ea8:	afb7011c 	sw	s7,284(sp)
9d007eac:	afb60118 	sw	s6,280(sp)
9d007eb0:	afb50114 	sw	s5,276(sp)
9d007eb4:	0f402c09 	jal	9d00b024 <_localeconv_r>
9d007eb8:	afb40110 	sw	s4,272(sp)
9d007ebc:	8c420000 	lw	v0,0(v0)
9d007ec0:	00402021 	move	a0,v0
9d007ec4:	0f401f87 	jal	9d007e1c <strlen>
9d007ec8:	afa200e0 	sw	v0,224(sp)
9d007ecc:	afa200dc 	sw	v0,220(sp)
9d007ed0:	9642000c 	lhu	v0,12(s2)
9d007ed4:	30420080 	andi	v0,v0,0x80
9d007ed8:	10400012 	beqz	v0,9d007f24 <_svfprintf_r+0xa8>
9d007edc:	27b50080 	addiu	s5,sp,128
9d007ee0:	8e420010 	lw	v0,16(s2)
9d007ee4:	54400010 	bnezl	v0,9d007f28 <_svfprintf_r+0xac>
9d007ee8:	afb5004c 	sw	s5,76(sp)
9d007eec:	02602021 	move	a0,s3
9d007ef0:	0f401c4a 	jal	9d007128 <_malloc_r>
9d007ef4:	24050040 	li	a1,64
9d007ef8:	ae420000 	sw	v0,0(s2)
9d007efc:	14400006 	bnez	v0,9d007f18 <_svfprintf_r+0x9c>
9d007f00:	ae420010 	sw	v0,16(s2)
9d007f04:	2402000c 	li	v0,12
9d007f08:	ae620000 	sw	v0,0(s3)
9d007f0c:	2402ffff 	li	v0,-1
9d007f10:	0b4025bf 	j	9d0096fc <_svfprintf_r+0x1880>
9d007f14:	afa200cc 	sw	v0,204(sp)
9d007f18:	24020040 	li	v0,64
9d007f1c:	ae420014 	sw	v0,20(s2)
9d007f20:	27b50080 	addiu	s5,sp,128
9d007f24:	afb5004c 	sw	s5,76(sp)
9d007f28:	afa00054 	sw	zero,84(sp)
9d007f2c:	afa00050 	sw	zero,80(sp)
9d007f30:	afb000c0 	sw	s0,192(sp)
9d007f34:	afa000c8 	sw	zero,200(sp)
9d007f38:	afa000d0 	sw	zero,208(sp)
9d007f3c:	afa000d4 	sw	zero,212(sp)
9d007f40:	afa000ec 	sw	zero,236(sp)
9d007f44:	afa000e8 	sw	zero,232(sp)
9d007f48:	afa000cc 	sw	zero,204(sp)
9d007f4c:	8fb000c0 	lw	s0,192(sp)
9d007f50:	24030025 	li	v1,37
9d007f54:	82020000 	lb	v0,0(s0)
9d007f58:	50400004 	beqzl	v0,9d007f6c <_svfprintf_r+0xf0>
9d007f5c:	8fa300c0 	lw	v1,192(sp)
9d007f60:	5443fffc 	bnel	v0,v1,9d007f54 <_svfprintf_r+0xd8>
9d007f64:	26100001 	addiu	s0,s0,1
9d007f68:	8fa300c0 	lw	v1,192(sp)
9d007f6c:	0203a023 	subu	s4,s0,v1
9d007f70:	52800016 	beqzl	s4,9d007fcc <_svfprintf_r+0x150>
9d007f74:	82020000 	lb	v0,0(s0)
9d007f78:	8fa20054 	lw	v0,84(sp)
9d007f7c:	aea30000 	sw	v1,0(s5)
9d007f80:	aeb40004 	sw	s4,4(s5)
9d007f84:	00541021 	addu	v0,v0,s4
9d007f88:	afa20054 	sw	v0,84(sp)
9d007f8c:	8fa20050 	lw	v0,80(sp)
9d007f90:	24420001 	addiu	v0,v0,1
9d007f94:	afa20050 	sw	v0,80(sp)
9d007f98:	28420008 	slti	v0,v0,8
9d007f9c:	14400007 	bnez	v0,9d007fbc <_svfprintf_r+0x140>
9d007fa0:	26b50008 	addiu	s5,s5,8
9d007fa4:	02602021 	move	a0,s3
9d007fa8:	02402821 	move	a1,s2
9d007fac:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d007fb0:	27a6004c 	addiu	a2,sp,76
9d007fb4:	144005cb 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d007fb8:	27b50080 	addiu	s5,sp,128
9d007fbc:	8fa400cc 	lw	a0,204(sp)
9d007fc0:	00942021 	addu	a0,a0,s4
9d007fc4:	afa400cc 	sw	a0,204(sp)
9d007fc8:	82020000 	lb	v0,0(s0)
9d007fcc:	104005be 	beqz	v0,9d0096c8 <_svfprintf_r+0x184c>
9d007fd0:	26100001 	addiu	s0,s0,1
9d007fd4:	afb000c0 	sw	s0,192(sp)
9d007fd8:	a3a00028 	sb	zero,40(sp)
9d007fdc:	241effff 	li	s8,-1
9d007fe0:	afa000c4 	sw	zero,196(sp)
9d007fe4:	00008021 	move	s0,zero
9d007fe8:	2403000a 	li	v1,10
9d007fec:	2408002a 	li	t0,42
9d007ff0:	2407ffff 	li	a3,-1
9d007ff4:	2406006c 	li	a2,108
9d007ff8:	2405002b 	li	a1,43
9d007ffc:	24040020 	li	a0,32
9d008000:	8fa200c0 	lw	v0,192(sp)
9d008004:	00004821 	move	t1,zero
9d008008:	80570000 	lb	s7,0(v0)
9d00800c:	24420001 	addiu	v0,v0,1
9d008010:	26ebffe0 	addiu	t3,s7,-32
9d008014:	2d6c0059 	sltiu	t4,t3,89
9d008018:	51800282 	beqzl	t4,9d008a24 <_svfprintf_r+0xba8>
9d00801c:	afa200c0 	sw	v0,192(sp)
9d008020:	3c0a9d01 	lui	t2,0x9d01
9d008024:	254a64bc 	addiu	t2,t2,25788
9d008028:	000b5880 	sll	t3,t3,0x2
9d00802c:	014b5821 	addu	t3,t2,t3
9d008030:	8d6a0000 	lw	t2,0(t3)
9d008034:	01400008 	jr	t2
9d008038:	00000000 	nop
9d00803c:	83aa0028 	lb	t2,40(sp)
9d008040:	5140fff1 	beqzl	t2,9d008008 <_svfprintf_r+0x18c>
9d008044:	a3a40028 	sb	a0,40(sp)
9d008048:	0b402003 	j	9d00800c <_svfprintf_r+0x190>
9d00804c:	80570000 	lb	s7,0(v0)
9d008050:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d008054:	36100001 	ori	s0,s0,0x1
9d008058:	8e290000 	lw	t1,0(s1)
9d00805c:	0521ffea 	bgez	t1,9d008008 <_svfprintf_r+0x18c>
9d008060:	26310004 	addiu	s1,s1,4
9d008064:	00094823 	negu	t1,t1
9d008068:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d00806c:	36100004 	ori	s0,s0,0x4
9d008070:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d008074:	a3a50028 	sb	a1,40(sp)
9d008078:	80570000 	lb	s7,0(v0)
9d00807c:	12e80003 	beq	s7,t0,9d00808c <_svfprintf_r+0x210>
9d008080:	24420001 	addiu	v0,v0,1
9d008084:	0b40202c 	j	9d0080b0 <_svfprintf_r+0x234>
9d008088:	00005021 	move	t2,zero
9d00808c:	8e3e0000 	lw	s8,0(s1)
9d008090:	262a0004 	addiu	t2,s1,4
9d008094:	07c1ffdc 	bgez	s8,9d008008 <_svfprintf_r+0x18c>
9d008098:	01408821 	move	s1,t2
9d00809c:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d0080a0:	241effff 	li	s8,-1
9d0080a4:	80570000 	lb	s7,0(v0)
9d0080a8:	24420001 	addiu	v0,v0,1
9d0080ac:	018b5021 	addu	t2,t4,t3
9d0080b0:	26ebffd0 	addiu	t3,s7,-48
9d0080b4:	2d6c000a 	sltiu	t4,t3,10
9d0080b8:	1580fffa 	bnez	t4,9d0080a4 <_svfprintf_r+0x228>
9d0080bc:	71436002 	mul	t4,t2,v1
9d0080c0:	295e0000 	slti	s8,t2,0
9d0080c4:	00fe500b 	movn	t2,a3,s8
9d0080c8:	0b402004 	j	9d008010 <_svfprintf_r+0x194>
9d0080cc:	0140f021 	move	s8,t2
9d0080d0:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d0080d4:	36100080 	ori	s0,s0,0x80
9d0080d8:	00004821 	move	t1,zero
9d0080dc:	71235002 	mul	t2,t1,v1
9d0080e0:	26f7ffd0 	addiu	s7,s7,-48
9d0080e4:	01574821 	addu	t1,t2,s7
9d0080e8:	80570000 	lb	s7,0(v0)
9d0080ec:	26eaffd0 	addiu	t2,s7,-48
9d0080f0:	2d4a000a 	sltiu	t2,t2,10
9d0080f4:	1540fff9 	bnez	t2,9d0080dc <_svfprintf_r+0x260>
9d0080f8:	24420001 	addiu	v0,v0,1
9d0080fc:	0b402005 	j	9d008014 <_svfprintf_r+0x198>
9d008100:	26ebffe0 	addiu	t3,s7,-32
9d008104:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d008108:	36100008 	ori	s0,s0,0x8
9d00810c:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d008110:	36100040 	ori	s0,s0,0x40
9d008114:	804a0000 	lb	t2,0(v0)
9d008118:	5546ffbb 	bnel	t2,a2,9d008008 <_svfprintf_r+0x18c>
9d00811c:	36100010 	ori	s0,s0,0x10
9d008120:	24420001 	addiu	v0,v0,1
9d008124:	0b402002 	j	9d008008 <_svfprintf_r+0x18c>
9d008128:	36100020 	ori	s0,s0,0x20
9d00812c:	afa200c0 	sw	v0,192(sp)
9d008130:	8e220000 	lw	v0,0(s1)
9d008134:	afa900c4 	sw	t1,196(sp)
9d008138:	a3a00028 	sb	zero,40(sp)
9d00813c:	a3a20058 	sb	v0,88(sp)
9d008140:	0b40228d 	j	9d008a34 <_svfprintf_r+0xbb8>
9d008144:	26310004 	addiu	s1,s1,4
9d008148:	afa200c0 	sw	v0,192(sp)
9d00814c:	afa900c4 	sw	t1,196(sp)
9d008150:	0b402058 	j	9d008160 <_svfprintf_r+0x2e4>
9d008154:	36100010 	ori	s0,s0,0x10
9d008158:	afa200c0 	sw	v0,192(sp)
9d00815c:	afa900c4 	sw	t1,196(sp)
9d008160:	32020020 	andi	v0,s0,0x20
9d008164:	10400008 	beqz	v0,9d008188 <_svfprintf_r+0x30c>
9d008168:	32030010 	andi	v1,s0,0x10
9d00816c:	26310007 	addiu	s1,s1,7
9d008170:	2402fff8 	li	v0,-8
9d008174:	02221024 	and	v0,s1,v0
9d008178:	24510008 	addiu	s1,v0,8
9d00817c:	8c560000 	lw	s6,0(v0)
9d008180:	0b40206c 	j	9d0081b0 <_svfprintf_r+0x334>
9d008184:	8c480004 	lw	t0,4(v0)
9d008188:	10600003 	beqz	v1,9d008198 <_svfprintf_r+0x31c>
9d00818c:	26220004 	addiu	v0,s1,4
9d008190:	0b40206a 	j	9d0081a8 <_svfprintf_r+0x32c>
9d008194:	8e360000 	lw	s6,0(s1)
9d008198:	32030040 	andi	v1,s0,0x40
9d00819c:	10600002 	beqz	v1,9d0081a8 <_svfprintf_r+0x32c>
9d0081a0:	8e360000 	lw	s6,0(s1)
9d0081a4:	7c16b620 	seh	s6,s6
9d0081a8:	001647c3 	sra	t0,s6,0x1f
9d0081ac:	00408821 	move	s1,v0
9d0081b0:	050301c4 	bgezl	t0,9d0088c4 <_svfprintf_r+0xa48>
9d0081b4:	24020001 	li	v0,1
9d0081b8:	0016b023 	negu	s6,s6
9d0081bc:	0016102b 	sltu	v0,zero,s6
9d0081c0:	00084023 	negu	t0,t0
9d0081c4:	01024023 	subu	t0,t0,v0
9d0081c8:	2402002d 	li	v0,45
9d0081cc:	a3a20028 	sb	v0,40(sp)
9d0081d0:	0b402231 	j	9d0088c4 <_svfprintf_r+0xa48>
9d0081d4:	24020001 	li	v0,1
9d0081d8:	afa200c0 	sw	v0,192(sp)
9d0081dc:	32020008 	andi	v0,s0,0x8
9d0081e0:	afa900c4 	sw	t1,196(sp)
9d0081e4:	afb700d8 	sw	s7,216(sp)
9d0081e8:	10400007 	beqz	v0,9d008208 <_svfprintf_r+0x38c>
9d0081ec:	26310007 	addiu	s1,s1,7
9d0081f0:	2402fff8 	li	v0,-8
9d0081f4:	02221024 	and	v0,s1,v0
9d0081f8:	8c4c0000 	lw	t4,0(v0)
9d0081fc:	24510008 	addiu	s1,v0,8
9d008200:	0b402087 	j	9d00821c <_svfprintf_r+0x3a0>
9d008204:	afac00d0 	sw	t4,208(sp)
9d008208:	2402fff8 	li	v0,-8
9d00820c:	02221024 	and	v0,s1,v0
9d008210:	8c430000 	lw	v1,0(v0)
9d008214:	24510008 	addiu	s1,v0,8
9d008218:	afa300d0 	sw	v1,208(sp)
9d00821c:	8c420004 	lw	v0,4(v0)
9d008220:	8fa300d0 	lw	v1,208(sp)
9d008224:	afa200d4 	sw	v0,212(sp)
9d008228:	8fa200d4 	lw	v0,212(sp)
9d00822c:	00602021 	move	a0,v1
9d008230:	0f40136b 	jal	9d004dac <__fpclassifyd>
9d008234:	00402821 	move	a1,v0
9d008238:	24030001 	li	v1,1
9d00823c:	14430013 	bne	v0,v1,9d00828c <_svfprintf_r+0x410>
9d008240:	8fa300d0 	lw	v1,208(sp)
9d008244:	8fa200d4 	lw	v0,212(sp)
9d008248:	00003021 	move	a2,zero
9d00824c:	00602021 	move	a0,v1
9d008250:	00402821 	move	a1,v0
9d008254:	0f4017e0 	jal	9d005f80 <__ledf2>
9d008258:	00003821 	move	a3,zero
9d00825c:	04410004 	bgez	v0,9d008270 <_svfprintf_r+0x3f4>
9d008260:	2ae20048 	slti	v0,s7,72
9d008264:	2402002d 	li	v0,45
9d008268:	a3a20028 	sb	v0,40(sp)
9d00826c:	2ae20048 	slti	v0,s7,72
9d008270:	50400004 	beqzl	v0,9d008284 <_svfprintf_r+0x408>
9d008274:	3c149d01 	lui	s4,0x9d01
9d008278:	3c149d01 	lui	s4,0x9d01
9d00827c:	0b4020b0 	j	9d0082c0 <_svfprintf_r+0x444>
9d008280:	26946480 	addiu	s4,s4,25728
9d008284:	0b4020b0 	j	9d0082c0 <_svfprintf_r+0x444>
9d008288:	26946484 	addiu	s4,s4,25732
9d00828c:	8fa200d4 	lw	v0,212(sp)
9d008290:	00602021 	move	a0,v1
9d008294:	0f40136b 	jal	9d004dac <__fpclassifyd>
9d008298:	00402821 	move	a1,v0
9d00829c:	1440000c 	bnez	v0,9d0082d0 <_svfprintf_r+0x454>
9d0082a0:	2402ffff 	li	v0,-1
9d0082a4:	2ae20048 	slti	v0,s7,72
9d0082a8:	50400004 	beqzl	v0,9d0082bc <_svfprintf_r+0x440>
9d0082ac:	3c149d01 	lui	s4,0x9d01
9d0082b0:	3c149d01 	lui	s4,0x9d01
9d0082b4:	0b4020b0 	j	9d0082c0 <_svfprintf_r+0x444>
9d0082b8:	26946488 	addiu	s4,s4,25736
9d0082bc:	2694648c 	addiu	s4,s4,25740
9d0082c0:	2402ff7f 	li	v0,-129
9d0082c4:	02028024 	and	s0,s0,v0
9d0082c8:	0b402293 	j	9d008a4c <_svfprintf_r+0xbd0>
9d0082cc:	24030003 	li	v1,3
9d0082d0:	13c20008 	beq	s8,v0,9d0082f4 <_svfprintf_r+0x478>
9d0082d4:	24020067 	li	v0,103
9d0082d8:	12e20003 	beq	s7,v0,9d0082e8 <_svfprintf_r+0x46c>
9d0082dc:	24020047 	li	v0,71
9d0082e0:	16e20006 	bne	s7,v0,9d0082fc <_svfprintf_r+0x480>
9d0082e4:	8fa400d4 	lw	a0,212(sp)
9d0082e8:	24020001 	li	v0,1
9d0082ec:	0b4020be 	j	9d0082f8 <_svfprintf_r+0x47c>
9d0082f0:	005ef00a 	movz	s8,v0,s8
9d0082f4:	241e0006 	li	s8,6
9d0082f8:	8fa400d4 	lw	a0,212(sp)
9d0082fc:	04810006 	bgez	a0,9d008318 <_svfprintf_r+0x49c>
9d008300:	36100100 	ori	s0,s0,0x100
9d008304:	3c038000 	lui	v1,0x8000
9d008308:	2405002d 	li	a1,45
9d00830c:	00641826 	xor	v1,v1,a0
9d008310:	0b4020c8 	j	9d008320 <_svfprintf_r+0x4a4>
9d008314:	afa500e4 	sw	a1,228(sp)
9d008318:	8fa300d4 	lw	v1,212(sp)
9d00831c:	afa000e4 	sw	zero,228(sp)
9d008320:	24020066 	li	v0,102
9d008324:	12e2000b 	beq	s7,v0,9d008354 <_svfprintf_r+0x4d8>
9d008328:	03c0b021 	move	s6,s8
9d00832c:	24020046 	li	v0,70
9d008330:	12e2000b 	beq	s7,v0,9d008360 <_svfprintf_r+0x4e4>
9d008334:	24020003 	li	v0,3
9d008338:	24020065 	li	v0,101
9d00833c:	12e20003 	beq	s7,v0,9d00834c <_svfprintf_r+0x4d0>
9d008340:	24020045 	li	v0,69
9d008344:	16e20006 	bne	s7,v0,9d008360 <_svfprintf_r+0x4e4>
9d008348:	24020002 	li	v0,2
9d00834c:	0b4020d7 	j	9d00835c <_svfprintf_r+0x4e0>
9d008350:	27d60001 	addiu	s6,s8,1
9d008354:	0b4020d8 	j	9d008360 <_svfprintf_r+0x4e4>
9d008358:	24020003 	li	v0,3
9d00835c:	24020002 	li	v0,2
9d008360:	8fa500d0 	lw	a1,208(sp)
9d008364:	afa20010 	sw	v0,16(sp)
9d008368:	27a20030 	addiu	v0,sp,48
9d00836c:	afa20018 	sw	v0,24(sp)
9d008370:	27a20034 	addiu	v0,sp,52
9d008374:	afa2001c 	sw	v0,28(sp)
9d008378:	00603821 	move	a3,v1
9d00837c:	27a20038 	addiu	v0,sp,56
9d008380:	02602021 	move	a0,s3
9d008384:	00a03021 	move	a2,a1
9d008388:	afa300fc 	sw	v1,252(sp)
9d00838c:	afb60014 	sw	s6,20(sp)
9d008390:	0f40264d 	jal	9d009934 <_dtoa_r>
9d008394:	afa20020 	sw	v0,32(sp)
9d008398:	0040a021 	move	s4,v0
9d00839c:	24020067 	li	v0,103
9d0083a0:	12e20004 	beq	s7,v0,9d0083b4 <_svfprintf_r+0x538>
9d0083a4:	8fa300fc 	lw	v1,252(sp)
9d0083a8:	24020047 	li	v0,71
9d0083ac:	16e20005 	bne	s7,v0,9d0083c4 <_svfprintf_r+0x548>
9d0083b0:	24020066 	li	v0,102
9d0083b4:	32020001 	andi	v0,s0,0x1
9d0083b8:	1040002f 	beqz	v0,9d008478 <_svfprintf_r+0x5fc>
9d0083bc:	8fa20038 	lw	v0,56(sp)
9d0083c0:	24020066 	li	v0,102
9d0083c4:	12e20004 	beq	s7,v0,9d0083d8 <_svfprintf_r+0x55c>
9d0083c8:	02964021 	addu	t0,s4,s6
9d0083cc:	24020046 	li	v0,70
9d0083d0:	16e20016 	bne	s7,v0,9d00842c <_svfprintf_r+0x5b0>
9d0083d4:	8fa600d0 	lw	a2,208(sp)
9d0083d8:	82840000 	lb	a0,0(s4)
9d0083dc:	24020030 	li	v0,48
9d0083e0:	14820010 	bne	a0,v0,9d008424 <_svfprintf_r+0x5a8>
9d0083e4:	8fa20030 	lw	v0,48(sp)
9d0083e8:	8fa600d0 	lw	a2,208(sp)
9d0083ec:	00602821 	move	a1,v1
9d0083f0:	00003821 	move	a3,zero
9d0083f4:	00c02021 	move	a0,a2
9d0083f8:	00003021 	move	a2,zero
9d0083fc:	afa300fc 	sw	v1,252(sp)
9d008400:	0f401775 	jal	9d005dd4 <__eqdf2>
9d008404:	afa800f4 	sw	t0,244(sp)
9d008408:	8fa300fc 	lw	v1,252(sp)
9d00840c:	10400004 	beqz	v0,9d008420 <_svfprintf_r+0x5a4>
9d008410:	8fa800f4 	lw	t0,244(sp)
9d008414:	24020001 	li	v0,1
9d008418:	0056b023 	subu	s6,v0,s6
9d00841c:	afb60030 	sw	s6,48(sp)
9d008420:	8fa20030 	lw	v0,48(sp)
9d008424:	01024021 	addu	t0,t0,v0
9d008428:	8fa600d0 	lw	a2,208(sp)
9d00842c:	00602821 	move	a1,v1
9d008430:	00003821 	move	a3,zero
9d008434:	00c02021 	move	a0,a2
9d008438:	00003021 	move	a2,zero
9d00843c:	0f401775 	jal	9d005dd4 <__eqdf2>
9d008440:	afa800f4 	sw	t0,244(sp)
9d008444:	14400006 	bnez	v0,9d008460 <_svfprintf_r+0x5e4>
9d008448:	8fa800f4 	lw	t0,244(sp)
9d00844c:	0b402118 	j	9d008460 <_svfprintf_r+0x5e4>
9d008450:	afa80038 	sw	t0,56(sp)
9d008454:	24420001 	addiu	v0,v0,1
9d008458:	0b402119 	j	9d008464 <_svfprintf_r+0x5e8>
9d00845c:	afa20038 	sw	v0,56(sp)
9d008460:	24030030 	li	v1,48
9d008464:	8fa20038 	lw	v0,56(sp)
9d008468:	0048202b 	sltu	a0,v0,t0
9d00846c:	5480fff9 	bnezl	a0,9d008454 <_svfprintf_r+0x5d8>
9d008470:	a0430000 	sb	v1,0(v0)
9d008474:	8fa20038 	lw	v0,56(sp)
9d008478:	24030067 	li	v1,103
9d00847c:	00541023 	subu	v0,v0,s4
9d008480:	afa200c8 	sw	v0,200(sp)
9d008484:	12e30004 	beq	s7,v1,9d008498 <_svfprintf_r+0x61c>
9d008488:	8fa20030 	lw	v0,48(sp)
9d00848c:	24030047 	li	v1,71
9d008490:	16e30009 	bne	s7,v1,9d0084b8 <_svfprintf_r+0x63c>
9d008494:	24030066 	li	v1,102
9d008498:	2844fffd 	slti	a0,v0,-3
9d00849c:	14800004 	bnez	a0,9d0084b0 <_svfprintf_r+0x634>
9d0084a0:	00401821 	move	v1,v0
9d0084a4:	03c2f02a 	slt	s8,s8,v0
9d0084a8:	13c0004d 	beqz	s8,9d0085e0 <_svfprintf_r+0x764>
9d0084ac:	8fa500c8 	lw	a1,200(sp)
9d0084b0:	0b402130 	j	9d0084c0 <_svfprintf_r+0x644>
9d0084b4:	26f7fffe 	addiu	s7,s7,-2
9d0084b8:	12e30038 	beq	s7,v1,9d00859c <_svfprintf_r+0x720>
9d0084bc:	00000000 	nop
9d0084c0:	2443ffff 	addiu	v1,v0,-1
9d0084c4:	afa30030 	sw	v1,48(sp)
9d0084c8:	a3b7003c 	sb	s7,60(sp)
9d0084cc:	04610003 	bgez	v1,9d0084dc <_svfprintf_r+0x660>
9d0084d0:	2402002b 	li	v0,43
9d0084d4:	00031823 	negu	v1,v1
9d0084d8:	2402002d 	li	v0,45
9d0084dc:	a3a2003d 	sb	v0,61(sp)
9d0084e0:	2862000a 	slti	v0,v1,10
9d0084e4:	1440001b 	bnez	v0,9d008554 <_svfprintf_r+0x6d8>
9d0084e8:	24020030 	li	v0,48
9d0084ec:	27a2004b 	addiu	v0,sp,75
9d0084f0:	2404000a 	li	a0,10
9d0084f4:	0064001a 	div	zero,v1,a0
9d0084f8:	008001f4 	teq	a0,zero,0x7
9d0084fc:	2442ffff 	addiu	v0,v0,-1
9d008500:	00002810 	mfhi	a1
9d008504:	24a50030 	addiu	a1,a1,48
9d008508:	a0450000 	sb	a1,0(v0)
9d00850c:	00001812 	mflo	v1
9d008510:	2865000a 	slti	a1,v1,10
9d008514:	10a0fff7 	beqz	a1,9d0084f4 <_svfprintf_r+0x678>
9d008518:	00000000 	nop
9d00851c:	24630030 	addiu	v1,v1,48
9d008520:	a043ffff 	sb	v1,-1(v0)
9d008524:	2444ffff 	addiu	a0,v0,-1
9d008528:	27a3004b 	addiu	v1,sp,75
9d00852c:	0b402150 	j	9d008540 <_svfprintf_r+0x6c4>
9d008530:	27a2003e 	addiu	v0,sp,62
9d008534:	24840001 	addiu	a0,a0,1
9d008538:	a0450000 	sb	a1,0(v0)
9d00853c:	24420001 	addiu	v0,v0,1
9d008540:	0083282b 	sltu	a1,a0,v1
9d008544:	54a0fffb 	bnezl	a1,9d008534 <_svfprintf_r+0x6b8>
9d008548:	90850000 	lbu	a1,0(a0)
9d00854c:	0b40215a 	j	9d008568 <_svfprintf_r+0x6ec>
9d008550:	27a3003c 	addiu	v1,sp,60
9d008554:	24630030 	addiu	v1,v1,48
9d008558:	a3a2003e 	sb	v0,62(sp)
9d00855c:	a3a3003f 	sb	v1,63(sp)
9d008560:	27a20040 	addiu	v0,sp,64
9d008564:	27a3003c 	addiu	v1,sp,60
9d008568:	00431823 	subu	v1,v0,v1
9d00856c:	8fa200c8 	lw	v0,200(sp)
9d008570:	afa300e8 	sw	v1,232(sp)
9d008574:	00621821 	addu	v1,v1,v0
9d008578:	28420002 	slti	v0,v0,2
9d00857c:	50400005 	beqzl	v0,9d008594 <_svfprintf_r+0x718>
9d008580:	24630001 	addiu	v1,v1,1
9d008584:	32020001 	andi	v0,s0,0x1
9d008588:	10400027 	beqz	v0,9d008628 <_svfprintf_r+0x7ac>
9d00858c:	0000b021 	move	s6,zero
9d008590:	24630001 	addiu	v1,v1,1
9d008594:	0b40218a 	j	9d008628 <_svfprintf_r+0x7ac>
9d008598:	0000b021 	move	s6,zero
9d00859c:	18400009 	blez	v0,9d0085c4 <_svfprintf_r+0x748>
9d0085a0:	00401821 	move	v1,v0
9d0085a4:	57c00005 	bnezl	s8,9d0085bc <_svfprintf_r+0x740>
9d0085a8:	24430001 	addiu	v1,v0,1
9d0085ac:	32040001 	andi	a0,s0,0x1
9d0085b0:	1080001c 	beqz	a0,9d008624 <_svfprintf_r+0x7a8>
9d0085b4:	8fb60030 	lw	s6,48(sp)
9d0085b8:	24430001 	addiu	v1,v0,1
9d0085bc:	0b402188 	j	9d008620 <_svfprintf_r+0x7a4>
9d0085c0:	007e1821 	addu	v1,v1,s8
9d0085c4:	17c00016 	bnez	s8,9d008620 <_svfprintf_r+0x7a4>
9d0085c8:	27c30002 	addiu	v1,s8,2
9d0085cc:	32020001 	andi	v0,s0,0x1
9d0085d0:	10400013 	beqz	v0,9d008620 <_svfprintf_r+0x7a4>
9d0085d4:	24030001 	li	v1,1
9d0085d8:	0b402188 	j	9d008620 <_svfprintf_r+0x7a4>
9d0085dc:	27c30002 	addiu	v1,s8,2
9d0085e0:	0045202a 	slt	a0,v0,a1
9d0085e4:	14800006 	bnez	a0,9d008600 <_svfprintf_r+0x784>
9d0085e8:	240a0067 	li	t2,103
9d0085ec:	32020001 	andi	v0,s0,0x1
9d0085f0:	0002102b 	sltu	v0,zero,v0
9d0085f4:	afaa00d8 	sw	t2,216(sp)
9d0085f8:	0b402188 	j	9d008620 <_svfprintf_r+0x7a4>
9d0085fc:	00621821 	addu	v1,v1,v0
9d008600:	1c400003 	bgtz	v0,9d008610 <_svfprintf_r+0x794>
9d008604:	24030001 	li	v1,1
9d008608:	24030002 	li	v1,2
9d00860c:	00621823 	subu	v1,v1,v0
9d008610:	8fac00c8 	lw	t4,200(sp)
9d008614:	24020067 	li	v0,103
9d008618:	afa200d8 	sw	v0,216(sp)
9d00861c:	006c1821 	addu	v1,v1,t4
9d008620:	8fb60030 	lw	s6,48(sp)
9d008624:	8fb700d8 	lw	s7,216(sp)
9d008628:	8fa400e4 	lw	a0,228(sp)
9d00862c:	10800109 	beqz	a0,9d008a54 <_svfprintf_r+0xbd8>
9d008630:	00003821 	move	a3,zero
9d008634:	2402002d 	li	v0,45
9d008638:	0b402295 	j	9d008a54 <_svfprintf_r+0xbd8>
9d00863c:	a3a20028 	sb	v0,40(sp)
9d008640:	32030020 	andi	v1,s0,0x20
9d008644:	afa200c0 	sw	v0,192(sp)
9d008648:	10600007 	beqz	v1,9d008668 <_svfprintf_r+0x7ec>
9d00864c:	26220004 	addiu	v0,s1,4
9d008650:	8fa500cc 	lw	a1,204(sp)
9d008654:	8e230000 	lw	v1,0(s1)
9d008658:	000527c3 	sra	a0,a1,0x1f
9d00865c:	ac650000 	sw	a1,0(v1)
9d008660:	0b4021a8 	j	9d0086a0 <_svfprintf_r+0x824>
9d008664:	ac640004 	sw	a0,4(v1)
9d008668:	32030010 	andi	v1,s0,0x10
9d00866c:	50600005 	beqzl	v1,9d008684 <_svfprintf_r+0x808>
9d008670:	32100040 	andi	s0,s0,0x40
9d008674:	8e230000 	lw	v1,0(s1)
9d008678:	8faa00cc 	lw	t2,204(sp)
9d00867c:	0b4021a8 	j	9d0086a0 <_svfprintf_r+0x824>
9d008680:	ac6a0000 	sw	t2,0(v1)
9d008684:	12000004 	beqz	s0,9d008698 <_svfprintf_r+0x81c>
9d008688:	8e230000 	lw	v1,0(s1)
9d00868c:	8fac00cc 	lw	t4,204(sp)
9d008690:	0b4021a8 	j	9d0086a0 <_svfprintf_r+0x824>
9d008694:	a46c0000 	sh	t4,0(v1)
9d008698:	8fa400cc 	lw	a0,204(sp)
9d00869c:	ac640000 	sw	a0,0(v1)
9d0086a0:	0b401fd3 	j	9d007f4c <_svfprintf_r+0xd0>
9d0086a4:	00408821 	move	s1,v0
9d0086a8:	afa200c0 	sw	v0,192(sp)
9d0086ac:	afa900c4 	sw	t1,196(sp)
9d0086b0:	0b4021b0 	j	9d0086c0 <_svfprintf_r+0x844>
9d0086b4:	36100010 	ori	s0,s0,0x10
9d0086b8:	afa200c0 	sw	v0,192(sp)
9d0086bc:	afa900c4 	sw	t1,196(sp)
9d0086c0:	32020020 	andi	v0,s0,0x20
9d0086c4:	10400008 	beqz	v0,9d0086e8 <_svfprintf_r+0x86c>
9d0086c8:	32030010 	andi	v1,s0,0x10
9d0086cc:	26310007 	addiu	s1,s1,7
9d0086d0:	2402fff8 	li	v0,-8
9d0086d4:	02221024 	and	v0,s1,v0
9d0086d8:	24510008 	addiu	s1,v0,8
9d0086dc:	8c560000 	lw	s6,0(v0)
9d0086e0:	0b4021c4 	j	9d008710 <_svfprintf_r+0x894>
9d0086e4:	8c480004 	lw	t0,4(v0)
9d0086e8:	10600003 	beqz	v1,9d0086f8 <_svfprintf_r+0x87c>
9d0086ec:	26220004 	addiu	v0,s1,4
9d0086f0:	0b4021c2 	j	9d008708 <_svfprintf_r+0x88c>
9d0086f4:	8e360000 	lw	s6,0(s1)
9d0086f8:	32030040 	andi	v1,s0,0x40
9d0086fc:	10600002 	beqz	v1,9d008708 <_svfprintf_r+0x88c>
9d008700:	8e360000 	lw	s6,0(s1)
9d008704:	32d6ffff 	andi	s6,s6,0xffff
9d008708:	00004021 	move	t0,zero
9d00870c:	00408821 	move	s1,v0
9d008710:	0b402230 	j	9d0088c0 <_svfprintf_r+0xa44>
9d008714:	00001021 	move	v0,zero
9d008718:	afa200c0 	sw	v0,192(sp)
9d00871c:	24020030 	li	v0,48
9d008720:	8e360000 	lw	s6,0(s1)
9d008724:	a3a2002c 	sb	v0,44(sp)
9d008728:	24020078 	li	v0,120
9d00872c:	a3a2002d 	sb	v0,45(sp)
9d008730:	3c029d01 	lui	v0,0x9d01
9d008734:	244264a4 	addiu	v0,v0,25764
9d008738:	afa200ec 	sw	v0,236(sp)
9d00873c:	afa900c4 	sw	t1,196(sp)
9d008740:	00004021 	move	t0,zero
9d008744:	36100002 	ori	s0,s0,0x2
9d008748:	26310004 	addiu	s1,s1,4
9d00874c:	24020002 	li	v0,2
9d008750:	0b402230 	j	9d0088c0 <_svfprintf_r+0xa44>
9d008754:	24170078 	li	s7,120
9d008758:	afa200c0 	sw	v0,192(sp)
9d00875c:	a3a00028 	sb	zero,40(sp)
9d008760:	02201021 	move	v0,s1
9d008764:	afa900c4 	sw	t1,196(sp)
9d008768:	26310004 	addiu	s1,s1,4
9d00876c:	07c0000c 	bltz	s8,9d0087a0 <_svfprintf_r+0x924>
9d008770:	8c540000 	lw	s4,0(v0)
9d008774:	02802021 	move	a0,s4
9d008778:	00002821 	move	a1,zero
9d00877c:	0f402c0c 	jal	9d00b030 <memchr>
9d008780:	03c03021 	move	a2,s8
9d008784:	104000b0 	beqz	v0,9d008a48 <_svfprintf_r+0xbcc>
9d008788:	00541823 	subu	v1,v0,s4
9d00878c:	03c3102a 	slt	v0,s8,v1
9d008790:	00003821 	move	a3,zero
9d008794:	0000b021 	move	s6,zero
9d008798:	0b402295 	j	9d008a54 <_svfprintf_r+0xbd8>
9d00879c:	03c2180b 	movn	v1,s8,v0
9d0087a0:	0f401f87 	jal	9d007e1c <strlen>
9d0087a4:	02802021 	move	a0,s4
9d0087a8:	0b402293 	j	9d008a4c <_svfprintf_r+0xbd0>
9d0087ac:	00401821 	move	v1,v0
9d0087b0:	afa200c0 	sw	v0,192(sp)
9d0087b4:	afa900c4 	sw	t1,196(sp)
9d0087b8:	0b4021f2 	j	9d0087c8 <_svfprintf_r+0x94c>
9d0087bc:	36100010 	ori	s0,s0,0x10
9d0087c0:	afa200c0 	sw	v0,192(sp)
9d0087c4:	afa900c4 	sw	t1,196(sp)
9d0087c8:	32020020 	andi	v0,s0,0x20
9d0087cc:	10400008 	beqz	v0,9d0087f0 <_svfprintf_r+0x974>
9d0087d0:	32030010 	andi	v1,s0,0x10
9d0087d4:	26310007 	addiu	s1,s1,7
9d0087d8:	2402fff8 	li	v0,-8
9d0087dc:	02221024 	and	v0,s1,v0
9d0087e0:	24510008 	addiu	s1,v0,8
9d0087e4:	8c560000 	lw	s6,0(v0)
9d0087e8:	0b402206 	j	9d008818 <_svfprintf_r+0x99c>
9d0087ec:	8c480004 	lw	t0,4(v0)
9d0087f0:	10600003 	beqz	v1,9d008800 <_svfprintf_r+0x984>
9d0087f4:	26220004 	addiu	v0,s1,4
9d0087f8:	0b402204 	j	9d008810 <_svfprintf_r+0x994>
9d0087fc:	8e360000 	lw	s6,0(s1)
9d008800:	32030040 	andi	v1,s0,0x40
9d008804:	10600002 	beqz	v1,9d008810 <_svfprintf_r+0x994>
9d008808:	8e360000 	lw	s6,0(s1)
9d00880c:	32d6ffff 	andi	s6,s6,0xffff
9d008810:	00004021 	move	t0,zero
9d008814:	00408821 	move	s1,v0
9d008818:	0b402230 	j	9d0088c0 <_svfprintf_r+0xa44>
9d00881c:	24020001 	li	v0,1
9d008820:	afa200c0 	sw	v0,192(sp)
9d008824:	3c029d01 	lui	v0,0x9d01
9d008828:	afa900c4 	sw	t1,196(sp)
9d00882c:	0b402211 	j	9d008844 <_svfprintf_r+0x9c8>
9d008830:	244264a4 	addiu	v0,v0,25764
9d008834:	afa200c0 	sw	v0,192(sp)
9d008838:	3c029d01 	lui	v0,0x9d01
9d00883c:	afa900c4 	sw	t1,196(sp)
9d008840:	24426490 	addiu	v0,v0,25744
9d008844:	afa200ec 	sw	v0,236(sp)
9d008848:	32020020 	andi	v0,s0,0x20
9d00884c:	10400008 	beqz	v0,9d008870 <_svfprintf_r+0x9f4>
9d008850:	32030010 	andi	v1,s0,0x10
9d008854:	26310007 	addiu	s1,s1,7
9d008858:	2402fff8 	li	v0,-8
9d00885c:	02221024 	and	v0,s1,v0
9d008860:	24510008 	addiu	s1,v0,8
9d008864:	8c560000 	lw	s6,0(v0)
9d008868:	0b402226 	j	9d008898 <_svfprintf_r+0xa1c>
9d00886c:	8c480004 	lw	t0,4(v0)
9d008870:	10600003 	beqz	v1,9d008880 <_svfprintf_r+0xa04>
9d008874:	26220004 	addiu	v0,s1,4
9d008878:	0b402224 	j	9d008890 <_svfprintf_r+0xa14>
9d00887c:	8e360000 	lw	s6,0(s1)
9d008880:	32030040 	andi	v1,s0,0x40
9d008884:	10600002 	beqz	v1,9d008890 <_svfprintf_r+0xa14>
9d008888:	8e360000 	lw	s6,0(s1)
9d00888c:	32d6ffff 	andi	s6,s6,0xffff
9d008890:	00004021 	move	t0,zero
9d008894:	00408821 	move	s1,v0
9d008898:	32030001 	andi	v1,s0,0x1
9d00889c:	10600008 	beqz	v1,9d0088c0 <_svfprintf_r+0xa44>
9d0088a0:	24020002 	li	v0,2
9d0088a4:	02c81825 	or	v1,s6,t0
9d0088a8:	50600006 	beqzl	v1,9d0088c4 <_svfprintf_r+0xa48>
9d0088ac:	a3a00028 	sb	zero,40(sp)
9d0088b0:	24030030 	li	v1,48
9d0088b4:	a3a3002c 	sb	v1,44(sp)
9d0088b8:	a3b7002d 	sb	s7,45(sp)
9d0088bc:	36100002 	ori	s0,s0,0x2
9d0088c0:	a3a00028 	sb	zero,40(sp)
9d0088c4:	07c00002 	bltz	s8,9d0088d0 <_svfprintf_r+0xa54>
9d0088c8:	2403ff7f 	li	v1,-129
9d0088cc:	02038024 	and	s0,s0,v1
9d0088d0:	02c81825 	or	v1,s6,t0
9d0088d4:	14600003 	bnez	v1,9d0088e4 <_svfprintf_r+0xa68>
9d0088d8:	24030001 	li	v1,1
9d0088dc:	13c00044 	beqz	s8,9d0089f0 <_svfprintf_r+0xb74>
9d0088e0:	00000000 	nop
9d0088e4:	10430016 	beq	v0,v1,9d008940 <_svfprintf_r+0xac4>
9d0088e8:	24030002 	li	v1,2
9d0088ec:	10430031 	beq	v0,v1,9d0089b4 <_svfprintf_r+0xb38>
9d0088f0:	27b40080 	addiu	s4,sp,128
9d0088f4:	00081740 	sll	v0,t0,0x1d
9d0088f8:	32c30007 	andi	v1,s6,0x7
9d0088fc:	0016b0c2 	srl	s6,s6,0x3
9d008900:	0056b025 	or	s6,v0,s6
9d008904:	000840c2 	srl	t0,t0,0x3
9d008908:	2694ffff 	addiu	s4,s4,-1
9d00890c:	24630030 	addiu	v1,v1,48
9d008910:	02c81025 	or	v0,s6,t0
9d008914:	1440fff7 	bnez	v0,9d0088f4 <_svfprintf_r+0xa78>
9d008918:	a2830000 	sb	v1,0(s4)
9d00891c:	32020001 	andi	v0,s0,0x1
9d008920:	5040003c 	beqzl	v0,9d008a14 <_svfprintf_r+0xb98>
9d008924:	27a30080 	addiu	v1,sp,128
9d008928:	24020030 	li	v0,48
9d00892c:	50620039 	beql	v1,v0,9d008a14 <_svfprintf_r+0xb98>
9d008930:	27a30080 	addiu	v1,sp,128
9d008934:	2694ffff 	addiu	s4,s4,-1
9d008938:	0b402284 	j	9d008a10 <_svfprintf_r+0xb94>
9d00893c:	a2820000 	sb	v0,0(s4)
9d008940:	15000007 	bnez	t0,9d008960 <_svfprintf_r+0xae4>
9d008944:	27b40080 	addiu	s4,sp,128
9d008948:	2ec2000a 	sltiu	v0,s6,10
9d00894c:	10400005 	beqz	v0,9d008964 <_svfprintf_r+0xae8>
9d008950:	02c02021 	move	a0,s6
9d008954:	26d60030 	addiu	s6,s6,48
9d008958:	0b402283 	j	9d008a0c <_svfprintf_r+0xb90>
9d00895c:	a3b6007f 	sb	s6,127(sp)
9d008960:	02c02021 	move	a0,s6
9d008964:	01002821 	move	a1,t0
9d008968:	2406000a 	li	a2,10
9d00896c:	00003821 	move	a3,zero
9d008970:	0f404f53 	jal	9d013d4c <__umoddi3>
9d008974:	afa800f4 	sw	t0,244(sp)
9d008978:	24420030 	addiu	v0,v0,48
9d00897c:	2694ffff 	addiu	s4,s4,-1
9d008980:	a2820000 	sb	v0,0(s4)
9d008984:	8fa800f4 	lw	t0,244(sp)
9d008988:	02c02021 	move	a0,s6
9d00898c:	2406000a 	li	a2,10
9d008990:	01002821 	move	a1,t0
9d008994:	0f404e41 	jal	9d013904 <__udivdi3>
9d008998:	00003821 	move	a3,zero
9d00899c:	0040b021 	move	s6,v0
9d0089a0:	00431025 	or	v0,v0,v1
9d0089a4:	1440ffee 	bnez	v0,9d008960 <_svfprintf_r+0xae4>
9d0089a8:	00604021 	move	t0,v1
9d0089ac:	0b402285 	j	9d008a14 <_svfprintf_r+0xb98>
9d0089b0:	27a30080 	addiu	v1,sp,128
9d0089b4:	8fa500ec 	lw	a1,236(sp)
9d0089b8:	32c2000f 	andi	v0,s6,0xf
9d0089bc:	2694ffff 	addiu	s4,s4,-1
9d0089c0:	00a21021 	addu	v0,a1,v0
9d0089c4:	90420000 	lbu	v0,0(v0)
9d0089c8:	0016b102 	srl	s6,s6,0x4
9d0089cc:	a2820000 	sb	v0,0(s4)
9d0089d0:	00081700 	sll	v0,t0,0x1c
9d0089d4:	0056b025 	or	s6,v0,s6
9d0089d8:	00084102 	srl	t0,t0,0x4
9d0089dc:	02c81025 	or	v0,s6,t0
9d0089e0:	1440fff5 	bnez	v0,9d0089b8 <_svfprintf_r+0xb3c>
9d0089e4:	8fa500ec 	lw	a1,236(sp)
9d0089e8:	0b402285 	j	9d008a14 <_svfprintf_r+0xb98>
9d0089ec:	27a30080 	addiu	v1,sp,128
9d0089f0:	14400007 	bnez	v0,9d008a10 <_svfprintf_r+0xb94>
9d0089f4:	27b40080 	addiu	s4,sp,128
9d0089f8:	32020001 	andi	v0,s0,0x1
9d0089fc:	50400005 	beqzl	v0,9d008a14 <_svfprintf_r+0xb98>
9d008a00:	27a30080 	addiu	v1,sp,128
9d008a04:	24020030 	li	v0,48
9d008a08:	a3a2007f 	sb	v0,127(sp)
9d008a0c:	27b4007f 	addiu	s4,sp,127
9d008a10:	27a30080 	addiu	v1,sp,128
9d008a14:	00741823 	subu	v1,v1,s4
9d008a18:	0b402294 	j	9d008a50 <_svfprintf_r+0xbd4>
9d008a1c:	03c03821 	move	a3,s8
9d008a20:	afa200c0 	sw	v0,192(sp)
9d008a24:	12e00328 	beqz	s7,9d0096c8 <_svfprintf_r+0x184c>
9d008a28:	afa900c4 	sw	t1,196(sp)
9d008a2c:	a3b70058 	sb	s7,88(sp)
9d008a30:	a3a00028 	sb	zero,40(sp)
9d008a34:	24030001 	li	v1,1
9d008a38:	00003821 	move	a3,zero
9d008a3c:	0000b021 	move	s6,zero
9d008a40:	0b402295 	j	9d008a54 <_svfprintf_r+0xbd8>
9d008a44:	27b40058 	addiu	s4,sp,88
9d008a48:	03c01821 	move	v1,s8
9d008a4c:	00003821 	move	a3,zero
9d008a50:	0000b021 	move	s6,zero
9d008a54:	83a20028 	lb	v0,40(sp)
9d008a58:	0067f02a 	slt	s8,v1,a3
9d008a5c:	00e05021 	move	t2,a3
9d008a60:	0002102b 	sltu	v0,zero,v0
9d008a64:	007e500a 	movz	t2,v1,s8
9d008a68:	0142f021 	addu	s8,t2,v0
9d008a6c:	320c0002 	andi	t4,s0,0x2
9d008a70:	32020084 	andi	v0,s0,0x84
9d008a74:	afac00d8 	sw	t4,216(sp)
9d008a78:	03ccf021 	addu	s8,s8,t4
9d008a7c:	1440003b 	bnez	v0,9d008b6c <_svfprintf_r+0xcf0>
9d008a80:	afa200e4 	sw	v0,228(sp)
9d008a84:	8fa400c4 	lw	a0,196(sp)
9d008a88:	009e4023 	subu	t0,a0,s8
9d008a8c:	1d00001e 	bgtz	t0,9d008b08 <_svfprintf_r+0xc8c>
9d008a90:	24090010 	li	t1,16
9d008a94:	0b4022dc 	j	9d008b70 <_svfprintf_r+0xcf4>
9d008a98:	83a20028 	lb	v0,40(sp)
9d008a9c:	3c059d01 	lui	a1,0x9d01
9d008aa0:	24420010 	addiu	v0,v0,16
9d008aa4:	24a56630 	addiu	a1,a1,26160
9d008aa8:	aea50000 	sw	a1,0(s5)
9d008aac:	aea90004 	sw	t1,4(s5)
9d008ab0:	afa20054 	sw	v0,84(sp)
9d008ab4:	8fa20050 	lw	v0,80(sp)
9d008ab8:	24420001 	addiu	v0,v0,1
9d008abc:	afa20050 	sw	v0,80(sp)
9d008ac0:	28420008 	slti	v0,v0,8
9d008ac4:	1440000f 	bnez	v0,9d008b04 <_svfprintf_r+0xc88>
9d008ac8:	26b50008 	addiu	s5,s5,8
9d008acc:	02602021 	move	a0,s3
9d008ad0:	02402821 	move	a1,s2
9d008ad4:	27a6004c 	addiu	a2,sp,76
9d008ad8:	afa300fc 	sw	v1,252(sp)
9d008adc:	afa700f8 	sw	a3,248(sp)
9d008ae0:	afa800f4 	sw	t0,244(sp)
9d008ae4:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008ae8:	afa900f0 	sw	t1,240(sp)
9d008aec:	8fa300fc 	lw	v1,252(sp)
9d008af0:	8fa700f8 	lw	a3,248(sp)
9d008af4:	8fa800f4 	lw	t0,244(sp)
9d008af8:	144002fa 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008afc:	8fa900f0 	lw	t1,240(sp)
9d008b00:	27b50080 	addiu	s5,sp,128
9d008b04:	2508fff0 	addiu	t0,t0,-16
9d008b08:	29040011 	slti	a0,t0,17
9d008b0c:	1080ffe3 	beqz	a0,9d008a9c <_svfprintf_r+0xc20>
9d008b10:	8fa20054 	lw	v0,84(sp)
9d008b14:	aea80004 	sw	t0,4(s5)
9d008b18:	00484021 	addu	t0,v0,t0
9d008b1c:	8fa20050 	lw	v0,80(sp)
9d008b20:	3c0a9d01 	lui	t2,0x9d01
9d008b24:	254a6630 	addiu	t2,t2,26160
9d008b28:	24420001 	addiu	v0,v0,1
9d008b2c:	aeaa0000 	sw	t2,0(s5)
9d008b30:	afa20050 	sw	v0,80(sp)
9d008b34:	28420008 	slti	v0,v0,8
9d008b38:	afa80054 	sw	t0,84(sp)
9d008b3c:	1440000b 	bnez	v0,9d008b6c <_svfprintf_r+0xcf0>
9d008b40:	26b50008 	addiu	s5,s5,8
9d008b44:	02602021 	move	a0,s3
9d008b48:	02402821 	move	a1,s2
9d008b4c:	27a6004c 	addiu	a2,sp,76
9d008b50:	afa300fc 	sw	v1,252(sp)
9d008b54:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008b58:	afa700f8 	sw	a3,248(sp)
9d008b5c:	8fa300fc 	lw	v1,252(sp)
9d008b60:	144002e0 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008b64:	8fa700f8 	lw	a3,248(sp)
9d008b68:	27b50080 	addiu	s5,sp,128
9d008b6c:	83a20028 	lb	v0,40(sp)
9d008b70:	10400019 	beqz	v0,9d008bd8 <_svfprintf_r+0xd5c>
9d008b74:	8fac00d8 	lw	t4,216(sp)
9d008b78:	27a20028 	addiu	v0,sp,40
9d008b7c:	aea20000 	sw	v0,0(s5)
9d008b80:	24020001 	li	v0,1
9d008b84:	aea20004 	sw	v0,4(s5)
9d008b88:	8fa20054 	lw	v0,84(sp)
9d008b8c:	24420001 	addiu	v0,v0,1
9d008b90:	afa20054 	sw	v0,84(sp)
9d008b94:	8fa20050 	lw	v0,80(sp)
9d008b98:	24420001 	addiu	v0,v0,1
9d008b9c:	afa20050 	sw	v0,80(sp)
9d008ba0:	28420008 	slti	v0,v0,8
9d008ba4:	1440000b 	bnez	v0,9d008bd4 <_svfprintf_r+0xd58>
9d008ba8:	26b50008 	addiu	s5,s5,8
9d008bac:	02602021 	move	a0,s3
9d008bb0:	02402821 	move	a1,s2
9d008bb4:	27a6004c 	addiu	a2,sp,76
9d008bb8:	afa300fc 	sw	v1,252(sp)
9d008bbc:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008bc0:	afa700f8 	sw	a3,248(sp)
9d008bc4:	8fa300fc 	lw	v1,252(sp)
9d008bc8:	144002c6 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008bcc:	8fa700f8 	lw	a3,248(sp)
9d008bd0:	27b50080 	addiu	s5,sp,128
9d008bd4:	8fac00d8 	lw	t4,216(sp)
9d008bd8:	11800019 	beqz	t4,9d008c40 <_svfprintf_r+0xdc4>
9d008bdc:	8fa400e4 	lw	a0,228(sp)
9d008be0:	27a2002c 	addiu	v0,sp,44
9d008be4:	aea20000 	sw	v0,0(s5)
9d008be8:	24020002 	li	v0,2
9d008bec:	aea20004 	sw	v0,4(s5)
9d008bf0:	8fa20054 	lw	v0,84(sp)
9d008bf4:	24420002 	addiu	v0,v0,2
9d008bf8:	afa20054 	sw	v0,84(sp)
9d008bfc:	8fa20050 	lw	v0,80(sp)
9d008c00:	24420001 	addiu	v0,v0,1
9d008c04:	afa20050 	sw	v0,80(sp)
9d008c08:	28420008 	slti	v0,v0,8
9d008c0c:	1440000b 	bnez	v0,9d008c3c <_svfprintf_r+0xdc0>
9d008c10:	26b50008 	addiu	s5,s5,8
9d008c14:	02602021 	move	a0,s3
9d008c18:	02402821 	move	a1,s2
9d008c1c:	27a6004c 	addiu	a2,sp,76
9d008c20:	afa300fc 	sw	v1,252(sp)
9d008c24:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008c28:	afa700f8 	sw	a3,248(sp)
9d008c2c:	8fa300fc 	lw	v1,252(sp)
9d008c30:	144002ac 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008c34:	8fa700f8 	lw	a3,248(sp)
9d008c38:	27b50080 	addiu	s5,sp,128
9d008c3c:	8fa400e4 	lw	a0,228(sp)
9d008c40:	24020080 	li	v0,128
9d008c44:	5482003c 	bnel	a0,v0,9d008d38 <_svfprintf_r+0xebc>
9d008c48:	00e33823 	subu	a3,a3,v1
9d008c4c:	8fa500c4 	lw	a1,196(sp)
9d008c50:	00be4023 	subu	t0,a1,s8
9d008c54:	1d00001e 	bgtz	t0,9d008cd0 <_svfprintf_r+0xe54>
9d008c58:	24090010 	li	t1,16
9d008c5c:	0b40234e 	j	9d008d38 <_svfprintf_r+0xebc>
9d008c60:	00e33823 	subu	a3,a3,v1
9d008c64:	3c0a9d01 	lui	t2,0x9d01
9d008c68:	24420010 	addiu	v0,v0,16
9d008c6c:	254a6620 	addiu	t2,t2,26144
9d008c70:	aeaa0000 	sw	t2,0(s5)
9d008c74:	aea90004 	sw	t1,4(s5)
9d008c78:	afa20054 	sw	v0,84(sp)
9d008c7c:	8fa20050 	lw	v0,80(sp)
9d008c80:	24420001 	addiu	v0,v0,1
9d008c84:	afa20050 	sw	v0,80(sp)
9d008c88:	28420008 	slti	v0,v0,8
9d008c8c:	1440000f 	bnez	v0,9d008ccc <_svfprintf_r+0xe50>
9d008c90:	26b50008 	addiu	s5,s5,8
9d008c94:	02602021 	move	a0,s3
9d008c98:	02402821 	move	a1,s2
9d008c9c:	27a6004c 	addiu	a2,sp,76
9d008ca0:	afa300fc 	sw	v1,252(sp)
9d008ca4:	afa700f8 	sw	a3,248(sp)
9d008ca8:	afa800f4 	sw	t0,244(sp)
9d008cac:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008cb0:	afa900f0 	sw	t1,240(sp)
9d008cb4:	8fa300fc 	lw	v1,252(sp)
9d008cb8:	8fa700f8 	lw	a3,248(sp)
9d008cbc:	8fa800f4 	lw	t0,244(sp)
9d008cc0:	14400288 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008cc4:	8fa900f0 	lw	t1,240(sp)
9d008cc8:	27b50080 	addiu	s5,sp,128
9d008ccc:	2508fff0 	addiu	t0,t0,-16
9d008cd0:	29040011 	slti	a0,t0,17
9d008cd4:	1080ffe3 	beqz	a0,9d008c64 <_svfprintf_r+0xde8>
9d008cd8:	8fa20054 	lw	v0,84(sp)
9d008cdc:	aea80004 	sw	t0,4(s5)
9d008ce0:	00484021 	addu	t0,v0,t0
9d008ce4:	8fa20050 	lw	v0,80(sp)
9d008ce8:	3c0c9d01 	lui	t4,0x9d01
9d008cec:	258c6620 	addiu	t4,t4,26144
9d008cf0:	24420001 	addiu	v0,v0,1
9d008cf4:	aeac0000 	sw	t4,0(s5)
9d008cf8:	afa20050 	sw	v0,80(sp)
9d008cfc:	28420008 	slti	v0,v0,8
9d008d00:	afa80054 	sw	t0,84(sp)
9d008d04:	1440000b 	bnez	v0,9d008d34 <_svfprintf_r+0xeb8>
9d008d08:	26b50008 	addiu	s5,s5,8
9d008d0c:	02602021 	move	a0,s3
9d008d10:	02402821 	move	a1,s2
9d008d14:	27a6004c 	addiu	a2,sp,76
9d008d18:	afa300fc 	sw	v1,252(sp)
9d008d1c:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008d20:	afa700f8 	sw	a3,248(sp)
9d008d24:	8fa300fc 	lw	v1,252(sp)
9d008d28:	1440026e 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008d2c:	8fa700f8 	lw	a3,248(sp)
9d008d30:	27b50080 	addiu	s5,sp,128
9d008d34:	00e33823 	subu	a3,a3,v1
9d008d38:	1ce0001c 	bgtz	a3,9d008dac <_svfprintf_r+0xf30>
9d008d3c:	24080010 	li	t0,16
9d008d40:	0b402383 	j	9d008e0c <_svfprintf_r+0xf90>
9d008d44:	32020100 	andi	v0,s0,0x100
9d008d48:	3c049d01 	lui	a0,0x9d01
9d008d4c:	24420010 	addiu	v0,v0,16
9d008d50:	24846620 	addiu	a0,a0,26144
9d008d54:	aea40000 	sw	a0,0(s5)
9d008d58:	aea80004 	sw	t0,4(s5)
9d008d5c:	afa20054 	sw	v0,84(sp)
9d008d60:	8fa20050 	lw	v0,80(sp)
9d008d64:	24420001 	addiu	v0,v0,1
9d008d68:	afa20050 	sw	v0,80(sp)
9d008d6c:	28420008 	slti	v0,v0,8
9d008d70:	1440000d 	bnez	v0,9d008da8 <_svfprintf_r+0xf2c>
9d008d74:	26b50008 	addiu	s5,s5,8
9d008d78:	02602021 	move	a0,s3
9d008d7c:	02402821 	move	a1,s2
9d008d80:	27a6004c 	addiu	a2,sp,76
9d008d84:	afa300fc 	sw	v1,252(sp)
9d008d88:	afa700f8 	sw	a3,248(sp)
9d008d8c:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008d90:	afa800f4 	sw	t0,244(sp)
9d008d94:	8fa300fc 	lw	v1,252(sp)
9d008d98:	8fa700f8 	lw	a3,248(sp)
9d008d9c:	14400251 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008da0:	8fa800f4 	lw	t0,244(sp)
9d008da4:	27b50080 	addiu	s5,sp,128
9d008da8:	24e7fff0 	addiu	a3,a3,-16
9d008dac:	28e40011 	slti	a0,a3,17
9d008db0:	1080ffe5 	beqz	a0,9d008d48 <_svfprintf_r+0xecc>
9d008db4:	8fa20054 	lw	v0,84(sp)
9d008db8:	aea70004 	sw	a3,4(s5)
9d008dbc:	00473821 	addu	a3,v0,a3
9d008dc0:	8fa20050 	lw	v0,80(sp)
9d008dc4:	3c059d01 	lui	a1,0x9d01
9d008dc8:	24a56620 	addiu	a1,a1,26144
9d008dcc:	24420001 	addiu	v0,v0,1
9d008dd0:	aea50000 	sw	a1,0(s5)
9d008dd4:	afa20050 	sw	v0,80(sp)
9d008dd8:	28420008 	slti	v0,v0,8
9d008ddc:	afa70054 	sw	a3,84(sp)
9d008de0:	14400009 	bnez	v0,9d008e08 <_svfprintf_r+0xf8c>
9d008de4:	26b50008 	addiu	s5,s5,8
9d008de8:	02602021 	move	a0,s3
9d008dec:	02402821 	move	a1,s2
9d008df0:	27a6004c 	addiu	a2,sp,76
9d008df4:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008df8:	afa300fc 	sw	v1,252(sp)
9d008dfc:	14400239 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008e00:	8fa300fc 	lw	v1,252(sp)
9d008e04:	27b50080 	addiu	s5,sp,128
9d008e08:	32020100 	andi	v0,s0,0x100
9d008e0c:	14400006 	bnez	v0,9d008e28 <_svfprintf_r+0xfac>
9d008e10:	8fa80054 	lw	t0,84(sp)
9d008e14:	aea30004 	sw	v1,4(s5)
9d008e18:	01031821 	addu	v1,t0,v1
9d008e1c:	aeb40000 	sw	s4,0(s5)
9d008e20:	0b402565 	j	9d009594 <_svfprintf_r+0x1718>
9d008e24:	afa30054 	sw	v1,84(sp)
9d008e28:	2af70066 	slti	s7,s7,102
9d008e2c:	16e00166 	bnez	s7,9d0093c8 <_svfprintf_r+0x154c>
9d008e30:	8fa400c8 	lw	a0,200(sp)
9d008e34:	8fa300d0 	lw	v1,208(sp)
9d008e38:	8fa200d4 	lw	v0,212(sp)
9d008e3c:	00003021 	move	a2,zero
9d008e40:	00602021 	move	a0,v1
9d008e44:	00402821 	move	a1,v0
9d008e48:	00003821 	move	a3,zero
9d008e4c:	0f401775 	jal	9d005dd4 <__eqdf2>
9d008e50:	afa800f4 	sw	t0,244(sp)
9d008e54:	14400050 	bnez	v0,9d008f98 <_svfprintf_r+0x111c>
9d008e58:	8fa800f4 	lw	t0,244(sp)
9d008e5c:	3c029d01 	lui	v0,0x9d01
9d008e60:	244264b8 	addiu	v0,v0,25784
9d008e64:	aea20000 	sw	v0,0(s5)
9d008e68:	24020001 	li	v0,1
9d008e6c:	aea20004 	sw	v0,4(s5)
9d008e70:	8fa20050 	lw	v0,80(sp)
9d008e74:	25080001 	addiu	t0,t0,1
9d008e78:	afa80054 	sw	t0,84(sp)
9d008e7c:	24420001 	addiu	v0,v0,1
9d008e80:	afa20050 	sw	v0,80(sp)
9d008e84:	28420008 	slti	v0,v0,8
9d008e88:	14400007 	bnez	v0,9d008ea8 <_svfprintf_r+0x102c>
9d008e8c:	26b50008 	addiu	s5,s5,8
9d008e90:	02602021 	move	a0,s3
9d008e94:	02402821 	move	a1,s2
9d008e98:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008e9c:	27a6004c 	addiu	a2,sp,76
9d008ea0:	14400210 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008ea4:	27b50080 	addiu	s5,sp,128
9d008ea8:	8fa20030 	lw	v0,48(sp)
9d008eac:	8faa00c8 	lw	t2,200(sp)
9d008eb0:	004a102a 	slt	v0,v0,t2
9d008eb4:	14400005 	bnez	v0,9d008ecc <_svfprintf_r+0x1050>
9d008eb8:	8fa200dc 	lw	v0,220(sp)
9d008ebc:	32020001 	andi	v0,s0,0x1
9d008ec0:	504001c1 	beqzl	v0,9d0095c8 <_svfprintf_r+0x174c>
9d008ec4:	32100004 	andi	s0,s0,0x4
9d008ec8:	8fa200dc 	lw	v0,220(sp)
9d008ecc:	8fa300dc 	lw	v1,220(sp)
9d008ed0:	8fac00e0 	lw	t4,224(sp)
9d008ed4:	aea20004 	sw	v0,4(s5)
9d008ed8:	8fa20054 	lw	v0,84(sp)
9d008edc:	aeac0000 	sw	t4,0(s5)
9d008ee0:	00431021 	addu	v0,v0,v1
9d008ee4:	afa20054 	sw	v0,84(sp)
9d008ee8:	8fa20050 	lw	v0,80(sp)
9d008eec:	24420001 	addiu	v0,v0,1
9d008ef0:	afa20050 	sw	v0,80(sp)
9d008ef4:	28420008 	slti	v0,v0,8
9d008ef8:	14400007 	bnez	v0,9d008f18 <_svfprintf_r+0x109c>
9d008efc:	26b50008 	addiu	s5,s5,8
9d008f00:	02602021 	move	a0,s3
9d008f04:	02402821 	move	a1,s2
9d008f08:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008f0c:	27a6004c 	addiu	a2,sp,76
9d008f10:	144001f4 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008f14:	27b50080 	addiu	s5,sp,128
9d008f18:	8fa400c8 	lw	a0,200(sp)
9d008f1c:	2494ffff 	addiu	s4,a0,-1
9d008f20:	1e800016 	bgtz	s4,9d008f7c <_svfprintf_r+0x1100>
9d008f24:	24160010 	li	s6,16
9d008f28:	0b402572 	j	9d0095c8 <_svfprintf_r+0x174c>
9d008f2c:	32100004 	andi	s0,s0,0x4
9d008f30:	3c059d01 	lui	a1,0x9d01
9d008f34:	24420010 	addiu	v0,v0,16
9d008f38:	24a56620 	addiu	a1,a1,26144
9d008f3c:	aea50000 	sw	a1,0(s5)
9d008f40:	aeb60004 	sw	s6,4(s5)
9d008f44:	afa20054 	sw	v0,84(sp)
9d008f48:	8fa20050 	lw	v0,80(sp)
9d008f4c:	24420001 	addiu	v0,v0,1
9d008f50:	afa20050 	sw	v0,80(sp)
9d008f54:	28420008 	slti	v0,v0,8
9d008f58:	14400007 	bnez	v0,9d008f78 <_svfprintf_r+0x10fc>
9d008f5c:	26b50008 	addiu	s5,s5,8
9d008f60:	02602021 	move	a0,s3
9d008f64:	02402821 	move	a1,s2
9d008f68:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008f6c:	27a6004c 	addiu	a2,sp,76
9d008f70:	144001dc 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008f74:	27b50080 	addiu	s5,sp,128
9d008f78:	2694fff0 	addiu	s4,s4,-16
9d008f7c:	2a830011 	slti	v1,s4,17
9d008f80:	1060ffeb 	beqz	v1,9d008f30 <_svfprintf_r+0x10b4>
9d008f84:	8fa20054 	lw	v0,84(sp)
9d008f88:	3c0a9d01 	lui	t2,0x9d01
9d008f8c:	254a6620 	addiu	t2,t2,26144
9d008f90:	0b4024ee 	j	9d0093b8 <_svfprintf_r+0x153c>
9d008f94:	aeaa0000 	sw	t2,0(s5)
9d008f98:	8fa20030 	lw	v0,48(sp)
9d008f9c:	1c400064 	bgtz	v0,9d009130 <_svfprintf_r+0x12b4>
9d008fa0:	8fac00c8 	lw	t4,200(sp)
9d008fa4:	3c029d01 	lui	v0,0x9d01
9d008fa8:	244264b8 	addiu	v0,v0,25784
9d008fac:	aea20000 	sw	v0,0(s5)
9d008fb0:	24020001 	li	v0,1
9d008fb4:	aea20004 	sw	v0,4(s5)
9d008fb8:	8fa20050 	lw	v0,80(sp)
9d008fbc:	25080001 	addiu	t0,t0,1
9d008fc0:	afa80054 	sw	t0,84(sp)
9d008fc4:	24420001 	addiu	v0,v0,1
9d008fc8:	afa20050 	sw	v0,80(sp)
9d008fcc:	28420008 	slti	v0,v0,8
9d008fd0:	14400007 	bnez	v0,9d008ff0 <_svfprintf_r+0x1174>
9d008fd4:	26b50008 	addiu	s5,s5,8
9d008fd8:	02602021 	move	a0,s3
9d008fdc:	02402821 	move	a1,s2
9d008fe0:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d008fe4:	27a6004c 	addiu	a2,sp,76
9d008fe8:	144001be 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d008fec:	27b50080 	addiu	s5,sp,128
9d008ff0:	8fa20030 	lw	v0,48(sp)
9d008ff4:	14400008 	bnez	v0,9d009018 <_svfprintf_r+0x119c>
9d008ff8:	8fa200e0 	lw	v0,224(sp)
9d008ffc:	8fac00c8 	lw	t4,200(sp)
9d009000:	15800006 	bnez	t4,9d00901c <_svfprintf_r+0x11a0>
9d009004:	8fa300dc 	lw	v1,220(sp)
9d009008:	32020001 	andi	v0,s0,0x1
9d00900c:	5040016e 	beqzl	v0,9d0095c8 <_svfprintf_r+0x174c>
9d009010:	32100004 	andi	s0,s0,0x4
9d009014:	8fa200e0 	lw	v0,224(sp)
9d009018:	8fa300dc 	lw	v1,220(sp)
9d00901c:	aea20000 	sw	v0,0(s5)
9d009020:	8fa20054 	lw	v0,84(sp)
9d009024:	aea30004 	sw	v1,4(s5)
9d009028:	00431021 	addu	v0,v0,v1
9d00902c:	afa20054 	sw	v0,84(sp)
9d009030:	8fa20050 	lw	v0,80(sp)
9d009034:	24420001 	addiu	v0,v0,1
9d009038:	afa20050 	sw	v0,80(sp)
9d00903c:	28420008 	slti	v0,v0,8
9d009040:	14400007 	bnez	v0,9d009060 <_svfprintf_r+0x11e4>
9d009044:	26b50008 	addiu	s5,s5,8
9d009048:	02602021 	move	a0,s3
9d00904c:	02402821 	move	a1,s2
9d009050:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009054:	27a6004c 	addiu	a2,sp,76
9d009058:	144001a2 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d00905c:	27b50080 	addiu	s5,sp,128
9d009060:	8fb60030 	lw	s6,48(sp)
9d009064:	0016b023 	negu	s6,s6
9d009068:	1ec00016 	bgtz	s6,9d0090c4 <_svfprintf_r+0x1248>
9d00906c:	24170010 	li	s7,16
9d009070:	0b402447 	j	9d00911c <_svfprintf_r+0x12a0>
9d009074:	8faa00c8 	lw	t2,200(sp)
9d009078:	3c049d01 	lui	a0,0x9d01
9d00907c:	24420010 	addiu	v0,v0,16
9d009080:	24846620 	addiu	a0,a0,26144
9d009084:	aea40000 	sw	a0,0(s5)
9d009088:	aeb70004 	sw	s7,4(s5)
9d00908c:	afa20054 	sw	v0,84(sp)
9d009090:	8fa20050 	lw	v0,80(sp)
9d009094:	24420001 	addiu	v0,v0,1
9d009098:	afa20050 	sw	v0,80(sp)
9d00909c:	28420008 	slti	v0,v0,8
9d0090a0:	14400007 	bnez	v0,9d0090c0 <_svfprintf_r+0x1244>
9d0090a4:	26b50008 	addiu	s5,s5,8
9d0090a8:	02602021 	move	a0,s3
9d0090ac:	02402821 	move	a1,s2
9d0090b0:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d0090b4:	27a6004c 	addiu	a2,sp,76
9d0090b8:	1440018a 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d0090bc:	27b50080 	addiu	s5,sp,128
9d0090c0:	26d6fff0 	addiu	s6,s6,-16
9d0090c4:	2ac30011 	slti	v1,s6,17
9d0090c8:	1060ffeb 	beqz	v1,9d009078 <_svfprintf_r+0x11fc>
9d0090cc:	8fa20054 	lw	v0,84(sp)
9d0090d0:	aeb60004 	sw	s6,4(s5)
9d0090d4:	0056b021 	addu	s6,v0,s6
9d0090d8:	8fa20050 	lw	v0,80(sp)
9d0090dc:	3c059d01 	lui	a1,0x9d01
9d0090e0:	24a56620 	addiu	a1,a1,26144
9d0090e4:	24420001 	addiu	v0,v0,1
9d0090e8:	aea50000 	sw	a1,0(s5)
9d0090ec:	afa20050 	sw	v0,80(sp)
9d0090f0:	28420008 	slti	v0,v0,8
9d0090f4:	afb60054 	sw	s6,84(sp)
9d0090f8:	14400007 	bnez	v0,9d009118 <_svfprintf_r+0x129c>
9d0090fc:	26b50008 	addiu	s5,s5,8
9d009100:	02602021 	move	a0,s3
9d009104:	02402821 	move	a1,s2
9d009108:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d00910c:	27a6004c 	addiu	a2,sp,76
9d009110:	14400174 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009114:	27b50080 	addiu	s5,sp,128
9d009118:	8faa00c8 	lw	t2,200(sp)
9d00911c:	8fa20054 	lw	v0,84(sp)
9d009120:	aeb40000 	sw	s4,0(s5)
9d009124:	aeaa0004 	sw	t2,4(s5)
9d009128:	0b402564 	j	9d009590 <_svfprintf_r+0x1714>
9d00912c:	004a1021 	addu	v0,v0,t2
9d009130:	028c6021 	addu	t4,s4,t4
9d009134:	01941023 	subu	v0,t4,s4
9d009138:	02c2b82a 	slt	s7,s6,v0
9d00913c:	02d7100b 	movn	v0,s6,s7
9d009140:	afac00d8 	sw	t4,216(sp)
9d009144:	18400011 	blez	v0,9d00918c <_svfprintf_r+0x1310>
9d009148:	0040b821 	move	s7,v0
9d00914c:	aea20004 	sw	v0,4(s5)
9d009150:	01024021 	addu	t0,t0,v0
9d009154:	8fa20050 	lw	v0,80(sp)
9d009158:	aeb40000 	sw	s4,0(s5)
9d00915c:	afa80054 	sw	t0,84(sp)
9d009160:	24420001 	addiu	v0,v0,1
9d009164:	afa20050 	sw	v0,80(sp)
9d009168:	28420008 	slti	v0,v0,8
9d00916c:	14400007 	bnez	v0,9d00918c <_svfprintf_r+0x1310>
9d009170:	26b50008 	addiu	s5,s5,8
9d009174:	02602021 	move	a0,s3
9d009178:	02402821 	move	a1,s2
9d00917c:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009180:	27a6004c 	addiu	a2,sp,76
9d009184:	14400157 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009188:	27b50080 	addiu	s5,sp,128
9d00918c:	2ae20000 	slti	v0,s7,0
9d009190:	0002b80b 	movn	s7,zero,v0
9d009194:	02d7b823 	subu	s7,s6,s7
9d009198:	1ee00018 	bgtz	s7,9d0091fc <_svfprintf_r+0x1380>
9d00919c:	24030010 	li	v1,16
9d0091a0:	0b402495 	j	9d009254 <_svfprintf_r+0x13d8>
9d0091a4:	8fa20030 	lw	v0,48(sp)
9d0091a8:	3c049d01 	lui	a0,0x9d01
9d0091ac:	24420010 	addiu	v0,v0,16
9d0091b0:	24846620 	addiu	a0,a0,26144
9d0091b4:	aea40000 	sw	a0,0(s5)
9d0091b8:	aea30004 	sw	v1,4(s5)
9d0091bc:	afa20054 	sw	v0,84(sp)
9d0091c0:	8fa20050 	lw	v0,80(sp)
9d0091c4:	24420001 	addiu	v0,v0,1
9d0091c8:	afa20050 	sw	v0,80(sp)
9d0091cc:	28420008 	slti	v0,v0,8
9d0091d0:	14400009 	bnez	v0,9d0091f8 <_svfprintf_r+0x137c>
9d0091d4:	26b50008 	addiu	s5,s5,8
9d0091d8:	02602021 	move	a0,s3
9d0091dc:	02402821 	move	a1,s2
9d0091e0:	27a6004c 	addiu	a2,sp,76
9d0091e4:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d0091e8:	afa300fc 	sw	v1,252(sp)
9d0091ec:	1440013d 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d0091f0:	8fa300fc 	lw	v1,252(sp)
9d0091f4:	27b50080 	addiu	s5,sp,128
9d0091f8:	26f7fff0 	addiu	s7,s7,-16
9d0091fc:	2ae40011 	slti	a0,s7,17
9d009200:	1080ffe9 	beqz	a0,9d0091a8 <_svfprintf_r+0x132c>
9d009204:	8fa20054 	lw	v0,84(sp)
9d009208:	aeb70004 	sw	s7,4(s5)
9d00920c:	0057b821 	addu	s7,v0,s7
9d009210:	8fa20050 	lw	v0,80(sp)
9d009214:	3c059d01 	lui	a1,0x9d01
9d009218:	24a56620 	addiu	a1,a1,26144
9d00921c:	24420001 	addiu	v0,v0,1
9d009220:	aea50000 	sw	a1,0(s5)
9d009224:	afa20050 	sw	v0,80(sp)
9d009228:	28420008 	slti	v0,v0,8
9d00922c:	afb70054 	sw	s7,84(sp)
9d009230:	14400007 	bnez	v0,9d009250 <_svfprintf_r+0x13d4>
9d009234:	26b50008 	addiu	s5,s5,8
9d009238:	02602021 	move	a0,s3
9d00923c:	02402821 	move	a1,s2
9d009240:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009244:	27a6004c 	addiu	a2,sp,76
9d009248:	14400126 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d00924c:	27b50080 	addiu	s5,sp,128
9d009250:	8fa20030 	lw	v0,48(sp)
9d009254:	8faa00c8 	lw	t2,200(sp)
9d009258:	004a102a 	slt	v0,v0,t2
9d00925c:	14400005 	bnez	v0,9d009274 <_svfprintf_r+0x13f8>
9d009260:	8fa200dc 	lw	v0,220(sp)
9d009264:	32020001 	andi	v0,s0,0x1
9d009268:	10400016 	beqz	v0,9d0092c4 <_svfprintf_r+0x1448>
9d00926c:	8fa400d8 	lw	a0,216(sp)
9d009270:	8fa200dc 	lw	v0,220(sp)
9d009274:	8fa300dc 	lw	v1,220(sp)
9d009278:	8fac00e0 	lw	t4,224(sp)
9d00927c:	aea20004 	sw	v0,4(s5)
9d009280:	8fa20054 	lw	v0,84(sp)
9d009284:	aeac0000 	sw	t4,0(s5)
9d009288:	00431021 	addu	v0,v0,v1
9d00928c:	afa20054 	sw	v0,84(sp)
9d009290:	8fa20050 	lw	v0,80(sp)
9d009294:	24420001 	addiu	v0,v0,1
9d009298:	afa20050 	sw	v0,80(sp)
9d00929c:	28420008 	slti	v0,v0,8
9d0092a0:	14400007 	bnez	v0,9d0092c0 <_svfprintf_r+0x1444>
9d0092a4:	26b50008 	addiu	s5,s5,8
9d0092a8:	02602021 	move	a0,s3
9d0092ac:	02402821 	move	a1,s2
9d0092b0:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d0092b4:	27a6004c 	addiu	a2,sp,76
9d0092b8:	1440010a 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d0092bc:	27b50080 	addiu	s5,sp,128
9d0092c0:	8fa400d8 	lw	a0,216(sp)
9d0092c4:	8fa20030 	lw	v0,48(sp)
9d0092c8:	8fa500c8 	lw	a1,200(sp)
9d0092cc:	0296b021 	addu	s6,s4,s6
9d0092d0:	00961823 	subu	v1,a0,s6
9d0092d4:	00a21023 	subu	v0,a1,v0
9d0092d8:	0043b82a 	slt	s7,v0,v1
9d0092dc:	0077100a 	movz	v0,v1,s7
9d0092e0:	18400012 	blez	v0,9d00932c <_svfprintf_r+0x14b0>
9d0092e4:	0040b821 	move	s7,v0
9d0092e8:	aea20004 	sw	v0,4(s5)
9d0092ec:	8fa20054 	lw	v0,84(sp)
9d0092f0:	aeb60000 	sw	s6,0(s5)
9d0092f4:	00571021 	addu	v0,v0,s7
9d0092f8:	afa20054 	sw	v0,84(sp)
9d0092fc:	8fa20050 	lw	v0,80(sp)
9d009300:	24420001 	addiu	v0,v0,1
9d009304:	afa20050 	sw	v0,80(sp)
9d009308:	28420008 	slti	v0,v0,8
9d00930c:	14400007 	bnez	v0,9d00932c <_svfprintf_r+0x14b0>
9d009310:	26b50008 	addiu	s5,s5,8
9d009314:	02602021 	move	a0,s3
9d009318:	02402821 	move	a1,s2
9d00931c:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009320:	27a6004c 	addiu	a2,sp,76
9d009324:	144000ef 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009328:	27b50080 	addiu	s5,sp,128
9d00932c:	2af40000 	slti	s4,s7,0
9d009330:	0014b80b 	movn	s7,zero,s4
9d009334:	8faa00c8 	lw	t2,200(sp)
9d009338:	8fb40030 	lw	s4,48(sp)
9d00933c:	0154a023 	subu	s4,t2,s4
9d009340:	0297a023 	subu	s4,s4,s7
9d009344:	1e800016 	bgtz	s4,9d0093a0 <_svfprintf_r+0x1524>
9d009348:	24160010 	li	s6,16
9d00934c:	0b402572 	j	9d0095c8 <_svfprintf_r+0x174c>
9d009350:	32100004 	andi	s0,s0,0x4
9d009354:	3c0c9d01 	lui	t4,0x9d01
9d009358:	24420010 	addiu	v0,v0,16
9d00935c:	258c6620 	addiu	t4,t4,26144
9d009360:	aeac0000 	sw	t4,0(s5)
9d009364:	aeb60004 	sw	s6,4(s5)
9d009368:	afa20054 	sw	v0,84(sp)
9d00936c:	8fa20050 	lw	v0,80(sp)
9d009370:	24420001 	addiu	v0,v0,1
9d009374:	afa20050 	sw	v0,80(sp)
9d009378:	28420008 	slti	v0,v0,8
9d00937c:	14400007 	bnez	v0,9d00939c <_svfprintf_r+0x1520>
9d009380:	26b50008 	addiu	s5,s5,8
9d009384:	02602021 	move	a0,s3
9d009388:	02402821 	move	a1,s2
9d00938c:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009390:	27a6004c 	addiu	a2,sp,76
9d009394:	144000d3 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009398:	27b50080 	addiu	s5,sp,128
9d00939c:	2694fff0 	addiu	s4,s4,-16
9d0093a0:	2a830011 	slti	v1,s4,17
9d0093a4:	1060ffeb 	beqz	v1,9d009354 <_svfprintf_r+0x14d8>
9d0093a8:	8fa20054 	lw	v0,84(sp)
9d0093ac:	3c039d01 	lui	v1,0x9d01
9d0093b0:	24636620 	addiu	v1,v1,26144
9d0093b4:	aea30000 	sw	v1,0(s5)
9d0093b8:	aeb40004 	sw	s4,4(s5)
9d0093bc:	0054a021 	addu	s4,v0,s4
9d0093c0:	0b402565 	j	9d009594 <_svfprintf_r+0x1718>
9d0093c4:	afb40054 	sw	s4,84(sp)
9d0093c8:	28820002 	slti	v0,a0,2
9d0093cc:	10400004 	beqz	v0,9d0093e0 <_svfprintf_r+0x1564>
9d0093d0:	24020001 	li	v0,1
9d0093d4:	32020001 	andi	v0,s0,0x1
9d0093d8:	10400057 	beqz	v0,9d009538 <_svfprintf_r+0x16bc>
9d0093dc:	24020001 	li	v0,1
9d0093e0:	aea20004 	sw	v0,4(s5)
9d0093e4:	8fa20050 	lw	v0,80(sp)
9d0093e8:	aeb40000 	sw	s4,0(s5)
9d0093ec:	25080001 	addiu	t0,t0,1
9d0093f0:	24420001 	addiu	v0,v0,1
9d0093f4:	afa20050 	sw	v0,80(sp)
9d0093f8:	28420008 	slti	v0,v0,8
9d0093fc:	afa80054 	sw	t0,84(sp)
9d009400:	14400007 	bnez	v0,9d009420 <_svfprintf_r+0x15a4>
9d009404:	26b50008 	addiu	s5,s5,8
9d009408:	02602021 	move	a0,s3
9d00940c:	02402821 	move	a1,s2
9d009410:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009414:	27a6004c 	addiu	a2,sp,76
9d009418:	144000b2 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d00941c:	27b50080 	addiu	s5,sp,128
9d009420:	8faa00dc 	lw	t2,220(sp)
9d009424:	8fa20054 	lw	v0,84(sp)
9d009428:	8fa500e0 	lw	a1,224(sp)
9d00942c:	aeaa0004 	sw	t2,4(s5)
9d009430:	004a1021 	addu	v0,v0,t2
9d009434:	aea50000 	sw	a1,0(s5)
9d009438:	afa20054 	sw	v0,84(sp)
9d00943c:	8fa20050 	lw	v0,80(sp)
9d009440:	24420001 	addiu	v0,v0,1
9d009444:	afa20050 	sw	v0,80(sp)
9d009448:	28420008 	slti	v0,v0,8
9d00944c:	14400007 	bnez	v0,9d00946c <_svfprintf_r+0x15f0>
9d009450:	26b50008 	addiu	s5,s5,8
9d009454:	02602021 	move	a0,s3
9d009458:	02402821 	move	a1,s2
9d00945c:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009460:	27a6004c 	addiu	a2,sp,76
9d009464:	1440009f 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009468:	27b50080 	addiu	s5,sp,128
9d00946c:	8fa300d0 	lw	v1,208(sp)
9d009470:	8fa200d4 	lw	v0,212(sp)
9d009474:	00003021 	move	a2,zero
9d009478:	00602021 	move	a0,v1
9d00947c:	00402821 	move	a1,v0
9d009480:	0f401775 	jal	9d005dd4 <__eqdf2>
9d009484:	00003821 	move	a3,zero
9d009488:	8fac00c8 	lw	t4,200(sp)
9d00948c:	10400008 	beqz	v0,9d0094b0 <_svfprintf_r+0x1634>
9d009490:	2583ffff 	addiu	v1,t4,-1
9d009494:	26940001 	addiu	s4,s4,1
9d009498:	aeb40000 	sw	s4,0(s5)
9d00949c:	8fb40054 	lw	s4,84(sp)
9d0094a0:	aea30004 	sw	v1,4(s5)
9d0094a4:	02831821 	addu	v1,s4,v1
9d0094a8:	0b402552 	j	9d009548 <_svfprintf_r+0x16cc>
9d0094ac:	afa30054 	sw	v1,84(sp)
9d0094b0:	0060a021 	move	s4,v1
9d0094b4:	1c600016 	bgtz	v1,9d009510 <_svfprintf_r+0x1694>
9d0094b8:	24160010 	li	s6,16
9d0094bc:	0b40255f 	j	9d00957c <_svfprintf_r+0x1700>
9d0094c0:	27a2003c 	addiu	v0,sp,60
9d0094c4:	3c039d01 	lui	v1,0x9d01
9d0094c8:	24420010 	addiu	v0,v0,16
9d0094cc:	24636620 	addiu	v1,v1,26144
9d0094d0:	aea30000 	sw	v1,0(s5)
9d0094d4:	aeb60004 	sw	s6,4(s5)
9d0094d8:	afa20054 	sw	v0,84(sp)
9d0094dc:	8fa20050 	lw	v0,80(sp)
9d0094e0:	24420001 	addiu	v0,v0,1
9d0094e4:	afa20050 	sw	v0,80(sp)
9d0094e8:	28420008 	slti	v0,v0,8
9d0094ec:	14400007 	bnez	v0,9d00950c <_svfprintf_r+0x1690>
9d0094f0:	26b50008 	addiu	s5,s5,8
9d0094f4:	02602021 	move	a0,s3
9d0094f8:	02402821 	move	a1,s2
9d0094fc:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009500:	27a6004c 	addiu	a2,sp,76
9d009504:	14400077 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009508:	27b50080 	addiu	s5,sp,128
9d00950c:	2694fff0 	addiu	s4,s4,-16
9d009510:	2a830011 	slti	v1,s4,17
9d009514:	1060ffeb 	beqz	v1,9d0094c4 <_svfprintf_r+0x1648>
9d009518:	8fa20054 	lw	v0,84(sp)
9d00951c:	3c049d01 	lui	a0,0x9d01
9d009520:	aeb40004 	sw	s4,4(s5)
9d009524:	24846620 	addiu	a0,a0,26144
9d009528:	0054a021 	addu	s4,v0,s4
9d00952c:	aea40000 	sw	a0,0(s5)
9d009530:	0b402552 	j	9d009548 <_svfprintf_r+0x16cc>
9d009534:	afb40054 	sw	s4,84(sp)
9d009538:	25080001 	addiu	t0,t0,1
9d00953c:	aeb40000 	sw	s4,0(s5)
9d009540:	aea20004 	sw	v0,4(s5)
9d009544:	afa80054 	sw	t0,84(sp)
9d009548:	8fa20050 	lw	v0,80(sp)
9d00954c:	24420001 	addiu	v0,v0,1
9d009550:	afa20050 	sw	v0,80(sp)
9d009554:	28420008 	slti	v0,v0,8
9d009558:	14400007 	bnez	v0,9d009578 <_svfprintf_r+0x16fc>
9d00955c:	26b50008 	addiu	s5,s5,8
9d009560:	02602021 	move	a0,s3
9d009564:	02402821 	move	a1,s2
9d009568:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d00956c:	27a6004c 	addiu	a2,sp,76
9d009570:	1440005c 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d009574:	27b50080 	addiu	s5,sp,128
9d009578:	27a2003c 	addiu	v0,sp,60
9d00957c:	8fa500e8 	lw	a1,232(sp)
9d009580:	aea20000 	sw	v0,0(s5)
9d009584:	8fa20054 	lw	v0,84(sp)
9d009588:	aea50004 	sw	a1,4(s5)
9d00958c:	00451021 	addu	v0,v0,a1
9d009590:	afa20054 	sw	v0,84(sp)
9d009594:	8fa20050 	lw	v0,80(sp)
9d009598:	24420001 	addiu	v0,v0,1
9d00959c:	afa20050 	sw	v0,80(sp)
9d0095a0:	28420008 	slti	v0,v0,8
9d0095a4:	14400007 	bnez	v0,9d0095c4 <_svfprintf_r+0x1748>
9d0095a8:	26b50008 	addiu	s5,s5,8
9d0095ac:	02602021 	move	a0,s3
9d0095b0:	02402821 	move	a1,s2
9d0095b4:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d0095b8:	27a6004c 	addiu	a2,sp,76
9d0095bc:	14400049 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d0095c0:	27b50080 	addiu	s5,sp,128
9d0095c4:	32100004 	andi	s0,s0,0x4
9d0095c8:	1200002f 	beqz	s0,9d009688 <_svfprintf_r+0x180c>
9d0095cc:	8fa400c4 	lw	a0,196(sp)
9d0095d0:	8faa00c4 	lw	t2,196(sp)
9d0095d4:	015e8023 	subu	s0,t2,s8
9d0095d8:	1e000016 	bgtz	s0,9d009634 <_svfprintf_r+0x17b8>
9d0095dc:	24140010 	li	s4,16
9d0095e0:	0b4025a3 	j	9d00968c <_svfprintf_r+0x1810>
9d0095e4:	8fa500cc 	lw	a1,204(sp)
9d0095e8:	3c0c9d01 	lui	t4,0x9d01
9d0095ec:	24420010 	addiu	v0,v0,16
9d0095f0:	258c6630 	addiu	t4,t4,26160
9d0095f4:	aeac0000 	sw	t4,0(s5)
9d0095f8:	aeb40004 	sw	s4,4(s5)
9d0095fc:	afa20054 	sw	v0,84(sp)
9d009600:	8fa20050 	lw	v0,80(sp)
9d009604:	24420001 	addiu	v0,v0,1
9d009608:	afa20050 	sw	v0,80(sp)
9d00960c:	28420008 	slti	v0,v0,8
9d009610:	14400007 	bnez	v0,9d009630 <_svfprintf_r+0x17b4>
9d009614:	26b50008 	addiu	s5,s5,8
9d009618:	02602021 	move	a0,s3
9d00961c:	02402821 	move	a1,s2
9d009620:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009624:	27a6004c 	addiu	a2,sp,76
9d009628:	1440002e 	bnez	v0,9d0096e4 <_svfprintf_r+0x1868>
9d00962c:	27b50080 	addiu	s5,sp,128
9d009630:	2610fff0 	addiu	s0,s0,-16
9d009634:	2a030011 	slti	v1,s0,17
9d009638:	1060ffeb 	beqz	v1,9d0095e8 <_svfprintf_r+0x176c>
9d00963c:	8fa20054 	lw	v0,84(sp)
9d009640:	aeb00004 	sw	s0,4(s5)
9d009644:	00508021 	addu	s0,v0,s0
9d009648:	8fa20050 	lw	v0,80(sp)
9d00964c:	3c039d01 	lui	v1,0x9d01
9d009650:	24636630 	addiu	v1,v1,26160
9d009654:	24420001 	addiu	v0,v0,1
9d009658:	aea30000 	sw	v1,0(s5)
9d00965c:	afa20050 	sw	v0,80(sp)
9d009660:	28420008 	slti	v0,v0,8
9d009664:	14400007 	bnez	v0,9d009684 <_svfprintf_r+0x1808>
9d009668:	afb00054 	sw	s0,84(sp)
9d00966c:	02602021 	move	a0,s3
9d009670:	02402821 	move	a1,s2
9d009674:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d009678:	27a6004c 	addiu	a2,sp,76
9d00967c:	5440001a 	bnezl	v0,9d0096e8 <_svfprintf_r+0x186c>
9d009680:	9643000c 	lhu	v1,12(s2)
9d009684:	8fa400c4 	lw	a0,196(sp)
9d009688:	8fa500cc 	lw	a1,204(sp)
9d00968c:	03c4102a 	slt	v0,s8,a0
9d009690:	0082f00b 	movn	s8,a0,v0
9d009694:	8fa20054 	lw	v0,84(sp)
9d009698:	00be2821 	addu	a1,a1,s8
9d00969c:	10400007 	beqz	v0,9d0096bc <_svfprintf_r+0x1840>
9d0096a0:	afa500cc 	sw	a1,204(sp)
9d0096a4:	02602021 	move	a0,s3
9d0096a8:	02402821 	move	a1,s2
9d0096ac:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d0096b0:	27a6004c 	addiu	a2,sp,76
9d0096b4:	5440000c 	bnezl	v0,9d0096e8 <_svfprintf_r+0x186c>
9d0096b8:	9643000c 	lhu	v1,12(s2)
9d0096bc:	afa00050 	sw	zero,80(sp)
9d0096c0:	0b401fd3 	j	9d007f4c <_svfprintf_r+0xd0>
9d0096c4:	27b50080 	addiu	s5,sp,128
9d0096c8:	8fa20054 	lw	v0,84(sp)
9d0096cc:	50400006 	beqzl	v0,9d0096e8 <_svfprintf_r+0x186c>
9d0096d0:	9643000c 	lhu	v1,12(s2)
9d0096d4:	02602021 	move	a0,s3
9d0096d8:	02402821 	move	a1,s2
9d0096dc:	0f402edc 	jal	9d00bb70 <__ssprint_r>
9d0096e0:	27a6004c 	addiu	a2,sp,76
9d0096e4:	9643000c 	lhu	v1,12(s2)
9d0096e8:	8faa00cc 	lw	t2,204(sp)
9d0096ec:	2402ffff 	li	v0,-1
9d0096f0:	30630040 	andi	v1,v1,0x40
9d0096f4:	0043500b 	movn	t2,v0,v1
9d0096f8:	afaa00cc 	sw	t2,204(sp)
9d0096fc:	8fbf0124 	lw	ra,292(sp)
9d009700:	8fa200cc 	lw	v0,204(sp)
9d009704:	8fbe0120 	lw	s8,288(sp)
9d009708:	8fb7011c 	lw	s7,284(sp)
9d00970c:	8fb60118 	lw	s6,280(sp)
9d009710:	8fb50114 	lw	s5,276(sp)
9d009714:	8fb40110 	lw	s4,272(sp)
9d009718:	8fb3010c 	lw	s3,268(sp)
9d00971c:	8fb20108 	lw	s2,264(sp)
9d009720:	8fb10104 	lw	s1,260(sp)
9d009724:	8fb00100 	lw	s0,256(sp)
9d009728:	03e00008 	jr	ra
9d00972c:	27bd0128 	addiu	sp,sp,296

9d009730 <quorem>:
9d009730:	27bdffd0 	addiu	sp,sp,-48
9d009734:	afb00010 	sw	s0,16(sp)
9d009738:	8ca30010 	lw	v1,16(a1)
9d00973c:	00808021 	move	s0,a0
9d009740:	8c840010 	lw	a0,16(a0)
9d009744:	afbf002c 	sw	ra,44(sp)
9d009748:	afb60028 	sw	s6,40(sp)
9d00974c:	0083202a 	slt	a0,a0,v1
9d009750:	afb50024 	sw	s5,36(sp)
9d009754:	afb40020 	sw	s4,32(sp)
9d009758:	afb3001c 	sw	s3,28(sp)
9d00975c:	afb20018 	sw	s2,24(sp)
9d009760:	afb10014 	sw	s1,20(sp)
9d009764:	14800069 	bnez	a0,9d00990c <quorem+0x1dc>
9d009768:	00001021 	move	v0,zero
9d00976c:	2471ffff 	addiu	s1,v1,-1
9d009770:	24630003 	addiu	v1,v1,3
9d009774:	00031880 	sll	v1,v1,0x2
9d009778:	00a31021 	addu	v0,a1,v1
9d00977c:	8c520004 	lw	s2,4(v0)
9d009780:	02031821 	addu	v1,s0,v1
9d009784:	24560004 	addiu	s6,v0,4
9d009788:	8c620004 	lw	v0,4(v1)
9d00978c:	26520001 	addiu	s2,s2,1
9d009790:	24b30014 	addiu	s3,a1,20
9d009794:	0052001b 	divu	zero,v0,s2
9d009798:	024001f4 	teq	s2,zero,0x7
9d00979c:	26140014 	addiu	s4,s0,20
9d0097a0:	00009012 	mflo	s2
9d0097a4:	1240002e 	beqz	s2,9d009860 <quorem+0x130>
9d0097a8:	0000a812 	mflo	s5
9d0097ac:	02601821 	move	v1,s3
9d0097b0:	02801021 	move	v0,s4
9d0097b4:	00003021 	move	a2,zero
9d0097b8:	8c6b0000 	lw	t3,0(v1)
9d0097bc:	8c480000 	lw	t0,0(v0)
9d0097c0:	24630004 	addiu	v1,v1,4
9d0097c4:	316affff 	andi	t2,t3,0xffff
9d0097c8:	724a3802 	mul	a3,s2,t2
9d0097cc:	000b4c02 	srl	t1,t3,0x10
9d0097d0:	00e65021 	addu	t2,a3,a2
9d0097d4:	72493802 	mul	a3,s2,t1
9d0097d8:	000a3402 	srl	a2,t2,0x10
9d0097dc:	314affff 	andi	t2,t2,0xffff
9d0097e0:	00e64821 	addu	t1,a3,a2
9d0097e4:	3107ffff 	andi	a3,t0,0xffff
9d0097e8:	00872021 	addu	a0,a0,a3
9d0097ec:	008a3823 	subu	a3,a0,t2
9d0097f0:	00093402 	srl	a2,t1,0x10
9d0097f4:	00084402 	srl	t0,t0,0x10
9d0097f8:	3129ffff 	andi	t1,t1,0xffff
9d0097fc:	00072403 	sra	a0,a3,0x10
9d009800:	01094023 	subu	t0,t0,t1
9d009804:	01044021 	addu	t0,t0,a0
9d009808:	00082403 	sra	a0,t0,0x10
9d00980c:	30e7ffff 	andi	a3,a3,0xffff
9d009810:	00084400 	sll	t0,t0,0x10
9d009814:	01073825 	or	a3,t0,a3
9d009818:	ac470000 	sw	a3,0(v0)
9d00981c:	02c3382b 	sltu	a3,s6,v1
9d009820:	10e0ffe5 	beqz	a3,9d0097b8 <quorem+0x88>
9d009824:	24420004 	addiu	v0,v0,4
9d009828:	26220004 	addiu	v0,s1,4
9d00982c:	00021080 	sll	v0,v0,0x2
9d009830:	02021021 	addu	v0,s0,v0
9d009834:	8c430004 	lw	v1,4(v0)
9d009838:	14600009 	bnez	v1,9d009860 <quorem+0x130>
9d00983c:	24420004 	addiu	v0,v0,4
9d009840:	2442fffc 	addiu	v0,v0,-4
9d009844:	0282182b 	sltu	v1,s4,v0
9d009848:	50600005 	beqzl	v1,9d009860 <quorem+0x130>
9d00984c:	ae110010 	sw	s1,16(s0)
9d009850:	8c430000 	lw	v1,0(v0)
9d009854:	5060fffa 	beqzl	v1,9d009840 <quorem+0x110>
9d009858:	2631ffff 	addiu	s1,s1,-1
9d00985c:	ae110010 	sw	s1,16(s0)
9d009860:	0f402e14 	jal	9d00b850 <__mcmp>
9d009864:	02002021 	move	a0,s0
9d009868:	04400027 	bltz	v0,9d009908 <quorem+0x1d8>
9d00986c:	02801021 	move	v0,s4
9d009870:	26550001 	addiu	s5,s2,1
9d009874:	00001821 	move	v1,zero
9d009878:	8e660000 	lw	a2,0(s3)
9d00987c:	8c450000 	lw	a1,0(v0)
9d009880:	26730004 	addiu	s3,s3,4
9d009884:	30c4ffff 	andi	a0,a2,0xffff
9d009888:	30a7ffff 	andi	a3,a1,0xffff
9d00988c:	00e42023 	subu	a0,a3,a0
9d009890:	00832021 	addu	a0,a0,v1
9d009894:	00052c02 	srl	a1,a1,0x10
9d009898:	00063402 	srl	a2,a2,0x10
9d00989c:	00041c03 	sra	v1,a0,0x10
9d0098a0:	00a62823 	subu	a1,a1,a2
9d0098a4:	00a32821 	addu	a1,a1,v1
9d0098a8:	00051c03 	sra	v1,a1,0x10
9d0098ac:	3084ffff 	andi	a0,a0,0xffff
9d0098b0:	00052c00 	sll	a1,a1,0x10
9d0098b4:	00a42025 	or	a0,a1,a0
9d0098b8:	ac440000 	sw	a0,0(v0)
9d0098bc:	02d3202b 	sltu	a0,s6,s3
9d0098c0:	1080ffed 	beqz	a0,9d009878 <quorem+0x148>
9d0098c4:	24420004 	addiu	v0,v0,4
9d0098c8:	26220004 	addiu	v0,s1,4
9d0098cc:	00021080 	sll	v0,v0,0x2
9d0098d0:	02021021 	addu	v0,s0,v0
9d0098d4:	8c430004 	lw	v1,4(v0)
9d0098d8:	10600003 	beqz	v1,9d0098e8 <quorem+0x1b8>
9d0098dc:	24420004 	addiu	v0,v0,4
9d0098e0:	0b402643 	j	9d00990c <quorem+0x1dc>
9d0098e4:	02a01021 	move	v0,s5
9d0098e8:	2442fffc 	addiu	v0,v0,-4
9d0098ec:	0282182b 	sltu	v1,s4,v0
9d0098f0:	50600005 	beqzl	v1,9d009908 <quorem+0x1d8>
9d0098f4:	ae110010 	sw	s1,16(s0)
9d0098f8:	8c430000 	lw	v1,0(v0)
9d0098fc:	5060fffa 	beqzl	v1,9d0098e8 <quorem+0x1b8>
9d009900:	2631ffff 	addiu	s1,s1,-1
9d009904:	ae110010 	sw	s1,16(s0)
9d009908:	02a01021 	move	v0,s5
9d00990c:	8fbf002c 	lw	ra,44(sp)
9d009910:	8fb60028 	lw	s6,40(sp)
9d009914:	8fb50024 	lw	s5,36(sp)
9d009918:	8fb40020 	lw	s4,32(sp)
9d00991c:	8fb3001c 	lw	s3,28(sp)
9d009920:	8fb20018 	lw	s2,24(sp)
9d009924:	8fb10014 	lw	s1,20(sp)
9d009928:	8fb00010 	lw	s0,16(sp)
9d00992c:	03e00008 	jr	ra
9d009930:	27bd0030 	addiu	sp,sp,48

9d009934 <_dtoa_r>:
9d009934:	8c850040 	lw	a1,64(a0)
9d009938:	27bdff58 	addiu	sp,sp,-168
9d00993c:	afb60098 	sw	s6,152(sp)
9d009940:	afb20088 	sw	s2,136(sp)
9d009944:	afb10084 	sw	s1,132(sp)
9d009948:	afb00080 	sw	s0,128(sp)
9d00994c:	afbf00a4 	sw	ra,164(sp)
9d009950:	afbe00a0 	sw	s8,160(sp)
9d009954:	afb7009c 	sw	s7,156(sp)
9d009958:	afb50094 	sw	s5,148(sp)
9d00995c:	afb40090 	sw	s4,144(sp)
9d009960:	afb3008c 	sw	s3,140(sp)
9d009964:	00808821 	move	s1,a0
9d009968:	8fb200c4 	lw	s2,196(sp)
9d00996c:	00c0b021 	move	s6,a2
9d009970:	10a00008 	beqz	a1,9d009994 <_dtoa_r+0x60>
9d009974:	00e08021 	move	s0,a3
9d009978:	8c820044 	lw	v0,68(a0)
9d00997c:	24030001 	li	v1,1
9d009980:	aca20004 	sw	v0,4(a1)
9d009984:	00431004 	sllv	v0,v1,v0
9d009988:	0f402c67 	jal	9d00b19c <_Bfree>
9d00998c:	aca20008 	sw	v0,8(a1)
9d009990:	ae200040 	sw	zero,64(s1)
9d009994:	06030004 	bgezl	s0,9d0099a8 <_dtoa_r+0x74>
9d009998:	ae400000 	sw	zero,0(s2)
9d00999c:	24020001 	li	v0,1
9d0099a0:	ae420000 	sw	v0,0(s2)
9d0099a4:	7e10f000 	ext	s0,s0,0x0,0x1f
9d0099a8:	3c027ff0 	lui	v0,0x7ff0
9d0099ac:	02021824 	and	v1,s0,v0
9d0099b0:	14620015 	bne	v1,v0,9d009a08 <_dtoa_r+0xd4>
9d0099b4:	02c02021 	move	a0,s6
9d0099b8:	8fa300c0 	lw	v1,192(sp)
9d0099bc:	2402270f 	li	v0,9999
9d0099c0:	16c00004 	bnez	s6,9d0099d4 <_dtoa_r+0xa0>
9d0099c4:	ac620000 	sw	v0,0(v1)
9d0099c8:	7e109800 	ext	s0,s0,0x0,0x14
9d0099cc:	52000004 	beqzl	s0,9d0099e0 <_dtoa_r+0xac>
9d0099d0:	3c029d01 	lui	v0,0x9d01
9d0099d4:	3c029d01 	lui	v0,0x9d01
9d0099d8:	0b402679 	j	9d0099e4 <_dtoa_r+0xb0>
9d0099dc:	2442664c 	addiu	v0,v0,26188
9d0099e0:	24426640 	addiu	v0,v0,26176
9d0099e4:	8fa400c8 	lw	a0,200(sp)
9d0099e8:	1080049f 	beqz	a0,9d00ac68 <_dtoa_r+0x1334>
9d0099ec:	24430003 	addiu	v1,v0,3
9d0099f0:	80450003 	lb	a1,3(v0)
9d0099f4:	24440008 	addiu	a0,v0,8
9d0099f8:	0085180b 	movn	v1,a0,a1
9d0099fc:	8fa500c8 	lw	a1,200(sp)
9d009a00:	0b402b1a 	j	9d00ac68 <_dtoa_r+0x1334>
9d009a04:	aca30000 	sw	v1,0(a1)
9d009a08:	02002821 	move	a1,s0
9d009a0c:	00003021 	move	a2,zero
9d009a10:	0f401775 	jal	9d005dd4 <__eqdf2>
9d009a14:	00003821 	move	a3,zero
9d009a18:	5440000d 	bnezl	v0,9d009a50 <_dtoa_r+0x11c>
9d009a1c:	27a2001c 	addiu	v0,sp,28
9d009a20:	8fa600c0 	lw	a2,192(sp)
9d009a24:	8fa300c8 	lw	v1,200(sp)
9d009a28:	24020001 	li	v0,1
9d009a2c:	acc20000 	sw	v0,0(a2)
9d009a30:	3c029d01 	lui	v0,0x9d01
9d009a34:	1060048c 	beqz	v1,9d00ac68 <_dtoa_r+0x1334>
9d009a38:	244264b8 	addiu	v0,v0,25784
9d009a3c:	8fa400c8 	lw	a0,200(sp)
9d009a40:	3c039d01 	lui	v1,0x9d01
9d009a44:	246364b9 	addiu	v1,v1,25785
9d009a48:	0b402b1a 	j	9d00ac68 <_dtoa_r+0x1334>
9d009a4c:	ac830000 	sw	v1,0(a0)
9d009a50:	afa20010 	sw	v0,16(sp)
9d009a54:	02202021 	move	a0,s1
9d009a58:	27a20018 	addiu	v0,sp,24
9d009a5c:	02c03021 	move	a2,s6
9d009a60:	02003821 	move	a3,s0
9d009a64:	afa20014 	sw	v0,20(sp)
9d009a68:	0f402e8e 	jal	9d00ba38 <__d2b>
9d009a6c:	7e1e5500 	ext	s8,s0,0x14,0xb
9d009a70:	13c00009 	beqz	s8,9d009a98 <_dtoa_r+0x164>
9d009a74:	0040a021 	move	s4,v0
9d009a78:	7e139800 	ext	s3,s0,0x0,0x14
9d009a7c:	3c023ff0 	lui	v0,0x3ff0
9d009a80:	02621025 	or	v0,s3,v0
9d009a84:	afb60050 	sw	s6,80(sp)
9d009a88:	afa20054 	sw	v0,84(sp)
9d009a8c:	27defc01 	addiu	s8,s8,-1023
9d009a90:	0b4026bc 	j	9d009af0 <_dtoa_r+0x1bc>
9d009a94:	afa00058 	sw	zero,88(sp)
9d009a98:	8fa2001c 	lw	v0,28(sp)
9d009a9c:	8fa40018 	lw	a0,24(sp)
9d009aa0:	00822021 	addu	a0,a0,v0
9d009aa4:	249e0432 	addiu	s8,a0,1074
9d009aa8:	2bc20021 	slti	v0,s8,33
9d009aac:	54400007 	bnezl	v0,9d009acc <_dtoa_r+0x198>
9d009ab0:	001e2023 	negu	a0,s8
9d009ab4:	24840412 	addiu	a0,a0,1042
9d009ab8:	001e1023 	negu	v0,s8
9d009abc:	00962006 	srlv	a0,s6,a0
9d009ac0:	00501004 	sllv	v0,s0,v0
9d009ac4:	0b4026b4 	j	9d009ad0 <_dtoa_r+0x19c>
9d009ac8:	00822025 	or	a0,a0,v0
9d009acc:	00962004 	sllv	a0,s6,a0
9d009ad0:	0f401c12 	jal	9d007048 <__floatunsidf>
9d009ad4:	3c13fe10 	lui	s3,0xfe10
9d009ad8:	02631821 	addu	v1,s3,v1
9d009adc:	24050001 	li	a1,1
9d009ae0:	afa20050 	sw	v0,80(sp)
9d009ae4:	afa30054 	sw	v1,84(sp)
9d009ae8:	27defbcd 	addiu	s8,s8,-1075
9d009aec:	afa50058 	sw	a1,88(sp)
9d009af0:	8fa20054 	lw	v0,84(sp)
9d009af4:	8fa30050 	lw	v1,80(sp)
9d009af8:	00402821 	move	a1,v0
9d009afc:	3c029d01 	lui	v0,0x9d01
9d009b00:	8c466650 	lw	a2,26192(v0)
9d009b04:	8c476654 	lw	a3,26196(v0)
9d009b08:	0f401984 	jal	9d006610 <__subdf3>
9d009b0c:	00602021 	move	a0,v1
9d009b10:	00402021 	move	a0,v0
9d009b14:	3c029d01 	lui	v0,0x9d01
9d009b18:	8c466658 	lw	a2,26200(v0)
9d009b1c:	8c47665c 	lw	a3,26204(v0)
9d009b20:	0f401829 	jal	9d0060a4 <__muldf3>
9d009b24:	00602821 	move	a1,v1
9d009b28:	00402021 	move	a0,v0
9d009b2c:	3c029d01 	lui	v0,0x9d01
9d009b30:	8c466660 	lw	a2,26208(v0)
9d009b34:	8c476664 	lw	a3,26212(v0)
9d009b38:	0f40138c 	jal	9d004e30 <__adddf3>
9d009b3c:	00602821 	move	a1,v1
9d009b40:	03c02021 	move	a0,s8
9d009b44:	00409021 	move	s2,v0
9d009b48:	0f401be6 	jal	9d006f98 <__floatsidf>
9d009b4c:	00609821 	move	s3,v1
9d009b50:	00402021 	move	a0,v0
9d009b54:	3c029d01 	lui	v0,0x9d01
9d009b58:	8c466668 	lw	a2,26216(v0)
9d009b5c:	8c47666c 	lw	a3,26220(v0)
9d009b60:	0f401829 	jal	9d0060a4 <__muldf3>
9d009b64:	00602821 	move	a1,v1
9d009b68:	00403021 	move	a2,v0
9d009b6c:	02402021 	move	a0,s2
9d009b70:	02602821 	move	a1,s3
9d009b74:	0f40138c 	jal	9d004e30 <__adddf3>
9d009b78:	00603821 	move	a3,v1
9d009b7c:	0060a821 	move	s5,v1
9d009b80:	00401821 	move	v1,v0
9d009b84:	00409821 	move	s3,v0
9d009b88:	00602021 	move	a0,v1
9d009b8c:	0f401bc6 	jal	9d006f18 <__fixdfsi>
9d009b90:	02a02821 	move	a1,s5
9d009b94:	02602021 	move	a0,s3
9d009b98:	02a02821 	move	a1,s5
9d009b9c:	00003021 	move	a2,zero
9d009ba0:	00003821 	move	a3,zero
9d009ba4:	0f4017e0 	jal	9d005f80 <__ledf2>
9d009ba8:	00409021 	move	s2,v0
9d009bac:	0441000b 	bgez	v0,9d009bdc <_dtoa_r+0x2a8>
9d009bb0:	24060001 	li	a2,1
9d009bb4:	0f401be6 	jal	9d006f98 <__floatsidf>
9d009bb8:	02402021 	move	a0,s2
9d009bbc:	00403021 	move	a2,v0
9d009bc0:	02602021 	move	a0,s3
9d009bc4:	02a02821 	move	a1,s5
9d009bc8:	0f401775 	jal	9d005dd4 <__eqdf2>
9d009bcc:	00603821 	move	a3,v1
9d009bd0:	0002102b 	sltu	v0,zero,v0
9d009bd4:	02429023 	subu	s2,s2,v0
9d009bd8:	24060001 	li	a2,1
9d009bdc:	2e420017 	sltiu	v0,s2,23
9d009be0:	1040000d 	beqz	v0,9d009c18 <_dtoa_r+0x2e4>
9d009be4:	afa6004c 	sw	a2,76(sp)
9d009be8:	3c029d01 	lui	v0,0x9d01
9d009bec:	001218c0 	sll	v1,s2,0x3
9d009bf0:	244266a8 	addiu	v0,v0,26280
9d009bf4:	00621021 	addu	v0,v1,v0
9d009bf8:	8c440000 	lw	a0,0(v0)
9d009bfc:	8c450004 	lw	a1,4(v0)
9d009c00:	02c03021 	move	a2,s6
9d009c04:	0f401797 	jal	9d005e5c <__gedf2>
9d009c08:	02003821 	move	a3,s0
9d009c0c:	5c400001 	bgtzl	v0,9d009c14 <_dtoa_r+0x2e0>
9d009c10:	2652ffff 	addiu	s2,s2,-1
9d009c14:	afa0004c 	sw	zero,76(sp)
9d009c18:	8fb70018 	lw	s7,24(sp)
9d009c1c:	26f7ffff 	addiu	s7,s7,-1
9d009c20:	02feb823 	subu	s7,s7,s8
9d009c24:	06e30004 	bgezl	s7,9d009c38 <_dtoa_r+0x304>
9d009c28:	afb70020 	sw	s7,32(sp)
9d009c2c:	0017b823 	negu	s7,s7
9d009c30:	0b40270f 	j	9d009c3c <_dtoa_r+0x308>
9d009c34:	afa00020 	sw	zero,32(sp)
9d009c38:	0000b821 	move	s7,zero
9d009c3c:	06400006 	bltz	s2,9d009c58 <_dtoa_r+0x324>
9d009c40:	8fa20020 	lw	v0,32(sp)
9d009c44:	afb20048 	sw	s2,72(sp)
9d009c48:	0000a821 	move	s5,zero
9d009c4c:	00521021 	addu	v0,v0,s2
9d009c50:	0b402719 	j	9d009c64 <_dtoa_r+0x330>
9d009c54:	afa20020 	sw	v0,32(sp)
9d009c58:	02f2b823 	subu	s7,s7,s2
9d009c5c:	0012a823 	negu	s5,s2
9d009c60:	afa00048 	sw	zero,72(sp)
9d009c64:	8fa300b8 	lw	v1,184(sp)
9d009c68:	2c62000a 	sltiu	v0,v1,10
9d009c6c:	1040001c 	beqz	v0,9d009ce0 <_dtoa_r+0x3ac>
9d009c70:	24130001 	li	s3,1
9d009c74:	28620006 	slti	v0,v1,6
9d009c78:	14400003 	bnez	v0,9d009c88 <_dtoa_r+0x354>
9d009c7c:	2463fffc 	addiu	v1,v1,-4
9d009c80:	afa300b8 	sw	v1,184(sp)
9d009c84:	00009821 	move	s3,zero
9d009c88:	8fa400b8 	lw	a0,184(sp)
9d009c8c:	24020003 	li	v0,3
9d009c90:	10820023 	beq	a0,v0,9d009d20 <_dtoa_r+0x3ec>
9d009c94:	28820004 	slti	v0,a0,4
9d009c98:	10400006 	beqz	v0,9d009cb4 <_dtoa_r+0x380>
9d009c9c:	8fa500b8 	lw	a1,184(sp)
9d009ca0:	24020002 	li	v0,2
9d009ca4:	14820010 	bne	a0,v0,9d009ce8 <_dtoa_r+0x3b4>
9d009ca8:	24030001 	li	v1,1
9d009cac:	0b402741 	j	9d009d04 <_dtoa_r+0x3d0>
9d009cb0:	afa00040 	sw	zero,64(sp)
9d009cb4:	24020004 	li	v0,4
9d009cb8:	10a20006 	beq	a1,v0,9d009cd4 <_dtoa_r+0x3a0>
9d009cbc:	24020005 	li	v0,5
9d009cc0:	14a20009 	bne	a1,v0,9d009ce8 <_dtoa_r+0x3b4>
9d009cc4:	24030001 	li	v1,1
9d009cc8:	24060001 	li	a2,1
9d009ccc:	0b402749 	j	9d009d24 <_dtoa_r+0x3f0>
9d009cd0:	afa60040 	sw	a2,64(sp)
9d009cd4:	24020001 	li	v0,1
9d009cd8:	0b402741 	j	9d009d04 <_dtoa_r+0x3d0>
9d009cdc:	afa20040 	sw	v0,64(sp)
9d009ce0:	afa000b8 	sw	zero,184(sp)
9d009ce4:	24030001 	li	v1,1
9d009ce8:	2404ffff 	li	a0,-1
9d009cec:	afa30040 	sw	v1,64(sp)
9d009cf0:	afa40044 	sw	a0,68(sp)
9d009cf4:	241effff 	li	s8,-1
9d009cf8:	24020012 	li	v0,18
9d009cfc:	0b402754 	j	9d009d50 <_dtoa_r+0x41c>
9d009d00:	afa000bc 	sw	zero,188(sp)
9d009d04:	8fa500bc 	lw	a1,188(sp)
9d009d08:	58a0000e 	blezl	a1,9d009d44 <_dtoa_r+0x410>
9d009d0c:	24020001 	li	v0,1
9d009d10:	afa50044 	sw	a1,68(sp)
9d009d14:	00a0f021 	move	s8,a1
9d009d18:	0b402754 	j	9d009d50 <_dtoa_r+0x41c>
9d009d1c:	00a01021 	move	v0,a1
9d009d20:	afa00040 	sw	zero,64(sp)
9d009d24:	8fa600bc 	lw	a2,188(sp)
9d009d28:	02463021 	addu	a2,s2,a2
9d009d2c:	24c20001 	addiu	v0,a2,1
9d009d30:	afa60044 	sw	a2,68(sp)
9d009d34:	1c400006 	bgtz	v0,9d009d50 <_dtoa_r+0x41c>
9d009d38:	0040f021 	move	s8,v0
9d009d3c:	0b402754 	j	9d009d50 <_dtoa_r+0x41c>
9d009d40:	24020001 	li	v0,1
9d009d44:	afa20044 	sw	v0,68(sp)
9d009d48:	241e0001 	li	s8,1
9d009d4c:	afa200bc 	sw	v0,188(sp)
9d009d50:	ae200044 	sw	zero,68(s1)
9d009d54:	0b40275a 	j	9d009d68 <_dtoa_r+0x434>
9d009d58:	24030004 	li	v1,4
9d009d5c:	00031840 	sll	v1,v1,0x1
9d009d60:	24840001 	addiu	a0,a0,1
9d009d64:	ae240044 	sw	a0,68(s1)
9d009d68:	24640014 	addiu	a0,v1,20
9d009d6c:	0044202b 	sltu	a0,v0,a0
9d009d70:	5080fffa 	beqzl	a0,9d009d5c <_dtoa_r+0x428>
9d009d74:	8e240044 	lw	a0,68(s1)
9d009d78:	8e250044 	lw	a1,68(s1)
9d009d7c:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d009d80:	02202021 	move	a0,s1
9d009d84:	afa2002c 	sw	v0,44(sp)
9d009d88:	ae220040 	sw	v0,64(s1)
9d009d8c:	2fc2000f 	sltiu	v0,s8,15
9d009d90:	10400173 	beqz	v0,9d00a360 <_dtoa_r+0xa2c>
9d009d94:	8fa2001c 	lw	v0,28(sp)
9d009d98:	12600171 	beqz	s3,9d00a360 <_dtoa_r+0xa2c>
9d009d9c:	00000000 	nop
9d009da0:	afb60050 	sw	s6,80(sp)
9d009da4:	1a40003a 	blez	s2,9d009e90 <_dtoa_r+0x55c>
9d009da8:	afb00054 	sw	s0,84(sp)
9d009dac:	3244000f 	andi	a0,s2,0xf
9d009db0:	3c029d01 	lui	v0,0x9d01
9d009db4:	000420c0 	sll	a0,a0,0x3
9d009db8:	244266a8 	addiu	v0,v0,26280
9d009dbc:	00821021 	addu	v0,a0,v0
9d009dc0:	00124103 	sra	t0,s2,0x4
9d009dc4:	8c490000 	lw	t1,0(v0)
9d009dc8:	8c4b0004 	lw	t3,4(v0)
9d009dcc:	31020010 	andi	v0,t0,0x10
9d009dd0:	3c0a9d01 	lui	t2,0x9d01
9d009dd4:	10400013 	beqz	v0,9d009e24 <_dtoa_r+0x4f0>
9d009dd8:	24130002 	li	s3,2
9d009ddc:	25426770 	addiu	v0,t2,26480
9d009de0:	8c460020 	lw	a2,32(v0)
9d009de4:	8c470024 	lw	a3,36(v0)
9d009de8:	3108000f 	andi	t0,t0,0xf
9d009dec:	02c02021 	move	a0,s6
9d009df0:	02002821 	move	a1,s0
9d009df4:	afa8007c 	sw	t0,124(sp)
9d009df8:	afa90070 	sw	t1,112(sp)
9d009dfc:	afaa0078 	sw	t2,120(sp)
9d009e00:	0f4015bd 	jal	9d0056f4 <__divdf3>
9d009e04:	afab0074 	sw	t3,116(sp)
9d009e08:	8fab0074 	lw	t3,116(sp)
9d009e0c:	8faa0078 	lw	t2,120(sp)
9d009e10:	8fa90070 	lw	t1,112(sp)
9d009e14:	8fa8007c 	lw	t0,124(sp)
9d009e18:	0040b021 	move	s6,v0
9d009e1c:	00608021 	move	s0,v1
9d009e20:	24130003 	li	s3,3
9d009e24:	0b40279b 	j	9d009e6c <_dtoa_r+0x538>
9d009e28:	254a6770 	addiu	t2,t2,26480
9d009e2c:	5040000e 	beqzl	v0,9d009e68 <_dtoa_r+0x534>
9d009e30:	00084043 	sra	t0,t0,0x1
9d009e34:	8d460000 	lw	a2,0(t2)
9d009e38:	8d470004 	lw	a3,4(t2)
9d009e3c:	01202021 	move	a0,t1
9d009e40:	01602821 	move	a1,t3
9d009e44:	afa8007c 	sw	t0,124(sp)
9d009e48:	0f401829 	jal	9d0060a4 <__muldf3>
9d009e4c:	afaa0078 	sw	t2,120(sp)
9d009e50:	8faa0078 	lw	t2,120(sp)
9d009e54:	8fa8007c 	lw	t0,124(sp)
9d009e58:	26730001 	addiu	s3,s3,1
9d009e5c:	00404821 	move	t1,v0
9d009e60:	00605821 	move	t3,v1
9d009e64:	00084043 	sra	t0,t0,0x1
9d009e68:	254a0008 	addiu	t2,t2,8
9d009e6c:	1500ffef 	bnez	t0,9d009e2c <_dtoa_r+0x4f8>
9d009e70:	31020001 	andi	v0,t0,0x1
9d009e74:	02c02021 	move	a0,s6
9d009e78:	02002821 	move	a1,s0
9d009e7c:	01203021 	move	a2,t1
9d009e80:	0f4015bd 	jal	9d0056f4 <__divdf3>
9d009e84:	01603821 	move	a3,t3
9d009e88:	0b4027c6 	j	9d009f18 <_dtoa_r+0x5e4>
9d009e8c:	0040b021 	move	s6,v0
9d009e90:	00124023 	negu	t0,s2
9d009e94:	11000021 	beqz	t0,9d009f1c <_dtoa_r+0x5e8>
9d009e98:	24130002 	li	s3,2
9d009e9c:	3104000f 	andi	a0,t0,0xf
9d009ea0:	3c029d01 	lui	v0,0x9d01
9d009ea4:	000420c0 	sll	a0,a0,0x3
9d009ea8:	244266a8 	addiu	v0,v0,26280
9d009eac:	00821021 	addu	v0,a0,v0
9d009eb0:	8c460000 	lw	a2,0(v0)
9d009eb4:	8c470004 	lw	a3,4(v0)
9d009eb8:	02c02021 	move	a0,s6
9d009ebc:	02002821 	move	a1,s0
9d009ec0:	0f401829 	jal	9d0060a4 <__muldf3>
9d009ec4:	afa8007c 	sw	t0,124(sp)
9d009ec8:	8fa8007c 	lw	t0,124(sp)
9d009ecc:	0008b103 	sra	s6,t0,0x4
9d009ed0:	3c089d01 	lui	t0,0x9d01
9d009ed4:	0b4027c3 	j	9d009f0c <_dtoa_r+0x5d8>
9d009ed8:	25086770 	addiu	t0,t0,26480
9d009edc:	5080000a 	beqzl	a0,9d009f08 <_dtoa_r+0x5d4>
9d009ee0:	0016b043 	sra	s6,s6,0x1
9d009ee4:	8d060000 	lw	a2,0(t0)
9d009ee8:	8d070004 	lw	a3,4(t0)
9d009eec:	00402021 	move	a0,v0
9d009ef0:	00602821 	move	a1,v1
9d009ef4:	0f401829 	jal	9d0060a4 <__muldf3>
9d009ef8:	afa8007c 	sw	t0,124(sp)
9d009efc:	8fa8007c 	lw	t0,124(sp)
9d009f00:	26730001 	addiu	s3,s3,1
9d009f04:	0016b043 	sra	s6,s6,0x1
9d009f08:	25080008 	addiu	t0,t0,8
9d009f0c:	16c0fff3 	bnez	s6,9d009edc <_dtoa_r+0x5a8>
9d009f10:	32c40001 	andi	a0,s6,0x1
9d009f14:	0040b021 	move	s6,v0
9d009f18:	00608021 	move	s0,v1
9d009f1c:	8fa3004c 	lw	v1,76(sp)
9d009f20:	5060001e 	beqzl	v1,9d009f9c <_dtoa_r+0x668>
9d009f24:	afb20030 	sw	s2,48(sp)
9d009f28:	3c029d01 	lui	v0,0x9d01
9d009f2c:	8c466670 	lw	a2,26224(v0)
9d009f30:	8c476674 	lw	a3,26228(v0)
9d009f34:	02c02021 	move	a0,s6
9d009f38:	02002821 	move	a1,s0
9d009f3c:	afb60074 	sw	s6,116(sp)
9d009f40:	0f4017e0 	jal	9d005f80 <__ledf2>
9d009f44:	afb0007c 	sw	s0,124(sp)
9d009f48:	8fa30074 	lw	v1,116(sp)
9d009f4c:	04410012 	bgez	v0,9d009f98 <_dtoa_r+0x664>
9d009f50:	8fa8007c 	lw	t0,124(sp)
9d009f54:	13c00013 	beqz	s8,9d009fa4 <_dtoa_r+0x670>
9d009f58:	8fa40044 	lw	a0,68(sp)
9d009f5c:	188000fd 	blez	a0,9d00a354 <_dtoa_r+0xa20>
9d009f60:	3c029d01 	lui	v0,0x9d01
9d009f64:	8c466678 	lw	a2,26232(v0)
9d009f68:	8c47667c 	lw	a3,26236(v0)
9d009f6c:	2645ffff 	addiu	a1,s2,-1
9d009f70:	afa50030 	sw	a1,48(sp)
9d009f74:	00602021 	move	a0,v1
9d009f78:	0f401829 	jal	9d0060a4 <__muldf3>
9d009f7c:	01002821 	move	a1,t0
9d009f80:	8fa60044 	lw	a2,68(sp)
9d009f84:	0040b021 	move	s6,v0
9d009f88:	00608021 	move	s0,v1
9d009f8c:	26730001 	addiu	s3,s3,1
9d009f90:	0b4027eb 	j	9d009fac <_dtoa_r+0x678>
9d009f94:	afa60028 	sw	a2,40(sp)
9d009f98:	afb20030 	sw	s2,48(sp)
9d009f9c:	0b4027eb 	j	9d009fac <_dtoa_r+0x678>
9d009fa0:	afbe0028 	sw	s8,40(sp)
9d009fa4:	afb20030 	sw	s2,48(sp)
9d009fa8:	afa00028 	sw	zero,40(sp)
9d009fac:	02602021 	move	a0,s3
9d009fb0:	afb6003c 	sw	s6,60(sp)
9d009fb4:	0f401be6 	jal	9d006f98 <__floatsidf>
9d009fb8:	afb00038 	sw	s0,56(sp)
9d009fbc:	8fa6003c 	lw	a2,60(sp)
9d009fc0:	8fa70038 	lw	a3,56(sp)
9d009fc4:	00402021 	move	a0,v0
9d009fc8:	0f401829 	jal	9d0060a4 <__muldf3>
9d009fcc:	00602821 	move	a1,v1
9d009fd0:	00402021 	move	a0,v0
9d009fd4:	3c029d01 	lui	v0,0x9d01
9d009fd8:	8c466680 	lw	a2,26240(v0)
9d009fdc:	8c476684 	lw	a3,26244(v0)
9d009fe0:	0f40138c 	jal	9d004e30 <__adddf3>
9d009fe4:	00602821 	move	a1,v1
9d009fe8:	00409821 	move	s3,v0
9d009fec:	3c02fcc0 	lui	v0,0xfcc0
9d009ff0:	00431821 	addu	v1,v0,v1
9d009ff4:	8fa20028 	lw	v0,40(sp)
9d009ff8:	1440001e 	bnez	v0,9d00a074 <_dtoa_r+0x740>
9d009ffc:	afa30034 	sw	v1,52(sp)
9d00a000:	3c029d01 	lui	v0,0x9d01
9d00a004:	8fa4003c 	lw	a0,60(sp)
9d00a008:	8fa50038 	lw	a1,56(sp)
9d00a00c:	8c466688 	lw	a2,26248(v0)
9d00a010:	0f401984 	jal	9d006610 <__subdf3>
9d00a014:	8c47668c 	lw	a3,26252(v0)
9d00a018:	0060b021 	move	s6,v1
9d00a01c:	00408021 	move	s0,v0
9d00a020:	00401821 	move	v1,v0
9d00a024:	8fa20034 	lw	v0,52(sp)
9d00a028:	00602021 	move	a0,v1
9d00a02c:	02c02821 	move	a1,s6
9d00a030:	02603021 	move	a2,s3
9d00a034:	0f401797 	jal	9d005e5c <__gedf2>
9d00a038:	00403821 	move	a3,v0
9d00a03c:	5c40021e 	bgtzl	v0,9d00a8b8 <_dtoa_r+0xf84>
9d00a040:	8fb20030 	lw	s2,48(sp)
9d00a044:	8fa60034 	lw	a2,52(sp)
9d00a048:	3c028000 	lui	v0,0x8000
9d00a04c:	02002021 	move	a0,s0
9d00a050:	00461026 	xor	v0,v0,a2
9d00a054:	02c02821 	move	a1,s6
9d00a058:	02603021 	move	a2,s3
9d00a05c:	0f4017e0 	jal	9d005f80 <__ledf2>
9d00a060:	00403821 	move	a3,v0
9d00a064:	0442020f 	bltzl	v0,9d00a8a4 <_dtoa_r+0xf70>
9d00a068:	0000a821 	move	s5,zero
9d00a06c:	0b4028d6 	j	9d00a358 <_dtoa_r+0xa24>
9d00a070:	8fb60050 	lw	s6,80(sp)
9d00a074:	8fa40028 	lw	a0,40(sp)
9d00a078:	8fa50040 	lw	a1,64(sp)
9d00a07c:	3c039d01 	lui	v1,0x9d01
9d00a080:	246366a8 	addiu	v1,v1,26280
9d00a084:	10a0005c 	beqz	a1,9d00a1f8 <_dtoa_r+0x8c4>
9d00a088:	2482ffff 	addiu	v0,a0,-1
9d00a08c:	000210c0 	sll	v0,v0,0x3
9d00a090:	00621021 	addu	v0,v1,v0
9d00a094:	3c039d01 	lui	v1,0x9d01
9d00a098:	8c646690 	lw	a0,26256(v1)
9d00a09c:	8c656694 	lw	a1,26260(v1)
9d00a0a0:	8c460000 	lw	a2,0(v0)
9d00a0a4:	0f4015bd 	jal	9d0056f4 <__divdf3>
9d00a0a8:	8c470004 	lw	a3,4(v0)
9d00a0ac:	00402021 	move	a0,v0
9d00a0b0:	8fa20034 	lw	v0,52(sp)
9d00a0b4:	02603021 	move	a2,s3
9d00a0b8:	00602821 	move	a1,v1
9d00a0bc:	0f401984 	jal	9d006610 <__subdf3>
9d00a0c0:	00403821 	move	a3,v0
9d00a0c4:	00409821 	move	s3,v0
9d00a0c8:	3c029d01 	lui	v0,0x9d01
9d00a0cc:	afa30034 	sw	v1,52(sp)
9d00a0d0:	8c436678 	lw	v1,26232(v0)
9d00a0d4:	8c42667c 	lw	v0,26236(v0)
9d00a0d8:	02003021 	move	a2,s0
9d00a0dc:	8fb0002c 	lw	s0,44(sp)
9d00a0e0:	afa0003c 	sw	zero,60(sp)
9d00a0e4:	afa3005c 	sw	v1,92(sp)
9d00a0e8:	afa20060 	sw	v0,96(sp)
9d00a0ec:	afa30064 	sw	v1,100(sp)
9d00a0f0:	afa20068 	sw	v0,104(sp)
9d00a0f4:	afb2006c 	sw	s2,108(sp)
9d00a0f8:	afb10038 	sw	s1,56(sp)
9d00a0fc:	00c02821 	move	a1,a2
9d00a100:	02c02021 	move	a0,s6
9d00a104:	0f401bc6 	jal	9d006f18 <__fixdfsi>
9d00a108:	afa60070 	sw	a2,112(sp)
9d00a10c:	00402021 	move	a0,v0
9d00a110:	0f401be6 	jal	9d006f98 <__floatsidf>
9d00a114:	afa2007c 	sw	v0,124(sp)
9d00a118:	8fa60070 	lw	a2,112(sp)
9d00a11c:	02c02021 	move	a0,s6
9d00a120:	00603821 	move	a3,v1
9d00a124:	00c02821 	move	a1,a2
9d00a128:	0f401984 	jal	9d006610 <__subdf3>
9d00a12c:	00403021 	move	a2,v0
9d00a130:	8fa8007c 	lw	t0,124(sp)
9d00a134:	00609021 	move	s2,v1
9d00a138:	00408821 	move	s1,v0
9d00a13c:	25080030 	addiu	t0,t0,48
9d00a140:	a2080000 	sb	t0,0(s0)
9d00a144:	00401821 	move	v1,v0
9d00a148:	8fa20034 	lw	v0,52(sp)
9d00a14c:	00602021 	move	a0,v1
9d00a150:	02402821 	move	a1,s2
9d00a154:	02603021 	move	a2,s3
9d00a158:	00403821 	move	a3,v0
9d00a15c:	0f4017e0 	jal	9d005f80 <__ledf2>
9d00a160:	26100001 	addiu	s0,s0,1
9d00a164:	044002b3 	bltz	v0,9d00ac34 <_dtoa_r+0x1300>
9d00a168:	3c069d01 	lui	a2,0x9d01
9d00a16c:	24c66670 	addiu	a2,a2,26224
9d00a170:	8cc40000 	lw	a0,0(a2)
9d00a174:	8cc50004 	lw	a1,4(a2)
9d00a178:	02403821 	move	a3,s2
9d00a17c:	0f401984 	jal	9d006610 <__subdf3>
9d00a180:	02203021 	move	a2,s1
9d00a184:	00402021 	move	a0,v0
9d00a188:	8fa20034 	lw	v0,52(sp)
9d00a18c:	00602821 	move	a1,v1
9d00a190:	02603021 	move	a2,s3
9d00a194:	0f4017e0 	jal	9d005f80 <__ledf2>
9d00a198:	00403821 	move	a3,v0
9d00a19c:	044000ce 	bltz	v0,9d00a4d8 <_dtoa_r+0xba4>
9d00a1a0:	8fa30028 	lw	v1,40(sp)
9d00a1a4:	8fa2003c 	lw	v0,60(sp)
9d00a1a8:	24420001 	addiu	v0,v0,1
9d00a1ac:	afa2003c 	sw	v0,60(sp)
9d00a1b0:	0043102a 	slt	v0,v0,v1
9d00a1b4:	10400065 	beqz	v0,9d00a34c <_dtoa_r+0xa18>
9d00a1b8:	8fa20034 	lw	v0,52(sp)
9d00a1bc:	8fa6005c 	lw	a2,92(sp)
9d00a1c0:	8fa70060 	lw	a3,96(sp)
9d00a1c4:	02602021 	move	a0,s3
9d00a1c8:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a1cc:	00402821 	move	a1,v0
9d00a1d0:	8fa60064 	lw	a2,100(sp)
9d00a1d4:	8fa70068 	lw	a3,104(sp)
9d00a1d8:	02202021 	move	a0,s1
9d00a1dc:	02402821 	move	a1,s2
9d00a1e0:	00409821 	move	s3,v0
9d00a1e4:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a1e8:	afa30034 	sw	v1,52(sp)
9d00a1ec:	0040b021 	move	s6,v0
9d00a1f0:	0b40283f 	j	9d00a0fc <_dtoa_r+0x7c8>
9d00a1f4:	00603021 	move	a2,v1
9d00a1f8:	000210c0 	sll	v0,v0,0x3
9d00a1fc:	00621021 	addu	v0,v1,v0
9d00a200:	8c440000 	lw	a0,0(v0)
9d00a204:	8c450004 	lw	a1,4(v0)
9d00a208:	8fa20034 	lw	v0,52(sp)
9d00a20c:	02603021 	move	a2,s3
9d00a210:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a214:	00403821 	move	a3,v0
9d00a218:	8fa4002c 	lw	a0,44(sp)
9d00a21c:	8fa50028 	lw	a1,40(sp)
9d00a220:	8fb3002c 	lw	s3,44(sp)
9d00a224:	afa20034 	sw	v0,52(sp)
9d00a228:	00852021 	addu	a0,a0,a1
9d00a22c:	afa3003c 	sw	v1,60(sp)
9d00a230:	afa40038 	sw	a0,56(sp)
9d00a234:	02c02021 	move	a0,s6
9d00a238:	0f401bc6 	jal	9d006f18 <__fixdfsi>
9d00a23c:	02002821 	move	a1,s0
9d00a240:	00402021 	move	a0,v0
9d00a244:	0f401be6 	jal	9d006f98 <__floatsidf>
9d00a248:	afa2007c 	sw	v0,124(sp)
9d00a24c:	00403021 	move	a2,v0
9d00a250:	02c02021 	move	a0,s6
9d00a254:	02002821 	move	a1,s0
9d00a258:	0f401984 	jal	9d006610 <__subdf3>
9d00a25c:	00603821 	move	a3,v1
9d00a260:	8fa8007c 	lw	t0,124(sp)
9d00a264:	25080030 	addiu	t0,t0,48
9d00a268:	a2680000 	sb	t0,0(s3)
9d00a26c:	8fa60038 	lw	a2,56(sp)
9d00a270:	26730001 	addiu	s3,s3,1
9d00a274:	1666002b 	bne	s3,a2,9d00a324 <_dtoa_r+0x9f0>
9d00a278:	0040b021 	move	s6,v0
9d00a27c:	afa30038 	sw	v1,56(sp)
9d00a280:	8fa2002c 	lw	v0,44(sp)
9d00a284:	8fa30028 	lw	v1,40(sp)
9d00a288:	3c139d01 	lui	s3,0x9d01
9d00a28c:	8e666690 	lw	a2,26256(s3)
9d00a290:	00438021 	addu	s0,v0,v1
9d00a294:	8fa30034 	lw	v1,52(sp)
9d00a298:	8fa2003c 	lw	v0,60(sp)
9d00a29c:	8e676694 	lw	a3,26260(s3)
9d00a2a0:	00602021 	move	a0,v1
9d00a2a4:	0f40138c 	jal	9d004e30 <__adddf3>
9d00a2a8:	00402821 	move	a1,v0
9d00a2ac:	8fa60038 	lw	a2,56(sp)
9d00a2b0:	02c02021 	move	a0,s6
9d00a2b4:	00603821 	move	a3,v1
9d00a2b8:	00c02821 	move	a1,a2
9d00a2bc:	0f401797 	jal	9d005e5c <__gedf2>
9d00a2c0:	00403021 	move	a2,v0
9d00a2c4:	5c400086 	bgtzl	v0,9d00a4e0 <_dtoa_r+0xbac>
9d00a2c8:	8fb20030 	lw	s2,48(sp)
9d00a2cc:	8fa30034 	lw	v1,52(sp)
9d00a2d0:	8fa2003c 	lw	v0,60(sp)
9d00a2d4:	8e646690 	lw	a0,26256(s3)
9d00a2d8:	8e656694 	lw	a1,26260(s3)
9d00a2dc:	00603021 	move	a2,v1
9d00a2e0:	0f401984 	jal	9d006610 <__subdf3>
9d00a2e4:	00403821 	move	a3,v0
9d00a2e8:	8fa50038 	lw	a1,56(sp)
9d00a2ec:	00603821 	move	a3,v1
9d00a2f0:	02c02021 	move	a0,s6
9d00a2f4:	0f4017e0 	jal	9d005f80 <__ledf2>
9d00a2f8:	00403021 	move	a2,v0
9d00a2fc:	04400004 	bltz	v0,9d00a310 <_dtoa_r+0x9dc>
9d00a300:	24030030 	li	v1,48
9d00a304:	0b4028d6 	j	9d00a358 <_dtoa_r+0xa24>
9d00a308:	8fb60050 	lw	s6,80(sp)
9d00a30c:	00808021 	move	s0,a0
9d00a310:	8202ffff 	lb	v0,-1(s0)
9d00a314:	1043fffd 	beq	v0,v1,9d00a30c <_dtoa_r+0x9d8>
9d00a318:	2604ffff 	addiu	a0,s0,-1
9d00a31c:	0b402b0f 	j	9d00ac3c <_dtoa_r+0x1308>
9d00a320:	8fb20030 	lw	s2,48(sp)
9d00a324:	00402021 	move	a0,v0
9d00a328:	3c029d01 	lui	v0,0x9d01
9d00a32c:	24426678 	addiu	v0,v0,26232
9d00a330:	8c460000 	lw	a2,0(v0)
9d00a334:	8c470004 	lw	a3,4(v0)
9d00a338:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a33c:	00602821 	move	a1,v1
9d00a340:	0040b021 	move	s6,v0
9d00a344:	0b40288d 	j	9d00a234 <_dtoa_r+0x900>
9d00a348:	00608021 	move	s0,v1
9d00a34c:	8fb2006c 	lw	s2,108(sp)
9d00a350:	8fb10038 	lw	s1,56(sp)
9d00a354:	8fb60050 	lw	s6,80(sp)
9d00a358:	8fb00054 	lw	s0,84(sp)
9d00a35c:	8fa2001c 	lw	v0,28(sp)
9d00a360:	0440007a 	bltz	v0,9d00a54c <_dtoa_r+0xc18>
9d00a364:	2a43000f 	slti	v1,s2,15
9d00a368:	10600079 	beqz	v1,9d00a550 <_dtoa_r+0xc1c>
9d00a36c:	8fa30040 	lw	v1,64(sp)
9d00a370:	3c029d01 	lui	v0,0x9d01
9d00a374:	001218c0 	sll	v1,s2,0x3
9d00a378:	244266a8 	addiu	v0,v0,26280
9d00a37c:	00621021 	addu	v0,v1,v0
9d00a380:	8c450004 	lw	a1,4(v0)
9d00a384:	8c440000 	lw	a0,0(v0)
9d00a388:	afa50024 	sw	a1,36(sp)
9d00a38c:	8fa500bc 	lw	a1,188(sp)
9d00a390:	04a10013 	bgez	a1,9d00a3e0 <_dtoa_r+0xaac>
9d00a394:	afa40020 	sw	a0,32(sp)
9d00a398:	5fc00012 	bgtzl	s8,9d00a3e4 <_dtoa_r+0xab0>
9d00a39c:	0200a821 	move	s5,s0
9d00a3a0:	17c0013f 	bnez	s8,9d00a8a0 <_dtoa_r+0xf6c>
9d00a3a4:	3c029d01 	lui	v0,0x9d01
9d00a3a8:	8fa40020 	lw	a0,32(sp)
9d00a3ac:	8fa50024 	lw	a1,36(sp)
9d00a3b0:	8c466688 	lw	a2,26248(v0)
9d00a3b4:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a3b8:	8c47668c 	lw	a3,26252(v0)
9d00a3bc:	00402021 	move	a0,v0
9d00a3c0:	00602821 	move	a1,v1
9d00a3c4:	02c03021 	move	a2,s6
9d00a3c8:	0f401797 	jal	9d005e5c <__gedf2>
9d00a3cc:	02003821 	move	a3,s0
9d00a3d0:	04410134 	bgez	v0,9d00a8a4 <_dtoa_r+0xf70>
9d00a3d4:	0000a821 	move	s5,zero
9d00a3d8:	0b402a30 	j	9d00a8c0 <_dtoa_r+0xf8c>
9d00a3dc:	00009821 	move	s3,zero
9d00a3e0:	0200a821 	move	s5,s0
9d00a3e4:	8fb0002c 	lw	s0,44(sp)
9d00a3e8:	24170001 	li	s7,1
9d00a3ec:	8fa60020 	lw	a2,32(sp)
9d00a3f0:	8fa70024 	lw	a3,36(sp)
9d00a3f4:	02c02021 	move	a0,s6
9d00a3f8:	0f4015bd 	jal	9d0056f4 <__divdf3>
9d00a3fc:	02a02821 	move	a1,s5
9d00a400:	00602821 	move	a1,v1
9d00a404:	0f401bc6 	jal	9d006f18 <__fixdfsi>
9d00a408:	00402021 	move	a0,v0
9d00a40c:	00402021 	move	a0,v0
9d00a410:	0f401be6 	jal	9d006f98 <__floatsidf>
9d00a414:	00409821 	move	s3,v0
9d00a418:	8fa60020 	lw	a2,32(sp)
9d00a41c:	8fa70024 	lw	a3,36(sp)
9d00a420:	00402021 	move	a0,v0
9d00a424:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a428:	00602821 	move	a1,v1
9d00a42c:	00403021 	move	a2,v0
9d00a430:	02c02021 	move	a0,s6
9d00a434:	02a02821 	move	a1,s5
9d00a438:	0f401984 	jal	9d006610 <__subdf3>
9d00a43c:	00603821 	move	a3,v1
9d00a440:	26640030 	addiu	a0,s3,48
9d00a444:	a2040000 	sb	a0,0(s0)
9d00a448:	16fe002d 	bne	s7,s8,9d00a500 <_dtoa_r+0xbcc>
9d00a44c:	26100001 	addiu	s0,s0,1
9d00a450:	00402021 	move	a0,v0
9d00a454:	00602821 	move	a1,v1
9d00a458:	00403021 	move	a2,v0
9d00a45c:	0f40138c 	jal	9d004e30 <__adddf3>
9d00a460:	00603821 	move	a3,v1
9d00a464:	8fa60020 	lw	a2,32(sp)
9d00a468:	8fa70024 	lw	a3,36(sp)
9d00a46c:	0060b021 	move	s6,v1
9d00a470:	00401821 	move	v1,v0
9d00a474:	00602021 	move	a0,v1
9d00a478:	02c02821 	move	a1,s6
9d00a47c:	0f401797 	jal	9d005e5c <__gedf2>
9d00a480:	0040a821 	move	s5,v0
9d00a484:	1c400017 	bgtz	v0,9d00a4e4 <_dtoa_r+0xbb0>
9d00a488:	24030039 	li	v1,57
9d00a48c:	8fa60020 	lw	a2,32(sp)
9d00a490:	8fa70024 	lw	a3,36(sp)
9d00a494:	02a02021 	move	a0,s5
9d00a498:	0f401775 	jal	9d005dd4 <__eqdf2>
9d00a49c:	02c02821 	move	a1,s6
9d00a4a0:	144001e7 	bnez	v0,9d00ac40 <_dtoa_r+0x130c>
9d00a4a4:	02202021 	move	a0,s1
9d00a4a8:	32730001 	andi	s3,s3,0x1
9d00a4ac:	1660000d 	bnez	s3,9d00a4e4 <_dtoa_r+0xbb0>
9d00a4b0:	24030039 	li	v1,57
9d00a4b4:	0b402b10 	j	9d00ac40 <_dtoa_r+0x130c>
9d00a4b8:	00000000 	nop
9d00a4bc:	8fa6002c 	lw	a2,44(sp)
9d00a4c0:	54460008 	bnel	v0,a2,9d00a4e4 <_dtoa_r+0xbb0>
9d00a4c4:	00408021 	move	s0,v0
9d00a4c8:	24030030 	li	v1,48
9d00a4cc:	26520001 	addiu	s2,s2,1
9d00a4d0:	0b40293c 	j	9d00a4f0 <_dtoa_r+0xbbc>
9d00a4d4:	a0c30000 	sb	v1,0(a2)
9d00a4d8:	8fb10038 	lw	s1,56(sp)
9d00a4dc:	8fb20030 	lw	s2,48(sp)
9d00a4e0:	24030039 	li	v1,57
9d00a4e4:	8204ffff 	lb	a0,-1(s0)
9d00a4e8:	1083fff4 	beq	a0,v1,9d00a4bc <_dtoa_r+0xb88>
9d00a4ec:	2602ffff 	addiu	v0,s0,-1
9d00a4f0:	90430000 	lbu	v1,0(v0)
9d00a4f4:	24630001 	addiu	v1,v1,1
9d00a4f8:	0b402b0f 	j	9d00ac3c <_dtoa_r+0x1308>
9d00a4fc:	a0430000 	sb	v1,0(v0)
9d00a500:	00402021 	move	a0,v0
9d00a504:	3c029d01 	lui	v0,0x9d01
9d00a508:	24426678 	addiu	v0,v0,26232
9d00a50c:	8c460000 	lw	a2,0(v0)
9d00a510:	8c470004 	lw	a3,4(v0)
9d00a514:	0f401829 	jal	9d0060a4 <__muldf3>
9d00a518:	00602821 	move	a1,v1
9d00a51c:	0060a821 	move	s5,v1
9d00a520:	00401821 	move	v1,v0
9d00a524:	00602021 	move	a0,v1
9d00a528:	02a02821 	move	a1,s5
9d00a52c:	00003021 	move	a2,zero
9d00a530:	00003821 	move	a3,zero
9d00a534:	0f401775 	jal	9d005dd4 <__eqdf2>
9d00a538:	0040b021 	move	s6,v0
9d00a53c:	504001c0 	beqzl	v0,9d00ac40 <_dtoa_r+0x130c>
9d00a540:	02202021 	move	a0,s1
9d00a544:	0b4028fb 	j	9d00a3ec <_dtoa_r+0xab8>
9d00a548:	26f70001 	addiu	s7,s7,1
9d00a54c:	8fa30040 	lw	v1,64(sp)
9d00a550:	1060002a 	beqz	v1,9d00a5fc <_dtoa_r+0xcc8>
9d00a554:	02a01821 	move	v1,s5
9d00a558:	8fa400b8 	lw	a0,184(sp)
9d00a55c:	28830002 	slti	v1,a0,2
9d00a560:	5060000a 	beqzl	v1,9d00a58c <_dtoa_r+0xc58>
9d00a564:	27c3ffff 	addiu	v1,s8,-1
9d00a568:	8fa50058 	lw	a1,88(sp)
9d00a56c:	14a00004 	bnez	a1,9d00a580 <_dtoa_r+0xc4c>
9d00a570:	24420433 	addiu	v0,v0,1075
9d00a574:	8fa20018 	lw	v0,24(sp)
9d00a578:	24030036 	li	v1,54
9d00a57c:	00621023 	subu	v0,v1,v0
9d00a580:	02a01821 	move	v1,s5
9d00a584:	0b402974 	j	9d00a5d0 <_dtoa_r+0xc9c>
9d00a588:	afb70028 	sw	s7,40(sp)
9d00a58c:	02a3102a 	slt	v0,s5,v1
9d00a590:	14400003 	bnez	v0,9d00a5a0 <_dtoa_r+0xc6c>
9d00a594:	8fa60048 	lw	a2,72(sp)
9d00a598:	0b40296d 	j	9d00a5b4 <_dtoa_r+0xc80>
9d00a59c:	02a31823 	subu	v1,s5,v1
9d00a5a0:	00751823 	subu	v1,v1,s5
9d00a5a4:	02a3a821 	addu	s5,s5,v1
9d00a5a8:	00c33021 	addu	a2,a2,v1
9d00a5ac:	afa60048 	sw	a2,72(sp)
9d00a5b0:	00001821 	move	v1,zero
9d00a5b4:	07c30005 	bgezl	s8,9d00a5cc <_dtoa_r+0xc98>
9d00a5b8:	afb70028 	sw	s7,40(sp)
9d00a5bc:	02fe1023 	subu	v0,s7,s8
9d00a5c0:	afa20028 	sw	v0,40(sp)
9d00a5c4:	0b402974 	j	9d00a5d0 <_dtoa_r+0xc9c>
9d00a5c8:	00001021 	move	v0,zero
9d00a5cc:	03c01021 	move	v0,s8
9d00a5d0:	8fa40020 	lw	a0,32(sp)
9d00a5d4:	24050001 	li	a1,1
9d00a5d8:	afa30074 	sw	v1,116(sp)
9d00a5dc:	00822021 	addu	a0,a0,v0
9d00a5e0:	afa40020 	sw	a0,32(sp)
9d00a5e4:	02202021 	move	a0,s1
9d00a5e8:	0f402cff 	jal	9d00b3fc <__i2b>
9d00a5ec:	02e2b821 	addu	s7,s7,v0
9d00a5f0:	00409821 	move	s3,v0
9d00a5f4:	0b402981 	j	9d00a604 <_dtoa_r+0xcd0>
9d00a5f8:	8fa30074 	lw	v1,116(sp)
9d00a5fc:	afb70028 	sw	s7,40(sp)
9d00a600:	00009821 	move	s3,zero
9d00a604:	8fa50028 	lw	a1,40(sp)
9d00a608:	10a0000a 	beqz	a1,9d00a634 <_dtoa_r+0xd00>
9d00a60c:	8fa60020 	lw	a2,32(sp)
9d00a610:	18c00008 	blez	a2,9d00a634 <_dtoa_r+0xd00>
9d00a614:	8fa40028 	lw	a0,40(sp)
9d00a618:	00a6102a 	slt	v0,a1,a2
9d00a61c:	00c2280a 	movz	a1,a2,v0
9d00a620:	00852023 	subu	a0,a0,a1
9d00a624:	00c53023 	subu	a2,a2,a1
9d00a628:	02e5b823 	subu	s7,s7,a1
9d00a62c:	afa40028 	sw	a0,40(sp)
9d00a630:	afa60020 	sw	a2,32(sp)
9d00a634:	1aa0001f 	blez	s5,9d00a6b4 <_dtoa_r+0xd80>
9d00a638:	8fa50040 	lw	a1,64(sp)
9d00a63c:	10a00018 	beqz	a1,9d00a6a0 <_dtoa_r+0xd6c>
9d00a640:	02202021 	move	a0,s1
9d00a644:	18600011 	blez	v1,9d00a68c <_dtoa_r+0xd58>
9d00a648:	00603021 	move	a2,v1
9d00a64c:	02602821 	move	a1,s3
9d00a650:	02202021 	move	a0,s1
9d00a654:	0f402d85 	jal	9d00b614 <__pow5mult>
9d00a658:	afa30074 	sw	v1,116(sp)
9d00a65c:	00402821 	move	a1,v0
9d00a660:	02803021 	move	a2,s4
9d00a664:	02202021 	move	a0,s1
9d00a668:	0f402d0c 	jal	9d00b430 <__multiply>
9d00a66c:	00409821 	move	s3,v0
9d00a670:	02802821 	move	a1,s4
9d00a674:	02202021 	move	a0,s1
9d00a678:	0f402c67 	jal	9d00b19c <_Bfree>
9d00a67c:	afa20070 	sw	v0,112(sp)
9d00a680:	8fa20070 	lw	v0,112(sp)
9d00a684:	8fa30074 	lw	v1,116(sp)
9d00a688:	0040a021 	move	s4,v0
9d00a68c:	02a33023 	subu	a2,s5,v1
9d00a690:	10c00009 	beqz	a2,9d00a6b8 <_dtoa_r+0xd84>
9d00a694:	02202021 	move	a0,s1
9d00a698:	0b4029aa 	j	9d00a6a8 <_dtoa_r+0xd74>
9d00a69c:	02802821 	move	a1,s4
9d00a6a0:	02802821 	move	a1,s4
9d00a6a4:	02a03021 	move	a2,s5
9d00a6a8:	0f402d85 	jal	9d00b614 <__pow5mult>
9d00a6ac:	00000000 	nop
9d00a6b0:	0040a021 	move	s4,v0
9d00a6b4:	02202021 	move	a0,s1
9d00a6b8:	0f402cff 	jal	9d00b3fc <__i2b>
9d00a6bc:	24050001 	li	a1,1
9d00a6c0:	8fa60048 	lw	a2,72(sp)
9d00a6c4:	18c00005 	blez	a2,9d00a6dc <_dtoa_r+0xda8>
9d00a6c8:	0040a821 	move	s5,v0
9d00a6cc:	02202021 	move	a0,s1
9d00a6d0:	0f402d85 	jal	9d00b614 <__pow5mult>
9d00a6d4:	00402821 	move	a1,v0
9d00a6d8:	0040a821 	move	s5,v0
9d00a6dc:	8fa300b8 	lw	v1,184(sp)
9d00a6e0:	28620002 	slti	v0,v1,2
9d00a6e4:	10400010 	beqz	v0,9d00a728 <_dtoa_r+0xdf4>
9d00a6e8:	afa00030 	sw	zero,48(sp)
9d00a6ec:	16c0000f 	bnez	s6,9d00a72c <_dtoa_r+0xdf8>
9d00a6f0:	8fa60048 	lw	a2,72(sp)
9d00a6f4:	7e029800 	ext	v0,s0,0x0,0x14
9d00a6f8:	1440000b 	bnez	v0,9d00a728 <_dtoa_r+0xdf4>
9d00a6fc:	afb60030 	sw	s6,48(sp)
9d00a700:	3c027ff0 	lui	v0,0x7ff0
9d00a704:	02028024 	and	s0,s0,v0
9d00a708:	12000008 	beqz	s0,9d00a72c <_dtoa_r+0xdf8>
9d00a70c:	8fa60048 	lw	a2,72(sp)
9d00a710:	8fa40020 	lw	a0,32(sp)
9d00a714:	24050001 	li	a1,1
9d00a718:	26f70001 	addiu	s7,s7,1
9d00a71c:	24840001 	addiu	a0,a0,1
9d00a720:	afa40020 	sw	a0,32(sp)
9d00a724:	afa50030 	sw	a1,48(sp)
9d00a728:	8fa60048 	lw	a2,72(sp)
9d00a72c:	10c00009 	beqz	a2,9d00a754 <_dtoa_r+0xe20>
9d00a730:	24030001 	li	v1,1
9d00a734:	8ea20010 	lw	v0,16(s5)
9d00a738:	24420003 	addiu	v0,v0,3
9d00a73c:	00021080 	sll	v0,v0,0x2
9d00a740:	02a21021 	addu	v0,s5,v0
9d00a744:	0f402cb3 	jal	9d00b2cc <__hi0bits>
9d00a748:	8c440004 	lw	a0,4(v0)
9d00a74c:	24030020 	li	v1,32
9d00a750:	00621823 	subu	v1,v1,v0
9d00a754:	8fa20020 	lw	v0,32(sp)
9d00a758:	00621821 	addu	v1,v1,v0
9d00a75c:	3063001f 	andi	v1,v1,0x1f
9d00a760:	10600012 	beqz	v1,9d00a7ac <_dtoa_r+0xe78>
9d00a764:	8fa60028 	lw	a2,40(sp)
9d00a768:	24020020 	li	v0,32
9d00a76c:	00431823 	subu	v1,v0,v1
9d00a770:	28620005 	slti	v0,v1,5
9d00a774:	14400009 	bnez	v0,9d00a79c <_dtoa_r+0xe68>
9d00a778:	8fa40028 	lw	a0,40(sp)
9d00a77c:	8fa50020 	lw	a1,32(sp)
9d00a780:	2463fffc 	addiu	v1,v1,-4
9d00a784:	00832021 	addu	a0,a0,v1
9d00a788:	00a32821 	addu	a1,a1,v1
9d00a78c:	02e3b821 	addu	s7,s7,v1
9d00a790:	afa40028 	sw	a0,40(sp)
9d00a794:	0b4029f1 	j	9d00a7c4 <_dtoa_r+0xe90>
9d00a798:	afa50020 	sw	a1,32(sp)
9d00a79c:	24020004 	li	v0,4
9d00a7a0:	10620008 	beq	v1,v0,9d00a7c4 <_dtoa_r+0xe90>
9d00a7a4:	8fa60028 	lw	a2,40(sp)
9d00a7a8:	8fa20020 	lw	v0,32(sp)
9d00a7ac:	2463001c 	addiu	v1,v1,28
9d00a7b0:	00c33021 	addu	a2,a2,v1
9d00a7b4:	00431021 	addu	v0,v0,v1
9d00a7b8:	02e3b821 	addu	s7,s7,v1
9d00a7bc:	afa60028 	sw	a2,40(sp)
9d00a7c0:	afa20020 	sw	v0,32(sp)
9d00a7c4:	1ae00005 	blez	s7,9d00a7dc <_dtoa_r+0xea8>
9d00a7c8:	02802821 	move	a1,s4
9d00a7cc:	02202021 	move	a0,s1
9d00a7d0:	0f402dc8 	jal	9d00b720 <__lshift>
9d00a7d4:	02e03021 	move	a2,s7
9d00a7d8:	0040a021 	move	s4,v0
9d00a7dc:	8fa30020 	lw	v1,32(sp)
9d00a7e0:	18600005 	blez	v1,9d00a7f8 <_dtoa_r+0xec4>
9d00a7e4:	02a02821 	move	a1,s5
9d00a7e8:	02202021 	move	a0,s1
9d00a7ec:	0f402dc8 	jal	9d00b720 <__lshift>
9d00a7f0:	00603021 	move	a2,v1
9d00a7f4:	0040a821 	move	s5,v0
9d00a7f8:	8fa4004c 	lw	a0,76(sp)
9d00a7fc:	10800014 	beqz	a0,9d00a850 <_dtoa_r+0xf1c>
9d00a800:	02802021 	move	a0,s4
9d00a804:	0f402e14 	jal	9d00b850 <__mcmp>
9d00a808:	02a02821 	move	a1,s5
9d00a80c:	04410010 	bgez	v0,9d00a850 <_dtoa_r+0xf1c>
9d00a810:	02802821 	move	a1,s4
9d00a814:	02202021 	move	a0,s1
9d00a818:	2406000a 	li	a2,10
9d00a81c:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00a820:	00003821 	move	a3,zero
9d00a824:	8fa50040 	lw	a1,64(sp)
9d00a828:	2652ffff 	addiu	s2,s2,-1
9d00a82c:	0040a021 	move	s4,v0
9d00a830:	10a00007 	beqz	a1,9d00a850 <_dtoa_r+0xf1c>
9d00a834:	8fbe0044 	lw	s8,68(sp)
9d00a838:	02602821 	move	a1,s3
9d00a83c:	02202021 	move	a0,s1
9d00a840:	2406000a 	li	a2,10
9d00a844:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00a848:	00003821 	move	a3,zero
9d00a84c:	00409821 	move	s3,v0
9d00a850:	1fc00022 	bgtz	s8,9d00a8dc <_dtoa_r+0xfa8>
9d00a854:	8fa40040 	lw	a0,64(sp)
9d00a858:	8fa600b8 	lw	a2,184(sp)
9d00a85c:	28c20003 	slti	v0,a2,3
9d00a860:	1440001e 	bnez	v0,9d00a8dc <_dtoa_r+0xfa8>
9d00a864:	00000000 	nop
9d00a868:	17c0000f 	bnez	s8,9d00a8a8 <_dtoa_r+0xf74>
9d00a86c:	02a02821 	move	a1,s5
9d00a870:	02202021 	move	a0,s1
9d00a874:	24060005 	li	a2,5
9d00a878:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00a87c:	00003821 	move	a3,zero
9d00a880:	00402821 	move	a1,v0
9d00a884:	02802021 	move	a0,s4
9d00a888:	0f402e14 	jal	9d00b850 <__mcmp>
9d00a88c:	0040a821 	move	s5,v0
9d00a890:	1c40000c 	bgtz	v0,9d00a8c4 <_dtoa_r+0xf90>
9d00a894:	8fa3002c 	lw	v1,44(sp)
9d00a898:	0b402a2b 	j	9d00a8ac <_dtoa_r+0xf78>
9d00a89c:	8fa200bc 	lw	v0,188(sp)
9d00a8a0:	0000a821 	move	s5,zero
9d00a8a4:	00009821 	move	s3,zero
9d00a8a8:	8fa200bc 	lw	v0,188(sp)
9d00a8ac:	8fb0002c 	lw	s0,44(sp)
9d00a8b0:	0b402a35 	j	9d00a8d4 <_dtoa_r+0xfa0>
9d00a8b4:	00029027 	nor	s2,zero,v0
9d00a8b8:	0000a821 	move	s5,zero
9d00a8bc:	00009821 	move	s3,zero
9d00a8c0:	8fa3002c 	lw	v1,44(sp)
9d00a8c4:	24020031 	li	v0,49
9d00a8c8:	26520001 	addiu	s2,s2,1
9d00a8cc:	a0620000 	sb	v0,0(v1)
9d00a8d0:	24700001 	addiu	s0,v1,1
9d00a8d4:	0b402afd 	j	9d00abf4 <_dtoa_r+0x12c0>
9d00a8d8:	0000b821 	move	s7,zero
9d00a8dc:	14800004 	bnez	a0,9d00a8f0 <_dtoa_r+0xfbc>
9d00a8e0:	8fa50028 	lw	a1,40(sp)
9d00a8e4:	8fb0002c 	lw	s0,44(sp)
9d00a8e8:	0b402ac8 	j	9d00ab20 <_dtoa_r+0x11ec>
9d00a8ec:	24160001 	li	s6,1
9d00a8f0:	18a00005 	blez	a1,9d00a908 <_dtoa_r+0xfd4>
9d00a8f4:	8fa60028 	lw	a2,40(sp)
9d00a8f8:	02602821 	move	a1,s3
9d00a8fc:	0f402dc8 	jal	9d00b720 <__lshift>
9d00a900:	02202021 	move	a0,s1
9d00a904:	00409821 	move	s3,v0
9d00a908:	8fa60030 	lw	a2,48(sp)
9d00a90c:	10c0000f 	beqz	a2,9d00a94c <_dtoa_r+0x1018>
9d00a910:	02601021 	move	v0,s3
9d00a914:	8e650004 	lw	a1,4(s3)
9d00a918:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00a91c:	02202021 	move	a0,s1
9d00a920:	8e660010 	lw	a2,16(s3)
9d00a924:	00408021 	move	s0,v0
9d00a928:	2444000c 	addiu	a0,v0,12
9d00a92c:	24c60002 	addiu	a2,a2,2
9d00a930:	2665000c 	addiu	a1,s3,12
9d00a934:	0f402c17 	jal	9d00b05c <memcpy>
9d00a938:	00063080 	sll	a2,a2,0x2
9d00a93c:	02202021 	move	a0,s1
9d00a940:	02002821 	move	a1,s0
9d00a944:	0f402dc8 	jal	9d00b720 <__lshift>
9d00a948:	24060001 	li	a2,1
9d00a94c:	8fb0002c 	lw	s0,44(sp)
9d00a950:	32d60001 	andi	s6,s6,0x1
9d00a954:	0260b821 	move	s7,s3
9d00a958:	afb60020 	sw	s6,32(sp)
9d00a95c:	00409821 	move	s3,v0
9d00a960:	02802021 	move	a0,s4
9d00a964:	0f4025cc 	jal	9d009730 <quorem>
9d00a968:	02a02821 	move	a1,s5
9d00a96c:	24430030 	addiu	v1,v0,48
9d00a970:	02802021 	move	a0,s4
9d00a974:	02e02821 	move	a1,s7
9d00a978:	0f402e14 	jal	9d00b850 <__mcmp>
9d00a97c:	afa30074 	sw	v1,116(sp)
9d00a980:	02202021 	move	a0,s1
9d00a984:	02603021 	move	a2,s3
9d00a988:	02a02821 	move	a1,s5
9d00a98c:	0f402e2e 	jal	9d00b8b8 <__mdiff>
9d00a990:	0040b021 	move	s6,v0
9d00a994:	8c44000c 	lw	a0,12(v0)
9d00a998:	00403021 	move	a2,v0
9d00a99c:	8fa30074 	lw	v1,116(sp)
9d00a9a0:	14800007 	bnez	a0,9d00a9c0 <_dtoa_r+0x108c>
9d00a9a4:	24020001 	li	v0,1
9d00a9a8:	00c02821 	move	a1,a2
9d00a9ac:	02802021 	move	a0,s4
9d00a9b0:	0f402e14 	jal	9d00b850 <__mcmp>
9d00a9b4:	afa60070 	sw	a2,112(sp)
9d00a9b8:	8fa60070 	lw	a2,112(sp)
9d00a9bc:	8fa30074 	lw	v1,116(sp)
9d00a9c0:	02202021 	move	a0,s1
9d00a9c4:	00c02821 	move	a1,a2
9d00a9c8:	afa20070 	sw	v0,112(sp)
9d00a9cc:	0f402c67 	jal	9d00b19c <_Bfree>
9d00a9d0:	afa30074 	sw	v1,116(sp)
9d00a9d4:	8fa20070 	lw	v0,112(sp)
9d00a9d8:	8fa500b8 	lw	a1,184(sp)
9d00a9dc:	00452025 	or	a0,v0,a1
9d00a9e0:	14800009 	bnez	a0,9d00aa08 <_dtoa_r+0x10d4>
9d00a9e4:	8fa30074 	lw	v1,116(sp)
9d00a9e8:	8fa60020 	lw	a2,32(sp)
9d00a9ec:	14c00006 	bnez	a2,9d00aa08 <_dtoa_r+0x10d4>
9d00a9f0:	00000000 	nop
9d00a9f4:	24020039 	li	v0,57
9d00a9f8:	10620022 	beq	v1,v0,9d00aa84 <_dtoa_r+0x1150>
9d00a9fc:	0016b02a 	slt	s6,zero,s6
9d00aa00:	0b402aa5 	j	9d00aa94 <_dtoa_r+0x1160>
9d00aa04:	00761821 	addu	v1,v1,s6
9d00aa08:	06c00006 	bltz	s6,9d00aa24 <_dtoa_r+0x10f0>
9d00aa0c:	8fa400b8 	lw	a0,184(sp)
9d00aa10:	02c4b025 	or	s6,s6,a0
9d00aa14:	16c00016 	bnez	s6,9d00aa70 <_dtoa_r+0x113c>
9d00aa18:	8fa50020 	lw	a1,32(sp)
9d00aa1c:	14a00014 	bnez	a1,9d00aa70 <_dtoa_r+0x113c>
9d00aa20:	00000000 	nop
9d00aa24:	1840001b 	blez	v0,9d00aa94 <_dtoa_r+0x1160>
9d00aa28:	02802821 	move	a1,s4
9d00aa2c:	02202021 	move	a0,s1
9d00aa30:	24060001 	li	a2,1
9d00aa34:	0f402dc8 	jal	9d00b720 <__lshift>
9d00aa38:	afa30074 	sw	v1,116(sp)
9d00aa3c:	00402021 	move	a0,v0
9d00aa40:	02a02821 	move	a1,s5
9d00aa44:	0f402e14 	jal	9d00b850 <__mcmp>
9d00aa48:	0040a021 	move	s4,v0
9d00aa4c:	1c40000a 	bgtz	v0,9d00aa78 <_dtoa_r+0x1144>
9d00aa50:	8fa30074 	lw	v1,116(sp)
9d00aa54:	54400010 	bnezl	v0,9d00aa98 <_dtoa_r+0x1164>
9d00aa58:	a2030000 	sb	v1,0(s0)
9d00aa5c:	30620001 	andi	v0,v1,0x1
9d00aa60:	5040000d 	beqzl	v0,9d00aa98 <_dtoa_r+0x1164>
9d00aa64:	a2030000 	sb	v1,0(s0)
9d00aa68:	0b402a9f 	j	9d00aa7c <_dtoa_r+0x1148>
9d00aa6c:	24020039 	li	v0,57
9d00aa70:	5840000b 	blezl	v0,9d00aaa0 <_dtoa_r+0x116c>
9d00aa74:	a2030000 	sb	v1,0(s0)
9d00aa78:	24020039 	li	v0,57
9d00aa7c:	14620005 	bne	v1,v0,9d00aa94 <_dtoa_r+0x1160>
9d00aa80:	24630001 	addiu	v1,v1,1
9d00aa84:	24020039 	li	v0,57
9d00aa88:	a2020000 	sb	v0,0(s0)
9d00aa8c:	0b402af2 	j	9d00abc8 <_dtoa_r+0x1294>
9d00aa90:	26100001 	addiu	s0,s0,1
9d00aa94:	a2030000 	sb	v1,0(s0)
9d00aa98:	0b402afd 	j	9d00abf4 <_dtoa_r+0x12c0>
9d00aa9c:	26100001 	addiu	s0,s0,1
9d00aaa0:	8fa6002c 	lw	a2,44(sp)
9d00aaa4:	26100001 	addiu	s0,s0,1
9d00aaa8:	02061023 	subu	v0,s0,a2
9d00aaac:	105e002d 	beq	v0,s8,9d00ab64 <_dtoa_r+0x1230>
9d00aab0:	02802821 	move	a1,s4
9d00aab4:	02202021 	move	a0,s1
9d00aab8:	2406000a 	li	a2,10
9d00aabc:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00aac0:	00003821 	move	a3,zero
9d00aac4:	16f30009 	bne	s7,s3,9d00aaec <_dtoa_r+0x11b8>
9d00aac8:	0040a021 	move	s4,v0
9d00aacc:	02e02821 	move	a1,s7
9d00aad0:	02202021 	move	a0,s1
9d00aad4:	2406000a 	li	a2,10
9d00aad8:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00aadc:	00003821 	move	a3,zero
9d00aae0:	0040b821 	move	s7,v0
9d00aae4:	0b402a58 	j	9d00a960 <_dtoa_r+0x102c>
9d00aae8:	00409821 	move	s3,v0
9d00aaec:	02e02821 	move	a1,s7
9d00aaf0:	02202021 	move	a0,s1
9d00aaf4:	2406000a 	li	a2,10
9d00aaf8:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00aafc:	00003821 	move	a3,zero
9d00ab00:	02602821 	move	a1,s3
9d00ab04:	02202021 	move	a0,s1
9d00ab08:	2406000a 	li	a2,10
9d00ab0c:	00003821 	move	a3,zero
9d00ab10:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00ab14:	0040b821 	move	s7,v0
9d00ab18:	0b402a58 	j	9d00a960 <_dtoa_r+0x102c>
9d00ab1c:	00409821 	move	s3,v0
9d00ab20:	02802021 	move	a0,s4
9d00ab24:	0f4025cc 	jal	9d009730 <quorem>
9d00ab28:	02a02821 	move	a1,s5
9d00ab2c:	24430030 	addiu	v1,v0,48
9d00ab30:	02de202a 	slt	a0,s6,s8
9d00ab34:	a2030000 	sb	v1,0(s0)
9d00ab38:	10800009 	beqz	a0,9d00ab60 <_dtoa_r+0x122c>
9d00ab3c:	26100001 	addiu	s0,s0,1
9d00ab40:	02802821 	move	a1,s4
9d00ab44:	02202021 	move	a0,s1
9d00ab48:	2406000a 	li	a2,10
9d00ab4c:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00ab50:	00003821 	move	a3,zero
9d00ab54:	0040a021 	move	s4,v0
9d00ab58:	0b402ac8 	j	9d00ab20 <_dtoa_r+0x11ec>
9d00ab5c:	26d60001 	addiu	s6,s6,1
9d00ab60:	0000b821 	move	s7,zero
9d00ab64:	02802821 	move	a1,s4
9d00ab68:	02202021 	move	a0,s1
9d00ab6c:	24060001 	li	a2,1
9d00ab70:	0f402dc8 	jal	9d00b720 <__lshift>
9d00ab74:	afa30074 	sw	v1,116(sp)
9d00ab78:	00402021 	move	a0,v0
9d00ab7c:	02a02821 	move	a1,s5
9d00ab80:	0f402e14 	jal	9d00b850 <__mcmp>
9d00ab84:	0040a021 	move	s4,v0
9d00ab88:	1c40000f 	bgtz	v0,9d00abc8 <_dtoa_r+0x1294>
9d00ab8c:	8fa30074 	lw	v1,116(sp)
9d00ab90:	54400015 	bnezl	v0,9d00abe8 <_dtoa_r+0x12b4>
9d00ab94:	24020030 	li	v0,48
9d00ab98:	30630001 	andi	v1,v1,0x1
9d00ab9c:	5460000b 	bnezl	v1,9d00abcc <_dtoa_r+0x1298>
9d00aba0:	24040039 	li	a0,57
9d00aba4:	0b402afa 	j	9d00abe8 <_dtoa_r+0x12b4>
9d00aba8:	24020030 	li	v0,48
9d00abac:	8fa3002c 	lw	v1,44(sp)
9d00abb0:	54430006 	bnel	v0,v1,9d00abcc <_dtoa_r+0x1298>
9d00abb4:	00408021 	move	s0,v0
9d00abb8:	24020031 	li	v0,49
9d00abbc:	26520001 	addiu	s2,s2,1
9d00abc0:	0b402afd 	j	9d00abf4 <_dtoa_r+0x12c0>
9d00abc4:	a0620000 	sb	v0,0(v1)
9d00abc8:	24040039 	li	a0,57
9d00abcc:	8203ffff 	lb	v1,-1(s0)
9d00abd0:	1064fff6 	beq	v1,a0,9d00abac <_dtoa_r+0x1278>
9d00abd4:	2602ffff 	addiu	v0,s0,-1
9d00abd8:	24630001 	addiu	v1,v1,1
9d00abdc:	0b402afd 	j	9d00abf4 <_dtoa_r+0x12c0>
9d00abe0:	a0430000 	sb	v1,0(v0)
9d00abe4:	00808021 	move	s0,a0
9d00abe8:	8203ffff 	lb	v1,-1(s0)
9d00abec:	1062fffd 	beq	v1,v0,9d00abe4 <_dtoa_r+0x12b0>
9d00abf0:	2604ffff 	addiu	a0,s0,-1
9d00abf4:	02202021 	move	a0,s1
9d00abf8:	0f402c67 	jal	9d00b19c <_Bfree>
9d00abfc:	02a02821 	move	a1,s5
9d00ac00:	1260000f 	beqz	s3,9d00ac40 <_dtoa_r+0x130c>
9d00ac04:	02202021 	move	a0,s1
9d00ac08:	12e00006 	beqz	s7,9d00ac24 <_dtoa_r+0x12f0>
9d00ac0c:	00000000 	nop
9d00ac10:	12f30004 	beq	s7,s3,9d00ac24 <_dtoa_r+0x12f0>
9d00ac14:	00000000 	nop
9d00ac18:	0f402c67 	jal	9d00b19c <_Bfree>
9d00ac1c:	02e02821 	move	a1,s7
9d00ac20:	02202021 	move	a0,s1
9d00ac24:	0f402c67 	jal	9d00b19c <_Bfree>
9d00ac28:	02602821 	move	a1,s3
9d00ac2c:	0b402b10 	j	9d00ac40 <_dtoa_r+0x130c>
9d00ac30:	02202021 	move	a0,s1
9d00ac34:	8fb10038 	lw	s1,56(sp)
9d00ac38:	8fb20030 	lw	s2,48(sp)
9d00ac3c:	02202021 	move	a0,s1
9d00ac40:	0f402c67 	jal	9d00b19c <_Bfree>
9d00ac44:	02802821 	move	a1,s4
9d00ac48:	a2000000 	sb	zero,0(s0)
9d00ac4c:	8fa400c0 	lw	a0,192(sp)
9d00ac50:	8fa500c8 	lw	a1,200(sp)
9d00ac54:	26520001 	addiu	s2,s2,1
9d00ac58:	ac920000 	sw	s2,0(a0)
9d00ac5c:	10a00002 	beqz	a1,9d00ac68 <_dtoa_r+0x1334>
9d00ac60:	8fa2002c 	lw	v0,44(sp)
9d00ac64:	acb00000 	sw	s0,0(a1)
9d00ac68:	8fbf00a4 	lw	ra,164(sp)
9d00ac6c:	8fbe00a0 	lw	s8,160(sp)
9d00ac70:	8fb7009c 	lw	s7,156(sp)
9d00ac74:	8fb60098 	lw	s6,152(sp)
9d00ac78:	8fb50094 	lw	s5,148(sp)
9d00ac7c:	8fb40090 	lw	s4,144(sp)
9d00ac80:	8fb3008c 	lw	s3,140(sp)
9d00ac84:	8fb20088 	lw	s2,136(sp)
9d00ac88:	8fb10084 	lw	s1,132(sp)
9d00ac8c:	8fb00080 	lw	s0,128(sp)
9d00ac90:	03e00008 	jr	ra
9d00ac94:	27bd00a8 	addiu	sp,sp,168

9d00ac98 <_malloc_trim_r>:
9d00ac98:	27bdffd0 	addiu	sp,sp,-48
9d00ac9c:	afb20024 	sw	s2,36(sp)
9d00aca0:	3c12a000 	lui	s2,0xa000
9d00aca4:	265205f8 	addiu	s2,s2,1528
9d00aca8:	afb30028 	sw	s3,40(sp)
9d00acac:	afb10020 	sw	s1,32(sp)
9d00acb0:	afb0001c 	sw	s0,28(sp)
9d00acb4:	afa50010 	sw	a1,16(sp)
9d00acb8:	afbf002c 	sw	ra,44(sp)
9d00acbc:	0f401dea 	jal	9d0077a8 <__malloc_lock>
9d00acc0:	00808021 	move	s0,a0
9d00acc4:	8e420008 	lw	v0,8(s2)
9d00acc8:	2413fffc 	li	s3,-4
9d00accc:	8fa50010 	lw	a1,16(sp)
9d00acd0:	8c420004 	lw	v0,4(v0)
9d00acd4:	02629824 	and	s3,s3,v0
9d00acd8:	2671006f 	addiu	s1,s3,111
9d00acdc:	02258823 	subu	s1,s1,a1
9d00ace0:	001189c2 	srl	s1,s1,0x7
9d00ace4:	2631ffff 	addiu	s1,s1,-1
9d00ace8:	001189c0 	sll	s1,s1,0x7
9d00acec:	2a220080 	slti	v0,s1,128
9d00acf0:	1440001c 	bnez	v0,9d00ad64 <_malloc_trim_r+0xcc>
9d00acf4:	00000000 	nop
9d00acf8:	02002021 	move	a0,s0
9d00acfc:	0f401f37 	jal	9d007cdc <_sbrk_r>
9d00ad00:	00002821 	move	a1,zero
9d00ad04:	8e430008 	lw	v1,8(s2)
9d00ad08:	00731821 	addu	v1,v1,s3
9d00ad0c:	14430015 	bne	v0,v1,9d00ad64 <_malloc_trim_r+0xcc>
9d00ad10:	00000000 	nop
9d00ad14:	02002021 	move	a0,s0
9d00ad18:	0f401f37 	jal	9d007cdc <_sbrk_r>
9d00ad1c:	00112823 	negu	a1,s1
9d00ad20:	2403ffff 	li	v1,-1
9d00ad24:	54430013 	bnel	v0,v1,9d00ad74 <_malloc_trim_r+0xdc>
9d00ad28:	8e420008 	lw	v0,8(s2)
9d00ad2c:	02002021 	move	a0,s0
9d00ad30:	0f401f37 	jal	9d007cdc <_sbrk_r>
9d00ad34:	00002821 	move	a1,zero
9d00ad38:	8e430008 	lw	v1,8(s2)
9d00ad3c:	00432023 	subu	a0,v0,v1
9d00ad40:	28850010 	slti	a1,a0,16
9d00ad44:	14a00007 	bnez	a1,9d00ad64 <_malloc_trim_r+0xcc>
9d00ad48:	3c05a000 	lui	a1,0xa000
9d00ad4c:	8ca50a44 	lw	a1,2628(a1)
9d00ad50:	34840001 	ori	a0,a0,0x1
9d00ad54:	ac640004 	sw	a0,4(v1)
9d00ad58:	00451023 	subu	v0,v0,a1
9d00ad5c:	3c05a000 	lui	a1,0xa000
9d00ad60:	aca210dc 	sw	v0,4316(a1)
9d00ad64:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d00ad68:	02002021 	move	a0,s0
9d00ad6c:	0b402b67 	j	9d00ad9c <_malloc_trim_r+0x104>
9d00ad70:	00001021 	move	v0,zero
9d00ad74:	02719823 	subu	s3,s3,s1
9d00ad78:	36730001 	ori	s3,s3,0x1
9d00ad7c:	ac530004 	sw	s3,4(v0)
9d00ad80:	3c02a000 	lui	v0,0xa000
9d00ad84:	8c4310dc 	lw	v1,4316(v0)
9d00ad88:	02002021 	move	a0,s0
9d00ad8c:	00718823 	subu	s1,v1,s1
9d00ad90:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d00ad94:	ac5110dc 	sw	s1,4316(v0)
9d00ad98:	24020001 	li	v0,1
9d00ad9c:	8fbf002c 	lw	ra,44(sp)
9d00ada0:	8fb30028 	lw	s3,40(sp)
9d00ada4:	8fb20024 	lw	s2,36(sp)
9d00ada8:	8fb10020 	lw	s1,32(sp)
9d00adac:	8fb0001c 	lw	s0,28(sp)
9d00adb0:	03e00008 	jr	ra
9d00adb4:	27bd0030 	addiu	sp,sp,48

9d00adb8 <_free_r>:
9d00adb8:	27bdffe0 	addiu	sp,sp,-32
9d00adbc:	afb00018 	sw	s0,24(sp)
9d00adc0:	afbf001c 	sw	ra,28(sp)
9d00adc4:	10a00093 	beqz	a1,9d00b014 <_free_r+0x25c>
9d00adc8:	00808021 	move	s0,a0
9d00adcc:	0f401dea 	jal	9d0077a8 <__malloc_lock>
9d00add0:	afa50010 	sw	a1,16(sp)
9d00add4:	8fa50010 	lw	a1,16(sp)
9d00add8:	2403fffe 	li	v1,-2
9d00addc:	2408fffc 	li	t0,-4
9d00ade0:	24a2fff8 	addiu	v0,a1,-8
9d00ade4:	8c490004 	lw	t1,4(v0)
9d00ade8:	01231824 	and	v1,t1,v1
9d00adec:	00433021 	addu	a2,v0,v1
9d00adf0:	8cc40004 	lw	a0,4(a2)
9d00adf4:	01044024 	and	t0,t0,a0
9d00adf8:	3c04a000 	lui	a0,0xa000
9d00adfc:	248405f8 	addiu	a0,a0,1528
9d00ae00:	8c870008 	lw	a3,8(a0)
9d00ae04:	14c70017 	bne	a2,a3,9d00ae64 <_free_r+0xac>
9d00ae08:	31290001 	andi	t1,t1,0x1
9d00ae0c:	15200008 	bnez	t1,9d00ae30 <_free_r+0x78>
9d00ae10:	01031821 	addu	v1,t0,v1
9d00ae14:	8ca5fff8 	lw	a1,-8(a1)
9d00ae18:	00451023 	subu	v0,v0,a1
9d00ae1c:	8c460008 	lw	a2,8(v0)
9d00ae20:	00651821 	addu	v1,v1,a1
9d00ae24:	8c45000c 	lw	a1,12(v0)
9d00ae28:	acc5000c 	sw	a1,12(a2)
9d00ae2c:	aca60008 	sw	a2,8(a1)
9d00ae30:	34650001 	ori	a1,v1,0x1
9d00ae34:	ac450004 	sw	a1,4(v0)
9d00ae38:	ac820008 	sw	v0,8(a0)
9d00ae3c:	3c02a000 	lui	v0,0xa000
9d00ae40:	8c480a40 	lw	t0,2624(v0)
9d00ae44:	0068182b 	sltu	v1,v1,t0
9d00ae48:	14600070 	bnez	v1,9d00b00c <_free_r+0x254>
9d00ae4c:	3c02a000 	lui	v0,0xa000
9d00ae50:	8c450a7c 	lw	a1,2684(v0)
9d00ae54:	0f402b26 	jal	9d00ac98 <_malloc_trim_r>
9d00ae58:	02002021 	move	a0,s0
9d00ae5c:	0b402c03 	j	9d00b00c <_free_r+0x254>
9d00ae60:	00000000 	nop
9d00ae64:	acc80004 	sw	t0,4(a2)
9d00ae68:	1520000c 	bnez	t1,9d00ae9c <_free_r+0xe4>
9d00ae6c:	00003821 	move	a3,zero
9d00ae70:	8ca5fff8 	lw	a1,-8(a1)
9d00ae74:	24890008 	addiu	t1,a0,8
9d00ae78:	00451023 	subu	v0,v0,a1
9d00ae7c:	00651821 	addu	v1,v1,a1
9d00ae80:	8c450008 	lw	a1,8(v0)
9d00ae84:	10a90005 	beq	a1,t1,9d00ae9c <_free_r+0xe4>
9d00ae88:	24070001 	li	a3,1
9d00ae8c:	8c47000c 	lw	a3,12(v0)
9d00ae90:	aca7000c 	sw	a3,12(a1)
9d00ae94:	ace50008 	sw	a1,8(a3)
9d00ae98:	00003821 	move	a3,zero
9d00ae9c:	00c82821 	addu	a1,a2,t0
9d00aea0:	8ca50004 	lw	a1,4(a1)
9d00aea4:	30a50001 	andi	a1,a1,0x1
9d00aea8:	14a00011 	bnez	a1,9d00aef0 <_free_r+0x138>
9d00aeac:	34650001 	ori	a1,v1,0x1
9d00aeb0:	00681821 	addu	v1,v1,t0
9d00aeb4:	14e0000a 	bnez	a3,9d00aee0 <_free_r+0x128>
9d00aeb8:	8cc50008 	lw	a1,8(a2)
9d00aebc:	24880008 	addiu	t0,a0,8
9d00aec0:	54a80008 	bnel	a1,t0,9d00aee4 <_free_r+0x12c>
9d00aec4:	8cc6000c 	lw	a2,12(a2)
9d00aec8:	aca2000c 	sw	v0,12(a1)
9d00aecc:	aca20008 	sw	v0,8(a1)
9d00aed0:	ac45000c 	sw	a1,12(v0)
9d00aed4:	ac450008 	sw	a1,8(v0)
9d00aed8:	0b402bbb 	j	9d00aeec <_free_r+0x134>
9d00aedc:	24070001 	li	a3,1
9d00aee0:	8cc6000c 	lw	a2,12(a2)
9d00aee4:	aca6000c 	sw	a2,12(a1)
9d00aee8:	acc50008 	sw	a1,8(a2)
9d00aeec:	34650001 	ori	a1,v1,0x1
9d00aef0:	ac450004 	sw	a1,4(v0)
9d00aef4:	00432821 	addu	a1,v0,v1
9d00aef8:	14e00044 	bnez	a3,9d00b00c <_free_r+0x254>
9d00aefc:	aca30000 	sw	v1,0(a1)
9d00af00:	2c650200 	sltiu	a1,v1,512
9d00af04:	10a00010 	beqz	a1,9d00af48 <_free_r+0x190>
9d00af08:	00033242 	srl	a2,v1,0x9
9d00af0c:	000318c2 	srl	v1,v1,0x3
9d00af10:	00032883 	sra	a1,v1,0x2
9d00af14:	24060001 	li	a2,1
9d00af18:	00a62804 	sllv	a1,a2,a1
9d00af1c:	8c860004 	lw	a2,4(a0)
9d00af20:	000318c0 	sll	v1,v1,0x3
9d00af24:	00c52825 	or	a1,a2,a1
9d00af28:	ac850004 	sw	a1,4(a0)
9d00af2c:	00832021 	addu	a0,a0,v1
9d00af30:	8c830008 	lw	v1,8(a0)
9d00af34:	ac44000c 	sw	a0,12(v0)
9d00af38:	ac430008 	sw	v1,8(v0)
9d00af3c:	ac62000c 	sw	v0,12(v1)
9d00af40:	0b402c03 	j	9d00b00c <_free_r+0x254>
9d00af44:	ac820008 	sw	v0,8(a0)
9d00af48:	2cc50005 	sltiu	a1,a2,5
9d00af4c:	10a00004 	beqz	a1,9d00af60 <_free_r+0x1a8>
9d00af50:	2cc50015 	sltiu	a1,a2,21
9d00af54:	00033182 	srl	a2,v1,0x6
9d00af58:	0b402bea 	j	9d00afa8 <_free_r+0x1f0>
9d00af5c:	24c60038 	addiu	a2,a2,56
9d00af60:	10a00003 	beqz	a1,9d00af70 <_free_r+0x1b8>
9d00af64:	2cc50055 	sltiu	a1,a2,85
9d00af68:	0b402bea 	j	9d00afa8 <_free_r+0x1f0>
9d00af6c:	24c6005b 	addiu	a2,a2,91
9d00af70:	10a00004 	beqz	a1,9d00af84 <_free_r+0x1cc>
9d00af74:	2cc50155 	sltiu	a1,a2,341
9d00af78:	00033302 	srl	a2,v1,0xc
9d00af7c:	0b402bea 	j	9d00afa8 <_free_r+0x1f0>
9d00af80:	24c6006e 	addiu	a2,a2,110
9d00af84:	10a00004 	beqz	a1,9d00af98 <_free_r+0x1e0>
9d00af88:	2cc50555 	sltiu	a1,a2,1365
9d00af8c:	000333c2 	srl	a2,v1,0xf
9d00af90:	0b402bea 	j	9d00afa8 <_free_r+0x1f0>
9d00af94:	24c60077 	addiu	a2,a2,119
9d00af98:	10a00003 	beqz	a1,9d00afa8 <_free_r+0x1f0>
9d00af9c:	2406007e 	li	a2,126
9d00afa0:	00033482 	srl	a2,v1,0x12
9d00afa4:	24c6007c 	addiu	a2,a2,124
9d00afa8:	000638c0 	sll	a3,a2,0x3
9d00afac:	00873821 	addu	a3,a0,a3
9d00afb0:	8ce50008 	lw	a1,8(a3)
9d00afb4:	14a7000b 	bne	a1,a3,9d00afe4 <_free_r+0x22c>
9d00afb8:	2408fffc 	li	t0,-4
9d00afbc:	24030001 	li	v1,1
9d00afc0:	00063083 	sra	a2,a2,0x2
9d00afc4:	00c33004 	sllv	a2,v1,a2
9d00afc8:	8c830004 	lw	v1,4(a0)
9d00afcc:	00663025 	or	a2,v1,a2
9d00afd0:	ac860004 	sw	a2,4(a0)
9d00afd4:	0b402bff 	j	9d00affc <_free_r+0x244>
9d00afd8:	00a01821 	move	v1,a1
9d00afdc:	50a70007 	beql	a1,a3,9d00affc <_free_r+0x244>
9d00afe0:	8ca3000c 	lw	v1,12(a1)
9d00afe4:	8ca40004 	lw	a0,4(a1)
9d00afe8:	01042024 	and	a0,t0,a0
9d00afec:	0064202b 	sltu	a0,v1,a0
9d00aff0:	5480fffa 	bnezl	a0,9d00afdc <_free_r+0x224>
9d00aff4:	8ca50008 	lw	a1,8(a1)
9d00aff8:	8ca3000c 	lw	v1,12(a1)
9d00affc:	ac43000c 	sw	v1,12(v0)
9d00b000:	ac450008 	sw	a1,8(v0)
9d00b004:	aca2000c 	sw	v0,12(a1)
9d00b008:	ac620008 	sw	v0,8(v1)
9d00b00c:	0f401dec 	jal	9d0077b0 <__malloc_unlock>
9d00b010:	02002021 	move	a0,s0
9d00b014:	8fbf001c 	lw	ra,28(sp)
9d00b018:	8fb00018 	lw	s0,24(sp)
9d00b01c:	03e00008 	jr	ra
9d00b020:	27bd0020 	addiu	sp,sp,32

9d00b024 <_localeconv_r>:
9d00b024:	3c02a000 	lui	v0,0xa000
9d00b028:	03e00008 	jr	ra
9d00b02c:	24420a00 	addiu	v0,v0,2560

9d00b030 <memchr>:
9d00b030:	0b402c11 	j	9d00b044 <memchr+0x14>
9d00b034:	30a500ff 	andi	a1,a1,0xff
9d00b038:	10450006 	beq	v0,a1,9d00b054 <memchr+0x24>
9d00b03c:	24c6ffff 	addiu	a2,a2,-1
9d00b040:	24840001 	addiu	a0,a0,1
9d00b044:	54c0fffc 	bnezl	a2,9d00b038 <memchr+0x8>
9d00b048:	90820000 	lbu	v0,0(a0)
9d00b04c:	03e00008 	jr	ra
9d00b050:	00001021 	move	v0,zero
9d00b054:	03e00008 	jr	ra
9d00b058:	00801021 	move	v0,a0

9d00b05c <memcpy>:
9d00b05c:	00801021 	move	v0,a0
9d00b060:	0b402c1e 	j	9d00b078 <memcpy+0x1c>
9d00b064:	00801821 	move	v1,a0
9d00b068:	24c6ffff 	addiu	a2,a2,-1
9d00b06c:	24a50001 	addiu	a1,a1,1
9d00b070:	a0640000 	sb	a0,0(v1)
9d00b074:	24630001 	addiu	v1,v1,1
9d00b078:	54c0fffb 	bnezl	a2,9d00b068 <memcpy+0xc>
9d00b07c:	90a40000 	lbu	a0,0(a1)
9d00b080:	03e00008 	jr	ra
9d00b084:	00000000 	nop

9d00b088 <memmove>:
9d00b088:	00801021 	move	v0,a0
9d00b08c:	00801821 	move	v1,a0
9d00b090:	00a4202b 	sltu	a0,a1,a0
9d00b094:	10800012 	beqz	a0,9d00b0e0 <memmove+0x58>
9d00b098:	00a62021 	addu	a0,a1,a2
9d00b09c:	0044402b 	sltu	t0,v0,a0
9d00b0a0:	15000007 	bnez	t0,9d00b0c0 <memmove+0x38>
9d00b0a4:	00463821 	addu	a3,v0,a2
9d00b0a8:	0b402c38 	j	9d00b0e0 <memmove+0x58>
9d00b0ac:	00000000 	nop
9d00b0b0:	90830000 	lbu	v1,0(a0)
9d00b0b4:	24e7ffff 	addiu	a3,a3,-1
9d00b0b8:	24c6ffff 	addiu	a2,a2,-1
9d00b0bc:	a0e30000 	sb	v1,0(a3)
9d00b0c0:	14c0fffb 	bnez	a2,9d00b0b0 <memmove+0x28>
9d00b0c4:	2484ffff 	addiu	a0,a0,-1
9d00b0c8:	03e00008 	jr	ra
9d00b0cc:	00000000 	nop
9d00b0d0:	24c6ffff 	addiu	a2,a2,-1
9d00b0d4:	24a50001 	addiu	a1,a1,1
9d00b0d8:	a0640000 	sb	a0,0(v1)
9d00b0dc:	24630001 	addiu	v1,v1,1
9d00b0e0:	54c0fffb 	bnezl	a2,9d00b0d0 <memmove+0x48>
9d00b0e4:	90a40000 	lbu	a0,0(a1)
9d00b0e8:	03e00008 	jr	ra
9d00b0ec:	00000000 	nop

9d00b0f0 <_Balloc>:
9d00b0f0:	8c82004c 	lw	v0,76(a0)
9d00b0f4:	27bdffe0 	addiu	sp,sp,-32
9d00b0f8:	afb10014 	sw	s1,20(sp)
9d00b0fc:	afb00010 	sw	s0,16(sp)
9d00b100:	afbf001c 	sw	ra,28(sp)
9d00b104:	afb20018 	sw	s2,24(sp)
9d00b108:	00808021 	move	s0,a0
9d00b10c:	14400008 	bnez	v0,9d00b130 <_Balloc+0x40>
9d00b110:	00a08821 	move	s1,a1
9d00b114:	24050004 	li	a1,4
9d00b118:	0f402f5b 	jal	9d00bd6c <_calloc_r>
9d00b11c:	24060021 	li	a2,33
9d00b120:	00401821 	move	v1,v0
9d00b124:	ae02004c 	sw	v0,76(s0)
9d00b128:	10600016 	beqz	v1,9d00b184 <_Balloc+0x94>
9d00b12c:	00001021 	move	v0,zero
9d00b130:	8e03004c 	lw	v1,76(s0)
9d00b134:	00111080 	sll	v0,s1,0x2
9d00b138:	00621821 	addu	v1,v1,v0
9d00b13c:	8c620000 	lw	v0,0(v1)
9d00b140:	10400004 	beqz	v0,9d00b154 <_Balloc+0x64>
9d00b144:	24120001 	li	s2,1
9d00b148:	8c440000 	lw	a0,0(v0)
9d00b14c:	0b402c5f 	j	9d00b17c <_Balloc+0x8c>
9d00b150:	ac640000 	sw	a0,0(v1)
9d00b154:	02329004 	sllv	s2,s2,s1
9d00b158:	26460005 	addiu	a2,s2,5
9d00b15c:	02002021 	move	a0,s0
9d00b160:	24050001 	li	a1,1
9d00b164:	0f402f5b 	jal	9d00bd6c <_calloc_r>
9d00b168:	00063080 	sll	a2,a2,0x2
9d00b16c:	10400006 	beqz	v0,9d00b188 <_Balloc+0x98>
9d00b170:	8fbf001c 	lw	ra,28(sp)
9d00b174:	ac510004 	sw	s1,4(v0)
9d00b178:	ac520008 	sw	s2,8(v0)
9d00b17c:	ac400010 	sw	zero,16(v0)
9d00b180:	ac40000c 	sw	zero,12(v0)
9d00b184:	8fbf001c 	lw	ra,28(sp)
9d00b188:	8fb20018 	lw	s2,24(sp)
9d00b18c:	8fb10014 	lw	s1,20(sp)
9d00b190:	8fb00010 	lw	s0,16(sp)
9d00b194:	03e00008 	jr	ra
9d00b198:	27bd0020 	addiu	sp,sp,32

9d00b19c <_Bfree>:
9d00b19c:	10a00008 	beqz	a1,9d00b1c0 <_Bfree+0x24>
9d00b1a0:	00000000 	nop
9d00b1a4:	8ca20004 	lw	v0,4(a1)
9d00b1a8:	8c83004c 	lw	v1,76(a0)
9d00b1ac:	00021080 	sll	v0,v0,0x2
9d00b1b0:	00621021 	addu	v0,v1,v0
9d00b1b4:	8c430000 	lw	v1,0(v0)
9d00b1b8:	aca30000 	sw	v1,0(a1)
9d00b1bc:	ac450000 	sw	a1,0(v0)
9d00b1c0:	03e00008 	jr	ra
9d00b1c4:	00000000 	nop

9d00b1c8 <__multadd>:
9d00b1c8:	27bdffd0 	addiu	sp,sp,-48
9d00b1cc:	afb20024 	sw	s2,36(sp)
9d00b1d0:	8cb20010 	lw	s2,16(a1)
9d00b1d4:	afb10020 	sw	s1,32(sp)
9d00b1d8:	afb0001c 	sw	s0,28(sp)
9d00b1dc:	afbf002c 	sw	ra,44(sp)
9d00b1e0:	afb30028 	sw	s3,40(sp)
9d00b1e4:	00808821 	move	s1,a0
9d00b1e8:	00a08021 	move	s0,a1
9d00b1ec:	24a20014 	addiu	v0,a1,20
9d00b1f0:	00001821 	move	v1,zero
9d00b1f4:	8c480000 	lw	t0,0(v0)
9d00b1f8:	24630001 	addiu	v1,v1,1
9d00b1fc:	3104ffff 	andi	a0,t0,0xffff
9d00b200:	70c42802 	mul	a1,a2,a0
9d00b204:	00a72021 	addu	a0,a1,a3
9d00b208:	00082c02 	srl	a1,t0,0x10
9d00b20c:	70c54002 	mul	t0,a2,a1
9d00b210:	00043c02 	srl	a3,a0,0x10
9d00b214:	3084ffff 	andi	a0,a0,0xffff
9d00b218:	01072821 	addu	a1,t0,a3
9d00b21c:	00053c02 	srl	a3,a1,0x10
9d00b220:	00052c00 	sll	a1,a1,0x10
9d00b224:	00a42021 	addu	a0,a1,a0
9d00b228:	ac440000 	sw	a0,0(v0)
9d00b22c:	0072202a 	slt	a0,v1,s2
9d00b230:	1480fff0 	bnez	a0,9d00b1f4 <__multadd+0x2c>
9d00b234:	24420004 	addiu	v0,v0,4
9d00b238:	10e0001d 	beqz	a3,9d00b2b0 <__multadd+0xe8>
9d00b23c:	8fbf002c 	lw	ra,44(sp)
9d00b240:	8e020008 	lw	v0,8(s0)
9d00b244:	0242102a 	slt	v0,s2,v0
9d00b248:	14400013 	bnez	v0,9d00b298 <__multadd+0xd0>
9d00b24c:	26420004 	addiu	v0,s2,4
9d00b250:	8e050004 	lw	a1,4(s0)
9d00b254:	02202021 	move	a0,s1
9d00b258:	afa70010 	sw	a3,16(sp)
9d00b25c:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00b260:	24a50001 	addiu	a1,a1,1
9d00b264:	8e060010 	lw	a2,16(s0)
9d00b268:	2605000c 	addiu	a1,s0,12
9d00b26c:	2444000c 	addiu	a0,v0,12
9d00b270:	24c60002 	addiu	a2,a2,2
9d00b274:	00063080 	sll	a2,a2,0x2
9d00b278:	0f402c17 	jal	9d00b05c <memcpy>
9d00b27c:	00409821 	move	s3,v0
9d00b280:	02002821 	move	a1,s0
9d00b284:	0f402c67 	jal	9d00b19c <_Bfree>
9d00b288:	02202021 	move	a0,s1
9d00b28c:	8fa70010 	lw	a3,16(sp)
9d00b290:	02608021 	move	s0,s3
9d00b294:	26420004 	addiu	v0,s2,4
9d00b298:	00021080 	sll	v0,v0,0x2
9d00b29c:	02021021 	addu	v0,s0,v0
9d00b2a0:	26520001 	addiu	s2,s2,1
9d00b2a4:	ac470004 	sw	a3,4(v0)
9d00b2a8:	ae120010 	sw	s2,16(s0)
9d00b2ac:	8fbf002c 	lw	ra,44(sp)
9d00b2b0:	02001021 	move	v0,s0
9d00b2b4:	8fb30028 	lw	s3,40(sp)
9d00b2b8:	8fb20024 	lw	s2,36(sp)
9d00b2bc:	8fb10020 	lw	s1,32(sp)
9d00b2c0:	8fb0001c 	lw	s0,28(sp)
9d00b2c4:	03e00008 	jr	ra
9d00b2c8:	27bd0030 	addiu	sp,sp,48

9d00b2cc <__hi0bits>:
9d00b2cc:	3c03ffff 	lui	v1,0xffff
9d00b2d0:	00831824 	and	v1,a0,v1
9d00b2d4:	14600003 	bnez	v1,9d00b2e4 <__hi0bits+0x18>
9d00b2d8:	00001021 	move	v0,zero
9d00b2dc:	00042400 	sll	a0,a0,0x10
9d00b2e0:	24020010 	li	v0,16
9d00b2e4:	3c03ff00 	lui	v1,0xff00
9d00b2e8:	00831824 	and	v1,a0,v1
9d00b2ec:	14600003 	bnez	v1,9d00b2fc <__hi0bits+0x30>
9d00b2f0:	3c03f000 	lui	v1,0xf000
9d00b2f4:	24420008 	addiu	v0,v0,8
9d00b2f8:	00042200 	sll	a0,a0,0x8
9d00b2fc:	00831824 	and	v1,a0,v1
9d00b300:	14600003 	bnez	v1,9d00b310 <__hi0bits+0x44>
9d00b304:	3c03c000 	lui	v1,0xc000
9d00b308:	24420004 	addiu	v0,v0,4
9d00b30c:	00042100 	sll	a0,a0,0x4
9d00b310:	00831824 	and	v1,a0,v1
9d00b314:	14600003 	bnez	v1,9d00b324 <__hi0bits+0x58>
9d00b318:	00000000 	nop
9d00b31c:	24420002 	addiu	v0,v0,2
9d00b320:	00042080 	sll	a0,a0,0x2
9d00b324:	04800005 	bltz	a0,9d00b33c <__hi0bits+0x70>
9d00b328:	3c034000 	lui	v1,0x4000
9d00b32c:	00832024 	and	a0,a0,v1
9d00b330:	24430001 	addiu	v1,v0,1
9d00b334:	24020020 	li	v0,32
9d00b338:	0064100b 	movn	v0,v1,a0
9d00b33c:	03e00008 	jr	ra
9d00b340:	00000000 	nop

9d00b344 <__lo0bits>:
9d00b344:	8c830000 	lw	v1,0(a0)
9d00b348:	30620007 	andi	v0,v1,0x7
9d00b34c:	1040000e 	beqz	v0,9d00b388 <__lo0bits+0x44>
9d00b350:	3065ffff 	andi	a1,v1,0xffff
9d00b354:	30650001 	andi	a1,v1,0x1
9d00b358:	14a00026 	bnez	a1,9d00b3f4 <__lo0bits+0xb0>
9d00b35c:	00001021 	move	v0,zero
9d00b360:	30620002 	andi	v0,v1,0x2
9d00b364:	50400005 	beqzl	v0,9d00b37c <__lo0bits+0x38>
9d00b368:	00031882 	srl	v1,v1,0x2
9d00b36c:	00031842 	srl	v1,v1,0x1
9d00b370:	ac830000 	sw	v1,0(a0)
9d00b374:	03e00008 	jr	ra
9d00b378:	24020001 	li	v0,1
9d00b37c:	ac830000 	sw	v1,0(a0)
9d00b380:	03e00008 	jr	ra
9d00b384:	24020002 	li	v0,2
9d00b388:	14a00003 	bnez	a1,9d00b398 <__lo0bits+0x54>
9d00b38c:	00001021 	move	v0,zero
9d00b390:	00031c02 	srl	v1,v1,0x10
9d00b394:	24020010 	li	v0,16
9d00b398:	306500ff 	andi	a1,v1,0xff
9d00b39c:	14a00004 	bnez	a1,9d00b3b0 <__lo0bits+0x6c>
9d00b3a0:	3065000f 	andi	a1,v1,0xf
9d00b3a4:	24420008 	addiu	v0,v0,8
9d00b3a8:	00031a02 	srl	v1,v1,0x8
9d00b3ac:	3065000f 	andi	a1,v1,0xf
9d00b3b0:	14a00004 	bnez	a1,9d00b3c4 <__lo0bits+0x80>
9d00b3b4:	30650003 	andi	a1,v1,0x3
9d00b3b8:	24420004 	addiu	v0,v0,4
9d00b3bc:	00031902 	srl	v1,v1,0x4
9d00b3c0:	30650003 	andi	a1,v1,0x3
9d00b3c4:	14a00004 	bnez	a1,9d00b3d8 <__lo0bits+0x94>
9d00b3c8:	30650001 	andi	a1,v1,0x1
9d00b3cc:	24420002 	addiu	v0,v0,2
9d00b3d0:	00031882 	srl	v1,v1,0x2
9d00b3d4:	30650001 	andi	a1,v1,0x1
9d00b3d8:	54a00006 	bnezl	a1,9d00b3f4 <__lo0bits+0xb0>
9d00b3dc:	ac830000 	sw	v1,0(a0)
9d00b3e0:	00031842 	srl	v1,v1,0x1
9d00b3e4:	50600003 	beqzl	v1,9d00b3f4 <__lo0bits+0xb0>
9d00b3e8:	24020020 	li	v0,32
9d00b3ec:	24420001 	addiu	v0,v0,1
9d00b3f0:	ac830000 	sw	v1,0(a0)
9d00b3f4:	03e00008 	jr	ra
9d00b3f8:	00000000 	nop

9d00b3fc <__i2b>:
9d00b3fc:	27bdffe8 	addiu	sp,sp,-24
9d00b400:	afb00010 	sw	s0,16(sp)
9d00b404:	00a08021 	move	s0,a1
9d00b408:	afbf0014 	sw	ra,20(sp)
9d00b40c:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00b410:	24050001 	li	a1,1
9d00b414:	8fbf0014 	lw	ra,20(sp)
9d00b418:	24040001 	li	a0,1
9d00b41c:	ac500014 	sw	s0,20(v0)
9d00b420:	ac440010 	sw	a0,16(v0)
9d00b424:	8fb00010 	lw	s0,16(sp)
9d00b428:	03e00008 	jr	ra
9d00b42c:	27bd0018 	addiu	sp,sp,24

9d00b430 <__multiply>:
9d00b430:	8ca30010 	lw	v1,16(a1)
9d00b434:	8cc20010 	lw	v0,16(a2)
9d00b438:	27bdffd0 	addiu	sp,sp,-48
9d00b43c:	afb0001c 	sw	s0,28(sp)
9d00b440:	0062102a 	slt	v0,v1,v0
9d00b444:	afbf002c 	sw	ra,44(sp)
9d00b448:	afb30028 	sw	s3,40(sp)
9d00b44c:	afb20024 	sw	s2,36(sp)
9d00b450:	afb10020 	sw	s1,32(sp)
9d00b454:	10400003 	beqz	v0,9d00b464 <__multiply+0x34>
9d00b458:	00a08021 	move	s0,a1
9d00b45c:	00c08021 	move	s0,a2
9d00b460:	00a03021 	move	a2,a1
9d00b464:	8cd20010 	lw	s2,16(a2)
9d00b468:	8e130010 	lw	s3,16(s0)
9d00b46c:	8e050008 	lw	a1,8(s0)
9d00b470:	8e020004 	lw	v0,4(s0)
9d00b474:	02538821 	addu	s1,s2,s3
9d00b478:	00b1282a 	slt	a1,a1,s1
9d00b47c:	00452821 	addu	a1,v0,a1
9d00b480:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00b484:	afa60010 	sw	a2,16(sp)
9d00b488:	262a0004 	addiu	t2,s1,4
9d00b48c:	000a5080 	sll	t2,t2,0x2
9d00b490:	24440014 	addiu	a0,v0,20
9d00b494:	004a5021 	addu	t2,v0,t2
9d00b498:	254a0004 	addiu	t2,t2,4
9d00b49c:	00801821 	move	v1,a0
9d00b4a0:	0b402d2b 	j	9d00b4ac <__multiply+0x7c>
9d00b4a4:	8fa60010 	lw	a2,16(sp)
9d00b4a8:	24630004 	addiu	v1,v1,4
9d00b4ac:	006a282b 	sltu	a1,v1,t2
9d00b4b0:	54a0fffd 	bnezl	a1,9d00b4a8 <__multiply+0x78>
9d00b4b4:	ac600000 	sw	zero,0(v1)
9d00b4b8:	26730004 	addiu	s3,s3,4
9d00b4bc:	26520004 	addiu	s2,s2,4
9d00b4c0:	00139880 	sll	s3,s3,0x2
9d00b4c4:	00129080 	sll	s2,s2,0x2
9d00b4c8:	260b0014 	addiu	t3,s0,20
9d00b4cc:	24c50014 	addiu	a1,a2,20
9d00b4d0:	02138021 	addu	s0,s0,s3
9d00b4d4:	00d23021 	addu	a2,a2,s2
9d00b4d8:	26100004 	addiu	s0,s0,4
9d00b4dc:	0b402d73 	j	9d00b5cc <__multiply+0x19c>
9d00b4e0:	24c60004 	addiu	a2,a2,4
9d00b4e4:	5120001c 	beqzl	t1,9d00b558 <__multiply+0x128>
9d00b4e8:	94a90002 	lhu	t1,2(a1)
9d00b4ec:	00801821 	move	v1,a0
9d00b4f0:	01603821 	move	a3,t3
9d00b4f4:	00004021 	move	t0,zero
9d00b4f8:	8ced0000 	lw	t5,0(a3)
9d00b4fc:	8c6e0000 	lw	t6,0(v1)
9d00b500:	24e70004 	addiu	a3,a3,4
9d00b504:	31afffff 	andi	t7,t5,0xffff
9d00b508:	71e99002 	mul	s2,t7,t1
9d00b50c:	31ccffff 	andi	t4,t6,0xffff
9d00b510:	000d6c02 	srl	t5,t5,0x10
9d00b514:	000e7402 	srl	t6,t6,0x10
9d00b518:	024c6021 	addu	t4,s2,t4
9d00b51c:	01886021 	addu	t4,t4,t0
9d00b520:	71a94002 	mul	t0,t5,t1
9d00b524:	010e6821 	addu	t5,t0,t6
9d00b528:	000c4402 	srl	t0,t4,0x10
9d00b52c:	01a86821 	addu	t5,t5,t0
9d00b530:	000d4402 	srl	t0,t5,0x10
9d00b534:	318cffff 	andi	t4,t4,0xffff
9d00b538:	000d6c00 	sll	t5,t5,0x10
9d00b53c:	01ac6025 	or	t4,t5,t4
9d00b540:	ac6c0000 	sw	t4,0(v1)
9d00b544:	00f0602b 	sltu	t4,a3,s0
9d00b548:	1580ffeb 	bnez	t4,9d00b4f8 <__multiply+0xc8>
9d00b54c:	24630004 	addiu	v1,v1,4
9d00b550:	ac680000 	sw	t0,0(v1)
9d00b554:	94a90002 	lhu	t1,2(a1)
9d00b558:	5120001b 	beqzl	t1,9d00b5c8 <__multiply+0x198>
9d00b55c:	24a50004 	addiu	a1,a1,4
9d00b560:	8c880000 	lw	t0,0(a0)
9d00b564:	00801821 	move	v1,a0
9d00b568:	01603821 	move	a3,t3
9d00b56c:	00006021 	move	t4,zero
9d00b570:	94ee0000 	lhu	t6,0(a3)
9d00b574:	946d0002 	lhu	t5,2(v1)
9d00b578:	3108ffff 	andi	t0,t0,0xffff
9d00b57c:	71c97802 	mul	t7,t6,t1
9d00b580:	01ed6821 	addu	t5,t7,t5
9d00b584:	01ac6021 	addu	t4,t5,t4
9d00b588:	000c6c00 	sll	t5,t4,0x10
9d00b58c:	01a84025 	or	t0,t5,t0
9d00b590:	ac680000 	sw	t0,0(v1)
9d00b594:	94ed0002 	lhu	t5,2(a3)
9d00b598:	24630004 	addiu	v1,v1,4
9d00b59c:	94680000 	lhu	t0,0(v1)
9d00b5a0:	71a97002 	mul	t6,t5,t1
9d00b5a4:	000c6402 	srl	t4,t4,0x10
9d00b5a8:	24e70004 	addiu	a3,a3,4
9d00b5ac:	00f0682b 	sltu	t5,a3,s0
9d00b5b0:	01c84021 	addu	t0,t6,t0
9d00b5b4:	010c4021 	addu	t0,t0,t4
9d00b5b8:	15a0ffed 	bnez	t5,9d00b570 <__multiply+0x140>
9d00b5bc:	00086402 	srl	t4,t0,0x10
9d00b5c0:	ac680000 	sw	t0,0(v1)
9d00b5c4:	24a50004 	addiu	a1,a1,4
9d00b5c8:	24840004 	addiu	a0,a0,4
9d00b5cc:	00a6182b 	sltu	v1,a1,a2
9d00b5d0:	5460ffc4 	bnezl	v1,9d00b4e4 <__multiply+0xb4>
9d00b5d4:	94a90000 	lhu	t1,0(a1)
9d00b5d8:	01401821 	move	v1,t2
9d00b5dc:	1a200006 	blez	s1,9d00b5f8 <__multiply+0x1c8>
9d00b5e0:	8fbf002c 	lw	ra,44(sp)
9d00b5e4:	2463fffc 	addiu	v1,v1,-4
9d00b5e8:	8c640000 	lw	a0,0(v1)
9d00b5ec:	5080fffb 	beqzl	a0,9d00b5dc <__multiply+0x1ac>
9d00b5f0:	2631ffff 	addiu	s1,s1,-1
9d00b5f4:	8fbf002c 	lw	ra,44(sp)
9d00b5f8:	ac510010 	sw	s1,16(v0)
9d00b5fc:	8fb30028 	lw	s3,40(sp)
9d00b600:	8fb20024 	lw	s2,36(sp)
9d00b604:	8fb10020 	lw	s1,32(sp)
9d00b608:	8fb0001c 	lw	s0,28(sp)
9d00b60c:	03e00008 	jr	ra
9d00b610:	27bd0030 	addiu	sp,sp,48

9d00b614 <__pow5mult>:
9d00b614:	27bdffd0 	addiu	sp,sp,-48
9d00b618:	30c20003 	andi	v0,a2,0x3
9d00b61c:	afb30028 	sw	s3,40(sp)
9d00b620:	afb10020 	sw	s1,32(sp)
9d00b624:	afb0001c 	sw	s0,28(sp)
9d00b628:	afbf002c 	sw	ra,44(sp)
9d00b62c:	afb20024 	sw	s2,36(sp)
9d00b630:	00808021 	move	s0,a0
9d00b634:	00a09821 	move	s3,a1
9d00b638:	1040000a 	beqz	v0,9d00b664 <__pow5mult+0x50>
9d00b63c:	00c08821 	move	s1,a2
9d00b640:	2442ffff 	addiu	v0,v0,-1
9d00b644:	3c039d01 	lui	v1,0x9d01
9d00b648:	24636798 	addiu	v1,v1,26520
9d00b64c:	00021080 	sll	v0,v0,0x2
9d00b650:	00431021 	addu	v0,v0,v1
9d00b654:	8c460000 	lw	a2,0(v0)
9d00b658:	0f402c72 	jal	9d00b1c8 <__multadd>
9d00b65c:	00003821 	move	a3,zero
9d00b660:	00409821 	move	s3,v0
9d00b664:	00118883 	sra	s1,s1,0x2
9d00b668:	12200026 	beqz	s1,9d00b704 <__pow5mult+0xf0>
9d00b66c:	8fbf002c 	lw	ra,44(sp)
9d00b670:	8e120048 	lw	s2,72(s0)
9d00b674:	1640000a 	bnez	s2,9d00b6a0 <__pow5mult+0x8c>
9d00b678:	32220001 	andi	v0,s1,0x1
9d00b67c:	02002021 	move	a0,s0
9d00b680:	0f402cff 	jal	9d00b3fc <__i2b>
9d00b684:	24050271 	li	a1,625
9d00b688:	ae020048 	sw	v0,72(s0)
9d00b68c:	00409021 	move	s2,v0
9d00b690:	0b402da7 	j	9d00b69c <__pow5mult+0x88>
9d00b694:	ac400000 	sw	zero,0(v0)
9d00b698:	00409021 	move	s2,v0
9d00b69c:	32220001 	andi	v0,s1,0x1
9d00b6a0:	5040000c 	beqzl	v0,9d00b6d4 <__pow5mult+0xc0>
9d00b6a4:	00118843 	sra	s1,s1,0x1
9d00b6a8:	02602821 	move	a1,s3
9d00b6ac:	02002021 	move	a0,s0
9d00b6b0:	0f402d0c 	jal	9d00b430 <__multiply>
9d00b6b4:	02403021 	move	a2,s2
9d00b6b8:	02602821 	move	a1,s3
9d00b6bc:	02002021 	move	a0,s0
9d00b6c0:	0f402c67 	jal	9d00b19c <_Bfree>
9d00b6c4:	afa20010 	sw	v0,16(sp)
9d00b6c8:	8fa20010 	lw	v0,16(sp)
9d00b6cc:	00409821 	move	s3,v0
9d00b6d0:	00118843 	sra	s1,s1,0x1
9d00b6d4:	1220000b 	beqz	s1,9d00b704 <__pow5mult+0xf0>
9d00b6d8:	8fbf002c 	lw	ra,44(sp)
9d00b6dc:	8e420000 	lw	v0,0(s2)
9d00b6e0:	5440ffee 	bnezl	v0,9d00b69c <__pow5mult+0x88>
9d00b6e4:	00409021 	move	s2,v0
9d00b6e8:	02002021 	move	a0,s0
9d00b6ec:	02402821 	move	a1,s2
9d00b6f0:	0f402d0c 	jal	9d00b430 <__multiply>
9d00b6f4:	02403021 	move	a2,s2
9d00b6f8:	ae420000 	sw	v0,0(s2)
9d00b6fc:	0b402da6 	j	9d00b698 <__pow5mult+0x84>
9d00b700:	ac400000 	sw	zero,0(v0)
9d00b704:	02601021 	move	v0,s3
9d00b708:	8fb30028 	lw	s3,40(sp)
9d00b70c:	8fb20024 	lw	s2,36(sp)
9d00b710:	8fb10020 	lw	s1,32(sp)
9d00b714:	8fb0001c 	lw	s0,28(sp)
9d00b718:	03e00008 	jr	ra
9d00b71c:	27bd0030 	addiu	sp,sp,48

9d00b720 <__lshift>:
9d00b720:	27bdffd0 	addiu	sp,sp,-48
9d00b724:	afb0001c 	sw	s0,28(sp)
9d00b728:	00a08021 	move	s0,a1
9d00b72c:	afb20024 	sw	s2,36(sp)
9d00b730:	8e120010 	lw	s2,16(s0)
9d00b734:	afb30028 	sw	s3,40(sp)
9d00b738:	00069943 	sra	s3,a2,0x5
9d00b73c:	26520001 	addiu	s2,s2,1
9d00b740:	afb10020 	sw	s1,32(sp)
9d00b744:	afbf002c 	sw	ra,44(sp)
9d00b748:	00808821 	move	s1,a0
9d00b74c:	8ca50004 	lw	a1,4(a1)
9d00b750:	02539021 	addu	s2,s2,s3
9d00b754:	0b402dd8 	j	9d00b760 <__lshift+0x40>
9d00b758:	8e020008 	lw	v0,8(s0)
9d00b75c:	00021040 	sll	v0,v0,0x1
9d00b760:	0052182a 	slt	v1,v0,s2
9d00b764:	5460fffd 	bnezl	v1,9d00b75c <__lshift+0x3c>
9d00b768:	24a50001 	addiu	a1,a1,1
9d00b76c:	02202021 	move	a0,s1
9d00b770:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00b774:	afa60010 	sw	a2,16(sp)
9d00b778:	24430014 	addiu	v1,v0,20
9d00b77c:	00002021 	move	a0,zero
9d00b780:	0b402de4 	j	9d00b790 <__lshift+0x70>
9d00b784:	8fa60010 	lw	a2,16(sp)
9d00b788:	24840001 	addiu	a0,a0,1
9d00b78c:	24630004 	addiu	v1,v1,4
9d00b790:	0093282a 	slt	a1,a0,s3
9d00b794:	54a0fffc 	bnezl	a1,9d00b788 <__lshift+0x68>
9d00b798:	ac600000 	sw	zero,0(v1)
9d00b79c:	8e070010 	lw	a3,16(s0)
9d00b7a0:	30c6001f 	andi	a2,a2,0x1f
9d00b7a4:	26040014 	addiu	a0,s0,20
9d00b7a8:	24e70004 	addiu	a3,a3,4
9d00b7ac:	00073880 	sll	a3,a3,0x2
9d00b7b0:	02073821 	addu	a3,s0,a3
9d00b7b4:	10c00012 	beqz	a2,9d00b800 <__lshift+0xe0>
9d00b7b8:	24e70004 	addiu	a3,a3,4
9d00b7bc:	24080020 	li	t0,32
9d00b7c0:	01064023 	subu	t0,t0,a2
9d00b7c4:	00002821 	move	a1,zero
9d00b7c8:	8c890000 	lw	t1,0(a0)
9d00b7cc:	00c94804 	sllv	t1,t1,a2
9d00b7d0:	00a92825 	or	a1,a1,t1
9d00b7d4:	ac650000 	sw	a1,0(v1)
9d00b7d8:	8c850000 	lw	a1,0(a0)
9d00b7dc:	24840004 	addiu	a0,a0,4
9d00b7e0:	0087482b 	sltu	t1,a0,a3
9d00b7e4:	24630004 	addiu	v1,v1,4
9d00b7e8:	1520fff7 	bnez	t1,9d00b7c8 <__lshift+0xa8>
9d00b7ec:	01052806 	srlv	a1,a1,t0
9d00b7f0:	ac650000 	sw	a1,0(v1)
9d00b7f4:	0005282b 	sltu	a1,zero,a1
9d00b7f8:	0b402e06 	j	9d00b818 <__lshift+0xf8>
9d00b7fc:	02459021 	addu	s2,s2,a1
9d00b800:	8c850000 	lw	a1,0(a0)
9d00b804:	24840004 	addiu	a0,a0,4
9d00b808:	ac650000 	sw	a1,0(v1)
9d00b80c:	0087282b 	sltu	a1,a0,a3
9d00b810:	14a0fffb 	bnez	a1,9d00b800 <__lshift+0xe0>
9d00b814:	24630004 	addiu	v1,v1,4
9d00b818:	2652ffff 	addiu	s2,s2,-1
9d00b81c:	ac520010 	sw	s2,16(v0)
9d00b820:	02202021 	move	a0,s1
9d00b824:	02002821 	move	a1,s0
9d00b828:	0f402c67 	jal	9d00b19c <_Bfree>
9d00b82c:	afa20010 	sw	v0,16(sp)
9d00b830:	8fbf002c 	lw	ra,44(sp)
9d00b834:	8fa20010 	lw	v0,16(sp)
9d00b838:	8fb30028 	lw	s3,40(sp)
9d00b83c:	8fb20024 	lw	s2,36(sp)
9d00b840:	8fb10020 	lw	s1,32(sp)
9d00b844:	8fb0001c 	lw	s0,28(sp)
9d00b848:	03e00008 	jr	ra
9d00b84c:	27bd0030 	addiu	sp,sp,48

9d00b850 <__mcmp>:
9d00b850:	8c820010 	lw	v0,16(a0)
9d00b854:	8ca30010 	lw	v1,16(a1)
9d00b858:	00431023 	subu	v0,v0,v1
9d00b85c:	14400014 	bnez	v0,9d00b8b0 <__mcmp+0x60>
9d00b860:	24630004 	addiu	v1,v1,4
9d00b864:	00031880 	sll	v1,v1,0x2
9d00b868:	24870014 	addiu	a3,a0,20
9d00b86c:	00a32821 	addu	a1,a1,v1
9d00b870:	00832021 	addu	a0,a0,v1
9d00b874:	24840004 	addiu	a0,a0,4
9d00b878:	24a50004 	addiu	a1,a1,4
9d00b87c:	2484fffc 	addiu	a0,a0,-4
9d00b880:	24a5fffc 	addiu	a1,a1,-4
9d00b884:	8c860000 	lw	a2,0(a0)
9d00b888:	8ca30000 	lw	v1,0(a1)
9d00b88c:	50c30006 	beql	a2,v1,9d00b8a8 <__mcmp+0x58>
9d00b890:	00e4182b 	sltu	v1,a3,a0
9d00b894:	00c3182b 	sltu	v1,a2,v1
9d00b898:	2402ffff 	li	v0,-1
9d00b89c:	24040001 	li	a0,1
9d00b8a0:	03e00008 	jr	ra
9d00b8a4:	0083100a 	movz	v0,a0,v1
9d00b8a8:	1460fff5 	bnez	v1,9d00b880 <__mcmp+0x30>
9d00b8ac:	2484fffc 	addiu	a0,a0,-4
9d00b8b0:	03e00008 	jr	ra
9d00b8b4:	00000000 	nop

9d00b8b8 <__mdiff>:
9d00b8b8:	27bdffd8 	addiu	sp,sp,-40
9d00b8bc:	afb10018 	sw	s1,24(sp)
9d00b8c0:	afb00014 	sw	s0,20(sp)
9d00b8c4:	00808821 	move	s1,a0
9d00b8c8:	00a08021 	move	s0,a1
9d00b8cc:	00a02021 	move	a0,a1
9d00b8d0:	00c02821 	move	a1,a2
9d00b8d4:	afb2001c 	sw	s2,28(sp)
9d00b8d8:	afbf0024 	sw	ra,36(sp)
9d00b8dc:	afb30020 	sw	s3,32(sp)
9d00b8e0:	0f402e14 	jal	9d00b850 <__mcmp>
9d00b8e4:	00c09021 	move	s2,a2
9d00b8e8:	14400007 	bnez	v0,9d00b908 <__mdiff+0x50>
9d00b8ec:	02202021 	move	a0,s1
9d00b8f0:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00b8f4:	00002821 	move	a1,zero
9d00b8f8:	24030001 	li	v1,1
9d00b8fc:	ac430010 	sw	v1,16(v0)
9d00b900:	0b402e87 	j	9d00ba1c <__mdiff+0x164>
9d00b904:	ac400014 	sw	zero,20(v0)
9d00b908:	04410005 	bgez	v0,9d00b920 <__mdiff+0x68>
9d00b90c:	00009821 	move	s3,zero
9d00b910:	02001021 	move	v0,s0
9d00b914:	24130001 	li	s3,1
9d00b918:	02408021 	move	s0,s2
9d00b91c:	00409021 	move	s2,v0
9d00b920:	8e050004 	lw	a1,4(s0)
9d00b924:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00b928:	02202021 	move	a0,s1
9d00b92c:	8e050010 	lw	a1,16(s0)
9d00b930:	26040014 	addiu	a0,s0,20
9d00b934:	26470014 	addiu	a3,s2,20
9d00b938:	24a30004 	addiu	v1,a1,4
9d00b93c:	00031880 	sll	v1,v1,0x2
9d00b940:	02038021 	addu	s0,s0,v1
9d00b944:	8e430010 	lw	v1,16(s2)
9d00b948:	ac53000c 	sw	s3,12(v0)
9d00b94c:	26100004 	addiu	s0,s0,4
9d00b950:	24630004 	addiu	v1,v1,4
9d00b954:	00031880 	sll	v1,v1,0x2
9d00b958:	02439021 	addu	s2,s2,v1
9d00b95c:	26520004 	addiu	s2,s2,4
9d00b960:	24430014 	addiu	v1,v0,20
9d00b964:	00003021 	move	a2,zero
9d00b968:	8c890000 	lw	t1,0(a0)
9d00b96c:	8cea0000 	lw	t2,0(a3)
9d00b970:	24e70004 	addiu	a3,a3,4
9d00b974:	312bffff 	andi	t3,t1,0xffff
9d00b978:	3148ffff 	andi	t0,t2,0xffff
9d00b97c:	01684023 	subu	t0,t3,t0
9d00b980:	01064021 	addu	t0,t0,a2
9d00b984:	00094c02 	srl	t1,t1,0x10
9d00b988:	000a5402 	srl	t2,t2,0x10
9d00b98c:	00083403 	sra	a2,t0,0x10
9d00b990:	012a4823 	subu	t1,t1,t2
9d00b994:	01264821 	addu	t1,t1,a2
9d00b998:	00093403 	sra	a2,t1,0x10
9d00b99c:	3108ffff 	andi	t0,t0,0xffff
9d00b9a0:	00094c00 	sll	t1,t1,0x10
9d00b9a4:	01284025 	or	t0,t1,t0
9d00b9a8:	ac680000 	sw	t0,0(v1)
9d00b9ac:	00f2402b 	sltu	t0,a3,s2
9d00b9b0:	24840004 	addiu	a0,a0,4
9d00b9b4:	1500ffec 	bnez	t0,9d00b968 <__mdiff+0xb0>
9d00b9b8:	24630004 	addiu	v1,v1,4
9d00b9bc:	0b402e7e 	j	9d00b9f8 <__mdiff+0x140>
9d00b9c0:	0090382b 	sltu	a3,a0,s0
9d00b9c4:	24840004 	addiu	a0,a0,4
9d00b9c8:	3127ffff 	andi	a3,t1,0xffff
9d00b9cc:	00c73821 	addu	a3,a2,a3
9d00b9d0:	00074403 	sra	t0,a3,0x10
9d00b9d4:	00094c02 	srl	t1,t1,0x10
9d00b9d8:	01094021 	addu	t0,t0,t1
9d00b9dc:	00083403 	sra	a2,t0,0x10
9d00b9e0:	30e7ffff 	andi	a3,a3,0xffff
9d00b9e4:	00084400 	sll	t0,t0,0x10
9d00b9e8:	01073825 	or	a3,t0,a3
9d00b9ec:	ac670000 	sw	a3,0(v1)
9d00b9f0:	24630004 	addiu	v1,v1,4
9d00b9f4:	0090382b 	sltu	a3,a0,s0
9d00b9f8:	54e0fff2 	bnezl	a3,9d00b9c4 <__mdiff+0x10c>
9d00b9fc:	8c890000 	lw	t1,0(a0)
9d00ba00:	0b402e83 	j	9d00ba0c <__mdiff+0x154>
9d00ba04:	2463fffc 	addiu	v1,v1,-4
9d00ba08:	2463fffc 	addiu	v1,v1,-4
9d00ba0c:	8c640000 	lw	a0,0(v1)
9d00ba10:	5080fffd 	beqzl	a0,9d00ba08 <__mdiff+0x150>
9d00ba14:	24a5ffff 	addiu	a1,a1,-1
9d00ba18:	ac450010 	sw	a1,16(v0)
9d00ba1c:	8fbf0024 	lw	ra,36(sp)
9d00ba20:	8fb30020 	lw	s3,32(sp)
9d00ba24:	8fb2001c 	lw	s2,28(sp)
9d00ba28:	8fb10018 	lw	s1,24(sp)
9d00ba2c:	8fb00014 	lw	s0,20(sp)
9d00ba30:	03e00008 	jr	ra
9d00ba34:	27bd0028 	addiu	sp,sp,40

9d00ba38 <__d2b>:
9d00ba38:	27bdffd0 	addiu	sp,sp,-48
9d00ba3c:	24050001 	li	a1,1
9d00ba40:	afb40028 	sw	s4,40(sp)
9d00ba44:	afb30024 	sw	s3,36(sp)
9d00ba48:	afb20020 	sw	s2,32(sp)
9d00ba4c:	00e09821 	move	s3,a3
9d00ba50:	afb1001c 	sw	s1,28(sp)
9d00ba54:	afb00018 	sw	s0,24(sp)
9d00ba58:	afbf002c 	sw	ra,44(sp)
9d00ba5c:	8fb10040 	lw	s1,64(sp)
9d00ba60:	8fb00044 	lw	s0,68(sp)
9d00ba64:	0f402c3c 	jal	9d00b0f0 <_Balloc>
9d00ba68:	00c09021 	move	s2,a2
9d00ba6c:	0040a021 	move	s4,v0
9d00ba70:	7e629800 	ext	v0,s3,0x0,0x14
9d00ba74:	7e735500 	ext	s3,s3,0x14,0xb
9d00ba78:	12600004 	beqz	s3,9d00ba8c <__d2b+0x54>
9d00ba7c:	afa20014 	sw	v0,20(sp)
9d00ba80:	3c030010 	lui	v1,0x10
9d00ba84:	00431025 	or	v0,v0,v1
9d00ba88:	afa20014 	sw	v0,20(sp)
9d00ba8c:	12400015 	beqz	s2,9d00bae4 <__d2b+0xac>
9d00ba90:	27a40010 	addiu	a0,sp,16
9d00ba94:	0f402cd1 	jal	9d00b344 <__lo0bits>
9d00ba98:	afb20010 	sw	s2,16(sp)
9d00ba9c:	10400009 	beqz	v0,9d00bac4 <__d2b+0x8c>
9d00baa0:	8fa30010 	lw	v1,16(sp)
9d00baa4:	8fa40014 	lw	a0,20(sp)
9d00baa8:	00022823 	negu	a1,v0
9d00baac:	00a42804 	sllv	a1,a0,a1
9d00bab0:	00a31825 	or	v1,a1,v1
9d00bab4:	00442006 	srlv	a0,a0,v0
9d00bab8:	ae830014 	sw	v1,20(s4)
9d00babc:	0b402eb2 	j	9d00bac8 <__d2b+0x90>
9d00bac0:	afa40014 	sw	a0,20(sp)
9d00bac4:	ae830014 	sw	v1,20(s4)
9d00bac8:	8fa30014 	lw	v1,20(sp)
9d00bacc:	24120002 	li	s2,2
9d00bad0:	24040001 	li	a0,1
9d00bad4:	0083900a 	movz	s2,a0,v1
9d00bad8:	ae830018 	sw	v1,24(s4)
9d00badc:	0b402ec1 	j	9d00bb04 <__d2b+0xcc>
9d00bae0:	ae920010 	sw	s2,16(s4)
9d00bae4:	0f402cd1 	jal	9d00b344 <__lo0bits>
9d00bae8:	27a40014 	addiu	a0,sp,20
9d00baec:	8fa30014 	lw	v1,20(sp)
9d00baf0:	24420020 	addiu	v0,v0,32
9d00baf4:	24120001 	li	s2,1
9d00baf8:	ae830014 	sw	v1,20(s4)
9d00bafc:	24030001 	li	v1,1
9d00bb00:	ae830010 	sw	v1,16(s4)
9d00bb04:	52600008 	beqzl	s3,9d00bb28 <__d2b+0xf0>
9d00bb08:	2442fbce 	addiu	v0,v0,-1074
9d00bb0c:	2673fbcd 	addiu	s3,s3,-1075
9d00bb10:	24030035 	li	v1,53
9d00bb14:	02629821 	addu	s3,s3,v0
9d00bb18:	00621023 	subu	v0,v1,v0
9d00bb1c:	ae330000 	sw	s3,0(s1)
9d00bb20:	0b402ed3 	j	9d00bb4c <__d2b+0x114>
9d00bb24:	ae020000 	sw	v0,0(s0)
9d00bb28:	ae220000 	sw	v0,0(s1)
9d00bb2c:	26420003 	addiu	v0,s2,3
9d00bb30:	00021080 	sll	v0,v0,0x2
9d00bb34:	02821021 	addu	v0,s4,v0
9d00bb38:	8c440004 	lw	a0,4(v0)
9d00bb3c:	0f402cb3 	jal	9d00b2cc <__hi0bits>
9d00bb40:	00129140 	sll	s2,s2,0x5
9d00bb44:	02429023 	subu	s2,s2,v0
9d00bb48:	ae120000 	sw	s2,0(s0)
9d00bb4c:	8fbf002c 	lw	ra,44(sp)
9d00bb50:	02801021 	move	v0,s4
9d00bb54:	8fb40028 	lw	s4,40(sp)
9d00bb58:	8fb30024 	lw	s3,36(sp)
9d00bb5c:	8fb20020 	lw	s2,32(sp)
9d00bb60:	8fb1001c 	lw	s1,28(sp)
9d00bb64:	8fb00018 	lw	s0,24(sp)
9d00bb68:	03e00008 	jr	ra
9d00bb6c:	27bd0030 	addiu	sp,sp,48

9d00bb70 <__ssprint_r>:
9d00bb70:	8cc20008 	lw	v0,8(a2)
9d00bb74:	27bdffc0 	addiu	sp,sp,-64
9d00bb78:	afb70034 	sw	s7,52(sp)
9d00bb7c:	afb60030 	sw	s6,48(sp)
9d00bb80:	afb20020 	sw	s2,32(sp)
9d00bb84:	afb00018 	sw	s0,24(sp)
9d00bb88:	afbf003c 	sw	ra,60(sp)
9d00bb8c:	afbe0038 	sw	s8,56(sp)
9d00bb90:	afb5002c 	sw	s5,44(sp)
9d00bb94:	afb40028 	sw	s4,40(sp)
9d00bb98:	afb30024 	sw	s3,36(sp)
9d00bb9c:	afb1001c 	sw	s1,28(sp)
9d00bba0:	00808021 	move	s0,a0
9d00bba4:	00a0b021 	move	s6,a1
9d00bba8:	00c0b821 	move	s7,a2
9d00bbac:	10400061 	beqz	v0,9d00bd34 <__ssprint_r+0x1c4>
9d00bbb0:	8cd20000 	lw	s2,0(a2)
9d00bbb4:	00009821 	move	s3,zero
9d00bbb8:	0000f021 	move	s8,zero
9d00bbbc:	24140003 	li	s4,3
9d00bbc0:	0b402ef5 	j	9d00bbd4 <__ssprint_r+0x64>
9d00bbc4:	2415fb7f 	li	s5,-1153
9d00bbc8:	8e530000 	lw	s3,0(s2)
9d00bbcc:	8e5e0004 	lw	s8,4(s2)
9d00bbd0:	26520008 	addiu	s2,s2,8
9d00bbd4:	53c0fffd 	beqzl	s8,9d00bbcc <__ssprint_r+0x5c>
9d00bbd8:	8e530000 	lw	s3,0(s2)
9d00bbdc:	8ec30008 	lw	v1,8(s6)
9d00bbe0:	03c3102b 	sltu	v0,s8,v1
9d00bbe4:	54400042 	bnezl	v0,9d00bcf0 <__ssprint_r+0x180>
9d00bbe8:	8ec40000 	lw	a0,0(s6)
9d00bbec:	96c2000c 	lhu	v0,12(s6)
9d00bbf0:	30440480 	andi	a0,v0,0x480
9d00bbf4:	5080003d 	beqzl	a0,9d00bcec <__ssprint_r+0x17c>
9d00bbf8:	03c3102b 	sltu	v0,s8,v1
9d00bbfc:	8ec70014 	lw	a3,20(s6)
9d00bc00:	8ec50010 	lw	a1,16(s6)
9d00bc04:	8ed10000 	lw	s1,0(s6)
9d00bc08:	72873802 	mul	a3,s4,a3
9d00bc0c:	30420400 	andi	v0,v0,0x400
9d00bc10:	02258823 	subu	s1,s1,a1
9d00bc14:	00071fc2 	srl	v1,a3,0x1f
9d00bc18:	00673821 	addu	a3,v1,a3
9d00bc1c:	26230001 	addiu	v1,s1,1
9d00bc20:	00073843 	sra	a3,a3,0x1
9d00bc24:	007e1821 	addu	v1,v1,s8
9d00bc28:	00e3202b 	sltu	a0,a3,v1
9d00bc2c:	10400014 	beqz	v0,9d00bc80 <__ssprint_r+0x110>
9d00bc30:	0064380b 	movn	a3,v1,a0
9d00bc34:	00e02821 	move	a1,a3
9d00bc38:	02002021 	move	a0,s0
9d00bc3c:	0f401c4a 	jal	9d007128 <_malloc_r>
9d00bc40:	afa70014 	sw	a3,20(sp)
9d00bc44:	10400018 	beqz	v0,9d00bca8 <__ssprint_r+0x138>
9d00bc48:	8fa70014 	lw	a3,20(sp)
9d00bc4c:	8ec50010 	lw	a1,16(s6)
9d00bc50:	00402021 	move	a0,v0
9d00bc54:	02203021 	move	a2,s1
9d00bc58:	afa70014 	sw	a3,20(sp)
9d00bc5c:	0f402c17 	jal	9d00b05c <memcpy>
9d00bc60:	afa20010 	sw	v0,16(sp)
9d00bc64:	96c2000c 	lhu	v0,12(s6)
9d00bc68:	8fa30010 	lw	v1,16(sp)
9d00bc6c:	8fa70014 	lw	a3,20(sp)
9d00bc70:	00551024 	and	v0,v0,s5
9d00bc74:	34420080 	ori	v0,v0,0x80
9d00bc78:	0b402f33 	j	9d00bccc <__ssprint_r+0x15c>
9d00bc7c:	a6c2000c 	sh	v0,12(s6)
9d00bc80:	00e03021 	move	a2,a3
9d00bc84:	02002021 	move	a0,s0
9d00bc88:	0f401df9 	jal	9d0077e4 <_realloc_r>
9d00bc8c:	afa70014 	sw	a3,20(sp)
9d00bc90:	00401821 	move	v1,v0
9d00bc94:	1440000d 	bnez	v0,9d00bccc <__ssprint_r+0x15c>
9d00bc98:	8fa70014 	lw	a3,20(sp)
9d00bc9c:	8ec50010 	lw	a1,16(s6)
9d00bca0:	0f402b6e 	jal	9d00adb8 <_free_r>
9d00bca4:	02002021 	move	a0,s0
9d00bca8:	2402000c 	li	v0,12
9d00bcac:	ae020000 	sw	v0,0(s0)
9d00bcb0:	96c2000c 	lhu	v0,12(s6)
9d00bcb4:	34420040 	ori	v0,v0,0x40
9d00bcb8:	a6c2000c 	sh	v0,12(s6)
9d00bcbc:	aee00008 	sw	zero,8(s7)
9d00bcc0:	aee00004 	sw	zero,4(s7)
9d00bcc4:	0b402f4f 	j	9d00bd3c <__ssprint_r+0x1cc>
9d00bcc8:	2402ffff 	li	v0,-1
9d00bccc:	aec30010 	sw	v1,16(s6)
9d00bcd0:	00711821 	addu	v1,v1,s1
9d00bcd4:	00f18823 	subu	s1,a3,s1
9d00bcd8:	aec30000 	sw	v1,0(s6)
9d00bcdc:	aec70014 	sw	a3,20(s6)
9d00bce0:	03c01821 	move	v1,s8
9d00bce4:	aed10008 	sw	s1,8(s6)
9d00bce8:	03c3102b 	sltu	v0,s8,v1
9d00bcec:	8ec40000 	lw	a0,0(s6)
9d00bcf0:	03c2180b 	movn	v1,s8,v0
9d00bcf4:	00603021 	move	a2,v1
9d00bcf8:	02602821 	move	a1,s3
9d00bcfc:	0f402c22 	jal	9d00b088 <memmove>
9d00bd00:	afa30010 	sw	v1,16(sp)
9d00bd04:	8ec20008 	lw	v0,8(s6)
9d00bd08:	8fa30010 	lw	v1,16(sp)
9d00bd0c:	00431023 	subu	v0,v0,v1
9d00bd10:	aec20008 	sw	v0,8(s6)
9d00bd14:	8ec20000 	lw	v0,0(s6)
9d00bd18:	00431821 	addu	v1,v0,v1
9d00bd1c:	8ee20008 	lw	v0,8(s7)
9d00bd20:	aec30000 	sw	v1,0(s6)
9d00bd24:	005ef023 	subu	s8,v0,s8
9d00bd28:	17c0ffa7 	bnez	s8,9d00bbc8 <__ssprint_r+0x58>
9d00bd2c:	aefe0008 	sw	s8,8(s7)
9d00bd30:	aee00008 	sw	zero,8(s7)
9d00bd34:	aee00004 	sw	zero,4(s7)
9d00bd38:	00001021 	move	v0,zero
9d00bd3c:	8fbf003c 	lw	ra,60(sp)
9d00bd40:	8fbe0038 	lw	s8,56(sp)
9d00bd44:	8fb70034 	lw	s7,52(sp)
9d00bd48:	8fb60030 	lw	s6,48(sp)
9d00bd4c:	8fb5002c 	lw	s5,44(sp)
9d00bd50:	8fb40028 	lw	s4,40(sp)
9d00bd54:	8fb30024 	lw	s3,36(sp)
9d00bd58:	8fb20020 	lw	s2,32(sp)
9d00bd5c:	8fb1001c 	lw	s1,28(sp)
9d00bd60:	8fb00018 	lw	s0,24(sp)
9d00bd64:	03e00008 	jr	ra
9d00bd68:	27bd0040 	addiu	sp,sp,64

9d00bd6c <_calloc_r>:
9d00bd6c:	27bdffe8 	addiu	sp,sp,-24
9d00bd70:	afb00010 	sw	s0,16(sp)
9d00bd74:	afbf0014 	sw	ra,20(sp)
9d00bd78:	0f401c4a 	jal	9d007128 <_malloc_r>
9d00bd7c:	70c52802 	mul	a1,a2,a1
9d00bd80:	1040001e 	beqz	v0,9d00bdfc <_calloc_r+0x90>
9d00bd84:	00408021 	move	s0,v0
9d00bd88:	8c42fffc 	lw	v0,-4(v0)
9d00bd8c:	2406fffc 	li	a2,-4
9d00bd90:	00c23024 	and	a2,a2,v0
9d00bd94:	24c6fffc 	addiu	a2,a2,-4
9d00bd98:	2cc20025 	sltiu	v0,a2,37
9d00bd9c:	10400014 	beqz	v0,9d00bdf0 <_calloc_r+0x84>
9d00bda0:	2cc30014 	sltiu	v1,a2,20
9d00bda4:	1460000e 	bnez	v1,9d00bde0 <_calloc_r+0x74>
9d00bda8:	02001021 	move	v0,s0
9d00bdac:	2cc3001c 	sltiu	v1,a2,28
9d00bdb0:	ae000000 	sw	zero,0(s0)
9d00bdb4:	ae000004 	sw	zero,4(s0)
9d00bdb8:	14600009 	bnez	v1,9d00bde0 <_calloc_r+0x74>
9d00bdbc:	26020008 	addiu	v0,s0,8
9d00bdc0:	24030024 	li	v1,36
9d00bdc4:	ae000008 	sw	zero,8(s0)
9d00bdc8:	ae00000c 	sw	zero,12(s0)
9d00bdcc:	14c30004 	bne	a2,v1,9d00bde0 <_calloc_r+0x74>
9d00bdd0:	26020010 	addiu	v0,s0,16
9d00bdd4:	ae000010 	sw	zero,16(s0)
9d00bdd8:	ae000014 	sw	zero,20(s0)
9d00bddc:	26020018 	addiu	v0,s0,24
9d00bde0:	ac400000 	sw	zero,0(v0)
9d00bde4:	ac400004 	sw	zero,4(v0)
9d00bde8:	0b402f7f 	j	9d00bdfc <_calloc_r+0x90>
9d00bdec:	ac400008 	sw	zero,8(v0)
9d00bdf0:	02002021 	move	a0,s0
9d00bdf4:	0f402f84 	jal	9d00be10 <memset>
9d00bdf8:	00002821 	move	a1,zero
9d00bdfc:	8fbf0014 	lw	ra,20(sp)
9d00be00:	02001021 	move	v0,s0
9d00be04:	8fb00010 	lw	s0,16(sp)
9d00be08:	03e00008 	jr	ra
9d00be0c:	27bd0018 	addiu	sp,sp,24

9d00be10 <memset>:
9d00be10:	00801021 	move	v0,a0
9d00be14:	0b402f89 	j	9d00be24 <memset+0x14>
9d00be18:	00801821 	move	v1,a0
9d00be1c:	24c6ffff 	addiu	a2,a2,-1
9d00be20:	24630001 	addiu	v1,v1,1
9d00be24:	54c0fffd 	bnezl	a2,9d00be1c <memset+0xc>
9d00be28:	a0650000 	sb	a1,0(v1)
9d00be2c:	03e00008 	jr	ra
9d00be30:	00000000 	nop

9d00be34 <__cxa_pure_virtual>:
9d00be34:	3c059d01 	lui	a1,0x9d01
9d00be38:	27bdffe8 	addiu	sp,sp,-24
9d00be3c:	24040002 	li	a0,2
9d00be40:	24a567a4 	addiu	a1,a1,26532
9d00be44:	afbf0014 	sw	ra,20(sp)
9d00be48:	0f404dee 	jal	9d0137b8 <write>
9d00be4c:	2406001b 	li	a2,27
9d00be50:	0f402f96 	jal	9d00be58 <_ZSt9terminatev>
9d00be54:	00000000 	nop

9d00be58 <_ZSt9terminatev>:
9d00be58:	8f828018 	lw	v0,-32744(gp)
9d00be5c:	27bdffe8 	addiu	sp,sp,-24
9d00be60:	afbf0014 	sw	ra,20(sp)
9d00be64:	0040f809 	jalr	v0
9d00be68:	00000000 	nop
9d00be6c:	0f40506e 	jal	9d0141b8 <abort>
9d00be70:	00000000 	nop

9d00be74 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv>:
9d00be74:	93828058 	lbu	v0,-32680(gp)
9d00be78:	27bdffd8 	addiu	sp,sp,-40
9d00be7c:	afbf0024 	sw	ra,36(sp)
9d00be80:	afb10020 	sw	s1,32(sp)
9d00be84:	1440003c 	bnez	v0,9d00bf78 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x104>
9d00be88:	afb0001c 	sw	s0,28(sp)
9d00be8c:	24020001 	li	v0,1
9d00be90:	0f404ce8 	jal	9d0133a0 <__cxa_current_exception_type>
9d00be94:	a3828058 	sb	v0,-32680(gp)
9d00be98:	10400040 	beqz	v0,9d00bf9c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0x128>
9d00be9c:	00002821 	move	a1,zero
9d00bea0:	8c510004 	lw	s1,4(v0)
9d00bea4:	00003021 	move	a2,zero
9d00bea8:	82220000 	lb	v0,0(s1)
9d00beac:	27a70010 	addiu	a3,sp,16
9d00beb0:	3842002a 	xori	v0,v0,0x2a
9d00beb4:	2c420001 	sltiu	v0,v0,1
9d00beb8:	02228821 	addu	s1,s1,v0
9d00bebc:	02202021 	move	a0,s1
9d00bec0:	2402ffff 	li	v0,-1
9d00bec4:	0f404c99 	jal	9d013264 <__cxa_demangle>
9d00bec8:	afa20010 	sw	v0,16(sp)
9d00becc:	00408021 	move	s0,v0
9d00bed0:	8f828008 	lw	v0,-32760(gp)
9d00bed4:	3c049d01 	lui	a0,0x9d01
9d00bed8:	248467e0 	addiu	a0,a0,26592
9d00bedc:	8c47000c 	lw	a3,12(v0)
9d00bee0:	24050001 	li	a1,1
9d00bee4:	0f40520a 	jal	9d014828 <fwrite>
9d00bee8:	24060030 	li	a2,48
9d00beec:	8fa20010 	lw	v0,16(sp)
9d00bef0:	10400010 	beqz	v0,9d00bf34 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xc0>
9d00bef4:	8f828008 	lw	v0,-32760(gp)
9d00bef8:	02202021 	move	a0,s1
9d00befc:	0f40509b 	jal	9d01426c <fputs>
9d00bf00:	8c45000c 	lw	a1,12(v0)
9d00bf04:	8f828008 	lw	v0,-32760(gp)
9d00bf08:	3c049d01 	lui	a0,0x9d01
9d00bf0c:	24846814 	addiu	a0,a0,26644
9d00bf10:	8c47000c 	lw	a3,12(v0)
9d00bf14:	24050001 	li	a1,1
9d00bf18:	0f40520a 	jal	9d014828 <fwrite>
9d00bf1c:	24060002 	li	a2,2
9d00bf20:	8fa20010 	lw	v0,16(sp)
9d00bf24:	10400010 	beqz	v0,9d00bf68 <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xf4>
9d00bf28:	00000000 	nop
9d00bf2c:	0f40506e 	jal	9d0141b8 <abort>
9d00bf30:	00000000 	nop
9d00bf34:	02002021 	move	a0,s0
9d00bf38:	0f40509b 	jal	9d01426c <fputs>
9d00bf3c:	8c45000c 	lw	a1,12(v0)
9d00bf40:	8f828008 	lw	v0,-32760(gp)
9d00bf44:	3c049d01 	lui	a0,0x9d01
9d00bf48:	24846814 	addiu	a0,a0,26644
9d00bf4c:	8c47000c 	lw	a3,12(v0)
9d00bf50:	24050001 	li	a1,1
9d00bf54:	0f40520a 	jal	9d014828 <fwrite>
9d00bf58:	24060002 	li	a2,2
9d00bf5c:	8fa20010 	lw	v0,16(sp)
9d00bf60:	1440fff2 	bnez	v0,9d00bf2c <_ZN9__gnu_cxx27__verbose_terminate_handlerEv+0xb8>
9d00bf64:	00000000 	nop
9d00bf68:	0f401c40 	jal	9d007100 <free>
9d00bf6c:	02002021 	move	a0,s0
9d00bf70:	0f40506e 	jal	9d0141b8 <abort>
9d00bf74:	00000000 	nop
9d00bf78:	8f828008 	lw	v0,-32760(gp)
9d00bf7c:	3c049d01 	lui	a0,0x9d01
9d00bf80:	248467c0 	addiu	a0,a0,26560
9d00bf84:	8c47000c 	lw	a3,12(v0)
9d00bf88:	24050001 	li	a1,1
9d00bf8c:	0f40520a 	jal	9d014828 <fwrite>
9d00bf90:	2406001d 	li	a2,29
9d00bf94:	0f40506e 	jal	9d0141b8 <abort>
9d00bf98:	00000000 	nop
9d00bf9c:	8f828008 	lw	v0,-32760(gp)
9d00bfa0:	3c049d01 	lui	a0,0x9d01
9d00bfa4:	24846818 	addiu	a0,a0,26648
9d00bfa8:	8c47000c 	lw	a3,12(v0)
9d00bfac:	24050001 	li	a1,1
9d00bfb0:	0f40520a 	jal	9d014828 <fwrite>
9d00bfb4:	2406002d 	li	a2,45
9d00bfb8:	0f40506e 	jal	9d0141b8 <abort>
9d00bfbc:	00000000 	nop

9d00bfc0 <d_make_comp>:
9d00bfc0:	2ca20042 	sltiu	v0,a1,66
9d00bfc4:	54400003 	bnezl	v0,9d00bfd4 <d_make_comp+0x14>
9d00bfc8:	3c029d01 	lui	v0,0x9d01
9d00bfcc:	03e00008 	jr	ra
9d00bfd0:	00001021 	move	v0,zero
9d00bfd4:	00051880 	sll	v1,a1,0x2
9d00bfd8:	24426848 	addiu	v0,v0,26696
9d00bfdc:	00431021 	addu	v0,v0,v1
9d00bfe0:	8c420000 	lw	v0,0(v0)
9d00bfe4:	00400008 	jr	v0
9d00bfe8:	00000000 	nop
9d00bfec:	10c0001f 	beqz	a2,9d00c06c <d_make_comp+0xac>
9d00bff0:	00001021 	move	v0,zero
9d00bff4:	10e0001f 	beqz	a3,9d00c074 <d_make_comp+0xb4>
9d00bff8:	00000000 	nop
9d00bffc:	8c830014 	lw	v1,20(a0)
9d00c000:	8c880018 	lw	t0,24(a0)
9d00c004:	0068402a 	slt	t0,v1,t0
9d00c008:	11000018 	beqz	t0,9d00c06c <d_make_comp+0xac>
9d00c00c:	00001021 	move	v0,zero
9d00c010:	8c880010 	lw	t0,16(a0)
9d00c014:	00031080 	sll	v0,v1,0x2
9d00c018:	00034900 	sll	t1,v1,0x4
9d00c01c:	01221023 	subu	v0,t1,v0
9d00c020:	24630001 	addiu	v1,v1,1
9d00c024:	01021021 	addu	v0,t0,v0
9d00c028:	10400010 	beqz	v0,9d00c06c <d_make_comp+0xac>
9d00c02c:	ac830014 	sw	v1,20(a0)
9d00c030:	ac450000 	sw	a1,0(v0)
9d00c034:	ac460004 	sw	a2,4(v0)
9d00c038:	03e00008 	jr	ra
9d00c03c:	ac470008 	sw	a3,8(v0)
9d00c040:	10e0000a 	beqz	a3,9d00c06c <d_make_comp+0xac>
9d00c044:	00001021 	move	v0,zero
9d00c048:	8c830014 	lw	v1,20(a0)
9d00c04c:	8c880018 	lw	t0,24(a0)
9d00c050:	0068402a 	slt	t0,v1,t0
9d00c054:	11000007 	beqz	t0,9d00c074 <d_make_comp+0xb4>
9d00c058:	00000000 	nop
9d00c05c:	0b403005 	j	9d00c014 <d_make_comp+0x54>
9d00c060:	8c880010 	lw	t0,16(a0)
9d00c064:	14c0ffe5 	bnez	a2,9d00bffc <d_make_comp+0x3c>
9d00c068:	00001021 	move	v0,zero
9d00c06c:	03e00008 	jr	ra
9d00c070:	00000000 	nop
9d00c074:	03e00008 	jr	ra
9d00c078:	00000000 	nop

9d00c07c <d_make_name>:
9d00c07c:	8c820018 	lw	v0,24(a0)
9d00c080:	8c830014 	lw	v1,20(a0)
9d00c084:	0062382a 	slt	a3,v1,v0
9d00c088:	10e0000e 	beqz	a3,9d00c0c4 <d_make_name+0x48>
9d00c08c:	00001021 	move	v0,zero
9d00c090:	8c870010 	lw	a3,16(a0)
9d00c094:	00031080 	sll	v0,v1,0x2
9d00c098:	00034100 	sll	t0,v1,0x4
9d00c09c:	01021023 	subu	v0,t0,v0
9d00c0a0:	24630001 	addiu	v1,v1,1
9d00c0a4:	00e21021 	addu	v0,a3,v0
9d00c0a8:	10400006 	beqz	v0,9d00c0c4 <d_make_name+0x48>
9d00c0ac:	ac830014 	sw	v1,20(a0)
9d00c0b0:	10a00009 	beqz	a1,9d00c0d8 <d_make_name+0x5c>
9d00c0b4:	00000000 	nop
9d00c0b8:	54c00004 	bnezl	a2,9d00c0cc <d_make_name+0x50>
9d00c0bc:	ac400000 	sw	zero,0(v0)
9d00c0c0:	00001021 	move	v0,zero
9d00c0c4:	03e00008 	jr	ra
9d00c0c8:	00000000 	nop
9d00c0cc:	ac450004 	sw	a1,4(v0)
9d00c0d0:	03e00008 	jr	ra
9d00c0d4:	ac460008 	sw	a2,8(v0)
9d00c0d8:	03e00008 	jr	ra
9d00c0dc:	00001021 	move	v0,zero

9d00c0e0 <d_cv_qualifiers>:
9d00c0e0:	27bdffd0 	addiu	sp,sp,-48
9d00c0e4:	8c83000c 	lw	v1,12(a0)
9d00c0e8:	afb50024 	sw	s5,36(sp)
9d00c0ec:	afb40020 	sw	s4,32(sp)
9d00c0f0:	0080a821 	move	s5,a0
9d00c0f4:	2414001b 	li	s4,27
9d00c0f8:	24040018 	li	a0,24
9d00c0fc:	afb60028 	sw	s6,40(sp)
9d00c100:	afb3001c 	sw	s3,28(sp)
9d00c104:	afb20018 	sw	s2,24(sp)
9d00c108:	afb10014 	sw	s1,20(sp)
9d00c10c:	afb00010 	sw	s0,16(sp)
9d00c110:	afbf002c 	sw	ra,44(sp)
9d00c114:	2410001c 	li	s0,28
9d00c118:	0086a00a 	movz	s4,a0,a2
9d00c11c:	24040019 	li	a0,25
9d00c120:	00c09821 	move	s3,a2
9d00c124:	00a0b021 	move	s6,a1
9d00c128:	80620000 	lb	v0,0(v1)
9d00c12c:	24110072 	li	s1,114
9d00c130:	24120056 	li	s2,86
9d00c134:	0b403052 	j	9d00c148 <d_cv_qualifiers+0x68>
9d00c138:	0086800a 	movz	s0,a0,a2
9d00c13c:	8ea3000c 	lw	v1,12(s5)
9d00c140:	24560004 	addiu	s6,v0,4
9d00c144:	80620000 	lb	v0,0(v1)
9d00c148:	1051001c 	beq	v0,s1,9d00c1bc <d_cv_qualifiers+0xdc>
9d00c14c:	24640001 	addiu	a0,v1,1
9d00c150:	50520023 	beql	v0,s2,9d00c1e0 <d_cv_qualifiers+0x100>
9d00c154:	8ea20030 	lw	v0,48(s5)
9d00c158:	2403004b 	li	v1,75
9d00c15c:	1443000c 	bne	v0,v1,9d00c190 <d_cv_qualifiers+0xb0>
9d00c160:	02002821 	move	a1,s0
9d00c164:	8ea20030 	lw	v0,48(s5)
9d00c168:	aea4000c 	sw	a0,12(s5)
9d00c16c:	24420006 	addiu	v0,v0,6
9d00c170:	aea20030 	sw	v0,48(s5)
9d00c174:	02a02021 	move	a0,s5
9d00c178:	00003021 	move	a2,zero
9d00c17c:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00c180:	00003821 	move	a3,zero
9d00c184:	1440ffed 	bnez	v0,9d00c13c <d_cv_qualifiers+0x5c>
9d00c188:	aec20000 	sw	v0,0(s6)
9d00c18c:	0000b021 	move	s6,zero
9d00c190:	8fbf002c 	lw	ra,44(sp)
9d00c194:	02c01021 	move	v0,s6
9d00c198:	8fb60028 	lw	s6,40(sp)
9d00c19c:	8fb50024 	lw	s5,36(sp)
9d00c1a0:	8fb40020 	lw	s4,32(sp)
9d00c1a4:	8fb3001c 	lw	s3,28(sp)
9d00c1a8:	8fb20018 	lw	s2,24(sp)
9d00c1ac:	8fb10014 	lw	s1,20(sp)
9d00c1b0:	8fb00010 	lw	s0,16(sp)
9d00c1b4:	03e00008 	jr	ra
9d00c1b8:	27bd0030 	addiu	sp,sp,48
9d00c1bc:	8ea20030 	lw	v0,48(s5)
9d00c1c0:	24630001 	addiu	v1,v1,1
9d00c1c4:	2405001a 	li	a1,26
9d00c1c8:	24420009 	addiu	v0,v0,9
9d00c1cc:	24040017 	li	a0,23
9d00c1d0:	0093280a 	movz	a1,a0,s3
9d00c1d4:	aea3000c 	sw	v1,12(s5)
9d00c1d8:	0b40305d 	j	9d00c174 <d_cv_qualifiers+0x94>
9d00c1dc:	aea20030 	sw	v0,48(s5)
9d00c1e0:	24630001 	addiu	v1,v1,1
9d00c1e4:	aea3000c 	sw	v1,12(s5)
9d00c1e8:	24420009 	addiu	v0,v0,9
9d00c1ec:	aea20030 	sw	v0,48(s5)
9d00c1f0:	0b40305d 	j	9d00c174 <d_cv_qualifiers+0x94>
9d00c1f4:	02802821 	move	a1,s4

9d00c1f8 <d_substitution>:
9d00c1f8:	8c83000c 	lw	v1,12(a0)
9d00c1fc:	24060053 	li	a2,83
9d00c200:	80670000 	lb	a3,0(v1)
9d00c204:	10e60003 	beq	a3,a2,9d00c214 <d_substitution+0x1c>
9d00c208:	00001021 	move	v0,zero
9d00c20c:	03e00008 	jr	ra
9d00c210:	00000000 	nop
9d00c214:	24620001 	addiu	v0,v1,1
9d00c218:	ac82000c 	sw	v0,12(a0)
9d00c21c:	80660001 	lb	a2,1(v1)
9d00c220:	54c0001a 	bnezl	a2,9d00c28c <d_substitution+0x94>
9d00c224:	24630002 	addiu	v1,v1,2
9d00c228:	8c820008 	lw	v0,8(a0)
9d00c22c:	30420008 	andi	v0,v0,0x8
9d00c230:	14400008 	bnez	v0,9d00c254 <d_substitution+0x5c>
9d00c234:	24070001 	li	a3,1
9d00c238:	10a00006 	beqz	a1,9d00c254 <d_substitution+0x5c>
9d00c23c:	00003821 	move	a3,zero
9d00c240:	8c82000c 	lw	v0,12(a0)
9d00c244:	90470000 	lbu	a3,0(v0)
9d00c248:	24e7ffbd 	addiu	a3,a3,-67
9d00c24c:	30e700ff 	andi	a3,a3,0xff
9d00c250:	2ce70002 	sltiu	a3,a3,2
9d00c254:	24020074 	li	v0,116
9d00c258:	10c20042 	beq	a2,v0,9d00c364 <d_substitution+0x16c>
9d00c25c:	3c059d01 	lui	a1,0x9d01
9d00c260:	3c029d01 	lui	v0,0x9d01
9d00c264:	24a579ec 	addiu	a1,a1,31212
9d00c268:	24427944 	addiu	v0,v0,31044
9d00c26c:	80430000 	lb	v1,0(v0)
9d00c270:	5066003f 	beql	v1,a2,9d00c370 <d_substitution+0x178>
9d00c274:	8c480014 	lw	t0,20(v0)
9d00c278:	2442001c 	addiu	v0,v0,28
9d00c27c:	5445fffc 	bnel	v0,a1,9d00c270 <d_substitution+0x78>
9d00c280:	80430000 	lb	v1,0(v0)
9d00c284:	03e00008 	jr	ra
9d00c288:	00001021 	move	v0,zero
9d00c28c:	2402005f 	li	v0,95
9d00c290:	ac83000c 	sw	v1,12(a0)
9d00c294:	14c2000d 	bne	a2,v0,9d00c2cc <d_substitution+0xd4>
9d00c298:	00001821 	move	v1,zero
9d00c29c:	8c850020 	lw	a1,32(a0)
9d00c2a0:	0065282b 	sltu	a1,v1,a1
9d00c2a4:	10a0ffd9 	beqz	a1,9d00c20c <d_substitution+0x14>
9d00c2a8:	00001021 	move	v0,zero
9d00c2ac:	8c820028 	lw	v0,40(a0)
9d00c2b0:	8c85001c 	lw	a1,28(a0)
9d00c2b4:	00031880 	sll	v1,v1,0x2
9d00c2b8:	24420001 	addiu	v0,v0,1
9d00c2bc:	00a31821 	addu	v1,a1,v1
9d00c2c0:	ac820028 	sw	v0,40(a0)
9d00c2c4:	03e00008 	jr	ra
9d00c2c8:	8c620000 	lw	v0,0(v1)
9d00c2cc:	30c300ff 	andi	v1,a2,0xff
9d00c2d0:	2462ffd0 	addiu	v0,v1,-48
9d00c2d4:	304200ff 	andi	v0,v0,0xff
9d00c2d8:	2c42000a 	sltiu	v0,v0,10
9d00c2dc:	10400051 	beqz	v0,9d00c424 <d_substitution+0x22c>
9d00c2e0:	00001021 	move	v0,zero
9d00c2e4:	240b005f 	li	t3,95
9d00c2e8:	2465ffd0 	addiu	a1,v1,-48
9d00c2ec:	2468ffbf 	addiu	t0,v1,-65
9d00c2f0:	00025140 	sll	t2,v0,0x5
9d00c2f4:	00021880 	sll	v1,v0,0x2
9d00c2f8:	30a500ff 	andi	a1,a1,0xff
9d00c2fc:	006a1821 	addu	v1,v1,t2
9d00c300:	00661821 	addu	v1,v1,a2
9d00c304:	310800ff 	andi	t0,t0,0xff
9d00c308:	2ca5000a 	sltiu	a1,a1,10
9d00c30c:	00603021 	move	a2,v1
9d00c310:	2d08001a 	sltiu	t0,t0,26
9d00c314:	14a00003 	bnez	a1,9d00c324 <d_substitution+0x12c>
9d00c318:	2463ffd0 	addiu	v1,v1,-48
9d00c31c:	1100ffd9 	beqz	t0,9d00c284 <d_substitution+0x8c>
9d00c320:	24c3ffc9 	addiu	v1,a2,-55
9d00c324:	0062102b 	sltu	v0,v1,v0
9d00c328:	1440000c 	bnez	v0,9d00c35c <d_substitution+0x164>
9d00c32c:	00000000 	nop
9d00c330:	8c85000c 	lw	a1,12(a0)
9d00c334:	00601021 	move	v0,v1
9d00c338:	80a60000 	lb	a2,0(a1)
9d00c33c:	10c00003 	beqz	a2,9d00c34c <d_substitution+0x154>
9d00c340:	24a50001 	addiu	a1,a1,1
9d00c344:	10cb0003 	beq	a2,t3,9d00c354 <d_substitution+0x15c>
9d00c348:	ac85000c 	sw	a1,12(a0)
9d00c34c:	0b4030ba 	j	9d00c2e8 <d_substitution+0xf0>
9d00c350:	30c300ff 	andi	v1,a2,0xff
9d00c354:	0b4030a7 	j	9d00c29c <d_substitution+0xa4>
9d00c358:	24630001 	addiu	v1,v1,1
9d00c35c:	03e00008 	jr	ra
9d00c360:	00001021 	move	v0,zero
9d00c364:	3c029d01 	lui	v0,0x9d01
9d00c368:	24427928 	addiu	v0,v0,31016
9d00c36c:	8c480014 	lw	t0,20(v0)
9d00c370:	1100002a 	beqz	t0,9d00c41c <d_substitution+0x224>
9d00c374:	8c830014 	lw	v1,20(a0)
9d00c378:	8c860018 	lw	a2,24(a0)
9d00c37c:	8c490018 	lw	t1,24(v0)
9d00c380:	0066502a 	slt	t2,v1,a2
9d00c384:	1140000c 	beqz	t2,9d00c3b8 <d_substitution+0x1c0>
9d00c388:	00002821 	move	a1,zero
9d00c38c:	240a000c 	li	t2,12
9d00c390:	706a5802 	mul	t3,v1,t2
9d00c394:	8c850010 	lw	a1,16(a0)
9d00c398:	24630001 	addiu	v1,v1,1
9d00c39c:	01652821 	addu	a1,t3,a1
9d00c3a0:	10a00005 	beqz	a1,9d00c3b8 <d_substitution+0x1c0>
9d00c3a4:	ac830014 	sw	v1,20(a0)
9d00c3a8:	240a0016 	li	t2,22
9d00c3ac:	acaa0000 	sw	t2,0(a1)
9d00c3b0:	aca80004 	sw	t0,4(a1)
9d00c3b4:	aca90008 	sw	t1,8(a1)
9d00c3b8:	ac85002c 	sw	a1,44(a0)
9d00c3bc:	50e00015 	beqzl	a3,9d00c414 <d_substitution+0x21c>
9d00c3c0:	8c470004 	lw	a3,4(v0)
9d00c3c4:	8c47000c 	lw	a3,12(v0)
9d00c3c8:	8c450010 	lw	a1,16(v0)
9d00c3cc:	8c880030 	lw	t0,48(a0)
9d00c3d0:	0066302a 	slt	a2,v1,a2
9d00c3d4:	00001021 	move	v0,zero
9d00c3d8:	01054021 	addu	t0,t0,a1
9d00c3dc:	10c0ff8b 	beqz	a2,9d00c20c <d_substitution+0x14>
9d00c3e0:	ac880030 	sw	t0,48(a0)
9d00c3e4:	2408000c 	li	t0,12
9d00c3e8:	70684802 	mul	t1,v1,t0
9d00c3ec:	8c820010 	lw	v0,16(a0)
9d00c3f0:	24660001 	addiu	a2,v1,1
9d00c3f4:	01221021 	addu	v0,t1,v0
9d00c3f8:	1040ff84 	beqz	v0,9d00c20c <d_substitution+0x14>
9d00c3fc:	ac860014 	sw	a2,20(a0)
9d00c400:	24030016 	li	v1,22
9d00c404:	ac430000 	sw	v1,0(v0)
9d00c408:	ac470004 	sw	a3,4(v0)
9d00c40c:	03e00008 	jr	ra
9d00c410:	ac450008 	sw	a1,8(v0)
9d00c414:	0b4030f3 	j	9d00c3cc <d_substitution+0x1d4>
9d00c418:	8c450008 	lw	a1,8(v0)
9d00c41c:	0b4030ef 	j	9d00c3bc <d_substitution+0x1c4>
9d00c420:	8c860018 	lw	a2,24(a0)
9d00c424:	2467ffbf 	addiu	a3,v1,-65
9d00c428:	30e700ff 	andi	a3,a3,0xff
9d00c42c:	2ce7001a 	sltiu	a3,a3,26
9d00c430:	14e0ffad 	bnez	a3,9d00c2e8 <d_substitution+0xf0>
9d00c434:	240b005f 	li	t3,95
9d00c438:	0b40308b 	j	9d00c22c <d_substitution+0x34>
9d00c43c:	8c820008 	lw	v0,8(a0)

9d00c440 <d_find_pack>:
9d00c440:	27bdffe0 	addiu	sp,sp,-32
9d00c444:	afb20018 	sw	s2,24(sp)
9d00c448:	afb00010 	sw	s0,16(sp)
9d00c44c:	afbf001c 	sw	ra,28(sp)
9d00c450:	afb10014 	sw	s1,20(sp)
9d00c454:	00a08021 	move	s0,a1
9d00c458:	00809021 	move	s2,a0
9d00c45c:	10a00010 	beqz	a1,9d00c4a0 <d_find_pack+0x60>
9d00c460:	00001021 	move	v0,zero
9d00c464:	3c119d01 	lui	s1,0x9d01
9d00c468:	26316950 	addiu	s1,s1,26960
9d00c46c:	8e020000 	lw	v0,0(s0)
9d00c470:	2c430042 	sltiu	v1,v0,66
9d00c474:	14600010 	bnez	v1,9d00c4b8 <d_find_pack+0x78>
9d00c478:	00021080 	sll	v0,v0,0x2
9d00c47c:	8e050004 	lw	a1,4(s0)
9d00c480:	0f403110 	jal	9d00c440 <d_find_pack>
9d00c484:	02402021 	move	a0,s2
9d00c488:	14400006 	bnez	v0,9d00c4a4 <d_find_pack+0x64>
9d00c48c:	8fbf001c 	lw	ra,28(sp)
9d00c490:	8e100008 	lw	s0,8(s0)
9d00c494:	5600fff6 	bnezl	s0,9d00c470 <d_find_pack+0x30>
9d00c498:	8e020000 	lw	v0,0(s0)
9d00c49c:	00001021 	move	v0,zero
9d00c4a0:	8fbf001c 	lw	ra,28(sp)
9d00c4a4:	8fb20018 	lw	s2,24(sp)
9d00c4a8:	8fb10014 	lw	s1,20(sp)
9d00c4ac:	8fb00010 	lw	s0,16(sp)
9d00c4b0:	03e00008 	jr	ra
9d00c4b4:	27bd0020 	addiu	sp,sp,32
9d00c4b8:	02221021 	addu	v0,s1,v0
9d00c4bc:	8c420000 	lw	v0,0(v0)
9d00c4c0:	00400008 	jr	v0
9d00c4c4:	00000000 	nop
9d00c4c8:	8e420114 	lw	v0,276(s2)
9d00c4cc:	50400023 	beqzl	v0,9d00c55c <d_find_pack+0x11c>
9d00c4d0:	24020001 	li	v0,1
9d00c4d4:	8c420004 	lw	v0,4(v0)
9d00c4d8:	8c430008 	lw	v1,8(v0)
9d00c4dc:	10600011 	beqz	v1,9d00c524 <d_find_pack+0xe4>
9d00c4e0:	8e040004 	lw	a0,4(s0)
9d00c4e4:	8c660000 	lw	a2,0(v1)
9d00c4e8:	2405002b 	li	a1,43
9d00c4ec:	14c5ffec 	bne	a2,a1,9d00c4a0 <d_find_pack+0x60>
9d00c4f0:	00001021 	move	v0,zero
9d00c4f4:	5c800009 	bgtzl	a0,9d00c51c <d_find_pack+0xdc>
9d00c4f8:	8c630008 	lw	v1,8(v1)
9d00c4fc:	0b40314a 	j	9d00c528 <d_find_pack+0xe8>
9d00c500:	00000000 	nop
9d00c504:	8c620000 	lw	v0,0(v1)
9d00c508:	1445ffe5 	bne	v0,a1,9d00c4a0 <d_find_pack+0x60>
9d00c50c:	00001021 	move	v0,zero
9d00c510:	18800005 	blez	a0,9d00c528 <d_find_pack+0xe8>
9d00c514:	00000000 	nop
9d00c518:	8c630008 	lw	v1,8(v1)
9d00c51c:	1460fff9 	bnez	v1,9d00c504 <d_find_pack+0xc4>
9d00c520:	2484ffff 	addiu	a0,a0,-1
9d00c524:	00001021 	move	v0,zero
9d00c528:	1480ffde 	bnez	a0,9d00c4a4 <d_find_pack+0x64>
9d00c52c:	8fbf001c 	lw	ra,28(sp)
9d00c530:	1060ffdd 	beqz	v1,9d00c4a8 <d_find_pack+0x68>
9d00c534:	8fb20018 	lw	s2,24(sp)
9d00c538:	8c620004 	lw	v0,4(v1)
9d00c53c:	1040ffd9 	beqz	v0,9d00c4a4 <d_find_pack+0x64>
9d00c540:	8fb10014 	lw	s1,20(sp)
9d00c544:	8c430000 	lw	v1,0(v0)
9d00c548:	3863002b 	xori	v1,v1,0x2b
9d00c54c:	0003100b 	movn	v0,zero,v1
9d00c550:	8fb00010 	lw	s0,16(sp)
9d00c554:	03e00008 	jr	ra
9d00c558:	27bd0020 	addiu	sp,sp,32
9d00c55c:	ae42011c 	sw	v0,284(s2)
9d00c560:	0b403128 	j	9d00c4a0 <d_find_pack+0x60>
9d00c564:	00001021 	move	v0,zero

9d00c568 <d_growable_string_callback_adapter>:
9d00c568:	8cc20004 	lw	v0,4(a2)
9d00c56c:	27bdffd8 	addiu	sp,sp,-40
9d00c570:	afb2001c 	sw	s2,28(sp)
9d00c574:	8cd20008 	lw	s2,8(a2)
9d00c578:	24420001 	addiu	v0,v0,1
9d00c57c:	00451021 	addu	v0,v0,a1
9d00c580:	0242182b 	sltu	v1,s2,v0
9d00c584:	afb30020 	sw	s3,32(sp)
9d00c588:	afb10018 	sw	s1,24(sp)
9d00c58c:	afb00014 	sw	s0,20(sp)
9d00c590:	afbf0024 	sw	ra,36(sp)
9d00c594:	00c08021 	move	s0,a2
9d00c598:	00a08821 	move	s1,a1
9d00c59c:	10600017 	beqz	v1,9d00c5fc <d_growable_string_callback_adapter+0x94>
9d00c5a0:	00809821 	move	s3,a0
9d00c5a4:	8cc3000c 	lw	v1,12(a2)
9d00c5a8:	10600008 	beqz	v1,9d00c5cc <d_growable_string_callback_adapter+0x64>
9d00c5ac:	00000000 	nop
9d00c5b0:	8fbf0024 	lw	ra,36(sp)
9d00c5b4:	8fb30020 	lw	s3,32(sp)
9d00c5b8:	8fb2001c 	lw	s2,28(sp)
9d00c5bc:	8fb10018 	lw	s1,24(sp)
9d00c5c0:	8fb00014 	lw	s0,20(sp)
9d00c5c4:	03e00008 	jr	ra
9d00c5c8:	27bd0028 	addiu	sp,sp,40
9d00c5cc:	16400023 	bnez	s2,9d00c65c <d_growable_string_callback_adapter+0xf4>
9d00c5d0:	00129040 	sll	s2,s2,0x1
9d00c5d4:	2c430003 	sltiu	v1,v0,3
9d00c5d8:	1060001f 	beqz	v1,9d00c658 <d_growable_string_callback_adapter+0xf0>
9d00c5dc:	24120002 	li	s2,2
9d00c5e0:	8e040000 	lw	a0,0(s0)
9d00c5e4:	0f401dee 	jal	9d0077b8 <realloc>
9d00c5e8:	02402821 	move	a1,s2
9d00c5ec:	10400024 	beqz	v0,9d00c680 <d_growable_string_callback_adapter+0x118>
9d00c5f0:	00000000 	nop
9d00c5f4:	ae020000 	sw	v0,0(s0)
9d00c5f8:	ae120008 	sw	s2,8(s0)
9d00c5fc:	8e02000c 	lw	v0,12(s0)
9d00c600:	1440ffeb 	bnez	v0,9d00c5b0 <d_growable_string_callback_adapter+0x48>
9d00c604:	02602821 	move	a1,s3
9d00c608:	8e040000 	lw	a0,0(s0)
9d00c60c:	8e020004 	lw	v0,4(s0)
9d00c610:	02203021 	move	a2,s1
9d00c614:	0f402c17 	jal	9d00b05c <memcpy>
9d00c618:	00822021 	addu	a0,a0,v0
9d00c61c:	8e020000 	lw	v0,0(s0)
9d00c620:	8e030004 	lw	v1,4(s0)
9d00c624:	00511021 	addu	v0,v0,s1
9d00c628:	00431021 	addu	v0,v0,v1
9d00c62c:	a0400000 	sb	zero,0(v0)
9d00c630:	8e020004 	lw	v0,4(s0)
9d00c634:	8fbf0024 	lw	ra,36(sp)
9d00c638:	8fb30020 	lw	s3,32(sp)
9d00c63c:	00518821 	addu	s1,v0,s1
9d00c640:	ae110004 	sw	s1,4(s0)
9d00c644:	8fb2001c 	lw	s2,28(sp)
9d00c648:	8fb10018 	lw	s1,24(sp)
9d00c64c:	8fb00014 	lw	s0,20(sp)
9d00c650:	03e00008 	jr	ra
9d00c654:	27bd0028 	addiu	sp,sp,40
9d00c658:	00129040 	sll	s2,s2,0x1
9d00c65c:	0242182b 	sltu	v1,s2,v0
9d00c660:	5060ffe0 	beqzl	v1,9d00c5e4 <d_growable_string_callback_adapter+0x7c>
9d00c664:	8e040000 	lw	a0,0(s0)
9d00c668:	00129040 	sll	s2,s2,0x1
9d00c66c:	0242182b 	sltu	v1,s2,v0
9d00c670:	5460fffa 	bnezl	v1,9d00c65c <d_growable_string_callback_adapter+0xf4>
9d00c674:	00129040 	sll	s2,s2,0x1
9d00c678:	0b403179 	j	9d00c5e4 <d_growable_string_callback_adapter+0x7c>
9d00c67c:	8e040000 	lw	a0,0(s0)
9d00c680:	0f401c40 	jal	9d007100 <free>
9d00c684:	8e040000 	lw	a0,0(s0)
9d00c688:	24020001 	li	v0,1
9d00c68c:	ae000000 	sw	zero,0(s0)
9d00c690:	ae000004 	sw	zero,4(s0)
9d00c694:	ae000008 	sw	zero,8(s0)
9d00c698:	0b40316c 	j	9d00c5b0 <d_growable_string_callback_adapter+0x48>
9d00c69c:	ae02000c 	sw	v0,12(s0)

9d00c6a0 <d_number.clone.0>:
9d00c6a0:	8c820000 	lw	v0,0(a0)
9d00c6a4:	2403006e 	li	v1,110
9d00c6a8:	80450000 	lb	a1,0(v0)
9d00c6ac:	10a30017 	beq	a1,v1,9d00c70c <d_number.clone.0+0x6c>
9d00c6b0:	00003821 	move	a3,zero
9d00c6b4:	24a2ffd0 	addiu	v0,a1,-48
9d00c6b8:	304200ff 	andi	v0,v0,0xff
9d00c6bc:	2c42000a 	sltiu	v0,v0,10
9d00c6c0:	10400010 	beqz	v0,9d00c704 <d_number.clone.0+0x64>
9d00c6c4:	00021823 	negu	v1,v0
9d00c6c8:	8c830000 	lw	v1,0(a0)
9d00c6cc:	00001021 	move	v0,zero
9d00c6d0:	00023040 	sll	a2,v0,0x1
9d00c6d4:	24630001 	addiu	v1,v1,1
9d00c6d8:	000210c0 	sll	v0,v0,0x3
9d00c6dc:	00c21021 	addu	v0,a2,v0
9d00c6e0:	ac830000 	sw	v1,0(a0)
9d00c6e4:	00451021 	addu	v0,v0,a1
9d00c6e8:	80650000 	lb	a1,0(v1)
9d00c6ec:	24a6ffd0 	addiu	a2,a1,-48
9d00c6f0:	30c600ff 	andi	a2,a2,0xff
9d00c6f4:	2cc6000a 	sltiu	a2,a2,10
9d00c6f8:	14c0fff5 	bnez	a2,9d00c6d0 <d_number.clone.0+0x30>
9d00c6fc:	2442ffd0 	addiu	v0,v0,-48
9d00c700:	00021823 	negu	v1,v0
9d00c704:	03e00008 	jr	ra
9d00c708:	0067100b 	movn	v0,v1,a3
9d00c70c:	24430001 	addiu	v1,v0,1
9d00c710:	ac830000 	sw	v1,0(a0)
9d00c714:	80450001 	lb	a1,1(v0)
9d00c718:	0b4031ad 	j	9d00c6b4 <d_number.clone.0+0x14>
9d00c71c:	24070001 	li	a3,1

9d00c720 <d_call_offset>:
9d00c720:	27bdffe0 	addiu	sp,sp,-32
9d00c724:	afb00010 	sw	s0,16(sp)
9d00c728:	afbf001c 	sw	ra,28(sp)
9d00c72c:	afb20018 	sw	s2,24(sp)
9d00c730:	afb10014 	sw	s1,20(sp)
9d00c734:	14a00007 	bnez	a1,9d00c754 <d_call_offset+0x34>
9d00c738:	00808021 	move	s0,a0
9d00c73c:	8c82000c 	lw	v0,12(a0)
9d00c740:	80450000 	lb	a1,0(v0)
9d00c744:	10a00008 	beqz	a1,9d00c768 <d_call_offset+0x48>
9d00c748:	00008821 	move	s1,zero
9d00c74c:	24420001 	addiu	v0,v0,1
9d00c750:	ac82000c 	sw	v0,12(a0)
9d00c754:	24020068 	li	v0,104
9d00c758:	10a20018 	beq	a1,v0,9d00c7bc <d_call_offset+0x9c>
9d00c75c:	24020076 	li	v0,118
9d00c760:	10a20008 	beq	a1,v0,9d00c784 <d_call_offset+0x64>
9d00c764:	00008821 	move	s1,zero
9d00c768:	8fbf001c 	lw	ra,28(sp)
9d00c76c:	02201021 	move	v0,s1
9d00c770:	8fb20018 	lw	s2,24(sp)
9d00c774:	8fb10014 	lw	s1,20(sp)
9d00c778:	8fb00010 	lw	s0,16(sp)
9d00c77c:	03e00008 	jr	ra
9d00c780:	27bd0020 	addiu	sp,sp,32
9d00c784:	2612000c 	addiu	s2,s0,12
9d00c788:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00c78c:	02402021 	move	a0,s2
9d00c790:	8e02000c 	lw	v0,12(s0)
9d00c794:	2403005f 	li	v1,95
9d00c798:	80440000 	lb	a0,0(v0)
9d00c79c:	1483fff3 	bne	a0,v1,9d00c76c <d_call_offset+0x4c>
9d00c7a0:	8fbf001c 	lw	ra,28(sp)
9d00c7a4:	24420001 	addiu	v0,v0,1
9d00c7a8:	ae02000c 	sw	v0,12(s0)
9d00c7ac:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00c7b0:	02402021 	move	a0,s2
9d00c7b4:	0b4031f2 	j	9d00c7c8 <d_call_offset+0xa8>
9d00c7b8:	8e02000c 	lw	v0,12(s0)
9d00c7bc:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00c7c0:	2604000c 	addiu	a0,s0,12
9d00c7c4:	8e02000c 	lw	v0,12(s0)
9d00c7c8:	2403005f 	li	v1,95
9d00c7cc:	80440000 	lb	a0,0(v0)
9d00c7d0:	1483ffe5 	bne	a0,v1,9d00c768 <d_call_offset+0x48>
9d00c7d4:	00008821 	move	s1,zero
9d00c7d8:	24420001 	addiu	v0,v0,1
9d00c7dc:	ae02000c 	sw	v0,12(s0)
9d00c7e0:	0b4031da 	j	9d00c768 <d_call_offset+0x48>
9d00c7e4:	24110001 	li	s1,1

9d00c7e8 <d_compact_number>:
9d00c7e8:	8c83000c 	lw	v1,12(a0)
9d00c7ec:	27bdffe0 	addiu	sp,sp,-32
9d00c7f0:	afb10014 	sw	s1,20(sp)
9d00c7f4:	afb00010 	sw	s0,16(sp)
9d00c7f8:	afbf001c 	sw	ra,28(sp)
9d00c7fc:	afb20018 	sw	s2,24(sp)
9d00c800:	80620000 	lb	v0,0(v1)
9d00c804:	2411005f 	li	s1,95
9d00c808:	1051000b 	beq	v0,s1,9d00c838 <d_compact_number+0x50>
9d00c80c:	00808021 	move	s0,a0
9d00c810:	2403006e 	li	v1,110
9d00c814:	1443000c 	bne	v0,v1,9d00c848 <d_compact_number+0x60>
9d00c818:	2412ffff 	li	s2,-1
9d00c81c:	8fbf001c 	lw	ra,28(sp)
9d00c820:	02401021 	move	v0,s2
9d00c824:	8fb20018 	lw	s2,24(sp)
9d00c828:	8fb10014 	lw	s1,20(sp)
9d00c82c:	8fb00010 	lw	s0,16(sp)
9d00c830:	03e00008 	jr	ra
9d00c834:	27bd0020 	addiu	sp,sp,32
9d00c838:	24630001 	addiu	v1,v1,1
9d00c83c:	00009021 	move	s2,zero
9d00c840:	0b403207 	j	9d00c81c <d_compact_number+0x34>
9d00c844:	ae03000c 	sw	v1,12(s0)
9d00c848:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00c84c:	2484000c 	addiu	a0,a0,12
9d00c850:	8e03000c 	lw	v1,12(s0)
9d00c854:	80640000 	lb	a0,0(v1)
9d00c858:	1491fff1 	bne	a0,s1,9d00c820 <d_compact_number+0x38>
9d00c85c:	8fbf001c 	lw	ra,28(sp)
9d00c860:	24630001 	addiu	v1,v1,1
9d00c864:	24520001 	addiu	s2,v0,1
9d00c868:	0b403207 	j	9d00c81c <d_compact_number+0x34>
9d00c86c:	ae03000c 	sw	v1,12(s0)

9d00c870 <d_template_param>:
9d00c870:	8c82000c 	lw	v0,12(a0)
9d00c874:	27bdffe0 	addiu	sp,sp,-32
9d00c878:	afb10018 	sw	s1,24(sp)
9d00c87c:	afb00014 	sw	s0,20(sp)
9d00c880:	afbf001c 	sw	ra,28(sp)
9d00c884:	80450000 	lb	a1,0(v0)
9d00c888:	24030054 	li	v1,84
9d00c88c:	00808021 	move	s0,a0
9d00c890:	10a30007 	beq	a1,v1,9d00c8b0 <d_template_param+0x40>
9d00c894:	00008821 	move	s1,zero
9d00c898:	8fbf001c 	lw	ra,28(sp)
9d00c89c:	02201021 	move	v0,s1
9d00c8a0:	8fb10018 	lw	s1,24(sp)
9d00c8a4:	8fb00014 	lw	s0,20(sp)
9d00c8a8:	03e00008 	jr	ra
9d00c8ac:	27bd0020 	addiu	sp,sp,32
9d00c8b0:	24420001 	addiu	v0,v0,1
9d00c8b4:	0f4031fa 	jal	9d00c7e8 <d_compact_number>
9d00c8b8:	ac82000c 	sw	v0,12(a0)
9d00c8bc:	0440fff7 	bltz	v0,9d00c89c <d_template_param+0x2c>
9d00c8c0:	8fbf001c 	lw	ra,28(sp)
9d00c8c4:	8e050028 	lw	a1,40(s0)
9d00c8c8:	8e030014 	lw	v1,20(s0)
9d00c8cc:	8e040018 	lw	a0,24(s0)
9d00c8d0:	24a50001 	addiu	a1,a1,1
9d00c8d4:	0064202a 	slt	a0,v1,a0
9d00c8d8:	1080ffef 	beqz	a0,9d00c898 <d_template_param+0x28>
9d00c8dc:	ae050028 	sw	a1,40(s0)
9d00c8e0:	8e110010 	lw	s1,16(s0)
9d00c8e4:	00032080 	sll	a0,v1,0x2
9d00c8e8:	00032900 	sll	a1,v1,0x4
9d00c8ec:	00a42023 	subu	a0,a1,a0
9d00c8f0:	24630001 	addiu	v1,v1,1
9d00c8f4:	02248821 	addu	s1,s1,a0
9d00c8f8:	1220ffe7 	beqz	s1,9d00c898 <d_template_param+0x28>
9d00c8fc:	ae030014 	sw	v1,20(s0)
9d00c900:	24030005 	li	v1,5
9d00c904:	ae230000 	sw	v1,0(s1)
9d00c908:	0b403226 	j	9d00c898 <d_template_param+0x28>
9d00c90c:	ae220004 	sw	v0,4(s1)

9d00c910 <d_discriminator>:
9d00c910:	8c83000c 	lw	v1,12(a0)
9d00c914:	27bdffe8 	addiu	sp,sp,-24
9d00c918:	afbf0014 	sw	ra,20(sp)
9d00c91c:	80660000 	lb	a2,0(v1)
9d00c920:	2405005f 	li	a1,95
9d00c924:	10c50004 	beq	a2,a1,9d00c938 <d_discriminator+0x28>
9d00c928:	24020001 	li	v0,1
9d00c92c:	8fbf0014 	lw	ra,20(sp)
9d00c930:	03e00008 	jr	ra
9d00c934:	27bd0018 	addiu	sp,sp,24
9d00c938:	24630001 	addiu	v1,v1,1
9d00c93c:	ac83000c 	sw	v1,12(a0)
9d00c940:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00c944:	2484000c 	addiu	a0,a0,12
9d00c948:	8fbf0014 	lw	ra,20(sp)
9d00c94c:	00021027 	nor	v0,zero,v0
9d00c950:	000217c2 	srl	v0,v0,0x1f
9d00c954:	03e00008 	jr	ra
9d00c958:	27bd0018 	addiu	sp,sp,24

9d00c95c <d_source_name>:
9d00c95c:	27bdffe0 	addiu	sp,sp,-32
9d00c960:	afb00010 	sw	s0,16(sp)
9d00c964:	00808021 	move	s0,a0
9d00c968:	2484000c 	addiu	a0,a0,12
9d00c96c:	afb10014 	sw	s1,20(sp)
9d00c970:	afbf001c 	sw	ra,28(sp)
9d00c974:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00c978:	afb20018 	sw	s2,24(sp)
9d00c97c:	00408821 	move	s1,v0
9d00c980:	1a200029 	blez	s1,9d00ca28 <d_source_name+0xcc>
9d00c984:	00001021 	move	v0,zero
9d00c988:	8e12000c 	lw	s2,12(s0)
9d00c98c:	8e030004 	lw	v1,4(s0)
9d00c990:	00721823 	subu	v1,v1,s2
9d00c994:	0071182a 	slt	v1,v1,s1
9d00c998:	54600023 	bnezl	v1,9d00ca28 <d_source_name+0xcc>
9d00c99c:	ae02002c 	sw	v0,44(s0)
9d00c9a0:	8e030008 	lw	v1,8(s0)
9d00c9a4:	02511021 	addu	v0,s2,s1
9d00c9a8:	30630004 	andi	v1,v1,0x4
9d00c9ac:	10600007 	beqz	v1,9d00c9cc <d_source_name+0x70>
9d00c9b0:	ae02000c 	sw	v0,12(s0)
9d00c9b4:	80440000 	lb	a0,0(v0)
9d00c9b8:	24030024 	li	v1,36
9d00c9bc:	54830004 	bnel	a0,v1,9d00c9d0 <d_source_name+0x74>
9d00c9c0:	2a22000a 	slti	v0,s1,10
9d00c9c4:	24420001 	addiu	v0,v0,1
9d00c9c8:	ae02000c 	sw	v0,12(s0)
9d00c9cc:	2a22000a 	slti	v0,s1,10
9d00c9d0:	14400010 	bnez	v0,9d00ca14 <d_source_name+0xb8>
9d00c9d4:	3c059d01 	lui	a1,0x9d01
9d00c9d8:	02402021 	move	a0,s2
9d00c9dc:	24a56a58 	addiu	a1,a1,27224
9d00c9e0:	0f405219 	jal	9d014864 <memcmp>
9d00c9e4:	24060008 	li	a2,8
9d00c9e8:	1440000b 	bnez	v0,9d00ca18 <d_source_name+0xbc>
9d00c9ec:	02002021 	move	a0,s0
9d00c9f0:	82420008 	lb	v0,8(s2)
9d00c9f4:	2403002e 	li	v1,46
9d00c9f8:	10430011 	beq	v0,v1,9d00ca40 <d_source_name+0xe4>
9d00c9fc:	26440008 	addiu	a0,s2,8
9d00ca00:	2403005f 	li	v1,95
9d00ca04:	1043000e 	beq	v0,v1,9d00ca40 <d_source_name+0xe4>
9d00ca08:	24030024 	li	v1,36
9d00ca0c:	5043000d 	beql	v0,v1,9d00ca44 <d_source_name+0xe8>
9d00ca10:	80830001 	lb	v1,1(a0)
9d00ca14:	02002021 	move	a0,s0
9d00ca18:	02402821 	move	a1,s2
9d00ca1c:	0f40301f 	jal	9d00c07c <d_make_name>
9d00ca20:	02203021 	move	a2,s1
9d00ca24:	ae02002c 	sw	v0,44(s0)
9d00ca28:	8fbf001c 	lw	ra,28(sp)
9d00ca2c:	8fb20018 	lw	s2,24(sp)
9d00ca30:	8fb10014 	lw	s1,20(sp)
9d00ca34:	8fb00010 	lw	s0,16(sp)
9d00ca38:	03e00008 	jr	ra
9d00ca3c:	27bd0020 	addiu	sp,sp,32
9d00ca40:	80830001 	lb	v1,1(a0)
9d00ca44:	2402004e 	li	v0,78
9d00ca48:	1462fff3 	bne	v1,v0,9d00ca18 <d_source_name+0xbc>
9d00ca4c:	02002021 	move	a0,s0
9d00ca50:	8e020030 	lw	v0,48(s0)
9d00ca54:	3c059d01 	lui	a1,0x9d01
9d00ca58:	24420016 	addiu	v0,v0,22
9d00ca5c:	00518823 	subu	s1,v0,s1
9d00ca60:	ae110030 	sw	s1,48(s0)
9d00ca64:	24a56a64 	addiu	a1,a1,27236
9d00ca68:	0f40301f 	jal	9d00c07c <d_make_name>
9d00ca6c:	24060015 	li	a2,21
9d00ca70:	0b40328a 	j	9d00ca28 <d_source_name+0xcc>
9d00ca74:	ae02002c 	sw	v0,44(s0)

9d00ca78 <d_type>:
9d00ca78:	8c83000c 	lw	v1,12(a0)
9d00ca7c:	27bdffc8 	addiu	sp,sp,-56
9d00ca80:	afb20028 	sw	s2,40(sp)
9d00ca84:	afbf0034 	sw	ra,52(sp)
9d00ca88:	afb40030 	sw	s4,48(sp)
9d00ca8c:	afb3002c 	sw	s3,44(sp)
9d00ca90:	afb10024 	sw	s1,36(sp)
9d00ca94:	afb00020 	sw	s0,32(sp)
9d00ca98:	80620000 	lb	v0,0(v1)
9d00ca9c:	00809021 	move	s2,a0
9d00caa0:	24040072 	li	a0,114
9d00caa4:	10440011 	beq	v0,a0,9d00caec <d_type+0x74>
9d00caa8:	24040056 	li	a0,86
9d00caac:	1044000f 	beq	v0,a0,9d00caec <d_type+0x74>
9d00cab0:	2404004b 	li	a0,75
9d00cab4:	1044000d 	beq	v0,a0,9d00caec <d_type+0x74>
9d00cab8:	2444ffd0 	addiu	a0,v0,-48
9d00cabc:	308400ff 	andi	a0,a0,0xff
9d00cac0:	2c85004b 	sltiu	a1,a0,75
9d00cac4:	14a00003 	bnez	a1,9d00cad4 <d_type+0x5c>
9d00cac8:	3c059d01 	lui	a1,0x9d01
9d00cacc:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00cad0:	00008021 	move	s0,zero
9d00cad4:	00042080 	sll	a0,a0,0x2
9d00cad8:	24a57138 	addiu	a1,a1,28984
9d00cadc:	00a42021 	addu	a0,a1,a0
9d00cae0:	8c840000 	lw	a0,0(a0)
9d00cae4:	00800008 	jr	a0
9d00cae8:	00000000 	nop
9d00caec:	02402021 	move	a0,s2
9d00caf0:	27a50010 	addiu	a1,sp,16
9d00caf4:	0f403038 	jal	9d00c0e0 <d_cv_qualifiers>
9d00caf8:	00003021 	move	a2,zero
9d00cafc:	00408821 	move	s1,v0
9d00cb00:	1440000a 	bnez	v0,9d00cb2c <d_type+0xb4>
9d00cb04:	00008021 	move	s0,zero
9d00cb08:	8fbf0034 	lw	ra,52(sp)
9d00cb0c:	02001021 	move	v0,s0
9d00cb10:	8fb40030 	lw	s4,48(sp)
9d00cb14:	8fb3002c 	lw	s3,44(sp)
9d00cb18:	8fb20028 	lw	s2,40(sp)
9d00cb1c:	8fb10024 	lw	s1,36(sp)
9d00cb20:	8fb00020 	lw	s0,32(sp)
9d00cb24:	03e00008 	jr	ra
9d00cb28:	27bd0038 	addiu	sp,sp,56
9d00cb2c:	0f40329e 	jal	9d00ca78 <d_type>
9d00cb30:	02402021 	move	a0,s2
9d00cb34:	1040fff4 	beqz	v0,9d00cb08 <d_type+0x90>
9d00cb38:	ae220000 	sw	v0,0(s1)
9d00cb3c:	8fa30010 	lw	v1,16(sp)
9d00cb40:	1060fff2 	beqz	v1,9d00cb0c <d_type+0x94>
9d00cb44:	8fbf0034 	lw	ra,52(sp)
9d00cb48:	8e420020 	lw	v0,32(s2)
9d00cb4c:	8e440024 	lw	a0,36(s2)
9d00cb50:	0044202a 	slt	a0,v0,a0
9d00cb54:	5080ffee 	beqzl	a0,9d00cb10 <d_type+0x98>
9d00cb58:	02001021 	move	v0,s0
9d00cb5c:	8e45001c 	lw	a1,28(s2)
9d00cb60:	00022080 	sll	a0,v0,0x2
9d00cb64:	24420001 	addiu	v0,v0,1
9d00cb68:	00a42021 	addu	a0,a1,a0
9d00cb6c:	ac830000 	sw	v1,0(a0)
9d00cb70:	8fb00010 	lw	s0,16(sp)
9d00cb74:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00cb78:	ae420020 	sw	v0,32(s2)
9d00cb7c:	0f40374e 	jal	9d00dd38 <d_name>
9d00cb80:	02402021 	move	a0,s2
9d00cb84:	00409821 	move	s3,v0
9d00cb88:	afa20010 	sw	v0,16(sp)
9d00cb8c:	1260ffde 	beqz	s3,9d00cb08 <d_type+0x90>
9d00cb90:	00008021 	move	s0,zero
9d00cb94:	8e420020 	lw	v0,32(s2)
9d00cb98:	8e430024 	lw	v1,36(s2)
9d00cb9c:	0043182a 	slt	v1,v0,v1
9d00cba0:	1060ffd9 	beqz	v1,9d00cb08 <d_type+0x90>
9d00cba4:	00008021 	move	s0,zero
9d00cba8:	8e44001c 	lw	a0,28(s2)
9d00cbac:	00021880 	sll	v1,v0,0x2
9d00cbb0:	24420001 	addiu	v0,v0,1
9d00cbb4:	00831821 	addu	v1,a0,v1
9d00cbb8:	ac730000 	sw	s3,0(v1)
9d00cbbc:	8fb00010 	lw	s0,16(sp)
9d00cbc0:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00cbc4:	ae420020 	sw	v0,32(s2)
9d00cbc8:	24630001 	addiu	v1,v1,1
9d00cbcc:	02402021 	move	a0,s2
9d00cbd0:	0f40329e 	jal	9d00ca78 <d_type>
9d00cbd4:	ae43000c 	sw	v1,12(s2)
9d00cbd8:	02402021 	move	a0,s2
9d00cbdc:	24050021 	li	a1,33
9d00cbe0:	00403021 	move	a2,v0
9d00cbe4:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00cbe8:	00003821 	move	a3,zero
9d00cbec:	00409821 	move	s3,v0
9d00cbf0:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00cbf4:	afa20010 	sw	v0,16(sp)
9d00cbf8:	24620001 	addiu	v0,v1,1
9d00cbfc:	ae42000c 	sw	v0,12(s2)
9d00cc00:	80620001 	lb	v0,1(v1)
9d00cc04:	1040ffc0 	beqz	v0,9d00cb08 <d_type+0x90>
9d00cc08:	00008021 	move	s0,zero
9d00cc0c:	2442ffba 	addiu	v0,v0,-70
9d00cc10:	304200ff 	andi	v0,v0,0xff
9d00cc14:	24640002 	addiu	a0,v1,2
9d00cc18:	2c450031 	sltiu	a1,v0,49
9d00cc1c:	10a0ffab 	beqz	a1,9d00cacc <d_type+0x54>
9d00cc20:	ae44000c 	sw	a0,12(s2)
9d00cc24:	3c059d01 	lui	a1,0x9d01
9d00cc28:	00021080 	sll	v0,v0,0x2
9d00cc2c:	24a57264 	addiu	a1,a1,29284
9d00cc30:	00a21021 	addu	v0,a1,v0
9d00cc34:	8c420000 	lw	v0,0(v0)
9d00cc38:	00400008 	jr	v0
9d00cc3c:	00000000 	nop
9d00cc40:	24630001 	addiu	v1,v1,1
9d00cc44:	02402021 	move	a0,s2
9d00cc48:	0f40329e 	jal	9d00ca78 <d_type>
9d00cc4c:	ae43000c 	sw	v1,12(s2)
9d00cc50:	02402021 	move	a0,s2
9d00cc54:	0b4032f8 	j	9d00cbe0 <d_type+0x168>
9d00cc58:	24050022 	li	a1,34
9d00cc5c:	24630001 	addiu	v1,v1,1
9d00cc60:	02402021 	move	a0,s2
9d00cc64:	0f40329e 	jal	9d00ca78 <d_type>
9d00cc68:	ae43000c 	sw	v1,12(s2)
9d00cc6c:	02402021 	move	a0,s2
9d00cc70:	0b4032f8 	j	9d00cbe0 <d_type+0x168>
9d00cc74:	24050020 	li	a1,32
9d00cc78:	24630001 	addiu	v1,v1,1
9d00cc7c:	02402021 	move	a0,s2
9d00cc80:	0f40329e 	jal	9d00ca78 <d_type>
9d00cc84:	ae43000c 	sw	v1,12(s2)
9d00cc88:	02402021 	move	a0,s2
9d00cc8c:	0b4032f8 	j	9d00cbe0 <d_type+0x168>
9d00cc90:	2405001e 	li	a1,30
9d00cc94:	24630001 	addiu	v1,v1,1
9d00cc98:	02402021 	move	a0,s2
9d00cc9c:	0f40329e 	jal	9d00ca78 <d_type>
9d00cca0:	ae43000c 	sw	v1,12(s2)
9d00cca4:	02402021 	move	a0,s2
9d00cca8:	0b4032f8 	j	9d00cbe0 <d_type+0x168>
9d00ccac:	2405001f 	li	a1,31
9d00ccb0:	80620001 	lb	v0,1(v1)
9d00ccb4:	304300ff 	andi	v1,v0,0xff
9d00ccb8:	2464ffd0 	addiu	a0,v1,-48
9d00ccbc:	308400ff 	andi	a0,a0,0xff
9d00ccc0:	2c84000a 	sltiu	a0,a0,10
9d00ccc4:	14800007 	bnez	a0,9d00cce4 <d_type+0x26c>
9d00ccc8:	2404005f 	li	a0,95
9d00cccc:	10440005 	beq	v0,a0,9d00cce4 <d_type+0x26c>
9d00ccd0:	2462ffbf 	addiu	v0,v1,-65
9d00ccd4:	304200ff 	andi	v0,v0,0xff
9d00ccd8:	2c42001a 	sltiu	v0,v0,26
9d00ccdc:	104001b2 	beqz	v0,9d00d3a8 <d_type+0x930>
9d00cce0:	00000000 	nop
9d00cce4:	02402021 	move	a0,s2
9d00cce8:	0f40307e 	jal	9d00c1f8 <d_substitution>
9d00ccec:	00002821 	move	a1,zero
9d00ccf0:	00403021 	move	a2,v0
9d00ccf4:	8e42000c 	lw	v0,12(s2)
9d00ccf8:	afa60010 	sw	a2,16(sp)
9d00ccfc:	80430000 	lb	v1,0(v0)
9d00cd00:	24020049 	li	v0,73
9d00cd04:	1462ff80 	bne	v1,v0,9d00cb08 <d_type+0x90>
9d00cd08:	00c08021 	move	s0,a2
9d00cd0c:	02402021 	move	a0,s2
9d00cd10:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00cd14:	afa60018 	sw	a2,24(sp)
9d00cd18:	8fa60018 	lw	a2,24(sp)
9d00cd1c:	02402021 	move	a0,s2
9d00cd20:	24050004 	li	a1,4
9d00cd24:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00cd28:	00403821 	move	a3,v0
9d00cd2c:	00409821 	move	s3,v0
9d00cd30:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00cd34:	afa20010 	sw	v0,16(sp)
9d00cd38:	0f40321c 	jal	9d00c870 <d_template_param>
9d00cd3c:	02402021 	move	a0,s2
9d00cd40:	00409821 	move	s3,v0
9d00cd44:	8e42000c 	lw	v0,12(s2)
9d00cd48:	afb30010 	sw	s3,16(sp)
9d00cd4c:	80430000 	lb	v1,0(v0)
9d00cd50:	24020049 	li	v0,73
9d00cd54:	1462ff8d 	bne	v1,v0,9d00cb8c <d_type+0x114>
9d00cd58:	00000000 	nop
9d00cd5c:	1260ff6a 	beqz	s3,9d00cb08 <d_type+0x90>
9d00cd60:	00008021 	move	s0,zero
9d00cd64:	8e420020 	lw	v0,32(s2)
9d00cd68:	8e430024 	lw	v1,36(s2)
9d00cd6c:	0043182a 	slt	v1,v0,v1
9d00cd70:	1060ff66 	beqz	v1,9d00cb0c <d_type+0x94>
9d00cd74:	8fbf0034 	lw	ra,52(sp)
9d00cd78:	8e44001c 	lw	a0,28(s2)
9d00cd7c:	00021880 	sll	v1,v0,0x2
9d00cd80:	24420001 	addiu	v0,v0,1
9d00cd84:	00831821 	addu	v1,a0,v1
9d00cd88:	ac730000 	sw	s3,0(v1)
9d00cd8c:	8fa60010 	lw	a2,16(sp)
9d00cd90:	0b403343 	j	9d00cd0c <d_type+0x294>
9d00cd94:	ae420020 	sw	v0,32(s2)
9d00cd98:	24630001 	addiu	v1,v1,1
9d00cd9c:	ae43000c 	sw	v1,12(s2)
9d00cda0:	0f403257 	jal	9d00c95c <d_source_name>
9d00cda4:	02402021 	move	a0,s2
9d00cda8:	02402021 	move	a0,s2
9d00cdac:	0f40329e 	jal	9d00ca78 <d_type>
9d00cdb0:	afa20010 	sw	v0,16(sp)
9d00cdb4:	8fa70010 	lw	a3,16(sp)
9d00cdb8:	02402021 	move	a0,s2
9d00cdbc:	2405001d 	li	a1,29
9d00cdc0:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00cdc4:	00403021 	move	a2,v0
9d00cdc8:	00409821 	move	s3,v0
9d00cdcc:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00cdd0:	afb30010 	sw	s3,16(sp)
9d00cdd4:	00022080 	sll	a0,v0,0x2
9d00cdd8:	00021100 	sll	v0,v0,0x4
9d00cddc:	00822021 	addu	a0,a0,v0
9d00cde0:	3c029d01 	lui	v0,0x9d01
9d00cde4:	2484f86c 	addiu	a0,a0,-1940
9d00cde8:	244276a8 	addiu	v0,v0,30376
9d00cdec:	00441021 	addu	v0,v0,a0
9d00cdf0:	5040016b 	beqzl	v0,9d00d3a0 <d_type+0x928>
9d00cdf4:	8c420004 	lw	v0,4(v0)
9d00cdf8:	8e440014 	lw	a0,20(s2)
9d00cdfc:	8e450018 	lw	a1,24(s2)
9d00ce00:	0085282a 	slt	a1,a0,a1
9d00ce04:	54a00152 	bnezl	a1,9d00d350 <d_type+0x8d8>
9d00ce08:	8e500010 	lw	s0,16(s2)
9d00ce0c:	8c020004 	lw	v0,4(zero)
9d00ce10:	00008021 	move	s0,zero
9d00ce14:	8c420004 	lw	v0,4(v0)
9d00ce18:	8e440030 	lw	a0,48(s2)
9d00ce1c:	24630001 	addiu	v1,v1,1
9d00ce20:	afb00010 	sw	s0,16(sp)
9d00ce24:	00821021 	addu	v0,a0,v0
9d00ce28:	ae420030 	sw	v0,48(s2)
9d00ce2c:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00ce30:	ae43000c 	sw	v1,12(s2)
9d00ce34:	24630001 	addiu	v1,v1,1
9d00ce38:	02402021 	move	a0,s2
9d00ce3c:	0f403257 	jal	9d00c95c <d_source_name>
9d00ce40:	ae43000c 	sw	v1,12(s2)
9d00ce44:	02402021 	move	a0,s2
9d00ce48:	0b4032f8 	j	9d00cbe0 <d_type+0x168>
9d00ce4c:	24050024 	li	a1,36
9d00ce50:	24620001 	addiu	v0,v1,1
9d00ce54:	ae42000c 	sw	v0,12(s2)
9d00ce58:	80640001 	lb	a0,1(v1)
9d00ce5c:	24020059 	li	v0,89
9d00ce60:	10820163 	beq	a0,v0,9d00d3f0 <d_type+0x978>
9d00ce64:	24630002 	addiu	v1,v1,2
9d00ce68:	02402021 	move	a0,s2
9d00ce6c:	0f40355c 	jal	9d00d570 <d_bare_function_type>
9d00ce70:	24050001 	li	a1,1
9d00ce74:	00409821 	move	s3,v0
9d00ce78:	8e42000c 	lw	v0,12(s2)
9d00ce7c:	24030045 	li	v1,69
9d00ce80:	80440000 	lb	a0,0(v0)
9d00ce84:	10830157 	beq	a0,v1,9d00d3e4 <d_type+0x96c>
9d00ce88:	24420001 	addiu	v0,v0,1
9d00ce8c:	00009821 	move	s3,zero
9d00ce90:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00ce94:	afb30010 	sw	s3,16(sp)
9d00ce98:	24630001 	addiu	v1,v1,1
9d00ce9c:	02402021 	move	a0,s2
9d00cea0:	ae43000c 	sw	v1,12(s2)
9d00cea4:	0f40329e 	jal	9d00ca78 <d_type>
9d00cea8:	27b10014 	addiu	s1,sp,20
9d00ceac:	02402021 	move	a0,s2
9d00ceb0:	02202821 	move	a1,s1
9d00ceb4:	24060001 	li	a2,1
9d00ceb8:	0f403038 	jal	9d00c0e0 <d_cv_qualifiers>
9d00cebc:	00408021 	move	s0,v0
9d00cec0:	0040a021 	move	s4,v0
9d00cec4:	1040ffc1 	beqz	v0,9d00cdcc <d_type+0x354>
9d00cec8:	00009821 	move	s3,zero
9d00cecc:	0f40329e 	jal	9d00ca78 <d_type>
9d00ced0:	02402021 	move	a0,s2
9d00ced4:	1040ffbd 	beqz	v0,9d00cdcc <d_type+0x354>
9d00ced8:	ae820000 	sw	v0,0(s4)
9d00cedc:	12910006 	beq	s4,s1,9d00cef8 <d_type+0x480>
9d00cee0:	8fa70014 	lw	a3,20(sp)
9d00cee4:	8c430000 	lw	v1,0(v0)
9d00cee8:	24020025 	li	v0,37
9d00ceec:	14620150 	bne	v1,v0,9d00d430 <d_type+0x9b8>
9d00cef0:	8fa30014 	lw	v1,20(sp)
9d00cef4:	8fa70014 	lw	a3,20(sp)
9d00cef8:	02402021 	move	a0,s2
9d00cefc:	24050027 	li	a1,39
9d00cf00:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00cf04:	02003021 	move	a2,s0
9d00cf08:	00409821 	move	s3,v0
9d00cf0c:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00cf10:	afb30010 	sw	s3,16(sp)
9d00cf14:	24650001 	addiu	a1,v1,1
9d00cf18:	ae45000c 	sw	a1,12(s2)
9d00cf1c:	80620001 	lb	v0,1(v1)
9d00cf20:	2403005f 	li	v1,95
9d00cf24:	10430140 	beq	v0,v1,9d00d428 <d_type+0x9b0>
9d00cf28:	2442ffd0 	addiu	v0,v0,-48
9d00cf2c:	304200ff 	andi	v0,v0,0xff
9d00cf30:	2c42000a 	sltiu	v0,v0,10
9d00cf34:	10400113 	beqz	v0,9d00d384 <d_type+0x90c>
9d00cf38:	00a03021 	move	a2,a1
9d00cf3c:	24c60001 	addiu	a2,a2,1
9d00cf40:	ae46000c 	sw	a2,12(s2)
9d00cf44:	90c20000 	lbu	v0,0(a2)
9d00cf48:	2442ffd0 	addiu	v0,v0,-48
9d00cf4c:	304200ff 	andi	v0,v0,0xff
9d00cf50:	2c42000a 	sltiu	v0,v0,10
9d00cf54:	5440fffa 	bnezl	v0,9d00cf40 <d_type+0x4c8>
9d00cf58:	24c60001 	addiu	a2,a2,1
9d00cf5c:	00c53023 	subu	a2,a2,a1
9d00cf60:	0f40301f 	jal	9d00c07c <d_make_name>
9d00cf64:	02402021 	move	a0,s2
9d00cf68:	00403021 	move	a2,v0
9d00cf6c:	1040ff97 	beqz	v0,9d00cdcc <d_type+0x354>
9d00cf70:	00009821 	move	s3,zero
9d00cf74:	8e45000c 	lw	a1,12(s2)
9d00cf78:	2402005f 	li	v0,95
9d00cf7c:	80a30000 	lb	v1,0(a1)
9d00cf80:	1462ff92 	bne	v1,v0,9d00cdcc <d_type+0x354>
9d00cf84:	00009821 	move	s3,zero
9d00cf88:	24a50001 	addiu	a1,a1,1
9d00cf8c:	ae45000c 	sw	a1,12(s2)
9d00cf90:	02402021 	move	a0,s2
9d00cf94:	0f40329e 	jal	9d00ca78 <d_type>
9d00cf98:	afa60018 	sw	a2,24(sp)
9d00cf9c:	8fa60018 	lw	a2,24(sp)
9d00cfa0:	02402021 	move	a0,s2
9d00cfa4:	24050026 	li	a1,38
9d00cfa8:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00cfac:	00403821 	move	a3,v0
9d00cfb0:	00409821 	move	s3,v0
9d00cfb4:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00cfb8:	afb30010 	sw	s3,16(sp)
9d00cfbc:	80630002 	lb	v1,2(v1)
9d00cfc0:	2402005f 	li	v0,95
9d00cfc4:	50620110 	beql	v1,v0,9d00d408 <d_type+0x990>
9d00cfc8:	24840001 	addiu	a0,a0,1
9d00cfcc:	8e420014 	lw	v0,20(s2)
9d00cfd0:	8e430018 	lw	v1,24(s2)
9d00cfd4:	0043182a 	slt	v1,v0,v1
9d00cfd8:	50600100 	beqzl	v1,9d00d3dc <d_type+0x964>
9d00cfdc:	00001021 	move	v0,zero
9d00cfe0:	8e500010 	lw	s0,16(s2)
9d00cfe4:	00021880 	sll	v1,v0,0x2
9d00cfe8:	00022100 	sll	a0,v0,0x4
9d00cfec:	00831823 	subu	v1,a0,v1
9d00cff0:	24420001 	addiu	v0,v0,1
9d00cff4:	02038021 	addu	s0,s0,v1
9d00cff8:	120000f7 	beqz	s0,9d00d3d8 <d_type+0x960>
9d00cffc:	ae420014 	sw	v0,20(s2)
9d00d000:	2402003a 	li	v0,58
9d00d004:	ae020000 	sw	v0,0(s0)
9d00d008:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00d00c:	2644000c 	addiu	a0,s2,12
9d00d010:	ae020004 	sw	v0,4(s0)
9d00d014:	8e43000c 	lw	v1,12(s2)
9d00d018:	2404005f 	li	a0,95
9d00d01c:	80650000 	lb	a1,0(v1)
9d00d020:	10a400c0 	beq	a1,a0,9d00d324 <d_type+0x8ac>
9d00d024:	00001021 	move	v0,zero
9d00d028:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d02c:	00408021 	move	s0,v0
9d00d030:	8e420014 	lw	v0,20(s2)
9d00d034:	8e430018 	lw	v1,24(s2)
9d00d038:	0043182a 	slt	v1,v0,v1
9d00d03c:	506000cf 	beqzl	v1,9d00d37c <d_type+0x904>
9d00d040:	8c020004 	lw	v0,4(zero)
9d00d044:	8e500010 	lw	s0,16(s2)
9d00d048:	00021880 	sll	v1,v0,0x2
9d00d04c:	00022100 	sll	a0,v0,0x4
9d00d050:	00831823 	subu	v1,a0,v1
9d00d054:	24420001 	addiu	v0,v0,1
9d00d058:	02038021 	addu	s0,s0,v1
9d00d05c:	12000102 	beqz	s0,9d00d468 <d_type+0x9f0>
9d00d060:	ae420014 	sw	v0,20(s2)
9d00d064:	3c029d01 	lui	v0,0x9d01
9d00d068:	24427900 	addiu	v0,v0,30976
9d00d06c:	24030023 	li	v1,35
9d00d070:	ae030000 	sw	v1,0(s0)
9d00d074:	ae020004 	sw	v0,4(s0)
9d00d078:	8c420004 	lw	v0,4(v0)
9d00d07c:	8e430030 	lw	v1,48(s2)
9d00d080:	afb00010 	sw	s0,16(sp)
9d00d084:	00621021 	addu	v0,v1,v0
9d00d088:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d08c:	ae420030 	sw	v0,48(s2)
9d00d090:	0f40329e 	jal	9d00ca78 <d_type>
9d00d094:	02402021 	move	a0,s2
9d00d098:	00403021 	move	a2,v0
9d00d09c:	02402021 	move	a0,s2
9d00d0a0:	24050041 	li	a1,65
9d00d0a4:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00d0a8:	00003821 	move	a3,zero
9d00d0ac:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d0b0:	00408021 	move	s0,v0
9d00d0b4:	8e420014 	lw	v0,20(s2)
9d00d0b8:	8e430018 	lw	v1,24(s2)
9d00d0bc:	0043182a 	slt	v1,v0,v1
9d00d0c0:	506000ae 	beqzl	v1,9d00d37c <d_type+0x904>
9d00d0c4:	8c020004 	lw	v0,4(zero)
9d00d0c8:	8e500010 	lw	s0,16(s2)
9d00d0cc:	00021880 	sll	v1,v0,0x2
9d00d0d0:	00022100 	sll	a0,v0,0x4
9d00d0d4:	00831823 	subu	v1,a0,v1
9d00d0d8:	24420001 	addiu	v0,v0,1
9d00d0dc:	02038021 	addu	s0,s0,v1
9d00d0e0:	120000e1 	beqz	s0,9d00d468 <d_type+0x9f0>
9d00d0e4:	ae420014 	sw	v0,20(s2)
9d00d0e8:	3c029d01 	lui	v0,0x9d01
9d00d0ec:	24427914 	addiu	v0,v0,30996
9d00d0f0:	24030023 	li	v1,35
9d00d0f4:	ae030000 	sw	v1,0(s0)
9d00d0f8:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d0fc:	ae020004 	sw	v0,4(s0)
9d00d100:	8e420014 	lw	v0,20(s2)
9d00d104:	8e430018 	lw	v1,24(s2)
9d00d108:	0043182a 	slt	v1,v0,v1
9d00d10c:	5060009b 	beqzl	v1,9d00d37c <d_type+0x904>
9d00d110:	8c020004 	lw	v0,4(zero)
9d00d114:	8e500010 	lw	s0,16(s2)
9d00d118:	00021880 	sll	v1,v0,0x2
9d00d11c:	00022100 	sll	a0,v0,0x4
9d00d120:	00831823 	subu	v1,a0,v1
9d00d124:	24420001 	addiu	v0,v0,1
9d00d128:	02038021 	addu	s0,s0,v1
9d00d12c:	120000ce 	beqz	s0,9d00d468 <d_type+0x9f0>
9d00d130:	ae420014 	sw	v0,20(s2)
9d00d134:	3c029d01 	lui	v0,0x9d01
9d00d138:	244278d8 	addiu	v0,v0,30936
9d00d13c:	24030023 	li	v1,35
9d00d140:	ae030000 	sw	v1,0(s0)
9d00d144:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d148:	ae020004 	sw	v0,4(s0)
9d00d14c:	8e420014 	lw	v0,20(s2)
9d00d150:	8e430018 	lw	v1,24(s2)
9d00d154:	0043182a 	slt	v1,v0,v1
9d00d158:	50600088 	beqzl	v1,9d00d37c <d_type+0x904>
9d00d15c:	8c020004 	lw	v0,4(zero)
9d00d160:	8e500010 	lw	s0,16(s2)
9d00d164:	00021880 	sll	v1,v0,0x2
9d00d168:	00022100 	sll	a0,v0,0x4
9d00d16c:	00831823 	subu	v1,a0,v1
9d00d170:	24420001 	addiu	v0,v0,1
9d00d174:	02038021 	addu	s0,s0,v1
9d00d178:	120000bb 	beqz	s0,9d00d468 <d_type+0x9f0>
9d00d17c:	ae420014 	sw	v0,20(s2)
9d00d180:	3c029d01 	lui	v0,0x9d01
9d00d184:	244278c4 	addiu	v0,v0,30916
9d00d188:	24030023 	li	v1,35
9d00d18c:	ae030000 	sw	v1,0(s0)
9d00d190:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d194:	ae020004 	sw	v0,4(s0)
9d00d198:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00d19c:	02402021 	move	a0,s2
9d00d1a0:	00403021 	move	a2,v0
9d00d1a4:	02402021 	move	a0,s2
9d00d1a8:	2405003b 	li	a1,59
9d00d1ac:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00d1b0:	00003821 	move	a3,zero
9d00d1b4:	afa20010 	sw	v0,16(sp)
9d00d1b8:	1040fe53 	beqz	v0,9d00cb08 <d_type+0x90>
9d00d1bc:	00008021 	move	s0,zero
9d00d1c0:	8e44000c 	lw	a0,12(s2)
9d00d1c4:	80830000 	lb	v1,0(a0)
9d00d1c8:	1060fe4f 	beqz	v1,9d00cb08 <d_type+0x90>
9d00d1cc:	24840001 	addiu	a0,a0,1
9d00d1d0:	00408021 	move	s0,v0
9d00d1d4:	24020045 	li	v0,69
9d00d1d8:	1062fe4b 	beq	v1,v0,9d00cb08 <d_type+0x90>
9d00d1dc:	ae44000c 	sw	a0,12(s2)
9d00d1e0:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d1e4:	00008021 	move	s0,zero
9d00d1e8:	8e420014 	lw	v0,20(s2)
9d00d1ec:	8e440018 	lw	a0,24(s2)
9d00d1f0:	0044202a 	slt	a0,v0,a0
9d00d1f4:	10800008 	beqz	a0,9d00d218 <d_type+0x7a0>
9d00d1f8:	00008021 	move	s0,zero
9d00d1fc:	8e500010 	lw	s0,16(s2)
9d00d200:	00022080 	sll	a0,v0,0x2
9d00d204:	00022900 	sll	a1,v0,0x4
9d00d208:	00a42023 	subu	a0,a1,a0
9d00d20c:	24420001 	addiu	v0,v0,1
9d00d210:	02048021 	addu	s0,s0,a0
9d00d214:	ae420014 	sw	v0,20(s2)
9d00d218:	24020028 	li	v0,40
9d00d21c:	afb00010 	sw	s0,16(sp)
9d00d220:	ae020000 	sw	v0,0(s0)
9d00d224:	90620002 	lbu	v0,2(v1)
9d00d228:	2442ffd0 	addiu	v0,v0,-48
9d00d22c:	304200ff 	andi	v0,v0,0xff
9d00d230:	2c42000a 	sltiu	v0,v0,10
9d00d234:	14400070 	bnez	v0,9d00d3f8 <d_type+0x980>
9d00d238:	a6020008 	sh	v0,8(s0)
9d00d23c:	0f40329e 	jal	9d00ca78 <d_type>
9d00d240:	02402021 	move	a0,s2
9d00d244:	ae020004 	sw	v0,4(s0)
9d00d248:	8fa20010 	lw	v0,16(sp)
9d00d24c:	8c420004 	lw	v0,4(v0)
9d00d250:	1040fe2d 	beqz	v0,9d00cb08 <d_type+0x90>
9d00d254:	00008021 	move	s0,zero
9d00d258:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00d25c:	2644000c 	addiu	a0,s2,12
9d00d260:	8e44000c 	lw	a0,12(s2)
9d00d264:	80830000 	lb	v1,0(a0)
9d00d268:	10600005 	beqz	v1,9d00d280 <d_type+0x808>
9d00d26c:	00001021 	move	v0,zero
9d00d270:	24840001 	addiu	a0,a0,1
9d00d274:	38620073 	xori	v0,v1,0x73
9d00d278:	ae44000c 	sw	a0,12(s2)
9d00d27c:	2c420001 	sltiu	v0,v0,1
9d00d280:	8fb00010 	lw	s0,16(sp)
9d00d284:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d288:	a602000a 	sh	v0,10(s0)
9d00d28c:	8e420014 	lw	v0,20(s2)
9d00d290:	8e430018 	lw	v1,24(s2)
9d00d294:	0043182a 	slt	v1,v0,v1
9d00d298:	50600038 	beqzl	v1,9d00d37c <d_type+0x904>
9d00d29c:	8c020004 	lw	v0,4(zero)
9d00d2a0:	8e500010 	lw	s0,16(s2)
9d00d2a4:	00021880 	sll	v1,v0,0x2
9d00d2a8:	00022100 	sll	a0,v0,0x4
9d00d2ac:	00831823 	subu	v1,a0,v1
9d00d2b0:	24420001 	addiu	v0,v0,1
9d00d2b4:	02038021 	addu	s0,s0,v1
9d00d2b8:	1200006b 	beqz	s0,9d00d468 <d_type+0x9f0>
9d00d2bc:	ae420014 	sw	v0,20(s2)
9d00d2c0:	3c029d01 	lui	v0,0x9d01
9d00d2c4:	244278ec 	addiu	v0,v0,30956
9d00d2c8:	24030023 	li	v1,35
9d00d2cc:	ae030000 	sw	v1,0(s0)
9d00d2d0:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d2d4:	ae020004 	sw	v0,4(s0)
9d00d2d8:	8e420014 	lw	v0,20(s2)
9d00d2dc:	8e430018 	lw	v1,24(s2)
9d00d2e0:	0043182a 	slt	v1,v0,v1
9d00d2e4:	50600025 	beqzl	v1,9d00d37c <d_type+0x904>
9d00d2e8:	8c020004 	lw	v0,4(zero)
9d00d2ec:	8e500010 	lw	s0,16(s2)
9d00d2f0:	00021880 	sll	v1,v0,0x2
9d00d2f4:	00022100 	sll	a0,v0,0x4
9d00d2f8:	00831823 	subu	v1,a0,v1
9d00d2fc:	24420001 	addiu	v0,v0,1
9d00d300:	02038021 	addu	s0,s0,v1
9d00d304:	12000058 	beqz	s0,9d00d468 <d_type+0x9f0>
9d00d308:	ae420014 	sw	v0,20(s2)
9d00d30c:	3c029d01 	lui	v0,0x9d01
9d00d310:	244278b0 	addiu	v0,v0,30896
9d00d314:	24030023 	li	v1,35
9d00d318:	ae030000 	sw	v1,0(s0)
9d00d31c:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d320:	ae020004 	sw	v0,4(s0)
9d00d324:	24630001 	addiu	v1,v1,1
9d00d328:	ae43000c 	sw	v1,12(s2)
9d00d32c:	0f40329e 	jal	9d00ca78 <d_type>
9d00d330:	02402021 	move	a0,s2
9d00d334:	00403821 	move	a3,v0
9d00d338:	02003021 	move	a2,s0
9d00d33c:	02402021 	move	a0,s2
9d00d340:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00d344:	24050029 	li	a1,41
9d00d348:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d34c:	00408021 	move	s0,v0
9d00d350:	00042880 	sll	a1,a0,0x2
9d00d354:	00043100 	sll	a2,a0,0x4
9d00d358:	00c52823 	subu	a1,a2,a1
9d00d35c:	24840001 	addiu	a0,a0,1
9d00d360:	02058021 	addu	s0,s0,a1
9d00d364:	12000042 	beqz	s0,9d00d470 <d_type+0x9f8>
9d00d368:	ae440014 	sw	a0,20(s2)
9d00d36c:	24040023 	li	a0,35
9d00d370:	ae040000 	sw	a0,0(s0)
9d00d374:	0b403385 	j	9d00ce14 <d_type+0x39c>
9d00d378:	ae020004 	sw	v0,4(s0)
9d00d37c:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d380:	00008021 	move	s0,zero
9d00d384:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00d388:	02402021 	move	a0,s2
9d00d38c:	00403021 	move	a2,v0
9d00d390:	1440fef8 	bnez	v0,9d00cf74 <d_type+0x4fc>
9d00d394:	00009821 	move	s3,zero
9d00d398:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00d39c:	afb30010 	sw	s3,16(sp)
9d00d3a0:	0b403385 	j	9d00ce14 <d_type+0x39c>
9d00d3a4:	00008021 	move	s0,zero
9d00d3a8:	0f40374e 	jal	9d00dd38 <d_name>
9d00d3ac:	02402021 	move	a0,s2
9d00d3b0:	00409821 	move	s3,v0
9d00d3b4:	afa20010 	sw	v0,16(sp)
9d00d3b8:	1040fdd3 	beqz	v0,9d00cb08 <d_type+0x90>
9d00d3bc:	00008021 	move	s0,zero
9d00d3c0:	8c430000 	lw	v1,0(v0)
9d00d3c4:	24020016 	li	v0,22
9d00d3c8:	1462fdf2 	bne	v1,v0,9d00cb94 <d_type+0x11c>
9d00d3cc:	02608021 	move	s0,s3
9d00d3d0:	0b4032c3 	j	9d00cb0c <d_type+0x94>
9d00d3d4:	8fbf0034 	lw	ra,52(sp)
9d00d3d8:	00001021 	move	v0,zero
9d00d3dc:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d3e0:	00408021 	move	s0,v0
9d00d3e4:	ae42000c 	sw	v0,12(s2)
9d00d3e8:	0b4032e3 	j	9d00cb8c <d_type+0x114>
9d00d3ec:	afb30010 	sw	s3,16(sp)
9d00d3f0:	0b40339a 	j	9d00ce68 <d_type+0x3f0>
9d00d3f4:	ae43000c 	sw	v1,12(s2)
9d00d3f8:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00d3fc:	2644000c 	addiu	a0,s2,12
9d00d400:	0b40348f 	j	9d00d23c <d_type+0x7c4>
9d00d404:	8fb00010 	lw	s0,16(sp)
9d00d408:	ae44000c 	sw	a0,12(s2)
9d00d40c:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00d410:	02402021 	move	a0,s2
9d00d414:	00408021 	move	s0,v0
9d00d418:	1600fefe 	bnez	s0,9d00d014 <d_type+0x59c>
9d00d41c:	00001021 	move	v0,zero
9d00d420:	0b4032c2 	j	9d00cb08 <d_type+0x90>
9d00d424:	00408021 	move	s0,v0
9d00d428:	0b4033e2 	j	9d00cf88 <d_type+0x510>
9d00d42c:	00003021 	move	a2,zero
9d00d430:	5060fdd6 	beqzl	v1,9d00cb8c <d_type+0x114>
9d00d434:	afb30010 	sw	s3,16(sp)
9d00d438:	8e420020 	lw	v0,32(s2)
9d00d43c:	8e440024 	lw	a0,36(s2)
9d00d440:	0044202a 	slt	a0,v0,a0
9d00d444:	5080fdd1 	beqzl	a0,9d00cb8c <d_type+0x114>
9d00d448:	afb30010 	sw	s3,16(sp)
9d00d44c:	8e45001c 	lw	a1,28(s2)
9d00d450:	00022080 	sll	a0,v0,0x2
9d00d454:	24420001 	addiu	v0,v0,1
9d00d458:	00a42021 	addu	a0,a1,a0
9d00d45c:	ac830000 	sw	v1,0(a0)
9d00d460:	0b4033bd 	j	9d00cef4 <d_type+0x47c>
9d00d464:	ae420020 	sw	v0,32(s2)
9d00d468:	0b40341e 	j	9d00d078 <d_type+0x600>
9d00d46c:	8e020004 	lw	v0,4(s0)
9d00d470:	0b403385 	j	9d00ce14 <d_type+0x39c>
9d00d474:	8e020004 	lw	v0,4(s0)

9d00d478 <d_parmlist>:
9d00d478:	8c83000c 	lw	v1,12(a0)
9d00d47c:	27bdffd8 	addiu	sp,sp,-40
9d00d480:	afb20020 	sw	s2,32(sp)
9d00d484:	afbf0024 	sw	ra,36(sp)
9d00d488:	afb1001c 	sw	s1,28(sp)
9d00d48c:	afb00018 	sw	s0,24(sp)
9d00d490:	afa00010 	sw	zero,16(sp)
9d00d494:	80630000 	lb	v1,0(v1)
9d00d498:	00809021 	move	s2,a0
9d00d49c:	10600019 	beqz	v1,9d00d504 <d_parmlist+0x8c>
9d00d4a0:	00001021 	move	v0,zero
9d00d4a4:	24040045 	li	a0,69
9d00d4a8:	10640016 	beq	v1,a0,9d00d504 <d_parmlist+0x8c>
9d00d4ac:	27b00010 	addiu	s0,sp,16
9d00d4b0:	0b403539 	j	9d00d4e4 <d_parmlist+0x6c>
9d00d4b4:	24110045 	li	s1,69
9d00d4b8:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00d4bc:	00000000 	nop
9d00d4c0:	1040000f 	beqz	v0,9d00d500 <d_parmlist+0x88>
9d00d4c4:	ae020000 	sw	v0,0(s0)
9d00d4c8:	8e43000c 	lw	v1,12(s2)
9d00d4cc:	24500008 	addiu	s0,v0,8
9d00d4d0:	80620000 	lb	v0,0(v1)
9d00d4d4:	50400011 	beqzl	v0,9d00d51c <d_parmlist+0xa4>
9d00d4d8:	8fa20010 	lw	v0,16(sp)
9d00d4dc:	1051000f 	beq	v0,s1,9d00d51c <d_parmlist+0xa4>
9d00d4e0:	8fa20010 	lw	v0,16(sp)
9d00d4e4:	0f40329e 	jal	9d00ca78 <d_type>
9d00d4e8:	02402021 	move	a0,s2
9d00d4ec:	00403021 	move	a2,v0
9d00d4f0:	02402021 	move	a0,s2
9d00d4f4:	2405002a 	li	a1,42
9d00d4f8:	1440ffef 	bnez	v0,9d00d4b8 <d_parmlist+0x40>
9d00d4fc:	00003821 	move	a3,zero
9d00d500:	00001021 	move	v0,zero
9d00d504:	8fbf0024 	lw	ra,36(sp)
9d00d508:	8fb20020 	lw	s2,32(sp)
9d00d50c:	8fb1001c 	lw	s1,28(sp)
9d00d510:	8fb00018 	lw	s0,24(sp)
9d00d514:	03e00008 	jr	ra
9d00d518:	27bd0028 	addiu	sp,sp,40
9d00d51c:	1040fffa 	beqz	v0,9d00d508 <d_parmlist+0x90>
9d00d520:	8fbf0024 	lw	ra,36(sp)
9d00d524:	8c430008 	lw	v1,8(v0)
9d00d528:	5460fff8 	bnezl	v1,9d00d50c <d_parmlist+0x94>
9d00d52c:	8fb20020 	lw	s2,32(sp)
9d00d530:	8c430004 	lw	v1,4(v0)
9d00d534:	24040023 	li	a0,35
9d00d538:	8c650000 	lw	a1,0(v1)
9d00d53c:	54a4fff3 	bnel	a1,a0,9d00d50c <d_parmlist+0x94>
9d00d540:	8fb20020 	lw	s2,32(sp)
9d00d544:	8c630004 	lw	v1,4(v1)
9d00d548:	24040009 	li	a0,9
9d00d54c:	8c650010 	lw	a1,16(v1)
9d00d550:	54a4ffee 	bnel	a1,a0,9d00d50c <d_parmlist+0x94>
9d00d554:	8fb20020 	lw	s2,32(sp)
9d00d558:	8e440030 	lw	a0,48(s2)
9d00d55c:	8c630004 	lw	v1,4(v1)
9d00d560:	00831823 	subu	v1,a0,v1
9d00d564:	ae430030 	sw	v1,48(s2)
9d00d568:	0b403541 	j	9d00d504 <d_parmlist+0x8c>
9d00d56c:	ac400004 	sw	zero,4(v0)

9d00d570 <d_bare_function_type>:
9d00d570:	8c82000c 	lw	v0,12(a0)
9d00d574:	27bdffe0 	addiu	sp,sp,-32
9d00d578:	afb00018 	sw	s0,24(sp)
9d00d57c:	afbf001c 	sw	ra,28(sp)
9d00d580:	00808021 	move	s0,a0
9d00d584:	80440000 	lb	a0,0(v0)
9d00d588:	2403004a 	li	v1,74
9d00d58c:	1083000f 	beq	a0,v1,9d00d5cc <d_bare_function_type+0x5c>
9d00d590:	24420001 	addiu	v0,v0,1
9d00d594:	14a0000e 	bnez	a1,9d00d5d0 <d_bare_function_type+0x60>
9d00d598:	00003021 	move	a2,zero
9d00d59c:	02002021 	move	a0,s0
9d00d5a0:	0f40351e 	jal	9d00d478 <d_parmlist>
9d00d5a4:	afa60010 	sw	a2,16(sp)
9d00d5a8:	1040000d 	beqz	v0,9d00d5e0 <d_bare_function_type+0x70>
9d00d5ac:	8fa60010 	lw	a2,16(sp)
9d00d5b0:	02002021 	move	a0,s0
9d00d5b4:	8fbf001c 	lw	ra,28(sp)
9d00d5b8:	8fb00018 	lw	s0,24(sp)
9d00d5bc:	24050025 	li	a1,37
9d00d5c0:	00403821 	move	a3,v0
9d00d5c4:	0b402ff0 	j	9d00bfc0 <d_make_comp>
9d00d5c8:	27bd0020 	addiu	sp,sp,32
9d00d5cc:	ae02000c 	sw	v0,12(s0)
9d00d5d0:	0f40329e 	jal	9d00ca78 <d_type>
9d00d5d4:	02002021 	move	a0,s0
9d00d5d8:	1440fff0 	bnez	v0,9d00d59c <d_bare_function_type+0x2c>
9d00d5dc:	00403021 	move	a2,v0
9d00d5e0:	8fbf001c 	lw	ra,28(sp)
9d00d5e4:	00001021 	move	v0,zero
9d00d5e8:	8fb00018 	lw	s0,24(sp)
9d00d5ec:	03e00008 	jr	ra
9d00d5f0:	27bd0020 	addiu	sp,sp,32

9d00d5f4 <d_operator_name>:
9d00d5f4:	8c82000c 	lw	v0,12(a0)
9d00d5f8:	27bdffe0 	addiu	sp,sp,-32
9d00d5fc:	afb00014 	sw	s0,20(sp)
9d00d600:	afbf001c 	sw	ra,28(sp)
9d00d604:	afb10018 	sw	s1,24(sp)
9d00d608:	80490000 	lb	t1,0(v0)
9d00d60c:	00808021 	move	s0,a0
9d00d610:	1120000e 	beqz	t1,9d00d64c <d_operator_name+0x58>
9d00d614:	00003821 	move	a3,zero
9d00d618:	24430001 	addiu	v1,v0,1
9d00d61c:	ac83000c 	sw	v1,12(a0)
9d00d620:	80470001 	lb	a3,1(v0)
9d00d624:	10e00002 	beqz	a3,9d00d630 <d_operator_name+0x3c>
9d00d628:	24420002 	addiu	v0,v0,2
9d00d62c:	ac82000c 	sw	v0,12(a0)
9d00d630:	24020076 	li	v0,118
9d00d634:	15220029 	bne	t1,v0,9d00d6dc <d_operator_name+0xe8>
9d00d638:	24f1ffd0 	addiu	s1,a3,-48
9d00d63c:	322200ff 	andi	v0,s1,0xff
9d00d640:	2c42000a 	sltiu	v0,v0,10
9d00d644:	14400035 	bnez	v0,9d00d71c <d_operator_name+0x128>
9d00d648:	00000000 	nop
9d00d64c:	3c0a9d01 	lui	t2,0x9d01
9d00d650:	24050034 	li	a1,52
9d00d654:	00001021 	move	v0,zero
9d00d658:	254a79ec 	addiu	t2,t2,31212
9d00d65c:	00a21823 	subu	v1,a1,v0
9d00d660:	000327c2 	srl	a0,v1,0x1f
9d00d664:	00831821 	addu	v1,a0,v1
9d00d668:	00031843 	sra	v1,v1,0x1
9d00d66c:	00621821 	addu	v1,v1,v0
9d00d670:	00034100 	sll	t0,v1,0x4
9d00d674:	01484021 	addu	t0,t2,t0
9d00d678:	8d040000 	lw	a0,0(t0)
9d00d67c:	80860000 	lb	a2,0(a0)
9d00d680:	1526000f 	bne	t1,a2,9d00d6c0 <d_operator_name+0xcc>
9d00d684:	0126302a 	slt	a2,t1,a2
9d00d688:	80840001 	lb	a0,1(a0)
9d00d68c:	10e40039 	beq	a3,a0,9d00d774 <d_operator_name+0x180>
9d00d690:	00e4302a 	slt	a2,a3,a0
9d00d694:	50c0000d 	beqzl	a2,9d00d6cc <d_operator_name+0xd8>
9d00d698:	24620001 	addiu	v0,v1,1
9d00d69c:	00602821 	move	a1,v1
9d00d6a0:	1445ffef 	bne	v0,a1,9d00d660 <d_operator_name+0x6c>
9d00d6a4:	00a21823 	subu	v1,a1,v0
9d00d6a8:	00001021 	move	v0,zero
9d00d6ac:	8fbf001c 	lw	ra,28(sp)
9d00d6b0:	8fb10018 	lw	s1,24(sp)
9d00d6b4:	8fb00014 	lw	s0,20(sp)
9d00d6b8:	03e00008 	jr	ra
9d00d6bc:	27bd0020 	addiu	sp,sp,32
9d00d6c0:	54c0fff7 	bnezl	a2,9d00d6a0 <d_operator_name+0xac>
9d00d6c4:	00602821 	move	a1,v1
9d00d6c8:	24620001 	addiu	v0,v1,1
9d00d6cc:	1445ffe4 	bne	v0,a1,9d00d660 <d_operator_name+0x6c>
9d00d6d0:	00a21823 	subu	v1,a1,v0
9d00d6d4:	0b4035ab 	j	9d00d6ac <d_operator_name+0xb8>
9d00d6d8:	00001021 	move	v0,zero
9d00d6dc:	24030063 	li	v1,99
9d00d6e0:	1523ffdb 	bne	t1,v1,9d00d650 <d_operator_name+0x5c>
9d00d6e4:	3c0a9d01 	lui	t2,0x9d01
9d00d6e8:	14e2ffda 	bne	a3,v0,9d00d654 <d_operator_name+0x60>
9d00d6ec:	24050034 	li	a1,52
9d00d6f0:	0f40329e 	jal	9d00ca78 <d_type>
9d00d6f4:	02002021 	move	a0,s0
9d00d6f8:	00403021 	move	a2,v0
9d00d6fc:	02002021 	move	a0,s0
9d00d700:	8fbf001c 	lw	ra,28(sp)
9d00d704:	8fb10018 	lw	s1,24(sp)
9d00d708:	8fb00014 	lw	s0,20(sp)
9d00d70c:	2405002e 	li	a1,46
9d00d710:	00003821 	move	a3,zero
9d00d714:	0b402ff0 	j	9d00bfc0 <d_make_comp>
9d00d718:	27bd0020 	addiu	sp,sp,32
9d00d71c:	0f403257 	jal	9d00c95c <d_source_name>
9d00d720:	02002021 	move	a0,s0
9d00d724:	8e030014 	lw	v1,20(s0)
9d00d728:	8e050018 	lw	a1,24(s0)
9d00d72c:	00402021 	move	a0,v0
9d00d730:	0065282a 	slt	a1,v1,a1
9d00d734:	10a0ffdd 	beqz	a1,9d00d6ac <d_operator_name+0xb8>
9d00d738:	00001021 	move	v0,zero
9d00d73c:	8e050010 	lw	a1,16(s0)
9d00d740:	00031080 	sll	v0,v1,0x2
9d00d744:	00033100 	sll	a2,v1,0x4
9d00d748:	00c21023 	subu	v0,a2,v0
9d00d74c:	24630001 	addiu	v1,v1,1
9d00d750:	00a21021 	addu	v0,a1,v0
9d00d754:	1040ffd5 	beqz	v0,9d00d6ac <d_operator_name+0xb8>
9d00d758:	ae030014 	sw	v1,20(s0)
9d00d75c:	1080ffd2 	beqz	a0,9d00d6a8 <d_operator_name+0xb4>
9d00d760:	2403002d 	li	v1,45
9d00d764:	ac430000 	sw	v1,0(v0)
9d00d768:	ac510004 	sw	s1,4(v0)
9d00d76c:	0b4035ab 	j	9d00d6ac <d_operator_name+0xb8>
9d00d770:	ac440008 	sw	a0,8(v0)
9d00d774:	8e030014 	lw	v1,20(s0)
9d00d778:	8e040018 	lw	a0,24(s0)
9d00d77c:	0064202a 	slt	a0,v1,a0
9d00d780:	1080ffca 	beqz	a0,9d00d6ac <d_operator_name+0xb8>
9d00d784:	00001021 	move	v0,zero
9d00d788:	8e040010 	lw	a0,16(s0)
9d00d78c:	00031080 	sll	v0,v1,0x2
9d00d790:	00032900 	sll	a1,v1,0x4
9d00d794:	00a21023 	subu	v0,a1,v0
9d00d798:	24630001 	addiu	v1,v1,1
9d00d79c:	00821021 	addu	v0,a0,v0
9d00d7a0:	1040ffc2 	beqz	v0,9d00d6ac <d_operator_name+0xb8>
9d00d7a4:	ae030014 	sw	v1,20(s0)
9d00d7a8:	ac480004 	sw	t0,4(v0)
9d00d7ac:	8fbf001c 	lw	ra,28(sp)
9d00d7b0:	2403002c 	li	v1,44
9d00d7b4:	8fb10018 	lw	s1,24(sp)
9d00d7b8:	8fb00014 	lw	s0,20(sp)
9d00d7bc:	ac430000 	sw	v1,0(v0)
9d00d7c0:	03e00008 	jr	ra
9d00d7c4:	27bd0020 	addiu	sp,sp,32

9d00d7c8 <d_unqualified_name>:
9d00d7c8:	8c85000c 	lw	a1,12(a0)
9d00d7cc:	27bdffe0 	addiu	sp,sp,-32
9d00d7d0:	afb00010 	sw	s0,16(sp)
9d00d7d4:	afbf001c 	sw	ra,28(sp)
9d00d7d8:	afb20018 	sw	s2,24(sp)
9d00d7dc:	afb10014 	sw	s1,20(sp)
9d00d7e0:	80a30000 	lb	v1,0(a1)
9d00d7e4:	306200ff 	andi	v0,v1,0xff
9d00d7e8:	2446ffd0 	addiu	a2,v0,-48
9d00d7ec:	30c600ff 	andi	a2,a2,0xff
9d00d7f0:	2cc6000a 	sltiu	a2,a2,10
9d00d7f4:	14c00024 	bnez	a2,9d00d888 <d_unqualified_name+0xc0>
9d00d7f8:	00808021 	move	s0,a0
9d00d7fc:	2446ff9f 	addiu	a2,v0,-97
9d00d800:	30c600ff 	andi	a2,a2,0xff
9d00d804:	2cc6001a 	sltiu	a2,a2,26
9d00d808:	14c00010 	bnez	a2,9d00d84c <d_unqualified_name+0x84>
9d00d80c:	2442ffbd 	addiu	v0,v0,-67
9d00d810:	304200ff 	andi	v0,v0,0xff
9d00d814:	2c420002 	sltiu	v0,v0,2
9d00d818:	1440002b 	bnez	v0,9d00d8c8 <d_unqualified_name+0x100>
9d00d81c:	2402004c 	li	v0,76
9d00d820:	1062001f 	beq	v1,v0,9d00d8a0 <d_unqualified_name+0xd8>
9d00d824:	24020055 	li	v0,85
9d00d828:	10620058 	beq	v1,v0,9d00d98c <d_unqualified_name+0x1c4>
9d00d82c:	00008821 	move	s1,zero
9d00d830:	8fbf001c 	lw	ra,28(sp)
9d00d834:	02201021 	move	v0,s1
9d00d838:	8fb20018 	lw	s2,24(sp)
9d00d83c:	8fb10014 	lw	s1,20(sp)
9d00d840:	8fb00010 	lw	s0,16(sp)
9d00d844:	03e00008 	jr	ra
9d00d848:	27bd0020 	addiu	sp,sp,32
9d00d84c:	0f40357d 	jal	9d00d5f4 <d_operator_name>
9d00d850:	00000000 	nop
9d00d854:	1040fff6 	beqz	v0,9d00d830 <d_unqualified_name+0x68>
9d00d858:	00408821 	move	s1,v0
9d00d85c:	8c430000 	lw	v1,0(v0)
9d00d860:	2402002c 	li	v0,44
9d00d864:	1462fff3 	bne	v1,v0,9d00d834 <d_unqualified_name+0x6c>
9d00d868:	8fbf001c 	lw	ra,28(sp)
9d00d86c:	8e220004 	lw	v0,4(s1)
9d00d870:	8e030030 	lw	v1,48(s0)
9d00d874:	8c420008 	lw	v0,8(v0)
9d00d878:	00621021 	addu	v0,v1,v0
9d00d87c:	24420007 	addiu	v0,v0,7
9d00d880:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00d884:	ae020030 	sw	v0,48(s0)
9d00d888:	8fbf001c 	lw	ra,28(sp)
9d00d88c:	8fb20018 	lw	s2,24(sp)
9d00d890:	8fb10014 	lw	s1,20(sp)
9d00d894:	8fb00010 	lw	s0,16(sp)
9d00d898:	0b403257 	j	9d00c95c <d_source_name>
9d00d89c:	27bd0020 	addiu	sp,sp,32
9d00d8a0:	24a50001 	addiu	a1,a1,1
9d00d8a4:	0f403257 	jal	9d00c95c <d_source_name>
9d00d8a8:	ac85000c 	sw	a1,12(a0)
9d00d8ac:	00409021 	move	s2,v0
9d00d8b0:	1040ffdf 	beqz	v0,9d00d830 <d_unqualified_name+0x68>
9d00d8b4:	00008821 	move	s1,zero
9d00d8b8:	0f403244 	jal	9d00c910 <d_discriminator>
9d00d8bc:	02002021 	move	a0,s0
9d00d8c0:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00d8c4:	0242880b 	movn	s1,s2,v0
9d00d8c8:	8c82002c 	lw	v0,44(a0)
9d00d8cc:	10400008 	beqz	v0,9d00d8f0 <d_unqualified_name+0x128>
9d00d8d0:	24040043 	li	a0,67
9d00d8d4:	8c440000 	lw	a0,0(v0)
9d00d8d8:	50800027 	beqzl	a0,9d00d978 <d_unqualified_name+0x1b0>
9d00d8dc:	8e040030 	lw	a0,48(s0)
9d00d8e0:	24060016 	li	a2,22
9d00d8e4:	50860024 	beql	a0,a2,9d00d978 <d_unqualified_name+0x1b0>
9d00d8e8:	8e040030 	lw	a0,48(s0)
9d00d8ec:	24040043 	li	a0,67
9d00d8f0:	10640050 	beq	v1,a0,9d00da34 <d_unqualified_name+0x26c>
9d00d8f4:	24040044 	li	a0,68
9d00d8f8:	50640003 	beql	v1,a0,9d00d908 <d_unqualified_name+0x140>
9d00d8fc:	80a30001 	lb	v1,1(a1)
9d00d900:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00d904:	00008821 	move	s1,zero
9d00d908:	24040031 	li	a0,49
9d00d90c:	10640068 	beq	v1,a0,9d00dab0 <d_unqualified_name+0x2e8>
9d00d910:	24040032 	li	a0,50
9d00d914:	10640064 	beq	v1,a0,9d00daa8 <d_unqualified_name+0x2e0>
9d00d918:	24040030 	li	a0,48
9d00d91c:	1464fff8 	bne	v1,a0,9d00d900 <d_unqualified_name+0x138>
9d00d920:	24060001 	li	a2,1
9d00d924:	8e030014 	lw	v1,20(s0)
9d00d928:	8e040018 	lw	a0,24(s0)
9d00d92c:	24a50002 	addiu	a1,a1,2
9d00d930:	ae05000c 	sw	a1,12(s0)
9d00d934:	0064202a 	slt	a0,v1,a0
9d00d938:	1080ffbd 	beqz	a0,9d00d830 <d_unqualified_name+0x68>
9d00d93c:	00008821 	move	s1,zero
9d00d940:	8e110010 	lw	s1,16(s0)
9d00d944:	00032080 	sll	a0,v1,0x2
9d00d948:	00032900 	sll	a1,v1,0x4
9d00d94c:	00a42023 	subu	a0,a1,a0
9d00d950:	24630001 	addiu	v1,v1,1
9d00d954:	02248821 	addu	s1,s1,a0
9d00d958:	1220ffb5 	beqz	s1,9d00d830 <d_unqualified_name+0x68>
9d00d95c:	ae030014 	sw	v1,20(s0)
9d00d960:	1040ffe7 	beqz	v0,9d00d900 <d_unqualified_name+0x138>
9d00d964:	24030008 	li	v1,8
9d00d968:	ae230000 	sw	v1,0(s1)
9d00d96c:	ae260004 	sw	a2,4(s1)
9d00d970:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00d974:	ae220008 	sw	v0,8(s1)
9d00d978:	8c430008 	lw	v1,8(v0)
9d00d97c:	00831821 	addu	v1,a0,v1
9d00d980:	ae030030 	sw	v1,48(s0)
9d00d984:	0b40363b 	j	9d00d8ec <d_unqualified_name+0x124>
9d00d988:	80a30000 	lb	v1,0(a1)
9d00d98c:	80a20001 	lb	v0,1(a1)
9d00d990:	2403006c 	li	v1,108
9d00d994:	1043004c 	beq	v0,v1,9d00dac8 <d_unqualified_name+0x300>
9d00d998:	24a60001 	addiu	a2,a1,1
9d00d99c:	24030074 	li	v1,116
9d00d9a0:	1443ffa4 	bne	v0,v1,9d00d834 <d_unqualified_name+0x6c>
9d00d9a4:	8fbf001c 	lw	ra,28(sp)
9d00d9a8:	ac86000c 	sw	a2,12(a0)
9d00d9ac:	80a30001 	lb	v1,1(a1)
9d00d9b0:	1462ffa0 	bne	v1,v0,9d00d834 <d_unqualified_name+0x6c>
9d00d9b4:	8fbf001c 	lw	ra,28(sp)
9d00d9b8:	24a50002 	addiu	a1,a1,2
9d00d9bc:	0f4031fa 	jal	9d00c7e8 <d_compact_number>
9d00d9c0:	ac85000c 	sw	a1,12(a0)
9d00d9c4:	0440ff9b 	bltz	v0,9d00d834 <d_unqualified_name+0x6c>
9d00d9c8:	8fbf001c 	lw	ra,28(sp)
9d00d9cc:	8e030014 	lw	v1,20(s0)
9d00d9d0:	8e040018 	lw	a0,24(s0)
9d00d9d4:	0064202a 	slt	a0,v1,a0
9d00d9d8:	5080ff97 	beqzl	a0,9d00d838 <d_unqualified_name+0x70>
9d00d9dc:	02201021 	move	v0,s1
9d00d9e0:	2411000c 	li	s1,12
9d00d9e4:	70713002 	mul	a2,v1,s1
9d00d9e8:	8e050010 	lw	a1,16(s0)
9d00d9ec:	24640001 	addiu	a0,v1,1
9d00d9f0:	00c58821 	addu	s1,a2,a1
9d00d9f4:	1220ff8e 	beqz	s1,9d00d830 <d_unqualified_name+0x68>
9d00d9f8:	ae040014 	sw	a0,20(s0)
9d00d9fc:	8e030020 	lw	v1,32(s0)
9d00da00:	8e040024 	lw	a0,36(s0)
9d00da04:	24050040 	li	a1,64
9d00da08:	ae250000 	sw	a1,0(s1)
9d00da0c:	0064202a 	slt	a0,v1,a0
9d00da10:	1080ffbb 	beqz	a0,9d00d900 <d_unqualified_name+0x138>
9d00da14:	ae220004 	sw	v0,4(s1)
9d00da18:	8e04001c 	lw	a0,28(s0)
9d00da1c:	00031080 	sll	v0,v1,0x2
9d00da20:	24630001 	addiu	v1,v1,1
9d00da24:	00821021 	addu	v0,a0,v0
9d00da28:	ac510000 	sw	s1,0(v0)
9d00da2c:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00da30:	ae030020 	sw	v1,32(s0)
9d00da34:	80a30001 	lb	v1,1(a1)
9d00da38:	24040032 	li	a0,50
9d00da3c:	10640020 	beq	v1,a0,9d00dac0 <d_unqualified_name+0x2f8>
9d00da40:	24040033 	li	a0,51
9d00da44:	1064001c 	beq	v1,a0,9d00dab8 <d_unqualified_name+0x2f0>
9d00da48:	24040031 	li	a0,49
9d00da4c:	1464ffac 	bne	v1,a0,9d00d900 <d_unqualified_name+0x138>
9d00da50:	24060001 	li	a2,1
9d00da54:	8e030014 	lw	v1,20(s0)
9d00da58:	8e040018 	lw	a0,24(s0)
9d00da5c:	24a50002 	addiu	a1,a1,2
9d00da60:	ae05000c 	sw	a1,12(s0)
9d00da64:	0064202a 	slt	a0,v1,a0
9d00da68:	1080ff71 	beqz	a0,9d00d830 <d_unqualified_name+0x68>
9d00da6c:	00008821 	move	s1,zero
9d00da70:	8e110010 	lw	s1,16(s0)
9d00da74:	00032080 	sll	a0,v1,0x2
9d00da78:	00032900 	sll	a1,v1,0x4
9d00da7c:	00a42023 	subu	a0,a1,a0
9d00da80:	24630001 	addiu	v1,v1,1
9d00da84:	02248821 	addu	s1,s1,a0
9d00da88:	1220ff69 	beqz	s1,9d00d830 <d_unqualified_name+0x68>
9d00da8c:	ae030014 	sw	v1,20(s0)
9d00da90:	1040ff9b 	beqz	v0,9d00d900 <d_unqualified_name+0x138>
9d00da94:	24030007 	li	v1,7
9d00da98:	ae230000 	sw	v1,0(s1)
9d00da9c:	ae260004 	sw	a2,4(s1)
9d00daa0:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00daa4:	ae220008 	sw	v0,8(s1)
9d00daa8:	0b403649 	j	9d00d924 <d_unqualified_name+0x15c>
9d00daac:	24060003 	li	a2,3
9d00dab0:	0b403649 	j	9d00d924 <d_unqualified_name+0x15c>
9d00dab4:	24060002 	li	a2,2
9d00dab8:	0b403695 	j	9d00da54 <d_unqualified_name+0x28c>
9d00dabc:	24060003 	li	a2,3
9d00dac0:	0b403695 	j	9d00da54 <d_unqualified_name+0x28c>
9d00dac4:	24060002 	li	a2,2
9d00dac8:	ac86000c 	sw	a2,12(a0)
9d00dacc:	80a30001 	lb	v1,1(a1)
9d00dad0:	1462ff58 	bne	v1,v0,9d00d834 <d_unqualified_name+0x6c>
9d00dad4:	8fbf001c 	lw	ra,28(sp)
9d00dad8:	24a50002 	addiu	a1,a1,2
9d00dadc:	0f40351e 	jal	9d00d478 <d_parmlist>
9d00dae0:	ac85000c 	sw	a1,12(a0)
9d00dae4:	1040ff52 	beqz	v0,9d00d830 <d_unqualified_name+0x68>
9d00dae8:	00409021 	move	s2,v0
9d00daec:	8e02000c 	lw	v0,12(s0)
9d00daf0:	24030045 	li	v1,69
9d00daf4:	80440000 	lb	a0,0(v0)
9d00daf8:	1483ff4e 	bne	a0,v1,9d00d834 <d_unqualified_name+0x6c>
9d00dafc:	8fbf001c 	lw	ra,28(sp)
9d00db00:	24420001 	addiu	v0,v0,1
9d00db04:	ae02000c 	sw	v0,12(s0)
9d00db08:	0f4031fa 	jal	9d00c7e8 <d_compact_number>
9d00db0c:	02002021 	move	a0,s0
9d00db10:	0440ff48 	bltz	v0,9d00d834 <d_unqualified_name+0x6c>
9d00db14:	8fbf001c 	lw	ra,28(sp)
9d00db18:	8e030014 	lw	v1,20(s0)
9d00db1c:	8e040018 	lw	a0,24(s0)
9d00db20:	0064202a 	slt	a0,v1,a0
9d00db24:	1080ff43 	beqz	a0,9d00d834 <d_unqualified_name+0x6c>
9d00db28:	00008821 	move	s1,zero
9d00db2c:	2411000c 	li	s1,12
9d00db30:	70713002 	mul	a2,v1,s1
9d00db34:	8e050010 	lw	a1,16(s0)
9d00db38:	24640001 	addiu	a0,v1,1
9d00db3c:	00c58821 	addu	s1,a2,a1
9d00db40:	1220ff3b 	beqz	s1,9d00d830 <d_unqualified_name+0x68>
9d00db44:	ae040014 	sw	a0,20(s0)
9d00db48:	8e030020 	lw	v1,32(s0)
9d00db4c:	8e040024 	lw	a0,36(s0)
9d00db50:	2405003e 	li	a1,62
9d00db54:	ae250000 	sw	a1,0(s1)
9d00db58:	0064202a 	slt	a0,v1,a0
9d00db5c:	ae320004 	sw	s2,4(s1)
9d00db60:	1480ffad 	bnez	a0,9d00da18 <d_unqualified_name+0x250>
9d00db64:	ae220008 	sw	v0,8(s1)
9d00db68:	0b40360c 	j	9d00d830 <d_unqualified_name+0x68>
9d00db6c:	00008821 	move	s1,zero

9d00db70 <d_template_args>:
9d00db70:	8c86000c 	lw	a2,12(a0)
9d00db74:	27bdffc8 	addiu	sp,sp,-56
9d00db78:	afb60030 	sw	s6,48(sp)
9d00db7c:	afb40028 	sw	s4,40(sp)
9d00db80:	afbf0034 	sw	ra,52(sp)
9d00db84:	afb5002c 	sw	s5,44(sp)
9d00db88:	afb30024 	sw	s3,36(sp)
9d00db8c:	afb20020 	sw	s2,32(sp)
9d00db90:	afb1001c 	sw	s1,28(sp)
9d00db94:	afb00018 	sw	s0,24(sp)
9d00db98:	80c50000 	lb	a1,0(a2)
9d00db9c:	24030049 	li	v1,73
9d00dba0:	0080b021 	move	s6,a0
9d00dba4:	8c94002c 	lw	s4,44(a0)
9d00dba8:	10a3000b 	beq	a1,v1,9d00dbd8 <d_template_args+0x68>
9d00dbac:	00001021 	move	v0,zero
9d00dbb0:	8fbf0034 	lw	ra,52(sp)
9d00dbb4:	8fb60030 	lw	s6,48(sp)
9d00dbb8:	8fb5002c 	lw	s5,44(sp)
9d00dbbc:	8fb40028 	lw	s4,40(sp)
9d00dbc0:	8fb30024 	lw	s3,36(sp)
9d00dbc4:	8fb20020 	lw	s2,32(sp)
9d00dbc8:	8fb1001c 	lw	s1,28(sp)
9d00dbcc:	8fb00018 	lw	s0,24(sp)
9d00dbd0:	03e00008 	jr	ra
9d00dbd4:	27bd0038 	addiu	sp,sp,56
9d00dbd8:	24c50001 	addiu	a1,a2,1
9d00dbdc:	ac85000c 	sw	a1,12(a0)
9d00dbe0:	80c30001 	lb	v1,1(a2)
9d00dbe4:	24020045 	li	v0,69
9d00dbe8:	1462000f 	bne	v1,v0,9d00dc28 <d_template_args+0xb8>
9d00dbec:	24c60002 	addiu	a2,a2,2
9d00dbf0:	ac86000c 	sw	a2,12(a0)
9d00dbf4:	8fbf0034 	lw	ra,52(sp)
9d00dbf8:	8fb60030 	lw	s6,48(sp)
9d00dbfc:	8fb5002c 	lw	s5,44(sp)
9d00dc00:	8fb40028 	lw	s4,40(sp)
9d00dc04:	8fb30024 	lw	s3,36(sp)
9d00dc08:	8fb20020 	lw	s2,32(sp)
9d00dc0c:	8fb1001c 	lw	s1,28(sp)
9d00dc10:	8fb00018 	lw	s0,24(sp)
9d00dc14:	2405002b 	li	a1,43
9d00dc18:	00003021 	move	a2,zero
9d00dc1c:	00003821 	move	a3,zero
9d00dc20:	0b402ff0 	j	9d00bfc0 <d_make_comp>
9d00dc24:	27bd0038 	addiu	sp,sp,56
9d00dc28:	2412004c 	li	s2,76
9d00dc2c:	afa00010 	sw	zero,16(sp)
9d00dc30:	27b00010 	addiu	s0,sp,16
9d00dc34:	24130058 	li	s3,88
9d00dc38:	24110045 	li	s1,69
9d00dc3c:	10720015 	beq	v1,s2,9d00dc94 <d_template_args+0x124>
9d00dc40:	24150049 	li	s5,73
9d00dc44:	1073001b 	beq	v1,s3,9d00dcb4 <d_template_args+0x144>
9d00dc48:	24a50001 	addiu	a1,a1,1
9d00dc4c:	10750015 	beq	v1,s5,9d00dca4 <d_template_args+0x134>
9d00dc50:	00000000 	nop
9d00dc54:	0f40329e 	jal	9d00ca78 <d_type>
9d00dc58:	02c02021 	move	a0,s6
9d00dc5c:	1040001c 	beqz	v0,9d00dcd0 <d_template_args+0x160>
9d00dc60:	02c02021 	move	a0,s6
9d00dc64:	2405002b 	li	a1,43
9d00dc68:	00403021 	move	a2,v0
9d00dc6c:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00dc70:	00003821 	move	a3,zero
9d00dc74:	10400016 	beqz	v0,9d00dcd0 <d_template_args+0x160>
9d00dc78:	ae020000 	sw	v0,0(s0)
9d00dc7c:	8ec5000c 	lw	a1,12(s6)
9d00dc80:	80a30000 	lb	v1,0(a1)
9d00dc84:	1071001f 	beq	v1,s1,9d00dd04 <d_template_args+0x194>
9d00dc88:	8fbf0034 	lw	ra,52(sp)
9d00dc8c:	1472ffed 	bne	v1,s2,9d00dc44 <d_template_args+0xd4>
9d00dc90:	24500008 	addiu	s0,v0,8
9d00dc94:	0f403a54 	jal	9d00e950 <d_expr_primary>
9d00dc98:	02c02021 	move	a0,s6
9d00dc9c:	0b403717 	j	9d00dc5c <d_template_args+0xec>
9d00dca0:	00000000 	nop
9d00dca4:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00dca8:	02c02021 	move	a0,s6
9d00dcac:	0b403717 	j	9d00dc5c <d_template_args+0xec>
9d00dcb0:	00000000 	nop
9d00dcb4:	02c02021 	move	a0,s6
9d00dcb8:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00dcbc:	aec5000c 	sw	a1,12(s6)
9d00dcc0:	8ec3000c 	lw	v1,12(s6)
9d00dcc4:	80640000 	lb	a0,0(v1)
9d00dcc8:	5091000c 	beql	a0,s1,9d00dcfc <d_template_args+0x18c>
9d00dccc:	24630001 	addiu	v1,v1,1
9d00dcd0:	8fbf0034 	lw	ra,52(sp)
9d00dcd4:	00001021 	move	v0,zero
9d00dcd8:	8fb60030 	lw	s6,48(sp)
9d00dcdc:	8fb5002c 	lw	s5,44(sp)
9d00dce0:	8fb40028 	lw	s4,40(sp)
9d00dce4:	8fb30024 	lw	s3,36(sp)
9d00dce8:	8fb20020 	lw	s2,32(sp)
9d00dcec:	8fb1001c 	lw	s1,28(sp)
9d00dcf0:	8fb00018 	lw	s0,24(sp)
9d00dcf4:	03e00008 	jr	ra
9d00dcf8:	27bd0038 	addiu	sp,sp,56
9d00dcfc:	0b403717 	j	9d00dc5c <d_template_args+0xec>
9d00dd00:	aec3000c 	sw	v1,12(s6)
9d00dd04:	24a50001 	addiu	a1,a1,1
9d00dd08:	aed4002c 	sw	s4,44(s6)
9d00dd0c:	8fa20010 	lw	v0,16(sp)
9d00dd10:	aec5000c 	sw	a1,12(s6)
9d00dd14:	8fb5002c 	lw	s5,44(sp)
9d00dd18:	8fb60030 	lw	s6,48(sp)
9d00dd1c:	8fb40028 	lw	s4,40(sp)
9d00dd20:	8fb30024 	lw	s3,36(sp)
9d00dd24:	8fb20020 	lw	s2,32(sp)
9d00dd28:	8fb1001c 	lw	s1,28(sp)
9d00dd2c:	8fb00018 	lw	s0,24(sp)
9d00dd30:	03e00008 	jr	ra
9d00dd34:	27bd0038 	addiu	sp,sp,56

9d00dd38 <d_name>:
9d00dd38:	8c82000c 	lw	v0,12(a0)
9d00dd3c:	27bdffb8 	addiu	sp,sp,-72
9d00dd40:	afb60038 	sw	s6,56(sp)
9d00dd44:	afbf0044 	sw	ra,68(sp)
9d00dd48:	afbe0040 	sw	s8,64(sp)
9d00dd4c:	afb7003c 	sw	s7,60(sp)
9d00dd50:	afb50034 	sw	s5,52(sp)
9d00dd54:	afb40030 	sw	s4,48(sp)
9d00dd58:	afb3002c 	sw	s3,44(sp)
9d00dd5c:	afb20028 	sw	s2,40(sp)
9d00dd60:	afb10024 	sw	s1,36(sp)
9d00dd64:	afb00020 	sw	s0,32(sp)
9d00dd68:	90430000 	lbu	v1,0(v0)
9d00dd6c:	0080b021 	move	s6,a0
9d00dd70:	2463ffb4 	addiu	v1,v1,-76
9d00dd74:	306300ff 	andi	v1,v1,0xff
9d00dd78:	2c64000f 	sltiu	a0,v1,15
9d00dd7c:	14800016 	bnez	a0,9d00ddd8 <d_name+0xa0>
9d00dd80:	3c049d01 	lui	a0,0x9d01
9d00dd84:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00dd88:	02c02021 	move	a0,s6
9d00dd8c:	00403021 	move	a2,v0
9d00dd90:	8ec2000c 	lw	v0,12(s6)
9d00dd94:	80430000 	lb	v1,0(v0)
9d00dd98:	24020049 	li	v0,73
9d00dd9c:	106200e0 	beq	v1,v0,9d00e120 <d_name+0x3e8>
9d00dda0:	00000000 	nop
9d00dda4:	8fbf0044 	lw	ra,68(sp)
9d00dda8:	00c01021 	move	v0,a2
9d00ddac:	8fbe0040 	lw	s8,64(sp)
9d00ddb0:	8fb7003c 	lw	s7,60(sp)
9d00ddb4:	8fb60038 	lw	s6,56(sp)
9d00ddb8:	8fb50034 	lw	s5,52(sp)
9d00ddbc:	8fb40030 	lw	s4,48(sp)
9d00ddc0:	8fb3002c 	lw	s3,44(sp)
9d00ddc4:	8fb20028 	lw	s2,40(sp)
9d00ddc8:	8fb10024 	lw	s1,36(sp)
9d00ddcc:	8fb00020 	lw	s0,32(sp)
9d00ddd0:	03e00008 	jr	ra
9d00ddd4:	27bd0048 	addiu	sp,sp,72
9d00ddd8:	00031880 	sll	v1,v1,0x2
9d00dddc:	24847328 	addiu	a0,a0,29480
9d00dde0:	00831821 	addu	v1,a0,v1
9d00dde4:	8c630000 	lw	v1,0(v1)
9d00dde8:	00600008 	jr	v1
9d00ddec:	00000000 	nop
9d00ddf0:	80440001 	lb	a0,1(v0)
9d00ddf4:	24030074 	li	v1,116
9d00ddf8:	108300a4 	beq	a0,v1,9d00e08c <d_name+0x354>
9d00ddfc:	24420002 	addiu	v0,v0,2
9d00de00:	02c02021 	move	a0,s6
9d00de04:	0f40307e 	jal	9d00c1f8 <d_substitution>
9d00de08:	00002821 	move	a1,zero
9d00de0c:	00403021 	move	a2,v0
9d00de10:	24040001 	li	a0,1
9d00de14:	8ec2000c 	lw	v0,12(s6)
9d00de18:	80430000 	lb	v1,0(v0)
9d00de1c:	24020049 	li	v0,73
9d00de20:	1462ffe1 	bne	v1,v0,9d00dda8 <d_name+0x70>
9d00de24:	8fbf0044 	lw	ra,68(sp)
9d00de28:	108000af 	beqz	a0,9d00e0e8 <d_name+0x3b0>
9d00de2c:	00000000 	nop
9d00de30:	02c02021 	move	a0,s6
9d00de34:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00de38:	afa60018 	sw	a2,24(sp)
9d00de3c:	8fa60018 	lw	a2,24(sp)
9d00de40:	02c02021 	move	a0,s6
9d00de44:	24050004 	li	a1,4
9d00de48:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00de4c:	00403821 	move	a3,v0
9d00de50:	0b403769 	j	9d00dda4 <d_name+0x6c>
9d00de54:	00403021 	move	a2,v0
9d00de58:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00de5c:	02c02021 	move	a0,s6
9d00de60:	8fbf0044 	lw	ra,68(sp)
9d00de64:	00403021 	move	a2,v0
9d00de68:	00c01021 	move	v0,a2
9d00de6c:	8fbe0040 	lw	s8,64(sp)
9d00de70:	8fb7003c 	lw	s7,60(sp)
9d00de74:	8fb60038 	lw	s6,56(sp)
9d00de78:	8fb50034 	lw	s5,52(sp)
9d00de7c:	8fb40030 	lw	s4,48(sp)
9d00de80:	8fb3002c 	lw	s3,44(sp)
9d00de84:	8fb20028 	lw	s2,40(sp)
9d00de88:	8fb10024 	lw	s1,36(sp)
9d00de8c:	8fb00020 	lw	s0,32(sp)
9d00de90:	03e00008 	jr	ra
9d00de94:	27bd0048 	addiu	sp,sp,72
9d00de98:	24420001 	addiu	v0,v0,1
9d00de9c:	02c02021 	move	a0,s6
9d00dea0:	aec2000c 	sw	v0,12(s6)
9d00dea4:	0f4038af 	jal	9d00e2bc <d_encoding>
9d00dea8:	00002821 	move	a1,zero
9d00deac:	00408021 	move	s0,v0
9d00deb0:	8ec2000c 	lw	v0,12(s6)
9d00deb4:	24030045 	li	v1,69
9d00deb8:	80440000 	lb	a0,0(v0)
9d00debc:	1483ffb9 	bne	a0,v1,9d00dda4 <d_name+0x6c>
9d00dec0:	00003021 	move	a2,zero
9d00dec4:	24430001 	addiu	v1,v0,1
9d00dec8:	aec3000c 	sw	v1,12(s6)
9d00decc:	80440001 	lb	a0,1(v0)
9d00ded0:	24030073 	li	v1,115
9d00ded4:	108300e6 	beq	a0,v1,9d00e270 <d_name+0x538>
9d00ded8:	24030064 	li	v1,100
9d00dedc:	108300da 	beq	a0,v1,9d00e248 <d_name+0x510>
9d00dee0:	2412ffff 	li	s2,-1
9d00dee4:	0f40374e 	jal	9d00dd38 <d_name>
9d00dee8:	02c02021 	move	a0,s6
9d00deec:	1040000b 	beqz	v0,9d00df1c <d_name+0x1e4>
9d00def0:	00408821 	move	s1,v0
9d00def4:	8c420000 	lw	v0,0(v0)
9d00def8:	2403003e 	li	v1,62
9d00defc:	10430007 	beq	v0,v1,9d00df1c <d_name+0x1e4>
9d00df00:	24030040 	li	v1,64
9d00df04:	10430006 	beq	v0,v1,9d00df20 <d_name+0x1e8>
9d00df08:	2402ffff 	li	v0,-1
9d00df0c:	0f403244 	jal	9d00c910 <d_discriminator>
9d00df10:	02c02021 	move	a0,s6
9d00df14:	1040ffa3 	beqz	v0,9d00dda4 <d_name+0x6c>
9d00df18:	00003021 	move	a2,zero
9d00df1c:	2402ffff 	li	v0,-1
9d00df20:	12420012 	beq	s2,v0,9d00df6c <d_name+0x234>
9d00df24:	02203821 	move	a3,s1
9d00df28:	8ec20014 	lw	v0,20(s6)
9d00df2c:	8ec30018 	lw	v1,24(s6)
9d00df30:	0043182a 	slt	v1,v0,v1
9d00df34:	1060000d 	beqz	v1,9d00df6c <d_name+0x234>
9d00df38:	00003821 	move	a3,zero
9d00df3c:	8ec70010 	lw	a3,16(s6)
9d00df40:	00021880 	sll	v1,v0,0x2
9d00df44:	00022100 	sll	a0,v0,0x4
9d00df48:	00831823 	subu	v1,a0,v1
9d00df4c:	24420001 	addiu	v0,v0,1
9d00df50:	00e33821 	addu	a3,a3,v1
9d00df54:	10e00005 	beqz	a3,9d00df6c <d_name+0x234>
9d00df58:	aec20014 	sw	v0,20(s6)
9d00df5c:	2402003f 	li	v0,63
9d00df60:	ace20000 	sw	v0,0(a3)
9d00df64:	acf20008 	sw	s2,8(a3)
9d00df68:	acf10004 	sw	s1,4(a3)
9d00df6c:	02003021 	move	a2,s0
9d00df70:	02c02021 	move	a0,s6
9d00df74:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00df78:	24050002 	li	a1,2
9d00df7c:	0b403769 	j	9d00dda4 <d_name+0x6c>
9d00df80:	00403021 	move	a2,v0
9d00df84:	24420001 	addiu	v0,v0,1
9d00df88:	24060001 	li	a2,1
9d00df8c:	aec2000c 	sw	v0,12(s6)
9d00df90:	02c02021 	move	a0,s6
9d00df94:	0f403038 	jal	9d00c0e0 <d_cv_qualifiers>
9d00df98:	27a50010 	addiu	a1,sp,16
9d00df9c:	00408821 	move	s1,v0
9d00dfa0:	1040ff80 	beqz	v0,9d00dda4 <d_name+0x6c>
9d00dfa4:	00003021 	move	a2,zero
9d00dfa8:	8ec3000c 	lw	v1,12(s6)
9d00dfac:	0000f021 	move	s8,zero
9d00dfb0:	24120043 	li	s2,67
9d00dfb4:	80770000 	lb	s7,0(v1)
9d00dfb8:	24130044 	li	s3,68
9d00dfbc:	24140055 	li	s4,85
9d00dfc0:	2415004c 	li	s5,76
9d00dfc4:	24100053 	li	s0,83
9d00dfc8:	12e00022 	beqz	s7,9d00e054 <d_name+0x31c>
9d00dfcc:	8fbf0044 	lw	ra,68(sp)
9d00dfd0:	32e200ff 	andi	v0,s7,0xff
9d00dfd4:	2444ffd0 	addiu	a0,v0,-48
9d00dfd8:	308400ff 	andi	a0,a0,0xff
9d00dfdc:	2c84000a 	sltiu	a0,a0,10
9d00dfe0:	1480005e 	bnez	a0,9d00e15c <d_name+0x424>
9d00dfe4:	2442ff9f 	addiu	v0,v0,-97
9d00dfe8:	304200ff 	andi	v0,v0,0xff
9d00dfec:	2c42001a 	sltiu	v0,v0,26
9d00dff0:	1440005a 	bnez	v0,9d00e15c <d_name+0x424>
9d00dff4:	00000000 	nop
9d00dff8:	12f20058 	beq	s7,s2,9d00e15c <d_name+0x424>
9d00dffc:	00000000 	nop
9d00e000:	12f30056 	beq	s7,s3,9d00e15c <d_name+0x424>
9d00e004:	00000000 	nop
9d00e008:	12f40054 	beq	s7,s4,9d00e15c <d_name+0x424>
9d00e00c:	00000000 	nop
9d00e010:	12f50052 	beq	s7,s5,9d00e15c <d_name+0x424>
9d00e014:	00000000 	nop
9d00e018:	52f00073 	beql	s7,s0,9d00e1e8 <d_name+0x4b0>
9d00e01c:	02c02021 	move	a0,s6
9d00e020:	24020049 	li	v0,73
9d00e024:	12e20078 	beq	s7,v0,9d00e208 <d_name+0x4d0>
9d00e028:	24020054 	li	v0,84
9d00e02c:	12e20072 	beq	s7,v0,9d00e1f8 <d_name+0x4c0>
9d00e030:	00000000 	nop
9d00e034:	24020045 	li	v0,69
9d00e038:	12e20079 	beq	s7,v0,9d00e220 <d_name+0x4e8>
9d00e03c:	2402004d 	li	v0,77
9d00e040:	16e20004 	bne	s7,v0,9d00e054 <d_name+0x31c>
9d00e044:	8fbf0044 	lw	ra,68(sp)
9d00e048:	57c00024 	bnezl	s8,9d00e0dc <d_name+0x3a4>
9d00e04c:	24630001 	addiu	v1,v1,1
9d00e050:	8fbf0044 	lw	ra,68(sp)
9d00e054:	00003021 	move	a2,zero
9d00e058:	ae200000 	sw	zero,0(s1)
9d00e05c:	00c01021 	move	v0,a2
9d00e060:	8fbe0040 	lw	s8,64(sp)
9d00e064:	8fb7003c 	lw	s7,60(sp)
9d00e068:	8fb60038 	lw	s6,56(sp)
9d00e06c:	8fb50034 	lw	s5,52(sp)
9d00e070:	8fb40030 	lw	s4,48(sp)
9d00e074:	8fb3002c 	lw	s3,44(sp)
9d00e078:	8fb20028 	lw	s2,40(sp)
9d00e07c:	8fb10024 	lw	s1,36(sp)
9d00e080:	8fb00020 	lw	s0,32(sp)
9d00e084:	03e00008 	jr	ra
9d00e088:	27bd0048 	addiu	sp,sp,72
9d00e08c:	3c059d01 	lui	a1,0x9d01
9d00e090:	24a56a8c 	addiu	a1,a1,27276
9d00e094:	24060003 	li	a2,3
9d00e098:	02c02021 	move	a0,s6
9d00e09c:	0f40301f 	jal	9d00c07c <d_make_name>
9d00e0a0:	aec2000c 	sw	v0,12(s6)
9d00e0a4:	02c02021 	move	a0,s6
9d00e0a8:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00e0ac:	afa20018 	sw	v0,24(sp)
9d00e0b0:	8fa60018 	lw	a2,24(sp)
9d00e0b4:	02c02021 	move	a0,s6
9d00e0b8:	24050001 	li	a1,1
9d00e0bc:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00e0c0:	00403821 	move	a3,v0
9d00e0c4:	00403021 	move	a2,v0
9d00e0c8:	8ec20030 	lw	v0,48(s6)
9d00e0cc:	00002021 	move	a0,zero
9d00e0d0:	24420003 	addiu	v0,v0,3
9d00e0d4:	0b403785 	j	9d00de14 <d_name+0xdc>
9d00e0d8:	aec20030 	sw	v0,48(s6)
9d00e0dc:	aec3000c 	sw	v1,12(s6)
9d00e0e0:	0b4037f2 	j	9d00dfc8 <d_name+0x290>
9d00e0e4:	80770000 	lb	s7,0(v1)
9d00e0e8:	10c0ff2f 	beqz	a2,9d00dda8 <d_name+0x70>
9d00e0ec:	8fbf0044 	lw	ra,68(sp)
9d00e0f0:	8ec20020 	lw	v0,32(s6)
9d00e0f4:	8ec30024 	lw	v1,36(s6)
9d00e0f8:	0043182a 	slt	v1,v0,v1
9d00e0fc:	5060ff2a 	beqzl	v1,9d00dda8 <d_name+0x70>
9d00e100:	00003021 	move	a2,zero
9d00e104:	8ec4001c 	lw	a0,28(s6)
9d00e108:	00021880 	sll	v1,v0,0x2
9d00e10c:	24420001 	addiu	v0,v0,1
9d00e110:	00831821 	addu	v1,a0,v1
9d00e114:	ac660000 	sw	a2,0(v1)
9d00e118:	0b40378c 	j	9d00de30 <d_name+0xf8>
9d00e11c:	aec20020 	sw	v0,32(s6)
9d00e120:	10c0ff21 	beqz	a2,9d00dda8 <d_name+0x70>
9d00e124:	8fbf0044 	lw	ra,68(sp)
9d00e128:	8ec20020 	lw	v0,32(s6)
9d00e12c:	8ec30024 	lw	v1,36(s6)
9d00e130:	0043182a 	slt	v1,v0,v1
9d00e134:	5060ff1c 	beqzl	v1,9d00dda8 <d_name+0x70>
9d00e138:	00003021 	move	a2,zero
9d00e13c:	8ec4001c 	lw	a0,28(s6)
9d00e140:	00021880 	sll	v1,v0,0x2
9d00e144:	24420001 	addiu	v0,v0,1
9d00e148:	00831821 	addu	v1,a0,v1
9d00e14c:	ac660000 	sw	a2,0(v1)
9d00e150:	02c02021 	move	a0,s6
9d00e154:	0b40378d 	j	9d00de34 <d_name+0xfc>
9d00e158:	aec20020 	sw	v0,32(s6)
9d00e15c:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00e160:	02c02021 	move	a0,s6
9d00e164:	13c0001b 	beqz	s8,9d00e1d4 <d_name+0x49c>
9d00e168:	24050001 	li	a1,1
9d00e16c:	03c03021 	move	a2,s8
9d00e170:	02c02021 	move	a0,s6
9d00e174:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00e178:	00403821 	move	a3,v0
9d00e17c:	0040f021 	move	s8,v0
9d00e180:	12f00016 	beq	s7,s0,9d00e1dc <d_name+0x4a4>
9d00e184:	24020045 	li	v0,69
9d00e188:	8ec3000c 	lw	v1,12(s6)
9d00e18c:	80640000 	lb	a0,0(v1)
9d00e190:	5082ff8f 	beql	a0,v0,9d00dfd0 <d_name+0x298>
9d00e194:	24170045 	li	s7,69
9d00e198:	13c0ffae 	beqz	s8,9d00e054 <d_name+0x31c>
9d00e19c:	8fbf0044 	lw	ra,68(sp)
9d00e1a0:	8ec20020 	lw	v0,32(s6)
9d00e1a4:	8ec40024 	lw	a0,36(s6)
9d00e1a8:	0044202a 	slt	a0,v0,a0
9d00e1ac:	5080ffaa 	beqzl	a0,9d00e058 <d_name+0x320>
9d00e1b0:	00003021 	move	a2,zero
9d00e1b4:	8ec5001c 	lw	a1,28(s6)
9d00e1b8:	00022080 	sll	a0,v0,0x2
9d00e1bc:	24420001 	addiu	v0,v0,1
9d00e1c0:	00a42021 	addu	a0,a1,a0
9d00e1c4:	ac9e0000 	sw	s8,0(a0)
9d00e1c8:	aec20020 	sw	v0,32(s6)
9d00e1cc:	0b4037f2 	j	9d00dfc8 <d_name+0x290>
9d00e1d0:	80770000 	lb	s7,0(v1)
9d00e1d4:	0b403860 	j	9d00e180 <d_name+0x448>
9d00e1d8:	0040f021 	move	s8,v0
9d00e1dc:	8ec3000c 	lw	v1,12(s6)
9d00e1e0:	0b4037f2 	j	9d00dfc8 <d_name+0x290>
9d00e1e4:	80770000 	lb	s7,0(v1)
9d00e1e8:	0f40307e 	jal	9d00c1f8 <d_substitution>
9d00e1ec:	24050001 	li	a1,1
9d00e1f0:	0b403859 	j	9d00e164 <d_name+0x42c>
9d00e1f4:	00000000 	nop
9d00e1f8:	0f40321c 	jal	9d00c870 <d_template_param>
9d00e1fc:	02c02021 	move	a0,s6
9d00e200:	0b403859 	j	9d00e164 <d_name+0x42c>
9d00e204:	00000000 	nop
9d00e208:	13c0ff92 	beqz	s8,9d00e054 <d_name+0x31c>
9d00e20c:	8fbf0044 	lw	ra,68(sp)
9d00e210:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00e214:	02c02021 	move	a0,s6
9d00e218:	0b40385b 	j	9d00e16c <d_name+0x434>
9d00e21c:	24050004 	li	a1,4
9d00e220:	ae3e0000 	sw	s8,0(s1)
9d00e224:	13c0fedf 	beqz	s8,9d00dda4 <d_name+0x6c>
9d00e228:	00003021 	move	a2,zero
9d00e22c:	80620000 	lb	v0,0(v1)
9d00e230:	1457fedd 	bne	v0,s7,9d00dda8 <d_name+0x70>
9d00e234:	8fbf0044 	lw	ra,68(sp)
9d00e238:	24630001 	addiu	v1,v1,1
9d00e23c:	aec3000c 	sw	v1,12(s6)
9d00e240:	0b403769 	j	9d00dda4 <d_name+0x6c>
9d00e244:	8fa60010 	lw	a2,16(sp)
9d00e248:	24420002 	addiu	v0,v0,2
9d00e24c:	aec2000c 	sw	v0,12(s6)
9d00e250:	02c02021 	move	a0,s6
9d00e254:	0f4031fa 	jal	9d00c7e8 <d_compact_number>
9d00e258:	afa60018 	sw	a2,24(sp)
9d00e25c:	00409021 	move	s2,v0
9d00e260:	0441ff20 	bgez	v0,9d00dee4 <d_name+0x1ac>
9d00e264:	8fa60018 	lw	a2,24(sp)
9d00e268:	0b40376a 	j	9d00dda8 <d_name+0x70>
9d00e26c:	8fbf0044 	lw	ra,68(sp)
9d00e270:	24420002 	addiu	v0,v0,2
9d00e274:	aec2000c 	sw	v0,12(s6)
9d00e278:	02c02021 	move	a0,s6
9d00e27c:	0f403244 	jal	9d00c910 <d_discriminator>
9d00e280:	afa60018 	sw	a2,24(sp)
9d00e284:	1040fec7 	beqz	v0,9d00dda4 <d_name+0x6c>
9d00e288:	8fa60018 	lw	a2,24(sp)
9d00e28c:	3c059d01 	lui	a1,0x9d01
9d00e290:	24a56a7c 	addiu	a1,a1,27260
9d00e294:	2406000e 	li	a2,14
9d00e298:	0f40301f 	jal	9d00c07c <d_make_name>
9d00e29c:	02c02021 	move	a0,s6
9d00e2a0:	00403821 	move	a3,v0
9d00e2a4:	02003021 	move	a2,s0
9d00e2a8:	02c02021 	move	a0,s6
9d00e2ac:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00e2b0:	24050002 	li	a1,2
9d00e2b4:	0b403769 	j	9d00dda4 <d_name+0x6c>
9d00e2b8:	00403021 	move	a2,v0

9d00e2bc <d_encoding>:
9d00e2bc:	8c82000c 	lw	v0,12(a0)
9d00e2c0:	27bdffc0 	addiu	sp,sp,-64
9d00e2c4:	afb40028 	sw	s4,40(sp)
9d00e2c8:	afbf003c 	sw	ra,60(sp)
9d00e2cc:	afbe0038 	sw	s8,56(sp)
9d00e2d0:	afb70034 	sw	s7,52(sp)
9d00e2d4:	afb60030 	sw	s6,48(sp)
9d00e2d8:	afb5002c 	sw	s5,44(sp)
9d00e2dc:	afb30024 	sw	s3,36(sp)
9d00e2e0:	afb20020 	sw	s2,32(sp)
9d00e2e4:	afb1001c 	sw	s1,28(sp)
9d00e2e8:	afb00018 	sw	s0,24(sp)
9d00e2ec:	80430000 	lb	v1,0(v0)
9d00e2f0:	24060047 	li	a2,71
9d00e2f4:	10660033 	beq	v1,a2,9d00e3c4 <d_encoding+0x108>
9d00e2f8:	0080a021 	move	s4,a0
9d00e2fc:	24060054 	li	a2,84
9d00e300:	50660031 	beql	v1,a2,9d00e3c8 <d_encoding+0x10c>
9d00e304:	8e840030 	lw	a0,48(s4)
9d00e308:	0f40374e 	jal	9d00dd38 <d_name>
9d00e30c:	afa50010 	sw	a1,16(sp)
9d00e310:	00403021 	move	a2,v0
9d00e314:	10400036 	beqz	v0,9d00e3f0 <d_encoding+0x134>
9d00e318:	8fa50010 	lw	a1,16(sp)
9d00e31c:	50a00006 	beqzl	a1,9d00e338 <d_encoding+0x7c>
9d00e320:	8e82000c 	lw	v0,12(s4)
9d00e324:	8e820008 	lw	v0,8(s4)
9d00e328:	30420001 	andi	v0,v0,0x1
9d00e32c:	5040003e 	beqzl	v0,9d00e428 <d_encoding+0x16c>
9d00e330:	8cc20000 	lw	v0,0(a2)
9d00e334:	8e82000c 	lw	v0,12(s4)
9d00e338:	80420000 	lb	v0,0(v0)
9d00e33c:	1040002c 	beqz	v0,9d00e3f0 <d_encoding+0x134>
9d00e340:	24030045 	li	v1,69
9d00e344:	1043002a 	beq	v0,v1,9d00e3f0 <d_encoding+0x134>
9d00e348:	00c01821 	move	v1,a2
9d00e34c:	24040004 	li	a0,4
9d00e350:	8c620000 	lw	v0,0(v1)
9d00e354:	10440074 	beq	v0,a0,9d00e528 <d_encoding+0x26c>
9d00e358:	2c450004 	sltiu	a1,v0,4
9d00e35c:	14a00006 	bnez	a1,9d00e378 <d_encoding+0xbc>
9d00e360:	00002821 	move	a1,zero
9d00e364:	2442ffe6 	addiu	v0,v0,-26
9d00e368:	2c420003 	sltiu	v0,v0,3
9d00e36c:	54400059 	bnezl	v0,9d00e4d4 <d_encoding+0x218>
9d00e370:	8c630004 	lw	v1,4(v1)
9d00e374:	00002821 	move	a1,zero
9d00e378:	02802021 	move	a0,s4
9d00e37c:	0f40355c 	jal	9d00d570 <d_bare_function_type>
9d00e380:	afa60010 	sw	a2,16(sp)
9d00e384:	8fa60010 	lw	a2,16(sp)
9d00e388:	02802021 	move	a0,s4
9d00e38c:	24050003 	li	a1,3
9d00e390:	00403821 	move	a3,v0
9d00e394:	8fbf003c 	lw	ra,60(sp)
9d00e398:	8fbe0038 	lw	s8,56(sp)
9d00e39c:	8fb70034 	lw	s7,52(sp)
9d00e3a0:	8fb60030 	lw	s6,48(sp)
9d00e3a4:	8fb5002c 	lw	s5,44(sp)
9d00e3a8:	8fb40028 	lw	s4,40(sp)
9d00e3ac:	8fb30024 	lw	s3,36(sp)
9d00e3b0:	8fb20020 	lw	s2,32(sp)
9d00e3b4:	8fb1001c 	lw	s1,28(sp)
9d00e3b8:	8fb00018 	lw	s0,24(sp)
9d00e3bc:	0b402ff0 	j	9d00bfc0 <d_make_comp>
9d00e3c0:	27bd0040 	addiu	sp,sp,64
9d00e3c4:	8e840030 	lw	a0,48(s4)
9d00e3c8:	24050054 	li	a1,84
9d00e3cc:	24840014 	addiu	a0,a0,20
9d00e3d0:	ae840030 	sw	a0,48(s4)
9d00e3d4:	80430000 	lb	v1,0(v0)
9d00e3d8:	50650042 	beql	v1,a1,9d00e4e4 <d_encoding+0x228>
9d00e3dc:	24430001 	addiu	v1,v0,1
9d00e3e0:	24040047 	li	a0,71
9d00e3e4:	10640025 	beq	v1,a0,9d00e47c <d_encoding+0x1c0>
9d00e3e8:	24430001 	addiu	v1,v0,1
9d00e3ec:	00003021 	move	a2,zero
9d00e3f0:	8fbf003c 	lw	ra,60(sp)
9d00e3f4:	00c01021 	move	v0,a2
9d00e3f8:	8fbe0038 	lw	s8,56(sp)
9d00e3fc:	8fb70034 	lw	s7,52(sp)
9d00e400:	8fb60030 	lw	s6,48(sp)
9d00e404:	8fb5002c 	lw	s5,44(sp)
9d00e408:	8fb40028 	lw	s4,40(sp)
9d00e40c:	8fb30024 	lw	s3,36(sp)
9d00e410:	8fb20020 	lw	s2,32(sp)
9d00e414:	8fb1001c 	lw	s1,28(sp)
9d00e418:	8fb00018 	lw	s0,24(sp)
9d00e41c:	03e00008 	jr	ra
9d00e420:	27bd0040 	addiu	sp,sp,64
9d00e424:	8cc20000 	lw	v0,0(a2)
9d00e428:	2443ffe6 	addiu	v1,v0,-26
9d00e42c:	2c630003 	sltiu	v1,v1,3
9d00e430:	5460fffc 	bnezl	v1,9d00e424 <d_encoding+0x168>
9d00e434:	8cc60004 	lw	a2,4(a2)
9d00e438:	24030002 	li	v1,2
9d00e43c:	1443ffed 	bne	v0,v1,9d00e3f4 <d_encoding+0x138>
9d00e440:	8fbf003c 	lw	ra,60(sp)
9d00e444:	8cc20008 	lw	v0,8(a2)
9d00e448:	8c430000 	lw	v1,0(v0)
9d00e44c:	2463ffe6 	addiu	v1,v1,-26
9d00e450:	2c630003 	sltiu	v1,v1,3
9d00e454:	5060ffe6 	beqzl	v1,9d00e3f0 <d_encoding+0x134>
9d00e458:	acc20008 	sw	v0,8(a2)
9d00e45c:	8c420004 	lw	v0,4(v0)
9d00e460:	8c430000 	lw	v1,0(v0)
9d00e464:	2463ffe6 	addiu	v1,v1,-26
9d00e468:	2c630003 	sltiu	v1,v1,3
9d00e46c:	5460fffc 	bnezl	v1,9d00e460 <d_encoding+0x1a4>
9d00e470:	8c420004 	lw	v0,4(v0)
9d00e474:	0b4038fc 	j	9d00e3f0 <d_encoding+0x134>
9d00e478:	acc20008 	sw	v0,8(a2)
9d00e47c:	ae83000c 	sw	v1,12(s4)
9d00e480:	80430001 	lb	v1,1(v0)
9d00e484:	1060ffda 	beqz	v1,9d00e3f0 <d_encoding+0x134>
9d00e488:	00003021 	move	a2,zero
9d00e48c:	24420002 	addiu	v0,v0,2
9d00e490:	ae82000c 	sw	v0,12(s4)
9d00e494:	24020052 	li	v0,82
9d00e498:	106200aa 	beq	v1,v0,9d00e744 <d_encoding+0x488>
9d00e49c:	28620053 	slti	v0,v1,83
9d00e4a0:	104000af 	beqz	v0,9d00e760 <d_encoding+0x4a4>
9d00e4a4:	24020056 	li	v0,86
9d00e4a8:	24020041 	li	v0,65
9d00e4ac:	1462ffd1 	bne	v1,v0,9d00e3f4 <d_encoding+0x138>
9d00e4b0:	8fbf003c 	lw	ra,60(sp)
9d00e4b4:	00002821 	move	a1,zero
9d00e4b8:	0f4038af 	jal	9d00e2bc <d_encoding>
9d00e4bc:	02802021 	move	a0,s4
9d00e4c0:	00403021 	move	a2,v0
9d00e4c4:	02802021 	move	a0,s4
9d00e4c8:	24050015 	li	a1,21
9d00e4cc:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e4d0:	00003821 	move	a3,zero
9d00e4d4:	5460ff9f 	bnezl	v1,9d00e354 <d_encoding+0x98>
9d00e4d8:	8c620000 	lw	v0,0(v1)
9d00e4dc:	0b4038de 	j	9d00e378 <d_encoding+0xbc>
9d00e4e0:	00002821 	move	a1,zero
9d00e4e4:	ae83000c 	sw	v1,12(s4)
9d00e4e8:	80430001 	lb	v1,1(v0)
9d00e4ec:	1060ffc0 	beqz	v1,9d00e3f0 <d_encoding+0x134>
9d00e4f0:	00003021 	move	a2,zero
9d00e4f4:	2463ffbd 	addiu	v1,v1,-67
9d00e4f8:	306300ff 	andi	v1,v1,0xff
9d00e4fc:	24420002 	addiu	v0,v0,2
9d00e500:	2c650034 	sltiu	a1,v1,52
9d00e504:	10a0ffba 	beqz	a1,9d00e3f0 <d_encoding+0x134>
9d00e508:	ae82000c 	sw	v0,12(s4)
9d00e50c:	3c029d01 	lui	v0,0x9d01
9d00e510:	24427364 	addiu	v0,v0,29540
9d00e514:	00031880 	sll	v1,v1,0x2
9d00e518:	00431821 	addu	v1,v0,v1
9d00e51c:	8c620000 	lw	v0,0(v1)
9d00e520:	00400008 	jr	v0
9d00e524:	00000000 	nop
9d00e528:	8c620004 	lw	v0,4(v1)
9d00e52c:	1040ff92 	beqz	v0,9d00e378 <d_encoding+0xbc>
9d00e530:	24050001 	li	a1,1
9d00e534:	3c039d01 	lui	v1,0x9d01
9d00e538:	24657434 	addiu	a1,v1,29748
9d00e53c:	8c430000 	lw	v1,0(v0)
9d00e540:	2c64002f 	sltiu	a0,v1,47
9d00e544:	14800003 	bnez	a0,9d00e554 <d_encoding+0x298>
9d00e548:	00031880 	sll	v1,v1,0x2
9d00e54c:	0b4038de 	j	9d00e378 <d_encoding+0xbc>
9d00e550:	24050001 	li	a1,1
9d00e554:	00a31821 	addu	v1,a1,v1
9d00e558:	8c630000 	lw	v1,0(v1)
9d00e55c:	00600008 	jr	v1
9d00e560:	00000000 	nop
9d00e564:	8c420008 	lw	v0,8(v0)
9d00e568:	5440fff5 	bnezl	v0,9d00e540 <d_encoding+0x284>
9d00e56c:	8c430000 	lw	v1,0(v0)
9d00e570:	0b4038de 	j	9d00e378 <d_encoding+0xbc>
9d00e574:	24050001 	li	a1,1
9d00e578:	0f40329e 	jal	9d00ca78 <d_type>
9d00e57c:	02802021 	move	a0,s4
9d00e580:	00403021 	move	a2,v0
9d00e584:	02802021 	move	a0,s4
9d00e588:	2405000e 	li	a1,14
9d00e58c:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e590:	00003821 	move	a3,zero
9d00e594:	0f40329e 	jal	9d00ca78 <d_type>
9d00e598:	02802021 	move	a0,s4
9d00e59c:	2684000c 	addiu	a0,s4,12
9d00e5a0:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00e5a4:	00408021 	move	s0,v0
9d00e5a8:	0440ff91 	bltz	v0,9d00e3f0 <d_encoding+0x134>
9d00e5ac:	00003021 	move	a2,zero
9d00e5b0:	8e82000c 	lw	v0,12(s4)
9d00e5b4:	2403005f 	li	v1,95
9d00e5b8:	80440000 	lb	a0,0(v0)
9d00e5bc:	1483ff8d 	bne	a0,v1,9d00e3f4 <d_encoding+0x138>
9d00e5c0:	8fbf003c 	lw	ra,60(sp)
9d00e5c4:	24420001 	addiu	v0,v0,1
9d00e5c8:	02802021 	move	a0,s4
9d00e5cc:	0f40329e 	jal	9d00ca78 <d_type>
9d00e5d0:	ae82000c 	sw	v0,12(s4)
9d00e5d4:	8e830030 	lw	v1,48(s4)
9d00e5d8:	02802021 	move	a0,s4
9d00e5dc:	2405000b 	li	a1,11
9d00e5e0:	24630005 	addiu	v1,v1,5
9d00e5e4:	ae830030 	sw	v1,48(s4)
9d00e5e8:	00403021 	move	a2,v0
9d00e5ec:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e5f0:	02003821 	move	a3,s0
9d00e5f4:	02802021 	move	a0,s4
9d00e5f8:	0f4031c8 	jal	9d00c720 <d_call_offset>
9d00e5fc:	24050076 	li	a1,118
9d00e600:	1040ff7b 	beqz	v0,9d00e3f0 <d_encoding+0x134>
9d00e604:	00003021 	move	a2,zero
9d00e608:	00002821 	move	a1,zero
9d00e60c:	0f4038af 	jal	9d00e2bc <d_encoding>
9d00e610:	02802021 	move	a0,s4
9d00e614:	00403021 	move	a2,v0
9d00e618:	02802021 	move	a0,s4
9d00e61c:	24050010 	li	a1,16
9d00e620:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e624:	00003821 	move	a3,zero
9d00e628:	02802021 	move	a0,s4
9d00e62c:	0f4031c8 	jal	9d00c720 <d_call_offset>
9d00e630:	24050068 	li	a1,104
9d00e634:	1040ff6e 	beqz	v0,9d00e3f0 <d_encoding+0x134>
9d00e638:	00003021 	move	a2,zero
9d00e63c:	00002821 	move	a1,zero
9d00e640:	0f4038af 	jal	9d00e2bc <d_encoding>
9d00e644:	02802021 	move	a0,s4
9d00e648:	00403021 	move	a2,v0
9d00e64c:	02802021 	move	a0,s4
9d00e650:	2405000f 	li	a1,15
9d00e654:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e658:	00003821 	move	a3,zero
9d00e65c:	02802021 	move	a0,s4
9d00e660:	0f4031c8 	jal	9d00c720 <d_call_offset>
9d00e664:	00002821 	move	a1,zero
9d00e668:	1040ff61 	beqz	v0,9d00e3f0 <d_encoding+0x134>
9d00e66c:	00003021 	move	a2,zero
9d00e670:	02802021 	move	a0,s4
9d00e674:	00002821 	move	a1,zero
9d00e678:	0f4031c8 	jal	9d00c720 <d_call_offset>
9d00e67c:	afa60010 	sw	a2,16(sp)
9d00e680:	1040ff5b 	beqz	v0,9d00e3f0 <d_encoding+0x134>
9d00e684:	8fa60010 	lw	a2,16(sp)
9d00e688:	00002821 	move	a1,zero
9d00e68c:	0f4038af 	jal	9d00e2bc <d_encoding>
9d00e690:	02802021 	move	a0,s4
9d00e694:	00403021 	move	a2,v0
9d00e698:	02802021 	move	a0,s4
9d00e69c:	24050011 	li	a1,17
9d00e6a0:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e6a4:	00003821 	move	a3,zero
9d00e6a8:	2484fffb 	addiu	a0,a0,-5
9d00e6ac:	ae840030 	sw	a0,48(s4)
9d00e6b0:	0f40329e 	jal	9d00ca78 <d_type>
9d00e6b4:	02802021 	move	a0,s4
9d00e6b8:	00403021 	move	a2,v0
9d00e6bc:	02802021 	move	a0,s4
9d00e6c0:	24050009 	li	a1,9
9d00e6c4:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e6c8:	00003821 	move	a3,zero
9d00e6cc:	2484fff6 	addiu	a0,a0,-10
9d00e6d0:	ae840030 	sw	a0,48(s4)
9d00e6d4:	0f40329e 	jal	9d00ca78 <d_type>
9d00e6d8:	02802021 	move	a0,s4
9d00e6dc:	00403021 	move	a2,v0
9d00e6e0:	02802021 	move	a0,s4
9d00e6e4:	2405000a 	li	a1,10
9d00e6e8:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e6ec:	00003821 	move	a3,zero
9d00e6f0:	0f40329e 	jal	9d00ca78 <d_type>
9d00e6f4:	02802021 	move	a0,s4
9d00e6f8:	00403021 	move	a2,v0
9d00e6fc:	02802021 	move	a0,s4
9d00e700:	2405000d 	li	a1,13
9d00e704:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e708:	00003821 	move	a3,zero
9d00e70c:	0f40329e 	jal	9d00ca78 <d_type>
9d00e710:	02802021 	move	a0,s4
9d00e714:	00403021 	move	a2,v0
9d00e718:	02802021 	move	a0,s4
9d00e71c:	24050012 	li	a1,18
9d00e720:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e724:	00003821 	move	a3,zero
9d00e728:	0f40329e 	jal	9d00ca78 <d_type>
9d00e72c:	02802021 	move	a0,s4
9d00e730:	00403021 	move	a2,v0
9d00e734:	02802021 	move	a0,s4
9d00e738:	2405000c 	li	a1,12
9d00e73c:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e740:	00003821 	move	a3,zero
9d00e744:	0f40374e 	jal	9d00dd38 <d_name>
9d00e748:	02802021 	move	a0,s4
9d00e74c:	00403021 	move	a2,v0
9d00e750:	02802021 	move	a0,s4
9d00e754:	24050014 	li	a1,20
9d00e758:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e75c:	00003821 	move	a3,zero
9d00e760:	10620038 	beq	v1,v0,9d00e844 <d_encoding+0x588>
9d00e764:	24020072 	li	v0,114
9d00e768:	5462ff21 	bnel	v1,v0,9d00e3f0 <d_encoding+0x134>
9d00e76c:	00003021 	move	a2,zero
9d00e770:	2684000c 	addiu	a0,s4,12
9d00e774:	0f4031a8 	jal	9d00c6a0 <d_number.clone.0>
9d00e778:	afa60010 	sw	a2,16(sp)
9d00e77c:	28430002 	slti	v1,v0,2
9d00e780:	1460ff1b 	bnez	v1,9d00e3f0 <d_encoding+0x134>
9d00e784:	8fa60010 	lw	a2,16(sp)
9d00e788:	8e95000c 	lw	s5,12(s4)
9d00e78c:	82a30000 	lb	v1,0(s5)
9d00e790:	1060ff18 	beqz	v1,9d00e3f4 <d_encoding+0x138>
9d00e794:	8fbf003c 	lw	ra,60(sp)
9d00e798:	26b50001 	addiu	s5,s5,1
9d00e79c:	2404005f 	li	a0,95
9d00e7a0:	1464ff13 	bne	v1,a0,9d00e3f0 <d_encoding+0x134>
9d00e7a4:	ae95000c 	sw	s5,12(s4)
9d00e7a8:	2456ffff 	addiu	s6,v0,-1
9d00e7ac:	00001821 	move	v1,zero
9d00e7b0:	24170024 	li	s7,36
9d00e7b4:	24100053 	li	s0,83
9d00e7b8:	2411000c 	li	s1,12
9d00e7bc:	24120039 	li	s2,57
9d00e7c0:	2413005f 	li	s3,95
9d00e7c4:	82a40000 	lb	a0,0(s5)
9d00e7c8:	5080ff09 	beqzl	a0,9d00e3f0 <d_encoding+0x134>
9d00e7cc:	00003021 	move	a2,zero
9d00e7d0:	14970008 	bne	a0,s7,9d00e7f4 <d_encoding+0x538>
9d00e7d4:	0000f021 	move	s8,zero
9d00e7d8:	0b403a18 	j	9d00e860 <d_encoding+0x5a4>
9d00e7dc:	82a20001 	lb	v0,1(s5)
9d00e7e0:	80420000 	lb	v0,0(v0)
9d00e7e4:	10400008 	beqz	v0,9d00e808 <d_encoding+0x54c>
9d00e7e8:	02a02821 	move	a1,s5
9d00e7ec:	10570007 	beq	v0,s7,9d00e80c <d_encoding+0x550>
9d00e7f0:	02802021 	move	a0,s4
9d00e7f4:	27de0001 	addiu	s8,s8,1
9d00e7f8:	03d6102a 	slt	v0,s8,s6
9d00e7fc:	1440fff8 	bnez	v0,9d00e7e0 <d_encoding+0x524>
9d00e800:	02be1021 	addu	v0,s5,s8
9d00e804:	02a02821 	move	a1,s5
9d00e808:	02802021 	move	a0,s4
9d00e80c:	03c03021 	move	a2,s8
9d00e810:	0f40301f 	jal	9d00c07c <d_make_name>
9d00e814:	afa30010 	sw	v1,16(sp)
9d00e818:	8e95000c 	lw	s5,12(s4)
9d00e81c:	8fa30010 	lw	v1,16(sp)
9d00e820:	02bea821 	addu	s5,s5,s8
9d00e824:	1040fef1 	beqz	v0,9d00e3ec <d_encoding+0x130>
9d00e828:	ae95000c 	sw	s5,12(s4)
9d00e82c:	14600024 	bnez	v1,9d00e8c0 <d_encoding+0x604>
9d00e830:	02deb023 	subu	s6,s6,s8
9d00e834:	1ac0002b 	blez	s6,9d00e8e4 <d_encoding+0x628>
9d00e838:	00401821 	move	v1,v0
9d00e83c:	0b4039f2 	j	9d00e7c8 <d_encoding+0x50c>
9d00e840:	82a40000 	lb	a0,0(s5)
9d00e844:	0f40374e 	jal	9d00dd38 <d_name>
9d00e848:	02802021 	move	a0,s4
9d00e84c:	00403021 	move	a2,v0
9d00e850:	02802021 	move	a0,s4
9d00e854:	24050013 	li	a1,19
9d00e858:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e85c:	00003821 	move	a3,zero
9d00e860:	50500005 	beql	v0,s0,9d00e878 <d_encoding+0x5bc>
9d00e864:	2404002f 	li	a0,47
9d00e868:	50530003 	beql	v0,s3,9d00e878 <d_encoding+0x5bc>
9d00e86c:	2404002e 	li	a0,46
9d00e870:	1457fedf 	bne	v0,s7,9d00e3f0 <d_encoding+0x134>
9d00e874:	00003021 	move	a2,zero
9d00e878:	8e820014 	lw	v0,20(s4)
9d00e87c:	8e850018 	lw	a1,24(s4)
9d00e880:	0045282a 	slt	a1,v0,a1
9d00e884:	50a0001d 	beqzl	a1,9d00e8fc <d_encoding+0x640>
9d00e888:	8e82000c 	lw	v0,12(s4)
9d00e88c:	24460001 	addiu	a2,v0,1
9d00e890:	ae860014 	sw	a2,20(s4)
9d00e894:	70513002 	mul	a2,v0,s1
9d00e898:	8e850010 	lw	a1,16(s4)
9d00e89c:	00c51021 	addu	v0,a2,a1
9d00e8a0:	10400015 	beqz	v0,9d00e8f8 <d_encoding+0x63c>
9d00e8a4:	26d6fffe 	addiu	s6,s6,-2
9d00e8a8:	8e95000c 	lw	s5,12(s4)
9d00e8ac:	ac520000 	sw	s2,0(v0)
9d00e8b0:	26b50002 	addiu	s5,s5,2
9d00e8b4:	ac440004 	sw	a0,4(v0)
9d00e8b8:	1060ffde 	beqz	v1,9d00e834 <d_encoding+0x578>
9d00e8bc:	ae95000c 	sw	s5,12(s4)
9d00e8c0:	02802021 	move	a0,s4
9d00e8c4:	24050038 	li	a1,56
9d00e8c8:	00603021 	move	a2,v1
9d00e8cc:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00e8d0:	00403821 	move	a3,v0
9d00e8d4:	1440ffd7 	bnez	v0,9d00e834 <d_encoding+0x578>
9d00e8d8:	00003021 	move	a2,zero
9d00e8dc:	0b4038fd 	j	9d00e3f4 <d_encoding+0x138>
9d00e8e0:	8fbf003c 	lw	ra,60(sp)
9d00e8e4:	02802021 	move	a0,s4
9d00e8e8:	24050037 	li	a1,55
9d00e8ec:	00403021 	move	a2,v0
9d00e8f0:	0b4038e5 	j	9d00e394 <d_encoding+0xd8>
9d00e8f4:	00003821 	move	a3,zero
9d00e8f8:	8e82000c 	lw	v0,12(s4)
9d00e8fc:	00003021 	move	a2,zero
9d00e900:	24420002 	addiu	v0,v0,2
9d00e904:	0b4038fc 	j	9d00e3f0 <d_encoding+0x134>
9d00e908:	ae82000c 	sw	v0,12(s4)

9d00e90c <d_mangled_name>:
9d00e90c:	8c82000c 	lw	v0,12(a0)
9d00e910:	2406005f 	li	a2,95
9d00e914:	80430000 	lb	v1,0(v0)
9d00e918:	50660005 	beql	v1,a2,9d00e930 <d_mangled_name+0x24>
9d00e91c:	24420001 	addiu	v0,v0,1
9d00e920:	50a00006 	beqzl	a1,9d00e93c <d_mangled_name+0x30>
9d00e924:	2406005a 	li	a2,90
9d00e928:	03e00008 	jr	ra
9d00e92c:	00001021 	move	v0,zero
9d00e930:	ac82000c 	sw	v0,12(a0)
9d00e934:	80430000 	lb	v1,0(v0)
9d00e938:	2406005a 	li	a2,90
9d00e93c:	1466fffa 	bne	v1,a2,9d00e928 <d_mangled_name+0x1c>
9d00e940:	00000000 	nop
9d00e944:	24420001 	addiu	v0,v0,1
9d00e948:	0b4038af 	j	9d00e2bc <d_encoding>
9d00e94c:	ac82000c 	sw	v0,12(a0)

9d00e950 <d_expr_primary>:
9d00e950:	8c82000c 	lw	v0,12(a0)
9d00e954:	27bdffd8 	addiu	sp,sp,-40
9d00e958:	afb30020 	sw	s3,32(sp)
9d00e95c:	afb00014 	sw	s0,20(sp)
9d00e960:	afbf0024 	sw	ra,36(sp)
9d00e964:	afb2001c 	sw	s2,28(sp)
9d00e968:	afb10018 	sw	s1,24(sp)
9d00e96c:	80450000 	lb	a1,0(v0)
9d00e970:	2403004c 	li	v1,76
9d00e974:	00808021 	move	s0,a0
9d00e978:	10a30009 	beq	a1,v1,9d00e9a0 <d_expr_primary+0x50>
9d00e97c:	00009821 	move	s3,zero
9d00e980:	8fbf0024 	lw	ra,36(sp)
9d00e984:	02601021 	move	v0,s3
9d00e988:	8fb30020 	lw	s3,32(sp)
9d00e98c:	8fb2001c 	lw	s2,28(sp)
9d00e990:	8fb10018 	lw	s1,24(sp)
9d00e994:	8fb00014 	lw	s0,20(sp)
9d00e998:	03e00008 	jr	ra
9d00e99c:	27bd0028 	addiu	sp,sp,40
9d00e9a0:	24430001 	addiu	v1,v0,1
9d00e9a4:	ac83000c 	sw	v1,12(a0)
9d00e9a8:	80430001 	lb	v1,1(v0)
9d00e9ac:	2402005f 	li	v0,95
9d00e9b0:	10620003 	beq	v1,v0,9d00e9c0 <d_expr_primary+0x70>
9d00e9b4:	2402005a 	li	v0,90
9d00e9b8:	14620012 	bne	v1,v0,9d00ea04 <d_expr_primary+0xb4>
9d00e9bc:	00000000 	nop
9d00e9c0:	02002021 	move	a0,s0
9d00e9c4:	0f403a43 	jal	9d00e90c <d_mangled_name>
9d00e9c8:	00002821 	move	a1,zero
9d00e9cc:	00409821 	move	s3,v0
9d00e9d0:	8e02000c 	lw	v0,12(s0)
9d00e9d4:	24030045 	li	v1,69
9d00e9d8:	80440000 	lb	a0,0(v0)
9d00e9dc:	10830032 	beq	a0,v1,9d00eaa8 <d_expr_primary+0x158>
9d00e9e0:	8fbf0024 	lw	ra,36(sp)
9d00e9e4:	00009821 	move	s3,zero
9d00e9e8:	02601021 	move	v0,s3
9d00e9ec:	8fb30020 	lw	s3,32(sp)
9d00e9f0:	8fb2001c 	lw	s2,28(sp)
9d00e9f4:	8fb10018 	lw	s1,24(sp)
9d00e9f8:	8fb00014 	lw	s0,20(sp)
9d00e9fc:	03e00008 	jr	ra
9d00ea00:	27bd0028 	addiu	sp,sp,40
9d00ea04:	0f40329e 	jal	9d00ca78 <d_type>
9d00ea08:	00000000 	nop
9d00ea0c:	1040ffdc 	beqz	v0,9d00e980 <d_expr_primary+0x30>
9d00ea10:	00408821 	move	s1,v0
9d00ea14:	8c430000 	lw	v1,0(v0)
9d00ea18:	24020023 	li	v0,35
9d00ea1c:	5062002b 	beql	v1,v0,9d00eacc <d_expr_primary+0x17c>
9d00ea20:	8e220004 	lw	v0,4(s1)
9d00ea24:	8e05000c 	lw	a1,12(s0)
9d00ea28:	2403006e 	li	v1,110
9d00ea2c:	80a20000 	lb	v0,0(a1)
9d00ea30:	1043002e 	beq	v0,v1,9d00eaec <d_expr_primary+0x19c>
9d00ea34:	24120035 	li	s2,53
9d00ea38:	24030045 	li	v1,69
9d00ea3c:	10430030 	beq	v0,v1,9d00eb00 <d_expr_primary+0x1b0>
9d00ea40:	00009821 	move	s3,zero
9d00ea44:	14400005 	bnez	v0,9d00ea5c <d_expr_primary+0x10c>
9d00ea48:	00a03021 	move	a2,a1
9d00ea4c:	0b403a61 	j	9d00e984 <d_expr_primary+0x34>
9d00ea50:	8fbf0024 	lw	ra,36(sp)
9d00ea54:	1040ffe3 	beqz	v0,9d00e9e4 <d_expr_primary+0x94>
9d00ea58:	8fbf0024 	lw	ra,36(sp)
9d00ea5c:	24c60001 	addiu	a2,a2,1
9d00ea60:	ae06000c 	sw	a2,12(s0)
9d00ea64:	80c20000 	lb	v0,0(a2)
9d00ea68:	1443fffa 	bne	v0,v1,9d00ea54 <d_expr_primary+0x104>
9d00ea6c:	00000000 	nop
9d00ea70:	00c53023 	subu	a2,a2,a1
9d00ea74:	0f40301f 	jal	9d00c07c <d_make_name>
9d00ea78:	02002021 	move	a0,s0
9d00ea7c:	00403821 	move	a3,v0
9d00ea80:	02002021 	move	a0,s0
9d00ea84:	02402821 	move	a1,s2
9d00ea88:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00ea8c:	02203021 	move	a2,s1
9d00ea90:	00409821 	move	s3,v0
9d00ea94:	8e02000c 	lw	v0,12(s0)
9d00ea98:	24030045 	li	v1,69
9d00ea9c:	80440000 	lb	a0,0(v0)
9d00eaa0:	1483ffd0 	bne	a0,v1,9d00e9e4 <d_expr_primary+0x94>
9d00eaa4:	8fbf0024 	lw	ra,36(sp)
9d00eaa8:	24420001 	addiu	v0,v0,1
9d00eaac:	ae02000c 	sw	v0,12(s0)
9d00eab0:	8fb2001c 	lw	s2,28(sp)
9d00eab4:	02601021 	move	v0,s3
9d00eab8:	8fb30020 	lw	s3,32(sp)
9d00eabc:	8fb10018 	lw	s1,24(sp)
9d00eac0:	8fb00014 	lw	s0,20(sp)
9d00eac4:	03e00008 	jr	ra
9d00eac8:	27bd0028 	addiu	sp,sp,40
9d00eacc:	8c430010 	lw	v1,16(v0)
9d00ead0:	5060ffd5 	beqzl	v1,9d00ea28 <d_expr_primary+0xd8>
9d00ead4:	8e05000c 	lw	a1,12(s0)
9d00ead8:	8e030030 	lw	v1,48(s0)
9d00eadc:	8c420004 	lw	v0,4(v0)
9d00eae0:	00621023 	subu	v0,v1,v0
9d00eae4:	0b403a89 	j	9d00ea24 <d_expr_primary+0xd4>
9d00eae8:	ae020030 	sw	v0,48(s0)
9d00eaec:	24a50001 	addiu	a1,a1,1
9d00eaf0:	ae05000c 	sw	a1,12(s0)
9d00eaf4:	80a20000 	lb	v0,0(a1)
9d00eaf8:	0b403a8e 	j	9d00ea38 <d_expr_primary+0xe8>
9d00eafc:	24120036 	li	s2,54
9d00eb00:	0b403a9d 	j	9d00ea74 <d_expr_primary+0x124>
9d00eb04:	00003021 	move	a2,zero

9d00eb08 <d_expression>:
9d00eb08:	8c83000c 	lw	v1,12(a0)
9d00eb0c:	27bdffd0 	addiu	sp,sp,-48
9d00eb10:	afb20024 	sw	s2,36(sp)
9d00eb14:	afbf002c 	sw	ra,44(sp)
9d00eb18:	afb30028 	sw	s3,40(sp)
9d00eb1c:	afb10020 	sw	s1,32(sp)
9d00eb20:	afb0001c 	sw	s0,28(sp)
9d00eb24:	80620000 	lb	v0,0(v1)
9d00eb28:	2405004c 	li	a1,76
9d00eb2c:	1045007a 	beq	v0,a1,9d00ed18 <d_expression+0x210>
9d00eb30:	00809021 	move	s2,a0
9d00eb34:	24050054 	li	a1,84
9d00eb38:	1045007e 	beq	v0,a1,9d00ed34 <d_expression+0x22c>
9d00eb3c:	24050073 	li	a1,115
9d00eb40:	1045004f 	beq	v0,a1,9d00ec80 <d_expression+0x178>
9d00eb44:	24050066 	li	a1,102
9d00eb48:	50450022 	beql	v0,a1,9d00ebd4 <d_expression+0xcc>
9d00eb4c:	80660001 	lb	a2,1(v1)
9d00eb50:	2444ffd0 	addiu	a0,v0,-48
9d00eb54:	308400ff 	andi	a0,a0,0xff
9d00eb58:	2c84000a 	sltiu	a0,a0,10
9d00eb5c:	14800037 	bnez	a0,9d00ec3c <d_expression+0x134>
9d00eb60:	2404006f 	li	a0,111
9d00eb64:	14440004 	bne	v0,a0,9d00eb78 <d_expression+0x70>
9d00eb68:	2402006e 	li	v0,110
9d00eb6c:	80640001 	lb	a0,1(v1)
9d00eb70:	10820031 	beq	a0,v0,9d00ec38 <d_expression+0x130>
9d00eb74:	24630002 	addiu	v1,v1,2
9d00eb78:	0f40357d 	jal	9d00d5f4 <d_operator_name>
9d00eb7c:	02402021 	move	a0,s2
9d00eb80:	1040000b 	beqz	v0,9d00ebb0 <d_expression+0xa8>
9d00eb84:	00409821 	move	s3,v0
9d00eb88:	8c500000 	lw	s0,0(v0)
9d00eb8c:	2402002c 	li	v0,44
9d00eb90:	12020048 	beq	s0,v0,9d00ecb4 <d_expression+0x1ac>
9d00eb94:	2403002d 	li	v1,45
9d00eb98:	1203006d 	beq	s0,v1,9d00ed50 <d_expression+0x248>
9d00eb9c:	2403002e 	li	v1,46
9d00eba0:	5203006c 	beql	s0,v1,9d00ed54 <d_expression+0x24c>
9d00eba4:	24020001 	li	v0,1
9d00eba8:	5202008e 	beql	s0,v0,9d00ede4 <d_expression+0x2dc>
9d00ebac:	8e710004 	lw	s1,4(s3)
9d00ebb0:	00003021 	move	a2,zero
9d00ebb4:	8fbf002c 	lw	ra,44(sp)
9d00ebb8:	00c01021 	move	v0,a2
9d00ebbc:	8fb30028 	lw	s3,40(sp)
9d00ebc0:	8fb20024 	lw	s2,36(sp)
9d00ebc4:	8fb10020 	lw	s1,32(sp)
9d00ebc8:	8fb0001c 	lw	s0,28(sp)
9d00ebcc:	03e00008 	jr	ra
9d00ebd0:	27bd0030 	addiu	sp,sp,48
9d00ebd4:	24050070 	li	a1,112
9d00ebd8:	54c5ffe2 	bnel	a2,a1,9d00eb64 <d_expression+0x5c>
9d00ebdc:	2404006f 	li	a0,111
9d00ebe0:	24630002 	addiu	v1,v1,2
9d00ebe4:	0f4031fa 	jal	9d00c7e8 <d_compact_number>
9d00ebe8:	ac83000c 	sw	v1,12(a0)
9d00ebec:	0440fff1 	bltz	v0,9d00ebb4 <d_expression+0xac>
9d00ebf0:	00003021 	move	a2,zero
9d00ebf4:	8e430014 	lw	v1,20(s2)
9d00ebf8:	8e440018 	lw	a0,24(s2)
9d00ebfc:	0064202a 	slt	a0,v1,a0
9d00ec00:	1080ffed 	beqz	a0,9d00ebb8 <d_expression+0xb0>
9d00ec04:	8fbf002c 	lw	ra,44(sp)
9d00ec08:	8e460010 	lw	a2,16(s2)
9d00ec0c:	00032080 	sll	a0,v1,0x2
9d00ec10:	00032900 	sll	a1,v1,0x4
9d00ec14:	00a42023 	subu	a0,a1,a0
9d00ec18:	24630001 	addiu	v1,v1,1
9d00ec1c:	00c43021 	addu	a2,a2,a0
9d00ec20:	10c0ffe4 	beqz	a2,9d00ebb4 <d_expression+0xac>
9d00ec24:	ae430014 	sw	v1,20(s2)
9d00ec28:	24030006 	li	v1,6
9d00ec2c:	acc30000 	sw	v1,0(a2)
9d00ec30:	0b403aed 	j	9d00ebb4 <d_expression+0xac>
9d00ec34:	acc20004 	sw	v0,4(a2)
9d00ec38:	ae43000c 	sw	v1,12(s2)
9d00ec3c:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00ec40:	02402021 	move	a0,s2
9d00ec44:	1040ffdb 	beqz	v0,9d00ebb4 <d_expression+0xac>
9d00ec48:	00403021 	move	a2,v0
9d00ec4c:	8e42000c 	lw	v0,12(s2)
9d00ec50:	80430000 	lb	v1,0(v0)
9d00ec54:	24020049 	li	v0,73
9d00ec58:	1462ffd7 	bne	v1,v0,9d00ebb8 <d_expression+0xb0>
9d00ec5c:	8fbf002c 	lw	ra,44(sp)
9d00ec60:	02402021 	move	a0,s2
9d00ec64:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00ec68:	afa60010 	sw	a2,16(sp)
9d00ec6c:	00403821 	move	a3,v0
9d00ec70:	02402021 	move	a0,s2
9d00ec74:	24050004 	li	a1,4
9d00ec78:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00ec7c:	8fa60010 	lw	a2,16(sp)
9d00ec80:	80620001 	lb	v0,1(v1)
9d00ec84:	24050072 	li	a1,114
9d00ec88:	10450047 	beq	v0,a1,9d00eda8 <d_expression+0x2a0>
9d00ec8c:	24050070 	li	a1,112
9d00ec90:	1445ffb9 	bne	v0,a1,9d00eb78 <d_expression+0x70>
9d00ec94:	24630002 	addiu	v1,v1,2
9d00ec98:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00ec9c:	ac83000c 	sw	v1,12(a0)
9d00eca0:	00403021 	move	a2,v0
9d00eca4:	02402021 	move	a0,s2
9d00eca8:	24050041 	li	a1,65
9d00ecac:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00ecb0:	00003821 	move	a3,zero
9d00ecb4:	8e710004 	lw	s1,4(s3)
9d00ecb8:	8e430030 	lw	v1,48(s2)
9d00ecbc:	3c059d01 	lui	a1,0x9d01
9d00ecc0:	8e220008 	lw	v0,8(s1)
9d00ecc4:	8e240000 	lw	a0,0(s1)
9d00ecc8:	24a56ca8 	addiu	a1,a1,27816
9d00eccc:	00621021 	addu	v0,v1,v0
9d00ecd0:	2442fffe 	addiu	v0,v0,-2
9d00ecd4:	0f401f65 	jal	9d007d94 <strcmp>
9d00ecd8:	ae420030 	sw	v0,48(s2)
9d00ecdc:	5440001d 	bnezl	v0,9d00ed54 <d_expression+0x24c>
9d00ece0:	8e22000c 	lw	v0,12(s1)
9d00ece4:	0f40329e 	jal	9d00ca78 <d_type>
9d00ece8:	02402021 	move	a0,s2
9d00ecec:	00403821 	move	a3,v0
9d00ecf0:	02402021 	move	a0,s2
9d00ecf4:	2405002f 	li	a1,47
9d00ecf8:	02603021 	move	a2,s3
9d00ecfc:	8fbf002c 	lw	ra,44(sp)
9d00ed00:	8fb30028 	lw	s3,40(sp)
9d00ed04:	8fb20024 	lw	s2,36(sp)
9d00ed08:	8fb10020 	lw	s1,32(sp)
9d00ed0c:	8fb0001c 	lw	s0,28(sp)
9d00ed10:	0b402ff0 	j	9d00bfc0 <d_make_comp>
9d00ed14:	27bd0030 	addiu	sp,sp,48
9d00ed18:	8fbf002c 	lw	ra,44(sp)
9d00ed1c:	8fb30028 	lw	s3,40(sp)
9d00ed20:	8fb20024 	lw	s2,36(sp)
9d00ed24:	8fb10020 	lw	s1,32(sp)
9d00ed28:	8fb0001c 	lw	s0,28(sp)
9d00ed2c:	0b403a54 	j	9d00e950 <d_expr_primary>
9d00ed30:	27bd0030 	addiu	sp,sp,48
9d00ed34:	8fbf002c 	lw	ra,44(sp)
9d00ed38:	8fb30028 	lw	s3,40(sp)
9d00ed3c:	8fb20024 	lw	s2,36(sp)
9d00ed40:	8fb10020 	lw	s1,32(sp)
9d00ed44:	8fb0001c 	lw	s0,28(sp)
9d00ed48:	0b40321c 	j	9d00c870 <d_template_param>
9d00ed4c:	27bd0030 	addiu	sp,sp,48
9d00ed50:	8e620004 	lw	v0,4(s3)
9d00ed54:	24030002 	li	v1,2
9d00ed58:	1043003b 	beq	v0,v1,9d00ee48 <d_expression+0x340>
9d00ed5c:	24030003 	li	v1,3
9d00ed60:	10430022 	beq	v0,v1,9d00edec <d_expression+0x2e4>
9d00ed64:	24030001 	li	v1,1
9d00ed68:	1443ff92 	bne	v0,v1,9d00ebb4 <d_expression+0xac>
9d00ed6c:	00003021 	move	a2,zero
9d00ed70:	2402002e 	li	v0,46
9d00ed74:	16020005 	bne	s0,v0,9d00ed8c <d_expression+0x284>
9d00ed78:	2403005f 	li	v1,95
9d00ed7c:	8e42000c 	lw	v0,12(s2)
9d00ed80:	80440000 	lb	a0,0(v0)
9d00ed84:	10830076 	beq	a0,v1,9d00ef60 <d_expression+0x458>
9d00ed88:	24420001 	addiu	v0,v0,1
9d00ed8c:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00ed90:	02402021 	move	a0,s2
9d00ed94:	02402021 	move	a0,s2
9d00ed98:	2405002f 	li	a1,47
9d00ed9c:	02603021 	move	a2,s3
9d00eda0:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00eda4:	00403821 	move	a3,v0
9d00eda8:	24630002 	addiu	v1,v1,2
9d00edac:	0f40329e 	jal	9d00ca78 <d_type>
9d00edb0:	ac83000c 	sw	v1,12(a0)
9d00edb4:	02402021 	move	a0,s2
9d00edb8:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00edbc:	00408021 	move	s0,v0
9d00edc0:	00403821 	move	a3,v0
9d00edc4:	8e42000c 	lw	v0,12(s2)
9d00edc8:	80430000 	lb	v1,0(v0)
9d00edcc:	24020049 	li	v0,73
9d00edd0:	10620048 	beq	v1,v0,9d00eef4 <d_expression+0x3ec>
9d00edd4:	02402021 	move	a0,s2
9d00edd8:	24050001 	li	a1,1
9d00eddc:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00ede0:	02003021 	move	a2,s0
9d00ede4:	0b403b55 	j	9d00ed54 <d_expression+0x24c>
9d00ede8:	8e22000c 	lw	v0,12(s1)
9d00edec:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00edf0:	02402021 	move	a0,s2
9d00edf4:	02402021 	move	a0,s2
9d00edf8:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00edfc:	00408021 	move	s0,v0
9d00ee00:	02402021 	move	a0,s2
9d00ee04:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00ee08:	afa20010 	sw	v0,16(sp)
9d00ee0c:	8fa60010 	lw	a2,16(sp)
9d00ee10:	02402021 	move	a0,s2
9d00ee14:	24050034 	li	a1,52
9d00ee18:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00ee1c:	00403821 	move	a3,v0
9d00ee20:	00403821 	move	a3,v0
9d00ee24:	02402021 	move	a0,s2
9d00ee28:	24050033 	li	a1,51
9d00ee2c:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00ee30:	02003021 	move	a2,s0
9d00ee34:	00403821 	move	a3,v0
9d00ee38:	02402021 	move	a0,s2
9d00ee3c:	24050032 	li	a1,50
9d00ee40:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00ee44:	02603021 	move	a2,s3
9d00ee48:	8e620004 	lw	v0,4(s3)
9d00ee4c:	02402021 	move	a0,s2
9d00ee50:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00ee54:	8c510000 	lw	s1,0(v0)
9d00ee58:	3c059d01 	lui	a1,0x9d01
9d00ee5c:	02202021 	move	a0,s1
9d00ee60:	24a56a90 	addiu	a1,a1,27280
9d00ee64:	0f401f65 	jal	9d007d94 <strcmp>
9d00ee68:	00408021 	move	s0,v0
9d00ee6c:	1040001d 	beqz	v0,9d00eee4 <d_expression+0x3dc>
9d00ee70:	00000000 	nop
9d00ee74:	3c059d01 	lui	a1,0x9d01
9d00ee78:	02202021 	move	a0,s1
9d00ee7c:	0f401f65 	jal	9d007d94 <strcmp>
9d00ee80:	24a56a94 	addiu	a1,a1,27284
9d00ee84:	10400006 	beqz	v0,9d00eea0 <d_expression+0x398>
9d00ee88:	3c059d01 	lui	a1,0x9d01
9d00ee8c:	02202021 	move	a0,s1
9d00ee90:	0f401f65 	jal	9d007d94 <strcmp>
9d00ee94:	24a56a98 	addiu	a1,a1,27288
9d00ee98:	14400023 	bnez	v0,9d00ef28 <d_expression+0x420>
9d00ee9c:	00000000 	nop
9d00eea0:	0f4035f2 	jal	9d00d7c8 <d_unqualified_name>
9d00eea4:	02402021 	move	a0,s2
9d00eea8:	00403821 	move	a3,v0
9d00eeac:	8e42000c 	lw	v0,12(s2)
9d00eeb0:	80430000 	lb	v1,0(v0)
9d00eeb4:	24020049 	li	v0,73
9d00eeb8:	5062001f 	beql	v1,v0,9d00ef38 <d_expression+0x430>
9d00eebc:	02402021 	move	a0,s2
9d00eec0:	24050031 	li	a1,49
9d00eec4:	02003021 	move	a2,s0
9d00eec8:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00eecc:	02402021 	move	a0,s2
9d00eed0:	00403821 	move	a3,v0
9d00eed4:	02402021 	move	a0,s2
9d00eed8:	24050030 	li	a1,48
9d00eedc:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00eee0:	02603021 	move	a2,s3
9d00eee4:	0f403bdd 	jal	9d00ef74 <d_exprlist>
9d00eee8:	02402021 	move	a0,s2
9d00eeec:	0b403bb0 	j	9d00eec0 <d_expression+0x3b8>
9d00eef0:	00403821 	move	a3,v0
9d00eef4:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00eef8:	afa70010 	sw	a3,16(sp)
9d00eefc:	8fa70010 	lw	a3,16(sp)
9d00ef00:	02402021 	move	a0,s2
9d00ef04:	24050004 	li	a1,4
9d00ef08:	00e03021 	move	a2,a3
9d00ef0c:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00ef10:	00403821 	move	a3,v0
9d00ef14:	00403821 	move	a3,v0
9d00ef18:	02402021 	move	a0,s2
9d00ef1c:	24050001 	li	a1,1
9d00ef20:	0b403b3f 	j	9d00ecfc <d_expression+0x1f4>
9d00ef24:	02003021 	move	a2,s0
9d00ef28:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00ef2c:	02402021 	move	a0,s2
9d00ef30:	0b403bb0 	j	9d00eec0 <d_expression+0x3b8>
9d00ef34:	00403821 	move	a3,v0
9d00ef38:	0f4036dc 	jal	9d00db70 <d_template_args>
9d00ef3c:	afa70010 	sw	a3,16(sp)
9d00ef40:	8fa70010 	lw	a3,16(sp)
9d00ef44:	02402021 	move	a0,s2
9d00ef48:	24050004 	li	a1,4
9d00ef4c:	00e03021 	move	a2,a3
9d00ef50:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00ef54:	00403821 	move	a3,v0
9d00ef58:	0b403bb0 	j	9d00eec0 <d_expression+0x3b8>
9d00ef5c:	00403821 	move	a3,v0
9d00ef60:	ae42000c 	sw	v0,12(s2)
9d00ef64:	0f403bdd 	jal	9d00ef74 <d_exprlist>
9d00ef68:	02402021 	move	a0,s2
9d00ef6c:	0b403b66 	j	9d00ed98 <d_expression+0x290>
9d00ef70:	02402021 	move	a0,s2

9d00ef74 <d_exprlist>:
9d00ef74:	8c82000c 	lw	v0,12(a0)
9d00ef78:	27bdffd8 	addiu	sp,sp,-40
9d00ef7c:	afb20020 	sw	s2,32(sp)
9d00ef80:	afbf0024 	sw	ra,36(sp)
9d00ef84:	afb1001c 	sw	s1,28(sp)
9d00ef88:	afb00018 	sw	s0,24(sp)
9d00ef8c:	afa00010 	sw	zero,16(sp)
9d00ef90:	80450000 	lb	a1,0(v0)
9d00ef94:	24030045 	li	v1,69
9d00ef98:	14a3000c 	bne	a1,v1,9d00efcc <d_exprlist+0x58>
9d00ef9c:	00809021 	move	s2,a0
9d00efa0:	24420001 	addiu	v0,v0,1
9d00efa4:	8fbf0024 	lw	ra,36(sp)
9d00efa8:	8fb20020 	lw	s2,32(sp)
9d00efac:	8fb1001c 	lw	s1,28(sp)
9d00efb0:	8fb00018 	lw	s0,24(sp)
9d00efb4:	ac82000c 	sw	v0,12(a0)
9d00efb8:	2405002a 	li	a1,42
9d00efbc:	00003021 	move	a2,zero
9d00efc0:	00003821 	move	a3,zero
9d00efc4:	0b402ff0 	j	9d00bfc0 <d_make_comp>
9d00efc8:	27bd0028 	addiu	sp,sp,40
9d00efcc:	27b00010 	addiu	s0,sp,16
9d00efd0:	24110045 	li	s1,69
9d00efd4:	0f403ac2 	jal	9d00eb08 <d_expression>
9d00efd8:	02402021 	move	a0,s2
9d00efdc:	00403021 	move	a2,v0
9d00efe0:	02402021 	move	a0,s2
9d00efe4:	2405002a 	li	a1,42
9d00efe8:	10400012 	beqz	v0,9d00f034 <d_exprlist+0xc0>
9d00efec:	00003821 	move	a3,zero
9d00eff0:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d00eff4:	00000000 	nop
9d00eff8:	1040000e 	beqz	v0,9d00f034 <d_exprlist+0xc0>
9d00effc:	ae020000 	sw	v0,0(s0)
9d00f000:	8e43000c 	lw	v1,12(s2)
9d00f004:	24500008 	addiu	s0,v0,8
9d00f008:	80620000 	lb	v0,0(v1)
9d00f00c:	1451fff1 	bne	v0,s1,9d00efd4 <d_exprlist+0x60>
9d00f010:	8fbf0024 	lw	ra,36(sp)
9d00f014:	24630001 	addiu	v1,v1,1
9d00f018:	8fa20010 	lw	v0,16(sp)
9d00f01c:	ae43000c 	sw	v1,12(s2)
9d00f020:	8fb1001c 	lw	s1,28(sp)
9d00f024:	8fb20020 	lw	s2,32(sp)
9d00f028:	8fb00018 	lw	s0,24(sp)
9d00f02c:	03e00008 	jr	ra
9d00f030:	27bd0028 	addiu	sp,sp,40
9d00f034:	8fbf0024 	lw	ra,36(sp)
9d00f038:	00001021 	move	v0,zero
9d00f03c:	8fb20020 	lw	s2,32(sp)
9d00f040:	8fb1001c 	lw	s1,28(sp)
9d00f044:	8fb00018 	lw	s0,24(sp)
9d00f048:	03e00008 	jr	ra
9d00f04c:	27bd0028 	addiu	sp,sp,40

9d00f050 <d_append_string>:
9d00f050:	27bdffc8 	addiu	sp,sp,-56
9d00f054:	afb10020 	sw	s1,32(sp)
9d00f058:	00808821 	move	s1,a0
9d00f05c:	00a02021 	move	a0,a1
9d00f060:	afb20024 	sw	s2,36(sp)
9d00f064:	afbf0034 	sw	ra,52(sp)
9d00f068:	afb50030 	sw	s5,48(sp)
9d00f06c:	afb4002c 	sw	s4,44(sp)
9d00f070:	afb30028 	sw	s3,40(sp)
9d00f074:	afb0001c 	sw	s0,28(sp)
9d00f078:	0f401f87 	jal	9d007e1c <strlen>
9d00f07c:	00a09021 	move	s2,a1
9d00f080:	10400025 	beqz	v0,9d00f118 <d_append_string+0xc8>
9d00f084:	00009821 	move	s3,zero
9d00f088:	8e230104 	lw	v1,260(s1)
9d00f08c:	241500ff 	li	s5,255
9d00f090:	0b403c2f 	j	9d00f0bc <d_append_string+0x6c>
9d00f094:	26300004 	addiu	s0,s1,4
9d00f098:	00602821 	move	a1,v1
9d00f09c:	26730001 	addiu	s3,s3,1
9d00f0a0:	24630001 	addiu	v1,v1,1
9d00f0a4:	02252821 	addu	a1,s1,a1
9d00f0a8:	0262202b 	sltu	a0,s3,v0
9d00f0ac:	a0b40004 	sb	s4,4(a1)
9d00f0b0:	ae230104 	sw	v1,260(s1)
9d00f0b4:	10800018 	beqz	a0,9d00f118 <d_append_string+0xc8>
9d00f0b8:	a2340108 	sb	s4,264(s1)
9d00f0bc:	02532021 	addu	a0,s2,s3
9d00f0c0:	1475fff5 	bne	v1,s5,9d00f098 <d_append_string+0x48>
9d00f0c4:	80940000 	lb	s4,0(a0)
9d00f0c8:	8e23010c 	lw	v1,268(s1)
9d00f0cc:	8e260110 	lw	a2,272(s1)
9d00f0d0:	a2200103 	sb	zero,259(s1)
9d00f0d4:	02002021 	move	a0,s0
9d00f0d8:	240500ff 	li	a1,255
9d00f0dc:	0060f809 	jalr	v1
9d00f0e0:	afa20010 	sw	v0,16(sp)
9d00f0e4:	8e240124 	lw	a0,292(s1)
9d00f0e8:	8fa20010 	lw	v0,16(sp)
9d00f0ec:	00002821 	move	a1,zero
9d00f0f0:	24840001 	addiu	a0,a0,1
9d00f0f4:	26730001 	addiu	s3,s3,1
9d00f0f8:	24030001 	li	v1,1
9d00f0fc:	ae240124 	sw	a0,292(s1)
9d00f100:	02252821 	addu	a1,s1,a1
9d00f104:	0262202b 	sltu	a0,s3,v0
9d00f108:	a0b40004 	sb	s4,4(a1)
9d00f10c:	ae230104 	sw	v1,260(s1)
9d00f110:	1480ffea 	bnez	a0,9d00f0bc <d_append_string+0x6c>
9d00f114:	a2340108 	sb	s4,264(s1)
9d00f118:	8fbf0034 	lw	ra,52(sp)
9d00f11c:	8fb50030 	lw	s5,48(sp)
9d00f120:	8fb4002c 	lw	s4,44(sp)
9d00f124:	8fb30028 	lw	s3,40(sp)
9d00f128:	8fb20024 	lw	s2,36(sp)
9d00f12c:	8fb10020 	lw	s1,32(sp)
9d00f130:	8fb0001c 	lw	s0,28(sp)
9d00f134:	03e00008 	jr	ra
9d00f138:	27bd0038 	addiu	sp,sp,56

9d00f13c <d_print_comp>:
9d00f13c:	27bdff78 	addiu	sp,sp,-136
9d00f140:	afb3006c 	sw	s3,108(sp)
9d00f144:	afb10064 	sw	s1,100(sp)
9d00f148:	afbf0084 	sw	ra,132(sp)
9d00f14c:	afbe0080 	sw	s8,128(sp)
9d00f150:	afb7007c 	sw	s7,124(sp)
9d00f154:	afb60078 	sw	s6,120(sp)
9d00f158:	afb50074 	sw	s5,116(sp)
9d00f15c:	afb40070 	sw	s4,112(sp)
9d00f160:	afb20068 	sw	s2,104(sp)
9d00f164:	afb00060 	sw	s0,96(sp)
9d00f168:	00a08821 	move	s1,a1
9d00f16c:	10a00008 	beqz	a1,9d00f190 <d_print_comp+0x54>
9d00f170:	00809821 	move	s3,a0
9d00f174:	8c82011c 	lw	v0,284(a0)
9d00f178:	14400008 	bnez	v0,9d00f19c <d_print_comp+0x60>
9d00f17c:	8fbf0084 	lw	ra,132(sp)
9d00f180:	8ca30000 	lw	v1,0(a1)
9d00f184:	2c620042 	sltiu	v0,v1,66
9d00f188:	1440000f 	bnez	v0,9d00f1c8 <d_print_comp+0x8c>
9d00f18c:	3c029d01 	lui	v0,0x9d01
9d00f190:	24020001 	li	v0,1
9d00f194:	ae62011c 	sw	v0,284(s3)
9d00f198:	8fbf0084 	lw	ra,132(sp)
9d00f19c:	8fbe0080 	lw	s8,128(sp)
9d00f1a0:	8fb7007c 	lw	s7,124(sp)
9d00f1a4:	8fb60078 	lw	s6,120(sp)
9d00f1a8:	8fb50074 	lw	s5,116(sp)
9d00f1ac:	8fb40070 	lw	s4,112(sp)
9d00f1b0:	8fb3006c 	lw	s3,108(sp)
9d00f1b4:	8fb20068 	lw	s2,104(sp)
9d00f1b8:	8fb10064 	lw	s1,100(sp)
9d00f1bc:	8fb00060 	lw	s0,96(sp)
9d00f1c0:	03e00008 	jr	ra
9d00f1c4:	27bd0088 	addiu	sp,sp,136
9d00f1c8:	00032080 	sll	a0,v1,0x2
9d00f1cc:	244274f0 	addiu	v0,v0,29936
9d00f1d0:	00441021 	addu	v0,v0,a0
9d00f1d4:	8c420000 	lw	v0,0(v0)
9d00f1d8:	00400008 	jr	v0
9d00f1dc:	00000000 	nop
9d00f1e0:	8e250004 	lw	a1,4(s1)
9d00f1e4:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f1e8:	02602021 	move	a0,s3
9d00f1ec:	8fbf0084 	lw	ra,132(sp)
9d00f1f0:	8fbe0080 	lw	s8,128(sp)
9d00f1f4:	8fb7007c 	lw	s7,124(sp)
9d00f1f8:	8fb60078 	lw	s6,120(sp)
9d00f1fc:	8fb50074 	lw	s5,116(sp)
9d00f200:	8fb40070 	lw	s4,112(sp)
9d00f204:	8fb3006c 	lw	s3,108(sp)
9d00f208:	8fb20068 	lw	s2,104(sp)
9d00f20c:	8fb10064 	lw	s1,100(sp)
9d00f210:	8fb00060 	lw	s0,96(sp)
9d00f214:	03e00008 	jr	ra
9d00f218:	27bd0088 	addiu	sp,sp,136
9d00f21c:	8ca50004 	lw	a1,4(a1)
9d00f220:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f224:	02602021 	move	a0,s3
9d00f228:	8e620000 	lw	v0,0(s3)
9d00f22c:	30420004 	andi	v0,v0,0x4
9d00f230:	10400806 	beqz	v0,9d01124c <d_print_comp+0x2110>
9d00f234:	240300ff 	li	v1,255
9d00f238:	8e620104 	lw	v0,260(s3)
9d00f23c:	1043093f 	beq	v0,v1,9d01173c <d_print_comp+0x2600>
9d00f240:	24440001 	addiu	a0,v0,1
9d00f244:	2403002e 	li	v1,46
9d00f248:	02621021 	addu	v0,s3,v0
9d00f24c:	a0430004 	sb	v1,4(v0)
9d00f250:	ae640104 	sw	a0,260(s3)
9d00f254:	a2630108 	sb	v1,264(s3)
9d00f258:	8e250008 	lw	a1,8(s1)
9d00f25c:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f260:	02602021 	move	a0,s3
9d00f264:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d00f268:	8fbf0084 	lw	ra,132(sp)
9d00f26c:	8e740118 	lw	s4,280(s3)
9d00f270:	8e620114 	lw	v0,276(s3)
9d00f274:	27b20018 	addiu	s2,sp,24
9d00f278:	afb40018 	sw	s4,24(sp)
9d00f27c:	02402021 	move	a0,s2
9d00f280:	ae720118 	sw	s2,280(s3)
9d00f284:	afa5001c 	sw	a1,28(sp)
9d00f288:	afa00020 	sw	zero,32(sp)
9d00f28c:	12800964 	beqz	s4,9d011820 <d_print_comp+0x26e4>
9d00f290:	afa20024 	sw	v0,36(sp)
9d00f294:	8e820004 	lw	v0,4(s4)
9d00f298:	8c420000 	lw	v0,0(v0)
9d00f29c:	2442ffe9 	addiu	v0,v0,-23
9d00f2a0:	2c420003 	sltiu	v0,v0,3
9d00f2a4:	1040095e 	beqz	v0,9d011820 <d_print_comp+0x26e4>
9d00f2a8:	02801021 	move	v0,s4
9d00f2ac:	24100001 	li	s0,1
9d00f2b0:	0b403cb3 	j	9d00f2cc <d_print_comp+0x190>
9d00f2b4:	24080001 	li	t0,1
9d00f2b8:	8c630000 	lw	v1,0(v1)
9d00f2bc:	2463ffe9 	addiu	v1,v1,-23
9d00f2c0:	2c630003 	sltiu	v1,v1,3
9d00f2c4:	50600017 	beqzl	v1,9d00f324 <d_print_comp+0x1e8>
9d00f2c8:	8e250008 	lw	a1,8(s1)
9d00f2cc:	8c430008 	lw	v1,8(v0)
9d00f2d0:	54600011 	bnezl	v1,9d00f318 <d_print_comp+0x1dc>
9d00f2d4:	8c420000 	lw	v0,0(v0)
9d00f2d8:	2e030004 	sltiu	v1,s0,4
9d00f2dc:	1060ffac 	beqz	v1,9d00f190 <d_print_comp+0x54>
9d00f2e0:	27a90010 	addiu	t1,sp,16
9d00f2e4:	8c470004 	lw	a3,4(v0)
9d00f2e8:	8c46000c 	lw	a2,12(v0)
9d00f2ec:	00102900 	sll	a1,s0,0x4
9d00f2f0:	01251821 	addu	v1,t1,a1
9d00f2f4:	ac640008 	sw	a0,8(v1)
9d00f2f8:	02452021 	addu	a0,s2,a1
9d00f2fc:	ac67000c 	sw	a3,12(v1)
9d00f300:	ac600010 	sw	zero,16(v1)
9d00f304:	ac660014 	sw	a2,20(v1)
9d00f308:	26100001 	addiu	s0,s0,1
9d00f30c:	ae640118 	sw	a0,280(s3)
9d00f310:	ac480008 	sw	t0,8(v0)
9d00f314:	8c420000 	lw	v0,0(v0)
9d00f318:	5440ffe7 	bnezl	v0,9d00f2b8 <d_print_comp+0x17c>
9d00f31c:	8c430004 	lw	v1,4(v0)
9d00f320:	8e250008 	lw	a1,8(s1)
9d00f324:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f328:	02602021 	move	a0,s3
9d00f32c:	8fa20020 	lw	v0,32(sp)
9d00f330:	1440ff99 	bnez	v0,9d00f198 <d_print_comp+0x5c>
9d00f334:	ae740118 	sw	s4,280(s3)
9d00f338:	24020001 	li	v0,1
9d00f33c:	1202000e 	beq	s0,v0,9d00f378 <d_print_comp+0x23c>
9d00f340:	02602021 	move	a0,s3
9d00f344:	2614ffff 	addiu	s4,s0,-1
9d00f348:	00141100 	sll	v0,s4,0x4
9d00f34c:	02429021 	addu	s2,s2,v0
9d00f350:	26520004 	addiu	s2,s2,4
9d00f354:	24100001 	li	s0,1
9d00f358:	8e450000 	lw	a1,0(s2)
9d00f35c:	02602021 	move	a0,s3
9d00f360:	0f4046d0 	jal	9d011b40 <d_print_mod>
9d00f364:	2652fff0 	addiu	s2,s2,-16
9d00f368:	1690fffb 	bne	s4,s0,9d00f358 <d_print_comp+0x21c>
9d00f36c:	2694ffff 	addiu	s4,s4,-1
9d00f370:	8e740118 	lw	s4,280(s3)
9d00f374:	02602021 	move	a0,s3
9d00f378:	26250004 	addiu	a1,s1,4
9d00f37c:	0f404973 	jal	9d0125cc <d_print_array_type.clone.5>
9d00f380:	02803021 	move	a2,s4
9d00f384:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d00f388:	8fbf0084 	lw	ra,132(sp)
9d00f38c:	3c129d01 	lui	s2,0x9d01
9d00f390:	26526bd0 	addiu	s2,s2,27600
9d00f394:	8e620104 	lw	v0,260(s3)
9d00f398:	26560009 	addiu	s6,s2,9
9d00f39c:	241500ff 	li	s5,255
9d00f3a0:	0b403cf2 	j	9d00f3c8 <d_print_comp+0x28c>
9d00f3a4:	26700004 	addiu	s0,s3,4
9d00f3a8:	00401821 	move	v1,v0
9d00f3ac:	24420001 	addiu	v0,v0,1
9d00f3b0:	02631821 	addu	v1,s3,v1
9d00f3b4:	26520001 	addiu	s2,s2,1
9d00f3b8:	a0740004 	sb	s4,4(v1)
9d00f3bc:	ae620104 	sw	v0,260(s3)
9d00f3c0:	1256ffa5 	beq	s2,s6,9d00f258 <d_print_comp+0x11c>
9d00f3c4:	a2740108 	sb	s4,264(s3)
9d00f3c8:	1455fff7 	bne	v0,s5,9d00f3a8 <d_print_comp+0x26c>
9d00f3cc:	82540000 	lb	s4,0(s2)
9d00f3d0:	8e62010c 	lw	v0,268(s3)
9d00f3d4:	8e660110 	lw	a2,272(s3)
9d00f3d8:	02002021 	move	a0,s0
9d00f3dc:	a2600103 	sb	zero,259(s3)
9d00f3e0:	0040f809 	jalr	v0
9d00f3e4:	240500ff 	li	a1,255
9d00f3e8:	8e640124 	lw	a0,292(s3)
9d00f3ec:	24020001 	li	v0,1
9d00f3f0:	00001821 	move	v1,zero
9d00f3f4:	24840001 	addiu	a0,a0,1
9d00f3f8:	0b403cec 	j	9d00f3b0 <d_print_comp+0x274>
9d00f3fc:	ae640124 	sw	a0,292(s3)
9d00f400:	3c129d01 	lui	s2,0x9d01
9d00f404:	26526bd0 	addiu	s2,s2,27600
9d00f408:	8e620104 	lw	v0,260(s3)
9d00f40c:	26560009 	addiu	s6,s2,9
9d00f410:	241500ff 	li	s5,255
9d00f414:	0b403d0f 	j	9d00f43c <d_print_comp+0x300>
9d00f418:	26700004 	addiu	s0,s3,4
9d00f41c:	00401821 	move	v1,v0
9d00f420:	24420001 	addiu	v0,v0,1
9d00f424:	02631821 	addu	v1,s3,v1
9d00f428:	26520001 	addiu	s2,s2,1
9d00f42c:	a0740004 	sb	s4,4(v1)
9d00f430:	ae620104 	sw	v0,260(s3)
9d00f434:	1256064d 	beq	s2,s6,9d010d6c <d_print_comp+0x1c30>
9d00f438:	a2740108 	sb	s4,264(s3)
9d00f43c:	1455fff7 	bne	v0,s5,9d00f41c <d_print_comp+0x2e0>
9d00f440:	82540000 	lb	s4,0(s2)
9d00f444:	8e62010c 	lw	v0,268(s3)
9d00f448:	8e660110 	lw	a2,272(s3)
9d00f44c:	02002021 	move	a0,s0
9d00f450:	a2600103 	sb	zero,259(s3)
9d00f454:	0040f809 	jalr	v0
9d00f458:	240500ff 	li	a1,255
9d00f45c:	8e640124 	lw	a0,292(s3)
9d00f460:	24020001 	li	v0,1
9d00f464:	00001821 	move	v1,zero
9d00f468:	24840001 	addiu	a0,a0,1
9d00f46c:	0b403d09 	j	9d00f424 <d_print_comp+0x2e8>
9d00f470:	ae640124 	sw	a0,292(s3)
9d00f474:	8ca50004 	lw	a1,4(a1)
9d00f478:	2402002e 	li	v0,46
9d00f47c:	8ca30000 	lw	v1,0(a1)
9d00f480:	50620735 	beql	v1,v0,9d011158 <d_print_comp+0x201c>
9d00f484:	8e620104 	lw	v0,260(s3)
9d00f488:	0f404b6f 	jal	9d012dbc <d_print_expr_op>
9d00f48c:	02602021 	move	a0,s3
9d00f490:	8e250008 	lw	a1,8(s1)
9d00f494:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d00f498:	02602021 	move	a0,s3
9d00f49c:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d00f4a0:	8fbf0084 	lw	ra,132(sp)
9d00f4a4:	8ca20008 	lw	v0,8(a1)
9d00f4a8:	24030031 	li	v1,49
9d00f4ac:	8c440000 	lw	a0,0(v0)
9d00f4b0:	5483ff38 	bnel	a0,v1,9d00f194 <d_print_comp+0x58>
9d00f4b4:	24020001 	li	v0,1
9d00f4b8:	8ca30004 	lw	v1,4(a1)
9d00f4bc:	2404002c 	li	a0,44
9d00f4c0:	8c650000 	lw	a1,0(v1)
9d00f4c4:	50a40848 	beql	a1,a0,9d0115e8 <d_print_comp+0x24ac>
9d00f4c8:	8c630004 	lw	v1,4(v1)
9d00f4cc:	8c450004 	lw	a1,4(v0)
9d00f4d0:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d00f4d4:	02602021 	move	a0,s3
9d00f4d8:	8e320004 	lw	s2,4(s1)
9d00f4dc:	3c059d01 	lui	a1,0x9d01
9d00f4e0:	24a56bdc 	addiu	a1,a1,27612
9d00f4e4:	8e420004 	lw	v0,4(s2)
9d00f4e8:	8c500000 	lw	s0,0(v0)
9d00f4ec:	0f401f65 	jal	9d007d94 <strcmp>
9d00f4f0:	02002021 	move	a0,s0
9d00f4f4:	144007ff 	bnez	v0,9d0114f4 <d_print_comp+0x23b8>
9d00f4f8:	3c059d01 	lui	a1,0x9d01
9d00f4fc:	8e620104 	lw	v0,260(s3)
9d00f500:	240300ff 	li	v1,255
9d00f504:	5043091d 	beql	v0,v1,9d01197c <d_print_comp+0x2840>
9d00f508:	8e62010c 	lw	v0,268(s3)
9d00f50c:	2403005b 	li	v1,91
9d00f510:	02622021 	addu	a0,s3,v0
9d00f514:	24420001 	addiu	v0,v0,1
9d00f518:	a0830004 	sb	v1,4(a0)
9d00f51c:	a2630108 	sb	v1,264(s3)
9d00f520:	ae620104 	sw	v0,260(s3)
9d00f524:	8e220008 	lw	v0,8(s1)
9d00f528:	02602021 	move	a0,s3
9d00f52c:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f530:	8c450008 	lw	a1,8(v0)
9d00f534:	8e620104 	lw	v0,260(s3)
9d00f538:	240300ff 	li	v1,255
9d00f53c:	50430905 	beql	v0,v1,9d011954 <d_print_comp+0x2818>
9d00f540:	8e62010c 	lw	v0,268(s3)
9d00f544:	2403005d 	li	v1,93
9d00f548:	02622021 	addu	a0,s3,v0
9d00f54c:	24420001 	addiu	v0,v0,1
9d00f550:	a0830004 	sb	v1,4(a0)
9d00f554:	ae620104 	sw	v0,260(s3)
9d00f558:	a2630108 	sb	v1,264(s3)
9d00f55c:	8e220004 	lw	v0,4(s1)
9d00f560:	2403002c 	li	v1,44
9d00f564:	8c440000 	lw	a0,0(v0)
9d00f568:	1483ff0c 	bne	a0,v1,9d00f19c <d_print_comp+0x60>
9d00f56c:	8fbf0084 	lw	ra,132(sp)
9d00f570:	8c420004 	lw	v0,4(v0)
9d00f574:	24030001 	li	v1,1
9d00f578:	8c440008 	lw	a0,8(v0)
9d00f57c:	1483ff08 	bne	a0,v1,9d00f1a0 <d_print_comp+0x64>
9d00f580:	8fbe0080 	lw	s8,128(sp)
9d00f584:	8c420004 	lw	v0,4(v0)
9d00f588:	80430000 	lb	v1,0(v0)
9d00f58c:	2402003e 	li	v0,62
9d00f590:	1462ff04 	bne	v1,v0,9d00f1a4 <d_print_comp+0x68>
9d00f594:	8fb7007c 	lw	s7,124(sp)
9d00f598:	8e620104 	lw	v0,260(s3)
9d00f59c:	240300ff 	li	v1,255
9d00f5a0:	50430950 	beql	v0,v1,9d011ae4 <d_print_comp+0x29a8>
9d00f5a4:	8e62010c 	lw	v0,268(s3)
9d00f5a8:	0b403e60 	j	9d00f980 <d_print_comp+0x844>
9d00f5ac:	24030029 	li	v1,41
9d00f5b0:	8ca50004 	lw	a1,4(a1)
9d00f5b4:	0f403110 	jal	9d00c440 <d_find_pack>
9d00f5b8:	02602021 	move	a0,s3
9d00f5bc:	5040089f 	beqzl	v0,9d01183c <d_print_comp+0x2700>
9d00f5c0:	8e250004 	lw	a1,4(s1)
9d00f5c4:	8c440000 	lw	a0,0(v0)
9d00f5c8:	2403002b 	li	v1,43
9d00f5cc:	1483fef2 	bne	a0,v1,9d00f198 <d_print_comp+0x5c>
9d00f5d0:	0000b821 	move	s7,zero
9d00f5d4:	8c430004 	lw	v1,4(v0)
9d00f5d8:	1460000a 	bnez	v1,9d00f604 <d_print_comp+0x4c8>
9d00f5dc:	2404002b 	li	a0,43
9d00f5e0:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d00f5e4:	8fbf0084 	lw	ra,132(sp)
9d00f5e8:	8c450000 	lw	a1,0(v0)
9d00f5ec:	14a40009 	bne	a1,a0,9d00f614 <d_print_comp+0x4d8>
9d00f5f0:	3c129d01 	lui	s2,0x9d01
9d00f5f4:	8c450004 	lw	a1,4(v0)
9d00f5f8:	10a00007 	beqz	a1,9d00f618 <d_print_comp+0x4dc>
9d00f5fc:	26526bc0 	addiu	s2,s2,27584
9d00f600:	0060b821 	move	s7,v1
9d00f604:	8c420008 	lw	v0,8(v0)
9d00f608:	1440fff7 	bnez	v0,9d00f5e8 <d_print_comp+0x4ac>
9d00f60c:	26e30001 	addiu	v1,s7,1
9d00f610:	3c129d01 	lui	s2,0x9d01
9d00f614:	26526bc0 	addiu	s2,s2,27584
9d00f618:	8e300004 	lw	s0,4(s1)
9d00f61c:	0000b021 	move	s6,zero
9d00f620:	26420002 	addiu	v0,s2,2
9d00f624:	241e00ff 	li	s8,255
9d00f628:	0b403d90 	j	9d00f640 <d_print_comp+0x504>
9d00f62c:	26710004 	addiu	s1,s3,4
9d00f630:	26d60001 	addiu	s6,s6,1
9d00f634:	02c3202a 	slt	a0,s6,v1
9d00f638:	1080fed8 	beqz	a0,9d00f19c <d_print_comp+0x60>
9d00f63c:	8fbf0084 	lw	ra,132(sp)
9d00f640:	ae760120 	sw	s6,288(s3)
9d00f644:	02602021 	move	a0,s3
9d00f648:	02002821 	move	a1,s0
9d00f64c:	afa2005c 	sw	v0,92(sp)
9d00f650:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f654:	afa30058 	sw	v1,88(sp)
9d00f658:	02d7202a 	slt	a0,s6,s7
9d00f65c:	8fa2005c 	lw	v0,92(sp)
9d00f660:	1080fff3 	beqz	a0,9d00f630 <d_print_comp+0x4f4>
9d00f664:	8fa30058 	lw	v1,88(sp)
9d00f668:	8e640104 	lw	a0,260(s3)
9d00f66c:	0b403da5 	j	9d00f694 <d_print_comp+0x558>
9d00f670:	0240a021 	move	s4,s2
9d00f674:	00802821 	move	a1,a0
9d00f678:	24840001 	addiu	a0,a0,1
9d00f67c:	02652821 	addu	a1,s3,a1
9d00f680:	26940001 	addiu	s4,s4,1
9d00f684:	a0b50004 	sb	s5,4(a1)
9d00f688:	ae640104 	sw	a0,260(s3)
9d00f68c:	1282ffe8 	beq	s4,v0,9d00f630 <d_print_comp+0x4f4>
9d00f690:	a2750108 	sb	s5,264(s3)
9d00f694:	149efff7 	bne	a0,s8,9d00f674 <d_print_comp+0x538>
9d00f698:	82950000 	lb	s5,0(s4)
9d00f69c:	8e660110 	lw	a2,272(s3)
9d00f6a0:	8e67010c 	lw	a3,268(s3)
9d00f6a4:	a2600103 	sb	zero,259(s3)
9d00f6a8:	02202021 	move	a0,s1
9d00f6ac:	240500ff 	li	a1,255
9d00f6b0:	afa2005c 	sw	v0,92(sp)
9d00f6b4:	00e0f809 	jalr	a3
9d00f6b8:	afa30058 	sw	v1,88(sp)
9d00f6bc:	8e660124 	lw	a2,292(s3)
9d00f6c0:	24040001 	li	a0,1
9d00f6c4:	00002821 	move	a1,zero
9d00f6c8:	24c60001 	addiu	a2,a2,1
9d00f6cc:	ae660124 	sw	a2,292(s3)
9d00f6d0:	8fa30058 	lw	v1,88(sp)
9d00f6d4:	0b403d9f 	j	9d00f67c <d_print_comp+0x540>
9d00f6d8:	8fa2005c 	lw	v0,92(sp)
9d00f6dc:	8ca20008 	lw	v0,8(a1)
9d00f6e0:	24030033 	li	v1,51
9d00f6e4:	8c440000 	lw	a0,0(v0)
9d00f6e8:	5483feaa 	bnel	a0,v1,9d00f194 <d_print_comp+0x58>
9d00f6ec:	24020001 	li	v0,1
9d00f6f0:	8c430008 	lw	v1,8(v0)
9d00f6f4:	8c640000 	lw	a0,0(v1)
9d00f6f8:	24030034 	li	v1,52
9d00f6fc:	5483fea5 	bnel	a0,v1,9d00f194 <d_print_comp+0x58>
9d00f700:	24020001 	li	v0,1
9d00f704:	8c450004 	lw	a1,4(v0)
9d00f708:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d00f70c:	02602021 	move	a0,s3
9d00f710:	8e250004 	lw	a1,4(s1)
9d00f714:	0f404b6f 	jal	9d012dbc <d_print_expr_op>
9d00f718:	02602021 	move	a0,s3
9d00f71c:	8e220008 	lw	v0,8(s1)
9d00f720:	02602021 	move	a0,s3
9d00f724:	8c420008 	lw	v0,8(v0)
9d00f728:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d00f72c:	8c450004 	lw	a1,4(v0)
9d00f730:	3c059d01 	lui	a1,0x9d01
9d00f734:	02602021 	move	a0,s3
9d00f738:	0f403c14 	jal	9d00f050 <d_append_string>
9d00f73c:	24a56be0 	addiu	a1,a1,27616
9d00f740:	8e220008 	lw	v0,8(s1)
9d00f744:	02602021 	move	a0,s3
9d00f748:	8c420008 	lw	v0,8(v0)
9d00f74c:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d00f750:	8c450008 	lw	a1,8(v0)
9d00f754:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d00f758:	8fbf0084 	lw	ra,132(sp)
9d00f75c:	3c129d01 	lui	s2,0x9d01
9d00f760:	26526c7c 	addiu	s2,s2,27772
9d00f764:	8e620104 	lw	v0,260(s3)
9d00f768:	2656000e 	addiu	s6,s2,14
9d00f76c:	241500ff 	li	s5,255
9d00f770:	0b403de6 	j	9d00f798 <d_print_comp+0x65c>
9d00f774:	26700004 	addiu	s0,s3,4
9d00f778:	00401821 	move	v1,v0
9d00f77c:	24420001 	addiu	v0,v0,1
9d00f780:	02631821 	addu	v1,s3,v1
9d00f784:	26520001 	addiu	s2,s2,1
9d00f788:	a0740004 	sb	s4,4(v1)
9d00f78c:	ae620104 	sw	v0,260(s3)
9d00f790:	1256054d 	beq	s2,s6,9d010cc8 <d_print_comp+0x1b8c>
9d00f794:	a2740108 	sb	s4,264(s3)
9d00f798:	1455fff7 	bne	v0,s5,9d00f778 <d_print_comp+0x63c>
9d00f79c:	82540000 	lb	s4,0(s2)
9d00f7a0:	8e62010c 	lw	v0,268(s3)
9d00f7a4:	8e660110 	lw	a2,272(s3)
9d00f7a8:	02002021 	move	a0,s0
9d00f7ac:	a2600103 	sb	zero,259(s3)
9d00f7b0:	0040f809 	jalr	v0
9d00f7b4:	240500ff 	li	a1,255
9d00f7b8:	8e640124 	lw	a0,292(s3)
9d00f7bc:	24020001 	li	v0,1
9d00f7c0:	00001821 	move	v1,zero
9d00f7c4:	24840001 	addiu	a0,a0,1
9d00f7c8:	0b403de0 	j	9d00f780 <d_print_comp+0x644>
9d00f7cc:	ae640124 	sw	a0,292(s3)
9d00f7d0:	8ca50004 	lw	a1,4(a1)
9d00f7d4:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f7d8:	02602021 	move	a0,s3
9d00f7dc:	8e250008 	lw	a1,8(s1)
9d00f7e0:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f7e4:	02602021 	move	a0,s3
9d00f7e8:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d00f7ec:	8fbf0084 	lw	ra,132(sp)
9d00f7f0:	8e620104 	lw	v0,260(s3)
9d00f7f4:	240300ff 	li	v1,255
9d00f7f8:	1043071a 	beq	v0,v1,9d011464 <d_print_comp+0x2328>
9d00f7fc:	80b00004 	lb	s0,4(a1)
9d00f800:	24430001 	addiu	v1,v0,1
9d00f804:	02621021 	addu	v0,s3,v0
9d00f808:	a0500004 	sb	s0,4(v0)
9d00f80c:	ae630104 	sw	v1,260(s3)
9d00f810:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d00f814:	a2700108 	sb	s0,264(s3)
9d00f818:	8ca60004 	lw	a2,4(a1)
9d00f81c:	27b20018 	addiu	s2,sp,24
9d00f820:	3c059d01 	lui	a1,0x9d01
9d00f824:	02402021 	move	a0,s2
9d00f828:	0f401f4b 	jal	9d007d2c <sprintf>
9d00f82c:	24a56c00 	addiu	a1,a1,27648
9d00f830:	0f401f87 	jal	9d007e1c <strlen>
9d00f834:	02402021 	move	a0,s2
9d00f838:	1040fe57 	beqz	v0,9d00f198 <d_print_comp+0x5c>
9d00f83c:	00008821 	move	s1,zero
9d00f840:	8e630104 	lw	v1,260(s3)
9d00f844:	241500ff 	li	s5,255
9d00f848:	0b403e1d 	j	9d00f874 <d_print_comp+0x738>
9d00f84c:	26700004 	addiu	s0,s3,4
9d00f850:	00602821 	move	a1,v1
9d00f854:	24630001 	addiu	v1,v1,1
9d00f858:	26310001 	addiu	s1,s1,1
9d00f85c:	02652821 	addu	a1,s3,a1
9d00f860:	0222202b 	sltu	a0,s1,v0
9d00f864:	a0b40004 	sb	s4,4(a1)
9d00f868:	ae630104 	sw	v1,260(s3)
9d00f86c:	1080fe4a 	beqz	a0,9d00f198 <d_print_comp+0x5c>
9d00f870:	a2740108 	sb	s4,264(s3)
9d00f874:	02512021 	addu	a0,s2,s1
9d00f878:	1475fff5 	bne	v1,s5,9d00f850 <d_print_comp+0x714>
9d00f87c:	80940000 	lb	s4,0(a0)
9d00f880:	8e63010c 	lw	v1,268(s3)
9d00f884:	8e660110 	lw	a2,272(s3)
9d00f888:	a2600103 	sb	zero,259(s3)
9d00f88c:	02002021 	move	a0,s0
9d00f890:	240500ff 	li	a1,255
9d00f894:	0060f809 	jalr	v1
9d00f898:	afa2005c 	sw	v0,92(sp)
9d00f89c:	8e640124 	lw	a0,292(s3)
9d00f8a0:	24030001 	li	v1,1
9d00f8a4:	00002821 	move	a1,zero
9d00f8a8:	24840001 	addiu	a0,a0,1
9d00f8ac:	ae640124 	sw	a0,292(s3)
9d00f8b0:	0b403e16 	j	9d00f858 <d_print_comp+0x71c>
9d00f8b4:	8fa2005c 	lw	v0,92(sp)
9d00f8b8:	8ca20004 	lw	v0,4(a1)
9d00f8bc:	24040023 	li	a0,35
9d00f8c0:	8c450000 	lw	a1,0(v0)
9d00f8c4:	10a4067e 	beq	a1,a0,9d0112c0 <d_print_comp+0x2184>
9d00f8c8:	00008021 	move	s0,zero
9d00f8cc:	8e620104 	lw	v0,260(s3)
9d00f8d0:	240300ff 	li	v1,255
9d00f8d4:	10430714 	beq	v0,v1,9d011528 <d_print_comp+0x23ec>
9d00f8d8:	24440001 	addiu	a0,v0,1
9d00f8dc:	24030028 	li	v1,40
9d00f8e0:	02621021 	addu	v0,s3,v0
9d00f8e4:	a0430004 	sb	v1,4(v0)
9d00f8e8:	ae640104 	sw	a0,260(s3)
9d00f8ec:	a2630108 	sb	v1,264(s3)
9d00f8f0:	8e250004 	lw	a1,4(s1)
9d00f8f4:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f8f8:	02602021 	move	a0,s3
9d00f8fc:	8e620104 	lw	v0,260(s3)
9d00f900:	240300ff 	li	v1,255
9d00f904:	10430714 	beq	v0,v1,9d011558 <d_print_comp+0x241c>
9d00f908:	24440001 	addiu	a0,v0,1
9d00f90c:	24030029 	li	v1,41
9d00f910:	02621021 	addu	v0,s3,v0
9d00f914:	a0430004 	sb	v1,4(v0)
9d00f918:	a2630108 	sb	v1,264(s3)
9d00f91c:	8e230000 	lw	v1,0(s1)
9d00f920:	24020036 	li	v0,54
9d00f924:	10620689 	beq	v1,v0,9d01134c <d_print_comp+0x2210>
9d00f928:	ae640104 	sw	a0,260(s3)
9d00f92c:	24020008 	li	v0,8
9d00f930:	5602fe4a 	bnel	s0,v0,9d00f25c <d_print_comp+0x120>
9d00f934:	8e250008 	lw	a1,8(s1)
9d00f938:	8e620104 	lw	v0,260(s3)
9d00f93c:	240300ff 	li	v1,255
9d00f940:	504307da 	beql	v0,v1,9d0118ac <d_print_comp+0x2770>
9d00f944:	8e62010c 	lw	v0,268(s3)
9d00f948:	2403005b 	li	v1,91
9d00f94c:	02622021 	addu	a0,s3,v0
9d00f950:	24420001 	addiu	v0,v0,1
9d00f954:	a0830004 	sb	v1,4(a0)
9d00f958:	ae620104 	sw	v0,260(s3)
9d00f95c:	a2630108 	sb	v1,264(s3)
9d00f960:	8e250008 	lw	a1,8(s1)
9d00f964:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d00f968:	02602021 	move	a0,s3
9d00f96c:	8e620104 	lw	v0,260(s3)
9d00f970:	240300ff 	li	v1,255
9d00f974:	50430448 	beql	v0,v1,9d010a98 <d_print_comp+0x195c>
9d00f978:	8e62010c 	lw	v0,268(s3)
9d00f97c:	2403005d 	li	v1,93
9d00f980:	02622021 	addu	a0,s3,v0
9d00f984:	24420001 	addiu	v0,v0,1
9d00f988:	a0830004 	sb	v1,4(a0)
9d00f98c:	ae620104 	sw	v0,260(s3)
9d00f990:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d00f994:	a2630108 	sb	v1,264(s3)
9d00f998:	3c129d01 	lui	s2,0x9d01
9d00f99c:	26526c04 	addiu	s2,s2,27652
9d00f9a0:	8e620104 	lw	v0,260(s3)
9d00f9a4:	2656000e 	addiu	s6,s2,14
9d00f9a8:	241500ff 	li	s5,255
9d00f9ac:	0b403e75 	j	9d00f9d4 <d_print_comp+0x898>
9d00f9b0:	26700004 	addiu	s0,s3,4
9d00f9b4:	00401821 	move	v1,v0
9d00f9b8:	24420001 	addiu	v0,v0,1
9d00f9bc:	02631821 	addu	v1,s3,v1
9d00f9c0:	26520001 	addiu	s2,s2,1
9d00f9c4:	a0740004 	sb	s4,4(v1)
9d00f9c8:	ae620104 	sw	v0,260(s3)
9d00f9cc:	1256fe04 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00f9d0:	a2740108 	sb	s4,264(s3)
9d00f9d4:	1455fff7 	bne	v0,s5,9d00f9b4 <d_print_comp+0x878>
9d00f9d8:	82540000 	lb	s4,0(s2)
9d00f9dc:	8e62010c 	lw	v0,268(s3)
9d00f9e0:	8e660110 	lw	a2,272(s3)
9d00f9e4:	02002021 	move	a0,s0
9d00f9e8:	a2600103 	sb	zero,259(s3)
9d00f9ec:	0040f809 	jalr	v0
9d00f9f0:	240500ff 	li	a1,255
9d00f9f4:	8e640124 	lw	a0,292(s3)
9d00f9f8:	24020001 	li	v0,1
9d00f9fc:	00001821 	move	v1,zero
9d00fa00:	24840001 	addiu	a0,a0,1
9d00fa04:	0b403e6f 	j	9d00f9bc <d_print_comp+0x880>
9d00fa08:	ae640124 	sw	a0,292(s3)
9d00fa0c:	3c129d01 	lui	s2,0x9d01
9d00fa10:	26526c14 	addiu	s2,s2,27668
9d00fa14:	8e620104 	lw	v0,260(s3)
9d00fa18:	2656000a 	addiu	s6,s2,10
9d00fa1c:	241500ff 	li	s5,255
9d00fa20:	0b403e92 	j	9d00fa48 <d_print_comp+0x90c>
9d00fa24:	26700004 	addiu	s0,s3,4
9d00fa28:	00401821 	move	v1,v0
9d00fa2c:	24420001 	addiu	v0,v0,1
9d00fa30:	02631821 	addu	v1,s3,v1
9d00fa34:	26520001 	addiu	s2,s2,1
9d00fa38:	a0740004 	sb	s4,4(v1)
9d00fa3c:	ae620104 	sw	v0,260(s3)
9d00fa40:	12560494 	beq	s2,s6,9d010c94 <d_print_comp+0x1b58>
9d00fa44:	a2740108 	sb	s4,264(s3)
9d00fa48:	1455fff7 	bne	v0,s5,9d00fa28 <d_print_comp+0x8ec>
9d00fa4c:	82540000 	lb	s4,0(s2)
9d00fa50:	8e62010c 	lw	v0,268(s3)
9d00fa54:	8e660110 	lw	a2,272(s3)
9d00fa58:	02002021 	move	a0,s0
9d00fa5c:	a2600103 	sb	zero,259(s3)
9d00fa60:	0040f809 	jalr	v0
9d00fa64:	240500ff 	li	a1,255
9d00fa68:	8e640124 	lw	a0,292(s3)
9d00fa6c:	24020001 	li	v0,1
9d00fa70:	00001821 	move	v1,zero
9d00fa74:	24840001 	addiu	a0,a0,1
9d00fa78:	0b403e8c 	j	9d00fa30 <d_print_comp+0x8f4>
9d00fa7c:	ae640124 	sw	a0,292(s3)
9d00fa80:	3c129d01 	lui	s2,0x9d01
9d00fa84:	26526c2c 	addiu	s2,s2,27692
9d00fa88:	8e620104 	lw	v0,260(s3)
9d00fa8c:	2656001d 	addiu	s6,s2,29
9d00fa90:	241500ff 	li	s5,255
9d00fa94:	0b403eaf 	j	9d00fabc <d_print_comp+0x980>
9d00fa98:	26700004 	addiu	s0,s3,4
9d00fa9c:	00401821 	move	v1,v0
9d00faa0:	24420001 	addiu	v0,v0,1
9d00faa4:	02631821 	addu	v1,s3,v1
9d00faa8:	26520001 	addiu	s2,s2,1
9d00faac:	a0740004 	sb	s4,4(v1)
9d00fab0:	ae620104 	sw	v0,260(s3)
9d00fab4:	1256fdca 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fab8:	a2740108 	sb	s4,264(s3)
9d00fabc:	1455fff7 	bne	v0,s5,9d00fa9c <d_print_comp+0x960>
9d00fac0:	82540000 	lb	s4,0(s2)
9d00fac4:	8e62010c 	lw	v0,268(s3)
9d00fac8:	8e660110 	lw	a2,272(s3)
9d00facc:	02002021 	move	a0,s0
9d00fad0:	a2600103 	sb	zero,259(s3)
9d00fad4:	0040f809 	jalr	v0
9d00fad8:	240500ff 	li	a1,255
9d00fadc:	8e640124 	lw	a0,292(s3)
9d00fae0:	24020001 	li	v0,1
9d00fae4:	00001821 	move	v1,zero
9d00fae8:	24840001 	addiu	a0,a0,1
9d00faec:	0b403ea9 	j	9d00faa4 <d_print_comp+0x968>
9d00faf0:	ae640124 	sw	a0,292(s3)
9d00faf4:	3c129d01 	lui	s2,0x9d01
9d00faf8:	26526c4c 	addiu	s2,s2,27724
9d00fafc:	8e620104 	lw	v0,260(s3)
9d00fb00:	2656001c 	addiu	s6,s2,28
9d00fb04:	241500ff 	li	s5,255
9d00fb08:	0b403ecc 	j	9d00fb30 <d_print_comp+0x9f4>
9d00fb0c:	26700004 	addiu	s0,s3,4
9d00fb10:	00401821 	move	v1,v0
9d00fb14:	24420001 	addiu	v0,v0,1
9d00fb18:	02631821 	addu	v1,s3,v1
9d00fb1c:	26520001 	addiu	s2,s2,1
9d00fb20:	a0740004 	sb	s4,4(v1)
9d00fb24:	ae620104 	sw	v0,260(s3)
9d00fb28:	1256fdad 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fb2c:	a2740108 	sb	s4,264(s3)
9d00fb30:	1455fff7 	bne	v0,s5,9d00fb10 <d_print_comp+0x9d4>
9d00fb34:	82540000 	lb	s4,0(s2)
9d00fb38:	8e62010c 	lw	v0,268(s3)
9d00fb3c:	8e660110 	lw	a2,272(s3)
9d00fb40:	02002021 	move	a0,s0
9d00fb44:	a2600103 	sb	zero,259(s3)
9d00fb48:	0040f809 	jalr	v0
9d00fb4c:	240500ff 	li	a1,255
9d00fb50:	8e640124 	lw	a0,292(s3)
9d00fb54:	24020001 	li	v0,1
9d00fb58:	00001821 	move	v1,zero
9d00fb5c:	24840001 	addiu	a0,a0,1
9d00fb60:	0b403ec6 	j	9d00fb18 <d_print_comp+0x9dc>
9d00fb64:	ae640124 	sw	a0,292(s3)
9d00fb68:	3c129d01 	lui	s2,0x9d01
9d00fb6c:	26526c6c 	addiu	s2,s2,27756
9d00fb70:	8e620104 	lw	v0,260(s3)
9d00fb74:	26560008 	addiu	s6,s2,8
9d00fb78:	241500ff 	li	s5,255
9d00fb7c:	0b403ee9 	j	9d00fba4 <d_print_comp+0xa68>
9d00fb80:	26700004 	addiu	s0,s3,4
9d00fb84:	00401821 	move	v1,v0
9d00fb88:	24420001 	addiu	v0,v0,1
9d00fb8c:	02631821 	addu	v1,s3,v1
9d00fb90:	26520001 	addiu	s2,s2,1
9d00fb94:	a0740004 	sb	s4,4(v1)
9d00fb98:	ae620104 	sw	v0,260(s3)
9d00fb9c:	125603ca 	beq	s2,s6,9d010ac8 <d_print_comp+0x198c>
9d00fba0:	a2740108 	sb	s4,264(s3)
9d00fba4:	1455fff7 	bne	v0,s5,9d00fb84 <d_print_comp+0xa48>
9d00fba8:	82540000 	lb	s4,0(s2)
9d00fbac:	8e62010c 	lw	v0,268(s3)
9d00fbb0:	8e660110 	lw	a2,272(s3)
9d00fbb4:	02002021 	move	a0,s0
9d00fbb8:	a2600103 	sb	zero,259(s3)
9d00fbbc:	0040f809 	jalr	v0
9d00fbc0:	240500ff 	li	a1,255
9d00fbc4:	8e640124 	lw	a0,292(s3)
9d00fbc8:	24020001 	li	v0,1
9d00fbcc:	00001821 	move	v1,zero
9d00fbd0:	24840001 	addiu	a0,a0,1
9d00fbd4:	0b403ee3 	j	9d00fb8c <d_print_comp+0xa50>
9d00fbd8:	ae640124 	sw	a0,292(s3)
9d00fbdc:	3c129d01 	lui	s2,0x9d01
9d00fbe0:	26526aac 	addiu	s2,s2,27308
9d00fbe4:	8e620104 	lw	v0,260(s3)
9d00fbe8:	2656000b 	addiu	s6,s2,11
9d00fbec:	241500ff 	li	s5,255
9d00fbf0:	0b403f06 	j	9d00fc18 <d_print_comp+0xadc>
9d00fbf4:	26700004 	addiu	s0,s3,4
9d00fbf8:	00401821 	move	v1,v0
9d00fbfc:	24420001 	addiu	v0,v0,1
9d00fc00:	02631821 	addu	v1,s3,v1
9d00fc04:	26520001 	addiu	s2,s2,1
9d00fc08:	a0740004 	sb	s4,4(v1)
9d00fc0c:	ae620104 	sw	v0,260(s3)
9d00fc10:	1256fd73 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fc14:	a2740108 	sb	s4,264(s3)
9d00fc18:	1455fff7 	bne	v0,s5,9d00fbf8 <d_print_comp+0xabc>
9d00fc1c:	82540000 	lb	s4,0(s2)
9d00fc20:	8e62010c 	lw	v0,268(s3)
9d00fc24:	8e660110 	lw	a2,272(s3)
9d00fc28:	02002021 	move	a0,s0
9d00fc2c:	a2600103 	sb	zero,259(s3)
9d00fc30:	0040f809 	jalr	v0
9d00fc34:	240500ff 	li	a1,255
9d00fc38:	8e640124 	lw	a0,292(s3)
9d00fc3c:	24020001 	li	v0,1
9d00fc40:	00001821 	move	v1,zero
9d00fc44:	24840001 	addiu	a0,a0,1
9d00fc48:	0b403f00 	j	9d00fc00 <d_print_comp+0xac4>
9d00fc4c:	ae640124 	sw	a0,292(s3)
9d00fc50:	3c129d01 	lui	s2,0x9d01
9d00fc54:	26526ab8 	addiu	s2,s2,27320
9d00fc58:	8e620104 	lw	v0,260(s3)
9d00fc5c:	26560008 	addiu	s6,s2,8
9d00fc60:	241500ff 	li	s5,255
9d00fc64:	0b403f23 	j	9d00fc8c <d_print_comp+0xb50>
9d00fc68:	26700004 	addiu	s0,s3,4
9d00fc6c:	00401821 	move	v1,v0
9d00fc70:	24420001 	addiu	v0,v0,1
9d00fc74:	02631821 	addu	v1,s3,v1
9d00fc78:	26520001 	addiu	s2,s2,1
9d00fc7c:	a0740004 	sb	s4,4(v1)
9d00fc80:	ae620104 	sw	v0,260(s3)
9d00fc84:	1256fd56 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fc88:	a2740108 	sb	s4,264(s3)
9d00fc8c:	1455fff7 	bne	v0,s5,9d00fc6c <d_print_comp+0xb30>
9d00fc90:	82540000 	lb	s4,0(s2)
9d00fc94:	8e62010c 	lw	v0,268(s3)
9d00fc98:	8e660110 	lw	a2,272(s3)
9d00fc9c:	02002021 	move	a0,s0
9d00fca0:	a2600103 	sb	zero,259(s3)
9d00fca4:	0040f809 	jalr	v0
9d00fca8:	240500ff 	li	a1,255
9d00fcac:	8e640124 	lw	a0,292(s3)
9d00fcb0:	24020001 	li	v0,1
9d00fcb4:	00001821 	move	v1,zero
9d00fcb8:	24840001 	addiu	a0,a0,1
9d00fcbc:	0b403f1d 	j	9d00fc74 <d_print_comp+0xb38>
9d00fcc0:	ae640124 	sw	a0,292(s3)
9d00fcc4:	3c129d01 	lui	s2,0x9d01
9d00fcc8:	26526ac4 	addiu	s2,s2,27332
9d00fccc:	8e620104 	lw	v0,260(s3)
9d00fcd0:	26560018 	addiu	s6,s2,24
9d00fcd4:	241500ff 	li	s5,255
9d00fcd8:	0b403f40 	j	9d00fd00 <d_print_comp+0xbc4>
9d00fcdc:	26700004 	addiu	s0,s3,4
9d00fce0:	00401821 	move	v1,v0
9d00fce4:	24420001 	addiu	v0,v0,1
9d00fce8:	02631821 	addu	v1,s3,v1
9d00fcec:	26520001 	addiu	s2,s2,1
9d00fcf0:	a0740004 	sb	s4,4(v1)
9d00fcf4:	ae620104 	sw	v0,260(s3)
9d00fcf8:	12560393 	beq	s2,s6,9d010b48 <d_print_comp+0x1a0c>
9d00fcfc:	a2740108 	sb	s4,264(s3)
9d00fd00:	1455fff7 	bne	v0,s5,9d00fce0 <d_print_comp+0xba4>
9d00fd04:	82540000 	lb	s4,0(s2)
9d00fd08:	8e62010c 	lw	v0,268(s3)
9d00fd0c:	8e660110 	lw	a2,272(s3)
9d00fd10:	02002021 	move	a0,s0
9d00fd14:	a2600103 	sb	zero,259(s3)
9d00fd18:	0040f809 	jalr	v0
9d00fd1c:	240500ff 	li	a1,255
9d00fd20:	8e640124 	lw	a0,292(s3)
9d00fd24:	24020001 	li	v0,1
9d00fd28:	00001821 	move	v1,zero
9d00fd2c:	24840001 	addiu	a0,a0,1
9d00fd30:	0b403f3a 	j	9d00fce8 <d_print_comp+0xbac>
9d00fd34:	ae640124 	sw	a0,292(s3)
9d00fd38:	3c129d01 	lui	s2,0x9d01
9d00fd3c:	26526ae8 	addiu	s2,s2,27368
9d00fd40:	8e620104 	lw	v0,260(s3)
9d00fd44:	2656000d 	addiu	s6,s2,13
9d00fd48:	241500ff 	li	s5,255
9d00fd4c:	0b403f5d 	j	9d00fd74 <d_print_comp+0xc38>
9d00fd50:	26700004 	addiu	s0,s3,4
9d00fd54:	00401821 	move	v1,v0
9d00fd58:	24420001 	addiu	v0,v0,1
9d00fd5c:	02631821 	addu	v1,s3,v1
9d00fd60:	26520001 	addiu	s2,s2,1
9d00fd64:	a0740004 	sb	s4,4(v1)
9d00fd68:	ae620104 	sw	v0,260(s3)
9d00fd6c:	1256fd1c 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fd70:	a2740108 	sb	s4,264(s3)
9d00fd74:	1455fff7 	bne	v0,s5,9d00fd54 <d_print_comp+0xc18>
9d00fd78:	82540000 	lb	s4,0(s2)
9d00fd7c:	8e62010c 	lw	v0,268(s3)
9d00fd80:	8e660110 	lw	a2,272(s3)
9d00fd84:	02002021 	move	a0,s0
9d00fd88:	a2600103 	sb	zero,259(s3)
9d00fd8c:	0040f809 	jalr	v0
9d00fd90:	240500ff 	li	a1,255
9d00fd94:	8e640124 	lw	a0,292(s3)
9d00fd98:	24020001 	li	v0,1
9d00fd9c:	00001821 	move	v1,zero
9d00fda0:	24840001 	addiu	a0,a0,1
9d00fda4:	0b403f57 	j	9d00fd5c <d_print_comp+0xc20>
9d00fda8:	ae640124 	sw	a0,292(s3)
9d00fdac:	3c129d01 	lui	s2,0x9d01
9d00fdb0:	26526af8 	addiu	s2,s2,27384
9d00fdb4:	8e620104 	lw	v0,260(s3)
9d00fdb8:	26560012 	addiu	s6,s2,18
9d00fdbc:	241500ff 	li	s5,255
9d00fdc0:	0b403f7a 	j	9d00fde8 <d_print_comp+0xcac>
9d00fdc4:	26700004 	addiu	s0,s3,4
9d00fdc8:	00401821 	move	v1,v0
9d00fdcc:	24420001 	addiu	v0,v0,1
9d00fdd0:	02631821 	addu	v1,s3,v1
9d00fdd4:	26520001 	addiu	s2,s2,1
9d00fdd8:	a0740004 	sb	s4,4(v1)
9d00fddc:	ae620104 	sw	v0,260(s3)
9d00fde0:	1256fcff 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fde4:	a2740108 	sb	s4,264(s3)
9d00fde8:	1455fff7 	bne	v0,s5,9d00fdc8 <d_print_comp+0xc8c>
9d00fdec:	82540000 	lb	s4,0(s2)
9d00fdf0:	8e62010c 	lw	v0,268(s3)
9d00fdf4:	8e660110 	lw	a2,272(s3)
9d00fdf8:	02002021 	move	a0,s0
9d00fdfc:	a2600103 	sb	zero,259(s3)
9d00fe00:	0040f809 	jalr	v0
9d00fe04:	240500ff 	li	a1,255
9d00fe08:	8e640124 	lw	a0,292(s3)
9d00fe0c:	24020001 	li	v0,1
9d00fe10:	00001821 	move	v1,zero
9d00fe14:	24840001 	addiu	a0,a0,1
9d00fe18:	0b403f74 	j	9d00fdd0 <d_print_comp+0xc94>
9d00fe1c:	ae640124 	sw	a0,292(s3)
9d00fe20:	3c129d01 	lui	s2,0x9d01
9d00fe24:	26526b0c 	addiu	s2,s2,27404
9d00fe28:	8e620104 	lw	v0,260(s3)
9d00fe2c:	26560010 	addiu	s6,s2,16
9d00fe30:	241500ff 	li	s5,255
9d00fe34:	0b403f97 	j	9d00fe5c <d_print_comp+0xd20>
9d00fe38:	26700004 	addiu	s0,s3,4
9d00fe3c:	00401821 	move	v1,v0
9d00fe40:	24420001 	addiu	v0,v0,1
9d00fe44:	02631821 	addu	v1,s3,v1
9d00fe48:	26520001 	addiu	s2,s2,1
9d00fe4c:	a0740004 	sb	s4,4(v1)
9d00fe50:	ae620104 	sw	v0,260(s3)
9d00fe54:	1256fce2 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fe58:	a2740108 	sb	s4,264(s3)
9d00fe5c:	1455fff7 	bne	v0,s5,9d00fe3c <d_print_comp+0xd00>
9d00fe60:	82540000 	lb	s4,0(s2)
9d00fe64:	8e62010c 	lw	v0,268(s3)
9d00fe68:	8e660110 	lw	a2,272(s3)
9d00fe6c:	02002021 	move	a0,s0
9d00fe70:	a2600103 	sb	zero,259(s3)
9d00fe74:	0040f809 	jalr	v0
9d00fe78:	240500ff 	li	a1,255
9d00fe7c:	8e640124 	lw	a0,292(s3)
9d00fe80:	24020001 	li	v0,1
9d00fe84:	00001821 	move	v1,zero
9d00fe88:	24840001 	addiu	a0,a0,1
9d00fe8c:	0b403f91 	j	9d00fe44 <d_print_comp+0xd08>
9d00fe90:	ae640124 	sw	a0,292(s3)
9d00fe94:	3c129d01 	lui	s2,0x9d01
9d00fe98:	26526b20 	addiu	s2,s2,27424
9d00fe9c:	8e620104 	lw	v0,260(s3)
9d00fea0:	26560015 	addiu	s6,s2,21
9d00fea4:	241500ff 	li	s5,255
9d00fea8:	0b403fb4 	j	9d00fed0 <d_print_comp+0xd94>
9d00feac:	26700004 	addiu	s0,s3,4
9d00feb0:	00401821 	move	v1,v0
9d00feb4:	24420001 	addiu	v0,v0,1
9d00feb8:	02631821 	addu	v1,s3,v1
9d00febc:	26520001 	addiu	s2,s2,1
9d00fec0:	a0740004 	sb	s4,4(v1)
9d00fec4:	ae620104 	sw	v0,260(s3)
9d00fec8:	1256fcc5 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00fecc:	a2740108 	sb	s4,264(s3)
9d00fed0:	1455fff7 	bne	v0,s5,9d00feb0 <d_print_comp+0xd74>
9d00fed4:	82540000 	lb	s4,0(s2)
9d00fed8:	8e62010c 	lw	v0,268(s3)
9d00fedc:	8e660110 	lw	a2,272(s3)
9d00fee0:	02002021 	move	a0,s0
9d00fee4:	a2600103 	sb	zero,259(s3)
9d00fee8:	0040f809 	jalr	v0
9d00feec:	240500ff 	li	a1,255
9d00fef0:	8e640124 	lw	a0,292(s3)
9d00fef4:	24020001 	li	v0,1
9d00fef8:	00001821 	move	v1,zero
9d00fefc:	24840001 	addiu	a0,a0,1
9d00ff00:	0b403fae 	j	9d00feb8 <d_print_comp+0xd7c>
9d00ff04:	ae640124 	sw	a0,292(s3)
9d00ff08:	3c129d01 	lui	s2,0x9d01
9d00ff0c:	26526b24 	addiu	s2,s2,27428
9d00ff10:	8e620104 	lw	v0,260(s3)
9d00ff14:	26560011 	addiu	s6,s2,17
9d00ff18:	241500ff 	li	s5,255
9d00ff1c:	0b403fd1 	j	9d00ff44 <d_print_comp+0xe08>
9d00ff20:	26700004 	addiu	s0,s3,4
9d00ff24:	00401821 	move	v1,v0
9d00ff28:	24420001 	addiu	v0,v0,1
9d00ff2c:	02631821 	addu	v1,s3,v1
9d00ff30:	26520001 	addiu	s2,s2,1
9d00ff34:	a0740004 	sb	s4,4(v1)
9d00ff38:	ae620104 	sw	v0,260(s3)
9d00ff3c:	1256fca8 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d00ff40:	a2740108 	sb	s4,264(s3)
9d00ff44:	1455fff7 	bne	v0,s5,9d00ff24 <d_print_comp+0xde8>
9d00ff48:	82540000 	lb	s4,0(s2)
9d00ff4c:	8e62010c 	lw	v0,268(s3)
9d00ff50:	8e660110 	lw	a2,272(s3)
9d00ff54:	02002021 	move	a0,s0
9d00ff58:	a2600103 	sb	zero,259(s3)
9d00ff5c:	0040f809 	jalr	v0
9d00ff60:	240500ff 	li	a1,255
9d00ff64:	8e640124 	lw	a0,292(s3)
9d00ff68:	24020001 	li	v0,1
9d00ff6c:	00001821 	move	v1,zero
9d00ff70:	24840001 	addiu	a0,a0,1
9d00ff74:	0b403fcb 	j	9d00ff2c <d_print_comp+0xdf0>
9d00ff78:	ae640124 	sw	a0,292(s3)
9d00ff7c:	8e620000 	lw	v0,0(s3)
9d00ff80:	30420004 	andi	v0,v0,0x4
9d00ff84:	544003f2 	bnezl	v0,9d010f50 <d_print_comp+0x1e14>
9d00ff88:	8cb20004 	lw	s2,4(a1)
9d00ff8c:	8cb40008 	lw	s4,8(a1)
9d00ff90:	1280fc81 	beqz	s4,9d00f198 <d_print_comp+0x5c>
9d00ff94:	8cb50004 	lw	s5,4(a1)
9d00ff98:	8e620104 	lw	v0,260(s3)
9d00ff9c:	00008821 	move	s1,zero
9d00ffa0:	241600ff 	li	s6,255
9d00ffa4:	0b403ff4 	j	9d00ffd0 <d_print_comp+0xe94>
9d00ffa8:	26700004 	addiu	s0,s3,4
9d00ffac:	00402021 	move	a0,v0
9d00ffb0:	24420001 	addiu	v0,v0,1
9d00ffb4:	26310001 	addiu	s1,s1,1
9d00ffb8:	02642021 	addu	a0,s3,a0
9d00ffbc:	0234182b 	sltu	v1,s1,s4
9d00ffc0:	a0920004 	sb	s2,4(a0)
9d00ffc4:	ae620104 	sw	v0,260(s3)
9d00ffc8:	1060fc73 	beqz	v1,9d00f198 <d_print_comp+0x5c>
9d00ffcc:	a2720108 	sb	s2,264(s3)
9d00ffd0:	02b11821 	addu	v1,s5,s1
9d00ffd4:	1456fff5 	bne	v0,s6,9d00ffac <d_print_comp+0xe70>
9d00ffd8:	80720000 	lb	s2,0(v1)
9d00ffdc:	8e62010c 	lw	v0,268(s3)
9d00ffe0:	8e660110 	lw	a2,272(s3)
9d00ffe4:	02002021 	move	a0,s0
9d00ffe8:	a2600103 	sb	zero,259(s3)
9d00ffec:	0040f809 	jalr	v0
9d00fff0:	240500ff 	li	a1,255
9d00fff4:	8e630124 	lw	v1,292(s3)
9d00fff8:	24020001 	li	v0,1
9d00fffc:	00002021 	move	a0,zero
9d010000:	24630001 	addiu	v1,v1,1
9d010004:	0b403fed 	j	9d00ffb4 <d_print_comp+0xe78>
9d010008:	ae630124 	sw	v1,292(s3)
9d01000c:	8e760118 	lw	s6,280(s3)
9d010010:	ae600118 	sw	zero,280(s3)
9d010014:	8cb00004 	lw	s0,4(a1)
9d010018:	1200fc5d 	beqz	s0,9d00f190 <d_print_comp+0x54>
9d01001c:	27b20018 	addiu	s2,sp,24
9d010020:	8e020000 	lw	v0,0(s0)
9d010024:	8e630114 	lw	v1,276(s3)
9d010028:	2442ffe6 	addiu	v0,v0,-26
9d01002c:	2c420003 	sltiu	v0,v0,3
9d010030:	afa00018 	sw	zero,24(sp)
9d010034:	ae720118 	sw	s2,280(s3)
9d010038:	afb0001c 	sw	s0,28(sp)
9d01003c:	afa00020 	sw	zero,32(sp)
9d010040:	10400658 	beqz	v0,9d0119a4 <d_print_comp+0x2868>
9d010044:	afa30024 	sw	v1,36(sp)
9d010048:	27a20028 	addiu	v0,sp,40
9d01004c:	24150001 	li	s5,1
9d010050:	24070004 	li	a3,4
9d010054:	8e100004 	lw	s0,4(s0)
9d010058:	5200fc4e 	beqzl	s0,9d00f194 <d_print_comp+0x58>
9d01005c:	24020001 	li	v0,1
9d010060:	52a7fc4c 	beql	s5,a3,9d00f194 <d_print_comp+0x58>
9d010064:	24020001 	li	v0,1
9d010068:	8e040000 	lw	a0,0(s0)
9d01006c:	8e660118 	lw	a2,280(s3)
9d010070:	00152900 	sll	a1,s5,0x4
9d010074:	2484ffe6 	addiu	a0,a0,-26
9d010078:	02452821 	addu	a1,s2,a1
9d01007c:	2c840003 	sltiu	a0,a0,3
9d010080:	ac460000 	sw	a2,0(v0)
9d010084:	ac500004 	sw	s0,4(v0)
9d010088:	ac400008 	sw	zero,8(v0)
9d01008c:	ac43000c 	sw	v1,12(v0)
9d010090:	ae650118 	sw	a1,280(s3)
9d010094:	26b50001 	addiu	s5,s5,1
9d010098:	1480ffee 	bnez	a0,9d010054 <d_print_comp+0xf18>
9d01009c:	24420010 	addiu	v0,v0,16
9d0100a0:	8e020000 	lw	v0,0(s0)
9d0100a4:	24040004 	li	a0,4
9d0100a8:	104405df 	beq	v0,a0,9d011828 <d_print_comp+0x26ec>
9d0100ac:	24040002 	li	a0,2
9d0100b0:	14440028 	bne	v0,a0,9d010154 <d_print_comp+0x1018>
9d0100b4:	2402003f 	li	v0,63
9d0100b8:	8e040008 	lw	a0,8(s0)
9d0100bc:	8c850000 	lw	a1,0(a0)
9d0100c0:	50a20001 	beql	a1,v0,9d0100c8 <d_print_comp+0xf8c>
9d0100c4:	8c840004 	lw	a0,4(a0)
9d0100c8:	8c820000 	lw	v0,0(a0)
9d0100cc:	2442ffe6 	addiu	v0,v0,-26
9d0100d0:	2c420003 	sltiu	v0,v0,3
9d0100d4:	1040001f 	beqz	v0,9d010154 <d_print_comp+0x1018>
9d0100d8:	2ea20004 	sltiu	v0,s5,4
9d0100dc:	1040fc2c 	beqz	v0,9d00f190 <d_print_comp+0x54>
9d0100e0:	26b4ffff 	addiu	s4,s5,-1
9d0100e4:	00141100 	sll	v0,s4,0x4
9d0100e8:	0b404040 	j	9d010100 <d_print_comp+0xfc4>
9d0100ec:	02421021 	addu	v0,s2,v0
9d0100f0:	2ea50004 	sltiu	a1,s5,4
9d0100f4:	10a0fc26 	beqz	a1,9d00f190 <d_print_comp+0x54>
9d0100f8:	24420010 	addiu	v0,v0,16
9d0100fc:	26b4ffff 	addiu	s4,s5,-1
9d010100:	8c480004 	lw	t0,4(v0)
9d010104:	8c470008 	lw	a3,8(v0)
9d010108:	8c46000c 	lw	a2,12(v0)
9d01010c:	00152900 	sll	a1,s5,0x4
9d010110:	0014a100 	sll	s4,s4,0x4
9d010114:	02452821 	addu	a1,s2,a1
9d010118:	0254a021 	addu	s4,s2,s4
9d01011c:	ac480014 	sw	t0,20(v0)
9d010120:	ac470018 	sw	a3,24(v0)
9d010124:	ac46001c 	sw	a2,28(v0)
9d010128:	ac540010 	sw	s4,16(v0)
9d01012c:	ae650118 	sw	a1,280(s3)
9d010130:	ac440004 	sw	a0,4(v0)
9d010134:	ac400008 	sw	zero,8(v0)
9d010138:	ac43000c 	sw	v1,12(v0)
9d01013c:	8c840004 	lw	a0,4(a0)
9d010140:	8c850000 	lw	a1,0(a0)
9d010144:	24a5ffe6 	addiu	a1,a1,-26
9d010148:	2ca50003 	sltiu	a1,a1,3
9d01014c:	14a0ffe8 	bnez	a1,9d0100f0 <d_print_comp+0xfb4>
9d010150:	26b50001 	addiu	s5,s5,1
9d010154:	8e250008 	lw	a1,8(s1)
9d010158:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d01015c:	02602021 	move	a0,s3
9d010160:	8e030000 	lw	v1,0(s0)
9d010164:	24020004 	li	v0,4
9d010168:	10620255 	beq	v1,v0,9d010ac0 <d_print_comp+0x1984>
9d01016c:	8fa20010 	lw	v0,16(sp)
9d010170:	12a004eb 	beqz	s5,9d011520 <d_print_comp+0x23e4>
9d010174:	26b4ffff 	addiu	s4,s5,-1
9d010178:	0014a900 	sll	s5,s4,0x4
9d01017c:	26b50008 	addiu	s5,s5,8
9d010180:	0255a821 	addu	s5,s2,s5
9d010184:	8ea20000 	lw	v0,0(s5)
9d010188:	241100ff 	li	s1,255
9d01018c:	24100020 	li	s0,32
9d010190:	1440000c 	bnez	v0,9d0101c4 <d_print_comp+0x1088>
9d010194:	26720004 	addiu	s2,s3,4
9d010198:	8e620104 	lw	v0,260(s3)
9d01019c:	505105b9 	beql	v0,s1,9d011884 <d_print_comp+0x2748>
9d0101a0:	8e62010c 	lw	v0,268(s3)
9d0101a4:	8ea5fffc 	lw	a1,-4(s5)
9d0101a8:	02621821 	addu	v1,s3,v0
9d0101ac:	24420001 	addiu	v0,v0,1
9d0101b0:	a0700004 	sb	s0,4(v1)
9d0101b4:	ae620104 	sw	v0,260(s3)
9d0101b8:	a2700108 	sb	s0,264(s3)
9d0101bc:	0f4046d0 	jal	9d011b40 <d_print_mod>
9d0101c0:	02602021 	move	a0,s3
9d0101c4:	128004d6 	beqz	s4,9d011520 <d_print_comp+0x23e4>
9d0101c8:	26b5fff0 	addiu	s5,s5,-16
9d0101cc:	8ea20000 	lw	v0,0(s5)
9d0101d0:	1440fffc 	bnez	v0,9d0101c4 <d_print_comp+0x1088>
9d0101d4:	2694ffff 	addiu	s4,s4,-1
9d0101d8:	0b404067 	j	9d01019c <d_print_comp+0x1060>
9d0101dc:	8e620104 	lw	v0,260(s3)
9d0101e0:	8e620000 	lw	v0,0(s3)
9d0101e4:	8e700118 	lw	s0,280(s3)
9d0101e8:	ae600118 	sw	zero,280(s3)
9d0101ec:	30420004 	andi	v0,v0,0x4
9d0101f0:	10400008 	beqz	v0,9d010214 <d_print_comp+0x10d8>
9d0101f4:	8cb20004 	lw	s2,4(a1)
9d0101f8:	8e420000 	lw	v0,0(s2)
9d0101fc:	14400006 	bnez	v0,9d010218 <d_print_comp+0x10dc>
9d010200:	02602021 	move	a0,s3
9d010204:	8e430008 	lw	v1,8(s2)
9d010208:	24020006 	li	v0,6
9d01020c:	5062050b 	beql	v1,v0,9d01163c <d_print_comp+0x2500>
9d010210:	8e440004 	lw	a0,4(s2)
9d010214:	02602021 	move	a0,s3
9d010218:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d01021c:	02402821 	move	a1,s2
9d010220:	82630108 	lb	v1,264(s3)
9d010224:	2402003c 	li	v0,60
9d010228:	10620452 	beq	v1,v0,9d011374 <d_print_comp+0x2238>
9d01022c:	8e620104 	lw	v0,260(s3)
9d010230:	240300ff 	li	v1,255
9d010234:	104304e0 	beq	v0,v1,9d0115b8 <d_print_comp+0x247c>
9d010238:	24440001 	addiu	a0,v0,1
9d01023c:	2403003c 	li	v1,60
9d010240:	02621021 	addu	v0,s3,v0
9d010244:	a0430004 	sb	v1,4(v0)
9d010248:	ae640104 	sw	a0,260(s3)
9d01024c:	a2630108 	sb	v1,264(s3)
9d010250:	8e250008 	lw	a1,8(s1)
9d010254:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010258:	02602021 	move	a0,s3
9d01025c:	82630108 	lb	v1,264(s3)
9d010260:	2402003e 	li	v0,62
9d010264:	1062044d 	beq	v1,v0,9d01139c <d_print_comp+0x2260>
9d010268:	8e620104 	lw	v0,260(s3)
9d01026c:	240300ff 	li	v1,255
9d010270:	104304c5 	beq	v0,v1,9d011588 <d_print_comp+0x244c>
9d010274:	24440001 	addiu	a0,v0,1
9d010278:	2403003e 	li	v1,62
9d01027c:	02621021 	addu	v0,s3,v0
9d010280:	a0430004 	sb	v1,4(v0)
9d010284:	ae640104 	sw	a0,260(s3)
9d010288:	a2630108 	sb	v1,264(s3)
9d01028c:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d010290:	ae700118 	sw	s0,280(s3)
9d010294:	8e700114 	lw	s0,276(s3)
9d010298:	1200fbbe 	beqz	s0,9d00f194 <d_print_comp+0x58>
9d01029c:	24020001 	li	v0,1
9d0102a0:	8e020004 	lw	v0,4(s0)
9d0102a4:	8c420008 	lw	v0,8(v0)
9d0102a8:	10400011 	beqz	v0,9d0102f0 <d_print_comp+0x11b4>
9d0102ac:	8ca30004 	lw	v1,4(a1)
9d0102b0:	8c450000 	lw	a1,0(v0)
9d0102b4:	2404002b 	li	a0,43
9d0102b8:	54a4fbb6 	bnel	a1,a0,9d00f194 <d_print_comp+0x58>
9d0102bc:	24020001 	li	v0,1
9d0102c0:	1c600008 	bgtz	v1,9d0102e4 <d_print_comp+0x11a8>
9d0102c4:	2405002b 	li	a1,43
9d0102c8:	0b4040bc 	j	9d0102f0 <d_print_comp+0x11b4>
9d0102cc:	00000000 	nop
9d0102d0:	8c440000 	lw	a0,0(v0)
9d0102d4:	5485fbaf 	bnel	a0,a1,9d00f194 <d_print_comp+0x58>
9d0102d8:	24020001 	li	v0,1
9d0102dc:	18600004 	blez	v1,9d0102f0 <d_print_comp+0x11b4>
9d0102e0:	00000000 	nop
9d0102e4:	8c420008 	lw	v0,8(v0)
9d0102e8:	1440fff9 	bnez	v0,9d0102d0 <d_print_comp+0x1194>
9d0102ec:	2463ffff 	addiu	v1,v1,-1
9d0102f0:	5460fba8 	bnezl	v1,9d00f194 <d_print_comp+0x58>
9d0102f4:	24020001 	li	v0,1
9d0102f8:	5040fba6 	beqzl	v0,9d00f194 <d_print_comp+0x58>
9d0102fc:	24020001 	li	v0,1
9d010300:	8c450004 	lw	a1,4(v0)
9d010304:	10a0fba2 	beqz	a1,9d00f190 <d_print_comp+0x54>
9d010308:	2402002b 	li	v0,43
9d01030c:	8ca30000 	lw	v1,0(a1)
9d010310:	50620438 	beql	v1,v0,9d0113f4 <d_print_comp+0x22b8>
9d010314:	8e620120 	lw	v0,288(s3)
9d010318:	8e020000 	lw	v0,0(s0)
9d01031c:	02602021 	move	a0,s3
9d010320:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010324:	ae620114 	sw	v0,276(s3)
9d010328:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d01032c:	ae700114 	sw	s0,276(s3)
9d010330:	3c129d01 	lui	s2,0x9d01
9d010334:	26526c24 	addiu	s2,s2,27684
9d010338:	8e620104 	lw	v0,260(s3)
9d01033c:	26560006 	addiu	s6,s2,6
9d010340:	241500ff 	li	s5,255
9d010344:	0b4040db 	j	9d01036c <d_print_comp+0x1230>
9d010348:	26700004 	addiu	s0,s3,4
9d01034c:	00401821 	move	v1,v0
9d010350:	24420001 	addiu	v0,v0,1
9d010354:	02631821 	addu	v1,s3,v1
9d010358:	26520001 	addiu	s2,s2,1
9d01035c:	a0740004 	sb	s4,4(v1)
9d010360:	ae620104 	sw	v0,260(s3)
9d010364:	125602b8 	beq	s2,s6,9d010e48 <d_print_comp+0x1d0c>
9d010368:	a2740108 	sb	s4,264(s3)
9d01036c:	1455fff7 	bne	v0,s5,9d01034c <d_print_comp+0x1210>
9d010370:	82540000 	lb	s4,0(s2)
9d010374:	8e62010c 	lw	v0,268(s3)
9d010378:	8e660110 	lw	a2,272(s3)
9d01037c:	02002021 	move	a0,s0
9d010380:	a2600103 	sb	zero,259(s3)
9d010384:	0040f809 	jalr	v0
9d010388:	240500ff 	li	a1,255
9d01038c:	8e640124 	lw	a0,292(s3)
9d010390:	24020001 	li	v0,1
9d010394:	00001821 	move	v1,zero
9d010398:	24840001 	addiu	a0,a0,1
9d01039c:	0b4040d5 	j	9d010354 <d_print_comp+0x1218>
9d0103a0:	ae640124 	sw	a0,292(s3)
9d0103a4:	8cb40008 	lw	s4,8(a1)
9d0103a8:	1280fb7b 	beqz	s4,9d00f198 <d_print_comp+0x5c>
9d0103ac:	8cb50004 	lw	s5,4(a1)
9d0103b0:	8e620104 	lw	v0,260(s3)
9d0103b4:	00008821 	move	s1,zero
9d0103b8:	241600ff 	li	s6,255
9d0103bc:	0b4040fa 	j	9d0103e8 <d_print_comp+0x12ac>
9d0103c0:	26700004 	addiu	s0,s3,4
9d0103c4:	00402021 	move	a0,v0
9d0103c8:	24420001 	addiu	v0,v0,1
9d0103cc:	26310001 	addiu	s1,s1,1
9d0103d0:	02642021 	addu	a0,s3,a0
9d0103d4:	0234182b 	sltu	v1,s1,s4
9d0103d8:	a0920004 	sb	s2,4(a0)
9d0103dc:	ae620104 	sw	v0,260(s3)
9d0103e0:	1060fb6d 	beqz	v1,9d00f198 <d_print_comp+0x5c>
9d0103e4:	a2720108 	sb	s2,264(s3)
9d0103e8:	02b11821 	addu	v1,s5,s1
9d0103ec:	1456fff5 	bne	v0,s6,9d0103c4 <d_print_comp+0x1288>
9d0103f0:	80720000 	lb	s2,0(v1)
9d0103f4:	8e62010c 	lw	v0,268(s3)
9d0103f8:	8e660110 	lw	a2,272(s3)
9d0103fc:	02002021 	move	a0,s0
9d010400:	a2600103 	sb	zero,259(s3)
9d010404:	0040f809 	jalr	v0
9d010408:	240500ff 	li	a1,255
9d01040c:	8e630124 	lw	v1,292(s3)
9d010410:	24020001 	li	v0,1
9d010414:	00002021 	move	a0,zero
9d010418:	24630001 	addiu	v1,v1,1
9d01041c:	0b4040f3 	j	9d0103cc <d_print_comp+0x1290>
9d010420:	ae630124 	sw	v1,292(s3)
9d010424:	8e620118 	lw	v0,280(s3)
9d010428:	10400012 	beqz	v0,9d010474 <d_print_comp+0x1338>
9d01042c:	00402021 	move	a0,v0
9d010430:	8c850008 	lw	a1,8(a0)
9d010434:	54a0000a 	bnezl	a1,9d010460 <d_print_comp+0x1324>
9d010438:	8c840000 	lw	a0,0(a0)
9d01043c:	8c850004 	lw	a1,4(a0)
9d010440:	8ca50000 	lw	a1,0(a1)
9d010444:	24a6ffe9 	addiu	a2,a1,-23
9d010448:	2cc60003 	sltiu	a2,a2,3
9d01044c:	50c0000a 	beqzl	a2,9d010478 <d_print_comp+0x133c>
9d010450:	27a30018 	addiu	v1,sp,24
9d010454:	5065fb63 	beql	v1,a1,9d00f1e4 <d_print_comp+0xa8>
9d010458:	8e250004 	lw	a1,4(s1)
9d01045c:	8c840000 	lw	a0,0(a0)
9d010460:	5480fff4 	bnezl	a0,9d010434 <d_print_comp+0x12f8>
9d010464:	8c850008 	lw	a1,8(a0)
9d010468:	0b40411e 	j	9d010478 <d_print_comp+0x133c>
9d01046c:	27a30018 	addiu	v1,sp,24
9d010470:	8e620118 	lw	v0,280(s3)
9d010474:	27a30018 	addiu	v1,sp,24
9d010478:	ae630118 	sw	v1,280(s3)
9d01047c:	8e250004 	lw	a1,4(s1)
9d010480:	8e630114 	lw	v1,276(s3)
9d010484:	02602021 	move	a0,s3
9d010488:	afa20018 	sw	v0,24(sp)
9d01048c:	afb1001c 	sw	s1,28(sp)
9d010490:	afa00020 	sw	zero,32(sp)
9d010494:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010498:	afa30024 	sw	v1,36(sp)
9d01049c:	8fa20020 	lw	v0,32(sp)
9d0104a0:	10400013 	beqz	v0,9d0104f0 <d_print_comp+0x13b4>
9d0104a4:	02602021 	move	a0,s3
9d0104a8:	8fa20018 	lw	v0,24(sp)
9d0104ac:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d0104b0:	ae620118 	sw	v0,280(s3)
9d0104b4:	27a20018 	addiu	v0,sp,24
9d0104b8:	8e630118 	lw	v1,280(s3)
9d0104bc:	ae620118 	sw	v0,280(s3)
9d0104c0:	8ca50008 	lw	a1,8(a1)
9d0104c4:	8e620114 	lw	v0,276(s3)
9d0104c8:	02602021 	move	a0,s3
9d0104cc:	afa30018 	sw	v1,24(sp)
9d0104d0:	afa20024 	sw	v0,36(sp)
9d0104d4:	afb1001c 	sw	s1,28(sp)
9d0104d8:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d0104dc:	afa00020 	sw	zero,32(sp)
9d0104e0:	8fa20020 	lw	v0,32(sp)
9d0104e4:	1440fff1 	bnez	v0,9d0104ac <d_print_comp+0x1370>
9d0104e8:	8fa20018 	lw	v0,24(sp)
9d0104ec:	02602021 	move	a0,s3
9d0104f0:	0f4046d0 	jal	9d011b40 <d_print_mod>
9d0104f4:	02202821 	move	a1,s1
9d0104f8:	8fa20018 	lw	v0,24(sp)
9d0104fc:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d010500:	ae620118 	sw	v0,280(s3)
9d010504:	84a2000a 	lh	v0,10(a1)
9d010508:	14400334 	bnez	v0,9d0111dc <d_print_comp+0x20a0>
9d01050c:	3c129d01 	lui	s2,0x9d01
9d010510:	8e250004 	lw	a1,4(s1)
9d010514:	3c029d01 	lui	v0,0x9d01
9d010518:	24427748 	addiu	v0,v0,30536
9d01051c:	8ca30004 	lw	v1,4(a1)
9d010520:	5062000d 	beql	v1,v0,9d010558 <d_print_comp+0x141c>
9d010524:	8e620104 	lw	v0,260(s3)
9d010528:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d01052c:	02602021 	move	a0,s3
9d010530:	8e630104 	lw	v1,260(s3)
9d010534:	240200ff 	li	v0,255
9d010538:	5062048c 	beql	v1,v0,9d01176c <d_print_comp+0x2630>
9d01053c:	8e62010c 	lw	v0,268(s3)
9d010540:	24620001 	addiu	v0,v1,1
9d010544:	24040020 	li	a0,32
9d010548:	02631821 	addu	v1,s3,v1
9d01054c:	a0640004 	sb	a0,4(v1)
9d010550:	ae620104 	sw	v0,260(s3)
9d010554:	a2640108 	sb	a0,264(s3)
9d010558:	86230008 	lh	v1,8(s1)
9d01055c:	506002e3 	beqzl	v1,9d0110ec <d_print_comp+0x1fb0>
9d010560:	3c119d01 	lui	s1,0x9d01
9d010564:	3c119d01 	lui	s1,0x9d01
9d010568:	26316bb0 	addiu	s1,s1,27568
9d01056c:	26350006 	addiu	s5,s1,6
9d010570:	241400ff 	li	s4,255
9d010574:	0b404167 	j	9d01059c <d_print_comp+0x1460>
9d010578:	26700004 	addiu	s0,s3,4
9d01057c:	00401821 	move	v1,v0
9d010580:	24420001 	addiu	v0,v0,1
9d010584:	02631821 	addu	v1,s3,v1
9d010588:	26310001 	addiu	s1,s1,1
9d01058c:	a0720004 	sb	s2,4(v1)
9d010590:	ae620104 	sw	v0,260(s3)
9d010594:	1235fb00 	beq	s1,s5,9d00f198 <d_print_comp+0x5c>
9d010598:	a2720108 	sb	s2,264(s3)
9d01059c:	1454fff7 	bne	v0,s4,9d01057c <d_print_comp+0x1440>
9d0105a0:	82320000 	lb	s2,0(s1)
9d0105a4:	8e62010c 	lw	v0,268(s3)
9d0105a8:	8e660110 	lw	a2,272(s3)
9d0105ac:	02002021 	move	a0,s0
9d0105b0:	a2600103 	sb	zero,259(s3)
9d0105b4:	0040f809 	jalr	v0
9d0105b8:	240500ff 	li	a1,255
9d0105bc:	8e640124 	lw	a0,292(s3)
9d0105c0:	24020001 	li	v0,1
9d0105c4:	00001821 	move	v1,zero
9d0105c8:	24840001 	addiu	a0,a0,1
9d0105cc:	0b404161 	j	9d010584 <d_print_comp+0x1448>
9d0105d0:	ae640124 	sw	a0,292(s3)
9d0105d4:	8ca50004 	lw	a1,4(a1)
9d0105d8:	50a00004 	beqzl	a1,9d0105ec <d_print_comp+0x14b0>
9d0105dc:	8e220008 	lw	v0,8(s1)
9d0105e0:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d0105e4:	02602021 	move	a0,s3
9d0105e8:	8e220008 	lw	v0,8(s1)
9d0105ec:	1040faeb 	beqz	v0,9d00f19c <d_print_comp+0x60>
9d0105f0:	8fbf0084 	lw	ra,132(sp)
9d0105f4:	8e720104 	lw	s2,260(s3)
9d0105f8:	2e4200fe 	sltiu	v0,s2,254
9d0105fc:	50400371 	beqzl	v0,9d0113c4 <d_print_comp+0x2288>
9d010600:	8e62010c 	lw	v0,268(s3)
9d010604:	3c149d01 	lui	s4,0x9d01
9d010608:	26946bc0 	addiu	s4,s4,27584
9d01060c:	26970002 	addiu	s7,s4,2
9d010610:	241600ff 	li	s6,255
9d010614:	0b40418f 	j	9d01063c <d_print_comp+0x1500>
9d010618:	26700004 	addiu	s0,s3,4
9d01061c:	02401021 	move	v0,s2
9d010620:	26520001 	addiu	s2,s2,1
9d010624:	02621021 	addu	v0,s3,v0
9d010628:	26940001 	addiu	s4,s4,1
9d01062c:	a0550004 	sb	s5,4(v0)
9d010630:	ae720104 	sw	s2,260(s3)
9d010634:	1297022d 	beq	s4,s7,9d010eec <d_print_comp+0x1db0>
9d010638:	a2750108 	sb	s5,264(s3)
9d01063c:	1656fff7 	bne	s2,s6,9d01061c <d_print_comp+0x14e0>
9d010640:	82950000 	lb	s5,0(s4)
9d010644:	8e62010c 	lw	v0,268(s3)
9d010648:	8e660110 	lw	a2,272(s3)
9d01064c:	a2600103 	sb	zero,259(s3)
9d010650:	02002021 	move	a0,s0
9d010654:	0040f809 	jalr	v0
9d010658:	240500ff 	li	a1,255
9d01065c:	8e630124 	lw	v1,292(s3)
9d010660:	24120001 	li	s2,1
9d010664:	00001021 	move	v0,zero
9d010668:	24630001 	addiu	v1,v1,1
9d01066c:	0b404189 	j	9d010624 <d_print_comp+0x14e8>
9d010670:	ae630124 	sw	v1,292(s3)
9d010674:	3c129d01 	lui	s2,0x9d01
9d010678:	26526bc4 	addiu	s2,s2,27588
9d01067c:	8e620104 	lw	v0,260(s3)
9d010680:	26560008 	addiu	s6,s2,8
9d010684:	241500ff 	li	s5,255
9d010688:	0b4041ac 	j	9d0106b0 <d_print_comp+0x1574>
9d01068c:	26700004 	addiu	s0,s3,4
9d010690:	00401821 	move	v1,v0
9d010694:	24420001 	addiu	v0,v0,1
9d010698:	02631821 	addu	v1,s3,v1
9d01069c:	26520001 	addiu	s2,s2,1
9d0106a0:	a0740004 	sb	s4,4(v1)
9d0106a4:	ae620104 	sw	v0,260(s3)
9d0106a8:	125601b5 	beq	s2,s6,9d010d80 <d_print_comp+0x1c44>
9d0106ac:	a2740108 	sb	s4,264(s3)
9d0106b0:	1455fff7 	bne	v0,s5,9d010690 <d_print_comp+0x1554>
9d0106b4:	82540000 	lb	s4,0(s2)
9d0106b8:	8e62010c 	lw	v0,268(s3)
9d0106bc:	8e660110 	lw	a2,272(s3)
9d0106c0:	02002021 	move	a0,s0
9d0106c4:	a2600103 	sb	zero,259(s3)
9d0106c8:	0040f809 	jalr	v0
9d0106cc:	240500ff 	li	a1,255
9d0106d0:	8e640124 	lw	a0,292(s3)
9d0106d4:	24020001 	li	v0,1
9d0106d8:	00001821 	move	v1,zero
9d0106dc:	24840001 	addiu	a0,a0,1
9d0106e0:	0b4041a6 	j	9d010698 <d_print_comp+0x155c>
9d0106e4:	ae640124 	sw	a0,292(s3)
9d0106e8:	8e620000 	lw	v0,0(s3)
9d0106ec:	30420020 	andi	v0,v0,0x20
9d0106f0:	544002b4 	bnezl	v0,9d0111c4 <d_print_comp+0x2088>
9d0106f4:	8e670118 	lw	a3,280(s3)
9d0106f8:	8e220004 	lw	v0,4(s1)
9d0106fc:	104002ae 	beqz	v0,9d0111b8 <d_print_comp+0x207c>
9d010700:	02602021 	move	a0,s3
9d010704:	27a20018 	addiu	v0,sp,24
9d010708:	8e630118 	lw	v1,280(s3)
9d01070c:	ae620118 	sw	v0,280(s3)
9d010710:	8e250004 	lw	a1,4(s1)
9d010714:	8e620114 	lw	v0,276(s3)
9d010718:	afa30018 	sw	v1,24(sp)
9d01071c:	afa20024 	sw	v0,36(sp)
9d010720:	afb1001c 	sw	s1,28(sp)
9d010724:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010728:	afa00020 	sw	zero,32(sp)
9d01072c:	8fa20018 	lw	v0,24(sp)
9d010730:	ae620118 	sw	v0,280(s3)
9d010734:	8fa20020 	lw	v0,32(sp)
9d010738:	1440fa98 	bnez	v0,9d00f19c <d_print_comp+0x60>
9d01073c:	8fbf0084 	lw	ra,132(sp)
9d010740:	8e620000 	lw	v0,0(s3)
9d010744:	30420020 	andi	v0,v0,0x20
9d010748:	1440fa95 	bnez	v0,9d00f1a0 <d_print_comp+0x64>
9d01074c:	8fbe0080 	lw	s8,128(sp)
9d010750:	8e630104 	lw	v1,260(s3)
9d010754:	240400ff 	li	a0,255
9d010758:	50640472 	beql	v1,a0,9d011924 <d_print_comp+0x27e8>
9d01075c:	8e62010c 	lw	v0,268(s3)
9d010760:	24040020 	li	a0,32
9d010764:	02632821 	addu	a1,s3,v1
9d010768:	24630001 	addiu	v1,v1,1
9d01076c:	a0a40004 	sb	a0,4(a1)
9d010770:	ae630104 	sw	v1,260(s3)
9d010774:	a2640108 	sb	a0,264(s3)
9d010778:	5440fa88 	bnezl	v0,9d00f19c <d_print_comp+0x60>
9d01077c:	8fbf0084 	lw	ra,132(sp)
9d010780:	8e670118 	lw	a3,280(s3)
9d010784:	02602021 	move	a0,s3
9d010788:	26250004 	addiu	a1,s1,4
9d01078c:	0f404a22 	jal	9d012888 <d_print_function_type.clone.6>
9d010790:	26260008 	addiu	a2,s1,8
9d010794:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d010798:	8fbf0084 	lw	ra,132(sp)
9d01079c:	3c129d01 	lui	s2,0x9d01
9d0107a0:	26526b54 	addiu	s2,s2,27476
9d0107a4:	8e620104 	lw	v0,260(s3)
9d0107a8:	2656000f 	addiu	s6,s2,15
9d0107ac:	241500ff 	li	s5,255
9d0107b0:	0b4041f6 	j	9d0107d8 <d_print_comp+0x169c>
9d0107b4:	26700004 	addiu	s0,s3,4
9d0107b8:	00401821 	move	v1,v0
9d0107bc:	24420001 	addiu	v0,v0,1
9d0107c0:	02631821 	addu	v1,s3,v1
9d0107c4:	26520001 	addiu	s2,s2,1
9d0107c8:	a0740004 	sb	s4,4(v1)
9d0107cc:	ae620104 	sw	v0,260(s3)
9d0107d0:	1256fa83 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d0107d4:	a2740108 	sb	s4,264(s3)
9d0107d8:	1455fff7 	bne	v0,s5,9d0107b8 <d_print_comp+0x167c>
9d0107dc:	82540000 	lb	s4,0(s2)
9d0107e0:	8e62010c 	lw	v0,268(s3)
9d0107e4:	8e660110 	lw	a2,272(s3)
9d0107e8:	02002021 	move	a0,s0
9d0107ec:	a2600103 	sb	zero,259(s3)
9d0107f0:	0040f809 	jalr	v0
9d0107f4:	240500ff 	li	a1,255
9d0107f8:	8e640124 	lw	a0,292(s3)
9d0107fc:	24020001 	li	v0,1
9d010800:	00001821 	move	v1,zero
9d010804:	24840001 	addiu	a0,a0,1
9d010808:	0b4041f0 	j	9d0107c0 <d_print_comp+0x1684>
9d01080c:	ae640124 	sw	a0,292(s3)
9d010810:	3c129d01 	lui	s2,0x9d01
9d010814:	26526b64 	addiu	s2,s2,27492
9d010818:	8e620104 	lw	v0,260(s3)
9d01081c:	26560013 	addiu	s6,s2,19
9d010820:	241500ff 	li	s5,255
9d010824:	0b404213 	j	9d01084c <d_print_comp+0x1710>
9d010828:	26700004 	addiu	s0,s3,4
9d01082c:	00401821 	move	v1,v0
9d010830:	24420001 	addiu	v0,v0,1
9d010834:	02631821 	addu	v1,s3,v1
9d010838:	26520001 	addiu	s2,s2,1
9d01083c:	a0740004 	sb	s4,4(v1)
9d010840:	ae620104 	sw	v0,260(s3)
9d010844:	1256fa66 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d010848:	a2740108 	sb	s4,264(s3)
9d01084c:	1455fff7 	bne	v0,s5,9d01082c <d_print_comp+0x16f0>
9d010850:	82540000 	lb	s4,0(s2)
9d010854:	8e62010c 	lw	v0,268(s3)
9d010858:	8e660110 	lw	a2,272(s3)
9d01085c:	02002021 	move	a0,s0
9d010860:	a2600103 	sb	zero,259(s3)
9d010864:	0040f809 	jalr	v0
9d010868:	240500ff 	li	a1,255
9d01086c:	8e640124 	lw	a0,292(s3)
9d010870:	24020001 	li	v0,1
9d010874:	00001821 	move	v1,zero
9d010878:	24840001 	addiu	a0,a0,1
9d01087c:	0b40420d 	j	9d010834 <d_print_comp+0x16f8>
9d010880:	ae640124 	sw	a0,292(s3)
9d010884:	3c129d01 	lui	s2,0x9d01
9d010888:	26526b78 	addiu	s2,s2,27512
9d01088c:	8e620104 	lw	v0,260(s3)
9d010890:	26560018 	addiu	s6,s2,24
9d010894:	241500ff 	li	s5,255
9d010898:	0b404230 	j	9d0108c0 <d_print_comp+0x1784>
9d01089c:	26700004 	addiu	s0,s3,4
9d0108a0:	00401821 	move	v1,v0
9d0108a4:	24420001 	addiu	v0,v0,1
9d0108a8:	02631821 	addu	v1,s3,v1
9d0108ac:	26520001 	addiu	s2,s2,1
9d0108b0:	a0740004 	sb	s4,4(v1)
9d0108b4:	ae620104 	sw	v0,260(s3)
9d0108b8:	1256fa49 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d0108bc:	a2740108 	sb	s4,264(s3)
9d0108c0:	1455fff7 	bne	v0,s5,9d0108a0 <d_print_comp+0x1764>
9d0108c4:	82540000 	lb	s4,0(s2)
9d0108c8:	8e62010c 	lw	v0,268(s3)
9d0108cc:	8e660110 	lw	a2,272(s3)
9d0108d0:	02002021 	move	a0,s0
9d0108d4:	a2600103 	sb	zero,259(s3)
9d0108d8:	0040f809 	jalr	v0
9d0108dc:	240500ff 	li	a1,255
9d0108e0:	8e640124 	lw	a0,292(s3)
9d0108e4:	24020001 	li	v0,1
9d0108e8:	00001821 	move	v1,zero
9d0108ec:	24840001 	addiu	a0,a0,1
9d0108f0:	0b40422a 	j	9d0108a8 <d_print_comp+0x176c>
9d0108f4:	ae640124 	sw	a0,292(s3)
9d0108f8:	3c129d01 	lui	s2,0x9d01
9d0108fc:	26526b94 	addiu	s2,s2,27540
9d010900:	8e620104 	lw	v0,260(s3)
9d010904:	26560011 	addiu	s6,s2,17
9d010908:	241500ff 	li	s5,255
9d01090c:	0b40424d 	j	9d010934 <d_print_comp+0x17f8>
9d010910:	26700004 	addiu	s0,s3,4
9d010914:	00401821 	move	v1,v0
9d010918:	24420001 	addiu	v0,v0,1
9d01091c:	02631821 	addu	v1,s3,v1
9d010920:	26520001 	addiu	s2,s2,1
9d010924:	a0740004 	sb	s4,4(v1)
9d010928:	ae620104 	sw	v0,260(s3)
9d01092c:	1256fa2c 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d010930:	a2740108 	sb	s4,264(s3)
9d010934:	1455fff7 	bne	v0,s5,9d010914 <d_print_comp+0x17d8>
9d010938:	82540000 	lb	s4,0(s2)
9d01093c:	8e62010c 	lw	v0,268(s3)
9d010940:	8e660110 	lw	a2,272(s3)
9d010944:	02002021 	move	a0,s0
9d010948:	a2600103 	sb	zero,259(s3)
9d01094c:	0040f809 	jalr	v0
9d010950:	240500ff 	li	a1,255
9d010954:	8e640124 	lw	a0,292(s3)
9d010958:	24020001 	li	v0,1
9d01095c:	00001821 	move	v1,zero
9d010960:	24840001 	addiu	a0,a0,1
9d010964:	0b404247 	j	9d01091c <d_print_comp+0x17e0>
9d010968:	ae640124 	sw	a0,292(s3)
9d01096c:	8e620000 	lw	v0,0(s3)
9d010970:	30420004 	andi	v0,v0,0x4
9d010974:	144001bd 	bnez	v0,9d01106c <d_print_comp+0x1f30>
9d010978:	8ca20004 	lw	v0,4(a1)
9d01097c:	8c540004 	lw	s4,4(v0)
9d010980:	1280fa05 	beqz	s4,9d00f198 <d_print_comp+0x5c>
9d010984:	8c550000 	lw	s5,0(v0)
9d010988:	8e620104 	lw	v0,260(s3)
9d01098c:	00008821 	move	s1,zero
9d010990:	241600ff 	li	s6,255
9d010994:	0b404270 	j	9d0109c0 <d_print_comp+0x1884>
9d010998:	26700004 	addiu	s0,s3,4
9d01099c:	00402021 	move	a0,v0
9d0109a0:	24420001 	addiu	v0,v0,1
9d0109a4:	26310001 	addiu	s1,s1,1
9d0109a8:	02642021 	addu	a0,s3,a0
9d0109ac:	0234182b 	sltu	v1,s1,s4
9d0109b0:	a0920004 	sb	s2,4(a0)
9d0109b4:	ae620104 	sw	v0,260(s3)
9d0109b8:	1060f9f7 	beqz	v1,9d00f198 <d_print_comp+0x5c>
9d0109bc:	a2720108 	sb	s2,264(s3)
9d0109c0:	02b11821 	addu	v1,s5,s1
9d0109c4:	1456fff5 	bne	v0,s6,9d01099c <d_print_comp+0x1860>
9d0109c8:	80720000 	lb	s2,0(v1)
9d0109cc:	8e62010c 	lw	v0,268(s3)
9d0109d0:	8e660110 	lw	a2,272(s3)
9d0109d4:	02002021 	move	a0,s0
9d0109d8:	a2600103 	sb	zero,259(s3)
9d0109dc:	0040f809 	jalr	v0
9d0109e0:	240500ff 	li	a1,255
9d0109e4:	8e630124 	lw	v1,292(s3)
9d0109e8:	24020001 	li	v0,1
9d0109ec:	00002021 	move	a0,zero
9d0109f0:	24630001 	addiu	v1,v1,1
9d0109f4:	0b404269 	j	9d0109a4 <d_print_comp+0x1868>
9d0109f8:	ae630124 	sw	v1,292(s3)
9d0109fc:	3c129d01 	lui	s2,0x9d01
9d010a00:	26526b38 	addiu	s2,s2,27448
9d010a04:	8e620104 	lw	v0,260(s3)
9d010a08:	2656001a 	addiu	s6,s2,26
9d010a0c:	241500ff 	li	s5,255
9d010a10:	0b40428e 	j	9d010a38 <d_print_comp+0x18fc>
9d010a14:	26700004 	addiu	s0,s3,4
9d010a18:	00401821 	move	v1,v0
9d010a1c:	24420001 	addiu	v0,v0,1
9d010a20:	02631821 	addu	v1,s3,v1
9d010a24:	26520001 	addiu	s2,s2,1
9d010a28:	a0740004 	sb	s4,4(v1)
9d010a2c:	ae620104 	sw	v0,260(s3)
9d010a30:	1256f9eb 	beq	s2,s6,9d00f1e0 <d_print_comp+0xa4>
9d010a34:	a2740108 	sb	s4,264(s3)
9d010a38:	1455fff7 	bne	v0,s5,9d010a18 <d_print_comp+0x18dc>
9d010a3c:	82540000 	lb	s4,0(s2)
9d010a40:	8e62010c 	lw	v0,268(s3)
9d010a44:	8e660110 	lw	a2,272(s3)
9d010a48:	02002021 	move	a0,s0
9d010a4c:	a2600103 	sb	zero,259(s3)
9d010a50:	0040f809 	jalr	v0
9d010a54:	240500ff 	li	a1,255
9d010a58:	8e640124 	lw	a0,292(s3)
9d010a5c:	24020001 	li	v0,1
9d010a60:	00001821 	move	v1,zero
9d010a64:	24840001 	addiu	a0,a0,1
9d010a68:	0b404288 	j	9d010a20 <d_print_comp+0x18e4>
9d010a6c:	ae640124 	sw	a0,292(s3)
9d010a70:	8e620104 	lw	v0,260(s3)
9d010a74:	240300ff 	li	v1,255
9d010a78:	10430286 	beq	v0,v1,9d011494 <d_print_comp+0x2358>
9d010a7c:	24440001 	addiu	a0,v0,1
9d010a80:	2403007e 	li	v1,126
9d010a84:	02621021 	addu	v0,s3,v0
9d010a88:	a0430004 	sb	v1,4(v0)
9d010a8c:	ae640104 	sw	a0,260(s3)
9d010a90:	0b403c96 	j	9d00f258 <d_print_comp+0x11c>
9d010a94:	a2630108 	sb	v1,264(s3)
9d010a98:	8e660110 	lw	a2,272(s3)
9d010a9c:	a2600103 	sb	zero,259(s3)
9d010aa0:	26640004 	addiu	a0,s3,4
9d010aa4:	0040f809 	jalr	v0
9d010aa8:	240500ff 	li	a1,255
9d010aac:	8e630124 	lw	v1,292(s3)
9d010ab0:	00001021 	move	v0,zero
9d010ab4:	24630001 	addiu	v1,v1,1
9d010ab8:	0b403e5f 	j	9d00f97c <d_print_comp+0x840>
9d010abc:	ae630124 	sw	v1,292(s3)
9d010ac0:	0b40405c 	j	9d010170 <d_print_comp+0x1034>
9d010ac4:	ae620114 	sw	v0,276(s3)
9d010ac8:	8e250004 	lw	a1,4(s1)
9d010acc:	3c129d01 	lui	s2,0x9d01
9d010ad0:	02602021 	move	a0,s3
9d010ad4:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010ad8:	26526c78 	addiu	s2,s2,27768
9d010adc:	241600ff 	li	s6,255
9d010ae0:	8e620104 	lw	v0,260(s3)
9d010ae4:	26550002 	addiu	s5,s2,2
9d010ae8:	0b4042c4 	j	9d010b10 <d_print_comp+0x19d4>
9d010aec:	26700004 	addiu	s0,s3,4
9d010af0:	00401821 	move	v1,v0
9d010af4:	24420001 	addiu	v0,v0,1
9d010af8:	02631821 	addu	v1,s3,v1
9d010afc:	26520001 	addiu	s2,s2,1
9d010b00:	a0740004 	sb	s4,4(v1)
9d010b04:	ae620104 	sw	v0,260(s3)
9d010b08:	1255002f 	beq	s2,s5,9d010bc8 <d_print_comp+0x1a8c>
9d010b0c:	a2740108 	sb	s4,264(s3)
9d010b10:	1456fff7 	bne	v0,s6,9d010af0 <d_print_comp+0x19b4>
9d010b14:	82540000 	lb	s4,0(s2)
9d010b18:	8e62010c 	lw	v0,268(s3)
9d010b1c:	8e660110 	lw	a2,272(s3)
9d010b20:	02002021 	move	a0,s0
9d010b24:	a2600103 	sb	zero,259(s3)
9d010b28:	0040f809 	jalr	v0
9d010b2c:	240500ff 	li	a1,255
9d010b30:	8e640124 	lw	a0,292(s3)
9d010b34:	24020001 	li	v0,1
9d010b38:	00001821 	move	v1,zero
9d010b3c:	24840001 	addiu	a0,a0,1
9d010b40:	0b4042be 	j	9d010af8 <d_print_comp+0x19bc>
9d010b44:	ae640124 	sw	a0,292(s3)
9d010b48:	8e250004 	lw	a1,4(s1)
9d010b4c:	3c129d01 	lui	s2,0x9d01
9d010b50:	02602021 	move	a0,s3
9d010b54:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010b58:	26526ae0 	addiu	s2,s2,27360
9d010b5c:	241600ff 	li	s6,255
9d010b60:	8e620104 	lw	v0,260(s3)
9d010b64:	26550004 	addiu	s5,s2,4
9d010b68:	0b4042e4 	j	9d010b90 <d_print_comp+0x1a54>
9d010b6c:	26700004 	addiu	s0,s3,4
9d010b70:	00401821 	move	v1,v0
9d010b74:	24420001 	addiu	v0,v0,1
9d010b78:	02631821 	addu	v1,s3,v1
9d010b7c:	26520001 	addiu	s2,s2,1
9d010b80:	a0740004 	sb	s4,4(v1)
9d010b84:	ae620104 	sw	v0,260(s3)
9d010b88:	1255f9b3 	beq	s2,s5,9d00f258 <d_print_comp+0x11c>
9d010b8c:	a2740108 	sb	s4,264(s3)
9d010b90:	1456fff7 	bne	v0,s6,9d010b70 <d_print_comp+0x1a34>
9d010b94:	82540000 	lb	s4,0(s2)
9d010b98:	8e62010c 	lw	v0,268(s3)
9d010b9c:	8e660110 	lw	a2,272(s3)
9d010ba0:	02002021 	move	a0,s0
9d010ba4:	a2600103 	sb	zero,259(s3)
9d010ba8:	0040f809 	jalr	v0
9d010bac:	240500ff 	li	a1,255
9d010bb0:	8e640124 	lw	a0,292(s3)
9d010bb4:	24020001 	li	v0,1
9d010bb8:	00001821 	move	v1,zero
9d010bbc:	24840001 	addiu	a0,a0,1
9d010bc0:	0b4042de 	j	9d010b78 <d_print_comp+0x1a3c>
9d010bc4:	ae640124 	sw	a0,292(s3)
9d010bc8:	8e260008 	lw	a2,8(s1)
9d010bcc:	27b20018 	addiu	s2,sp,24
9d010bd0:	3c059d01 	lui	a1,0x9d01
9d010bd4:	02402021 	move	a0,s2
9d010bd8:	24a56c00 	addiu	a1,a1,27648
9d010bdc:	0f401f4b 	jal	9d007d2c <sprintf>
9d010be0:	24c60001 	addiu	a2,a2,1
9d010be4:	0f401f87 	jal	9d007e1c <strlen>
9d010be8:	02402021 	move	a0,s2
9d010bec:	1040001f 	beqz	v0,9d010c6c <d_print_comp+0x1b30>
9d010bf0:	00008821 	move	s1,zero
9d010bf4:	8e630104 	lw	v1,260(s3)
9d010bf8:	241500ff 	li	s5,255
9d010bfc:	0b40430a 	j	9d010c28 <d_print_comp+0x1aec>
9d010c00:	26700004 	addiu	s0,s3,4
9d010c04:	00602821 	move	a1,v1
9d010c08:	24630001 	addiu	v1,v1,1
9d010c0c:	26310001 	addiu	s1,s1,1
9d010c10:	02652821 	addu	a1,s3,a1
9d010c14:	0222202b 	sltu	a0,s1,v0
9d010c18:	a0b40004 	sb	s4,4(a1)
9d010c1c:	ae630104 	sw	v1,260(s3)
9d010c20:	10800013 	beqz	a0,9d010c70 <d_print_comp+0x1b34>
9d010c24:	a2740108 	sb	s4,264(s3)
9d010c28:	02512021 	addu	a0,s2,s1
9d010c2c:	1475fff5 	bne	v1,s5,9d010c04 <d_print_comp+0x1ac8>
9d010c30:	80940000 	lb	s4,0(a0)
9d010c34:	8e63010c 	lw	v1,268(s3)
9d010c38:	8e660110 	lw	a2,272(s3)
9d010c3c:	a2600103 	sb	zero,259(s3)
9d010c40:	02002021 	move	a0,s0
9d010c44:	240500ff 	li	a1,255
9d010c48:	0060f809 	jalr	v1
9d010c4c:	afa2005c 	sw	v0,92(sp)
9d010c50:	8e640124 	lw	a0,292(s3)
9d010c54:	24030001 	li	v1,1
9d010c58:	00002821 	move	a1,zero
9d010c5c:	24840001 	addiu	a0,a0,1
9d010c60:	ae640124 	sw	a0,292(s3)
9d010c64:	0b404303 	j	9d010c0c <d_print_comp+0x1ad0>
9d010c68:	8fa2005c 	lw	v0,92(sp)
9d010c6c:	8e630104 	lw	v1,260(s3)
9d010c70:	240200ff 	li	v0,255
9d010c74:	106200aa 	beq	v1,v0,9d010f20 <d_print_comp+0x1de4>
9d010c78:	24640001 	addiu	a0,v1,1
9d010c7c:	2402007d 	li	v0,125
9d010c80:	02631821 	addu	v1,s3,v1
9d010c84:	a0620004 	sb	v0,4(v1)
9d010c88:	ae640104 	sw	a0,260(s3)
9d010c8c:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d010c90:	a2620108 	sb	v0,264(s3)
9d010c94:	8e250004 	lw	a1,4(s1)
9d010c98:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010c9c:	02602021 	move	a0,s3
9d010ca0:	8e620104 	lw	v0,260(s3)
9d010ca4:	240300ff 	li	v1,255
9d010ca8:	10430206 	beq	v0,v1,9d0114c4 <d_print_comp+0x2388>
9d010cac:	24440001 	addiu	a0,v0,1
9d010cb0:	24030029 	li	v1,41
9d010cb4:	02621021 	addu	v0,s3,v0
9d010cb8:	a0430004 	sb	v1,4(v0)
9d010cbc:	ae640104 	sw	a0,260(s3)
9d010cc0:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d010cc4:	a2630108 	sb	v1,264(s3)
9d010cc8:	8e260004 	lw	a2,4(s1)
9d010ccc:	27b20018 	addiu	s2,sp,24
9d010cd0:	3c059d01 	lui	a1,0x9d01
9d010cd4:	02402021 	move	a0,s2
9d010cd8:	24a56c00 	addiu	a1,a1,27648
9d010cdc:	0f401f4b 	jal	9d007d2c <sprintf>
9d010ce0:	24c60001 	addiu	a2,a2,1
9d010ce4:	0f401f87 	jal	9d007e1c <strlen>
9d010ce8:	02402021 	move	a0,s2
9d010cec:	1040ffdf 	beqz	v0,9d010c6c <d_print_comp+0x1b30>
9d010cf0:	00008821 	move	s1,zero
9d010cf4:	8e630104 	lw	v1,260(s3)
9d010cf8:	241500ff 	li	s5,255
9d010cfc:	0b40434a 	j	9d010d28 <d_print_comp+0x1bec>
9d010d00:	26700004 	addiu	s0,s3,4
9d010d04:	00602821 	move	a1,v1
9d010d08:	24630001 	addiu	v1,v1,1
9d010d0c:	26310001 	addiu	s1,s1,1
9d010d10:	02652821 	addu	a1,s3,a1
9d010d14:	0222202b 	sltu	a0,s1,v0
9d010d18:	a0b40004 	sb	s4,4(a1)
9d010d1c:	ae630104 	sw	v1,260(s3)
9d010d20:	1080ffd3 	beqz	a0,9d010c70 <d_print_comp+0x1b34>
9d010d24:	a2740108 	sb	s4,264(s3)
9d010d28:	02512021 	addu	a0,s2,s1
9d010d2c:	1475fff5 	bne	v1,s5,9d010d04 <d_print_comp+0x1bc8>
9d010d30:	80940000 	lb	s4,0(a0)
9d010d34:	8e63010c 	lw	v1,268(s3)
9d010d38:	8e660110 	lw	a2,272(s3)
9d010d3c:	a2600103 	sb	zero,259(s3)
9d010d40:	02002021 	move	a0,s0
9d010d44:	240500ff 	li	a1,255
9d010d48:	0060f809 	jalr	v1
9d010d4c:	afa2005c 	sw	v0,92(sp)
9d010d50:	8e640124 	lw	a0,292(s3)
9d010d54:	24030001 	li	v1,1
9d010d58:	00002821 	move	a1,zero
9d010d5c:	24840001 	addiu	a0,a0,1
9d010d60:	ae640124 	sw	a0,292(s3)
9d010d64:	0b404343 	j	9d010d0c <d_print_comp+0x1bd0>
9d010d68:	8fa2005c 	lw	v0,92(sp)
9d010d6c:	02602021 	move	a0,s3
9d010d70:	0f404aea 	jal	9d012ba8 <d_print_cast.clone.7>
9d010d74:	26250004 	addiu	a1,s1,4
9d010d78:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d010d7c:	8fbf0084 	lw	ra,132(sp)
9d010d80:	8e230004 	lw	v1,4(s1)
9d010d84:	8c740004 	lw	s4,4(v1)
9d010d88:	92840000 	lbu	a0,0(s4)
9d010d8c:	2484ff9f 	addiu	a0,a0,-97
9d010d90:	308400ff 	andi	a0,a0,0xff
9d010d94:	2c84001a 	sltiu	a0,a0,26
9d010d98:	5080000d 	beqzl	a0,9d010dd0 <d_print_comp+0x1c94>
9d010d9c:	8c750008 	lw	s5,8(v1)
9d010da0:	240300ff 	li	v1,255
9d010da4:	5043027c 	beql	v0,v1,9d011798 <d_print_comp+0x265c>
9d010da8:	8e62010c 	lw	v0,268(s3)
9d010dac:	24030020 	li	v1,32
9d010db0:	02622021 	addu	a0,s3,v0
9d010db4:	24420001 	addiu	v0,v0,1
9d010db8:	a0830004 	sb	v1,4(a0)
9d010dbc:	a2630108 	sb	v1,264(s3)
9d010dc0:	ae620104 	sw	v0,260(s3)
9d010dc4:	8e230004 	lw	v1,4(s1)
9d010dc8:	8c740004 	lw	s4,4(v1)
9d010dcc:	8c750008 	lw	s5,8(v1)
9d010dd0:	12a0f8f1 	beqz	s5,9d00f198 <d_print_comp+0x5c>
9d010dd4:	00008821 	move	s1,zero
9d010dd8:	8e620104 	lw	v0,260(s3)
9d010ddc:	241600ff 	li	s6,255
9d010de0:	0b404383 	j	9d010e0c <d_print_comp+0x1cd0>
9d010de4:	26700004 	addiu	s0,s3,4
9d010de8:	00402021 	move	a0,v0
9d010dec:	24420001 	addiu	v0,v0,1
9d010df0:	26310001 	addiu	s1,s1,1
9d010df4:	02642021 	addu	a0,s3,a0
9d010df8:	0235182b 	sltu	v1,s1,s5
9d010dfc:	a0920004 	sb	s2,4(a0)
9d010e00:	ae620104 	sw	v0,260(s3)
9d010e04:	1060f8e4 	beqz	v1,9d00f198 <d_print_comp+0x5c>
9d010e08:	a2720108 	sb	s2,264(s3)
9d010e0c:	02911821 	addu	v1,s4,s1
9d010e10:	1456fff5 	bne	v0,s6,9d010de8 <d_print_comp+0x1cac>
9d010e14:	80720000 	lb	s2,0(v1)
9d010e18:	8e62010c 	lw	v0,268(s3)
9d010e1c:	8e660110 	lw	a2,272(s3)
9d010e20:	02002021 	move	a0,s0
9d010e24:	a2600103 	sb	zero,259(s3)
9d010e28:	0040f809 	jalr	v0
9d010e2c:	240500ff 	li	a1,255
9d010e30:	8e630124 	lw	v1,292(s3)
9d010e34:	24020001 	li	v0,1
9d010e38:	00002021 	move	a0,zero
9d010e3c:	24630001 	addiu	v1,v1,1
9d010e40:	0b40437c 	j	9d010df0 <d_print_comp+0x1cb4>
9d010e44:	ae630124 	sw	v1,292(s3)
9d010e48:	8e260004 	lw	a2,4(s1)
9d010e4c:	27b20018 	addiu	s2,sp,24
9d010e50:	3c059d01 	lui	a1,0x9d01
9d010e54:	02402021 	move	a0,s2
9d010e58:	24a56c00 	addiu	a1,a1,27648
9d010e5c:	0f401f4b 	jal	9d007d2c <sprintf>
9d010e60:	24c60001 	addiu	a2,a2,1
9d010e64:	0f401f87 	jal	9d007e1c <strlen>
9d010e68:	02402021 	move	a0,s2
9d010e6c:	1040ff7f 	beqz	v0,9d010c6c <d_print_comp+0x1b30>
9d010e70:	00008821 	move	s1,zero
9d010e74:	8e630104 	lw	v1,260(s3)
9d010e78:	241500ff 	li	s5,255
9d010e7c:	0b4043aa 	j	9d010ea8 <d_print_comp+0x1d6c>
9d010e80:	26700004 	addiu	s0,s3,4
9d010e84:	00602821 	move	a1,v1
9d010e88:	24630001 	addiu	v1,v1,1
9d010e8c:	26310001 	addiu	s1,s1,1
9d010e90:	02652821 	addu	a1,s3,a1
9d010e94:	0222202b 	sltu	a0,s1,v0
9d010e98:	a0b40004 	sb	s4,4(a1)
9d010e9c:	ae630104 	sw	v1,260(s3)
9d010ea0:	1080ff73 	beqz	a0,9d010c70 <d_print_comp+0x1b34>
9d010ea4:	a2740108 	sb	s4,264(s3)
9d010ea8:	02512021 	addu	a0,s2,s1
9d010eac:	1475fff5 	bne	v1,s5,9d010e84 <d_print_comp+0x1d48>
9d010eb0:	80940000 	lb	s4,0(a0)
9d010eb4:	8e63010c 	lw	v1,268(s3)
9d010eb8:	8e660110 	lw	a2,272(s3)
9d010ebc:	a2600103 	sb	zero,259(s3)
9d010ec0:	02002021 	move	a0,s0
9d010ec4:	240500ff 	li	a1,255
9d010ec8:	0060f809 	jalr	v1
9d010ecc:	afa2005c 	sw	v0,92(sp)
9d010ed0:	8e640124 	lw	a0,292(s3)
9d010ed4:	24030001 	li	v1,1
9d010ed8:	00002821 	move	a1,zero
9d010edc:	24840001 	addiu	a0,a0,1
9d010ee0:	ae640124 	sw	a0,292(s3)
9d010ee4:	0b4043a3 	j	9d010e8c <d_print_comp+0x1d50>
9d010ee8:	8fa2005c 	lw	v0,92(sp)
9d010eec:	8e250008 	lw	a1,8(s1)
9d010ef0:	02602021 	move	a0,s3
9d010ef4:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d010ef8:	8e700124 	lw	s0,292(s3)
9d010efc:	8e620124 	lw	v0,292(s3)
9d010f00:	1450f8a6 	bne	v0,s0,9d00f19c <d_print_comp+0x60>
9d010f04:	8fbf0084 	lw	ra,132(sp)
9d010f08:	8e620104 	lw	v0,260(s3)
9d010f0c:	1452f8a4 	bne	v0,s2,9d00f1a0 <d_print_comp+0x64>
9d010f10:	8fbe0080 	lw	s8,128(sp)
9d010f14:	2652fffe 	addiu	s2,s2,-2
9d010f18:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d010f1c:	ae720104 	sw	s2,260(s3)
9d010f20:	8e62010c 	lw	v0,268(s3)
9d010f24:	8e660110 	lw	a2,272(s3)
9d010f28:	26640004 	addiu	a0,s3,4
9d010f2c:	a2600103 	sb	zero,259(s3)
9d010f30:	0040f809 	jalr	v0
9d010f34:	240500ff 	li	a1,255
9d010f38:	8e620124 	lw	v0,292(s3)
9d010f3c:	24040001 	li	a0,1
9d010f40:	00001821 	move	v1,zero
9d010f44:	24420001 	addiu	v0,v0,1
9d010f48:	0b40431f 	j	9d010c7c <d_print_comp+0x1b40>
9d010f4c:	ae620124 	sw	v0,292(s3)
9d010f50:	8cb50008 	lw	s5,8(a1)
9d010f54:	0255a821 	addu	s5,s2,s5
9d010f58:	0255102b 	sltu	v0,s2,s5
9d010f5c:	1040f88e 	beqz	v0,9d00f198 <d_print_comp+0x5c>
9d010f60:	241e005f 	li	s8,95
9d010f64:	24110055 	li	s1,85
9d010f68:	241600ff 	li	s6,255
9d010f6c:	26700004 	addiu	s0,s3,4
9d010f70:	02b21023 	subu	v0,s5,s2
9d010f74:	28420004 	slti	v0,v0,4
9d010f78:	14400003 	bnez	v0,9d010f88 <d_print_comp+0x1e4c>
9d010f7c:	82540000 	lb	s4,0(s2)
9d010f80:	529e000e 	beql	s4,s8,9d010fbc <d_print_comp+0x1e80>
9d010f84:	82420001 	lb	v0,1(s2)
9d010f88:	26520001 	addiu	s2,s2,1
9d010f8c:	8e620104 	lw	v0,260(s3)
9d010f90:	1056002a 	beq	v0,s6,9d01103c <d_print_comp+0x1f00>
9d010f94:	24430001 	addiu	v1,v0,1
9d010f98:	02621021 	addu	v0,s3,v0
9d010f9c:	a0540004 	sb	s4,4(v0)
9d010fa0:	ae630104 	sw	v1,260(s3)
9d010fa4:	a2740108 	sb	s4,264(s3)
9d010fa8:	0255102b 	sltu	v0,s2,s5
9d010fac:	1440fff1 	bnez	v0,9d010f74 <d_print_comp+0x1e38>
9d010fb0:	02b21023 	subu	v0,s5,s2
9d010fb4:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d010fb8:	8fbf0084 	lw	ra,132(sp)
9d010fbc:	105e0003 	beq	v0,s8,9d010fcc <d_print_comp+0x1e90>
9d010fc0:	26460001 	addiu	a2,s2,1
9d010fc4:	0b4043e3 	j	9d010f8c <d_print_comp+0x1e50>
9d010fc8:	00c09021 	move	s2,a2
9d010fcc:	82420002 	lb	v0,2(s2)
9d010fd0:	5451ffee 	bnel	v0,s1,9d010f8c <d_print_comp+0x1e50>
9d010fd4:	00c09021 	move	s2,a2
9d010fd8:	26570003 	addiu	s7,s2,3
9d010fdc:	02f5102b 	sltu	v0,s7,s5
9d010fe0:	1040fff8 	beqz	v0,9d010fc4 <d_print_comp+0x1e88>
9d010fe4:	00002021 	move	a0,zero
9d010fe8:	0b404402 	j	9d011008 <d_print_comp+0x1ecc>
9d010fec:	82e20000 	lb	v0,0(s7)
9d010ff0:	26f70001 	addiu	s7,s7,1
9d010ff4:	02f5182b 	sltu	v1,s7,s5
9d010ff8:	1060fff2 	beqz	v1,9d010fc4 <d_print_comp+0x1e88>
9d010ffc:	00042100 	sll	a0,a0,0x4
9d011000:	00442021 	addu	a0,v0,a0
9d011004:	82e20000 	lb	v0,0(s7)
9d011008:	304300ff 	andi	v1,v0,0xff
9d01100c:	2465ffd0 	addiu	a1,v1,-48
9d011010:	30a500ff 	andi	a1,a1,0xff
9d011014:	2ca5000a 	sltiu	a1,a1,10
9d011018:	54a0fff5 	bnezl	a1,9d010ff0 <d_print_comp+0x1eb4>
9d01101c:	2442ffd0 	addiu	v0,v0,-48
9d011020:	2465ffbf 	addiu	a1,v1,-65
9d011024:	30a500ff 	andi	a1,a1,0xff
9d011028:	2ca50006 	sltiu	a1,a1,6
9d01102c:	10a00107 	beqz	a1,9d01144c <d_print_comp+0x2310>
9d011030:	2463ff9f 	addiu	v1,v1,-97
9d011034:	0b4043fc 	j	9d010ff0 <d_print_comp+0x1eb4>
9d011038:	2442ffc9 	addiu	v0,v0,-55
9d01103c:	8e62010c 	lw	v0,268(s3)
9d011040:	8e660110 	lw	a2,272(s3)
9d011044:	02002021 	move	a0,s0
9d011048:	a2600103 	sb	zero,259(s3)
9d01104c:	0040f809 	jalr	v0
9d011050:	240500ff 	li	a1,255
9d011054:	8e640124 	lw	a0,292(s3)
9d011058:	24030001 	li	v1,1
9d01105c:	00001021 	move	v0,zero
9d011060:	24840001 	addiu	a0,a0,1
9d011064:	0b4043e6 	j	9d010f98 <d_print_comp+0x1e5c>
9d011068:	ae640124 	sw	a0,292(s3)
9d01106c:	8c54000c 	lw	s4,12(v0)
9d011070:	1280f849 	beqz	s4,9d00f198 <d_print_comp+0x5c>
9d011074:	8c550008 	lw	s5,8(v0)
9d011078:	8e620104 	lw	v0,260(s3)
9d01107c:	00008821 	move	s1,zero
9d011080:	241600ff 	li	s6,255
9d011084:	0b40442c 	j	9d0110b0 <d_print_comp+0x1f74>
9d011088:	26700004 	addiu	s0,s3,4
9d01108c:	00402021 	move	a0,v0
9d011090:	24420001 	addiu	v0,v0,1
9d011094:	26310001 	addiu	s1,s1,1
9d011098:	02642021 	addu	a0,s3,a0
9d01109c:	0234182b 	sltu	v1,s1,s4
9d0110a0:	a0920004 	sb	s2,4(a0)
9d0110a4:	ae620104 	sw	v0,260(s3)
9d0110a8:	1060f83b 	beqz	v1,9d00f198 <d_print_comp+0x5c>
9d0110ac:	a2720108 	sb	s2,264(s3)
9d0110b0:	02b11821 	addu	v1,s5,s1
9d0110b4:	1456fff5 	bne	v0,s6,9d01108c <d_print_comp+0x1f50>
9d0110b8:	80720000 	lb	s2,0(v1)
9d0110bc:	8e62010c 	lw	v0,268(s3)
9d0110c0:	8e660110 	lw	a2,272(s3)
9d0110c4:	02002021 	move	a0,s0
9d0110c8:	a2600103 	sb	zero,259(s3)
9d0110cc:	0040f809 	jalr	v0
9d0110d0:	240500ff 	li	a1,255
9d0110d4:	8e630124 	lw	v1,292(s3)
9d0110d8:	24020001 	li	v0,1
9d0110dc:	00002021 	move	a0,zero
9d0110e0:	24630001 	addiu	v1,v1,1
9d0110e4:	0b404425 	j	9d011094 <d_print_comp+0x1f58>
9d0110e8:	ae630124 	sw	v1,292(s3)
9d0110ec:	26316bb8 	addiu	s1,s1,27576
9d0110f0:	26350006 	addiu	s5,s1,6
9d0110f4:	241400ff 	li	s4,255
9d0110f8:	0b404448 	j	9d011120 <d_print_comp+0x1fe4>
9d0110fc:	26700004 	addiu	s0,s3,4
9d011100:	00401821 	move	v1,v0
9d011104:	24420001 	addiu	v0,v0,1
9d011108:	02631821 	addu	v1,s3,v1
9d01110c:	26310001 	addiu	s1,s1,1
9d011110:	a0720004 	sb	s2,4(v1)
9d011114:	ae620104 	sw	v0,260(s3)
9d011118:	1235f81f 	beq	s1,s5,9d00f198 <d_print_comp+0x5c>
9d01111c:	a2720108 	sb	s2,264(s3)
9d011120:	1454fff7 	bne	v0,s4,9d011100 <d_print_comp+0x1fc4>
9d011124:	82320000 	lb	s2,0(s1)
9d011128:	8e62010c 	lw	v0,268(s3)
9d01112c:	8e660110 	lw	a2,272(s3)
9d011130:	02002021 	move	a0,s0
9d011134:	a2600103 	sb	zero,259(s3)
9d011138:	0040f809 	jalr	v0
9d01113c:	240500ff 	li	a1,255
9d011140:	8e640124 	lw	a0,292(s3)
9d011144:	24020001 	li	v0,1
9d011148:	00001821 	move	v1,zero
9d01114c:	24840001 	addiu	a0,a0,1
9d011150:	0b404442 	j	9d011108 <d_print_comp+0x1fcc>
9d011154:	ae640124 	sw	a0,292(s3)
9d011158:	240300ff 	li	v1,255
9d01115c:	504301a2 	beql	v0,v1,9d0117e8 <d_print_comp+0x26ac>
9d011160:	8e62010c 	lw	v0,268(s3)
9d011164:	24030028 	li	v1,40
9d011168:	02622021 	addu	a0,s3,v0
9d01116c:	24420001 	addiu	v0,v0,1
9d011170:	a0830004 	sb	v1,4(a0)
9d011174:	ae620104 	sw	v0,260(s3)
9d011178:	a2630108 	sb	v1,264(s3)
9d01117c:	8e250004 	lw	a1,4(s1)
9d011180:	02602021 	move	a0,s3
9d011184:	0f404aea 	jal	9d012ba8 <d_print_cast.clone.7>
9d011188:	24a50004 	addiu	a1,a1,4
9d01118c:	8e620104 	lw	v0,260(s3)
9d011190:	240300ff 	li	v1,255
9d011194:	5043018a 	beql	v0,v1,9d0117c0 <d_print_comp+0x2684>
9d011198:	8e62010c 	lw	v0,268(s3)
9d01119c:	24030029 	li	v1,41
9d0111a0:	02622021 	addu	a0,s3,v0
9d0111a4:	24420001 	addiu	v0,v0,1
9d0111a8:	a0830004 	sb	v1,4(a0)
9d0111ac:	ae620104 	sw	v0,260(s3)
9d0111b0:	0b403d24 	j	9d00f490 <d_print_comp+0x354>
9d0111b4:	a2630108 	sb	v1,264(s3)
9d0111b8:	8e620000 	lw	v0,0(s3)
9d0111bc:	0b4041de 	j	9d010778 <d_print_comp+0x163c>
9d0111c0:	30420020 	andi	v0,v0,0x20
9d0111c4:	02602021 	move	a0,s3
9d0111c8:	24a50004 	addiu	a1,a1,4
9d0111cc:	0f404a22 	jal	9d012888 <d_print_function_type.clone.6>
9d0111d0:	26260008 	addiu	a2,s1,8
9d0111d4:	0b4041bf 	j	9d0106fc <d_print_comp+0x15c0>
9d0111d8:	8e220004 	lw	v0,4(s1)
9d0111dc:	26526ba8 	addiu	s2,s2,27560
9d0111e0:	8e620104 	lw	v0,260(s3)
9d0111e4:	26560005 	addiu	s6,s2,5
9d0111e8:	241500ff 	li	s5,255
9d0111ec:	0b404485 	j	9d011214 <d_print_comp+0x20d8>
9d0111f0:	26700004 	addiu	s0,s3,4
9d0111f4:	00401821 	move	v1,v0
9d0111f8:	24420001 	addiu	v0,v0,1
9d0111fc:	02631821 	addu	v1,s3,v1
9d011200:	26520001 	addiu	s2,s2,1
9d011204:	a0740004 	sb	s4,4(v1)
9d011208:	ae620104 	sw	v0,260(s3)
9d01120c:	1256fcc0 	beq	s2,s6,9d010510 <d_print_comp+0x13d4>
9d011210:	a2740108 	sb	s4,264(s3)
9d011214:	1455fff7 	bne	v0,s5,9d0111f4 <d_print_comp+0x20b8>
9d011218:	82540000 	lb	s4,0(s2)
9d01121c:	8e62010c 	lw	v0,268(s3)
9d011220:	8e660110 	lw	a2,272(s3)
9d011224:	02002021 	move	a0,s0
9d011228:	a2600103 	sb	zero,259(s3)
9d01122c:	0040f809 	jalr	v0
9d011230:	240500ff 	li	a1,255
9d011234:	8e640124 	lw	a0,292(s3)
9d011238:	24020001 	li	v0,1
9d01123c:	00001821 	move	v1,zero
9d011240:	24840001 	addiu	a0,a0,1
9d011244:	0b40447f 	j	9d0111fc <d_print_comp+0x20c0>
9d011248:	ae640124 	sw	a0,292(s3)
9d01124c:	3c129d01 	lui	s2,0x9d01
9d011250:	26526a9c 	addiu	s2,s2,27292
9d011254:	8e620104 	lw	v0,260(s3)
9d011258:	26560002 	addiu	s6,s2,2
9d01125c:	241500ff 	li	s5,255
9d011260:	0b4044a2 	j	9d011288 <d_print_comp+0x214c>
9d011264:	26700004 	addiu	s0,s3,4
9d011268:	00401821 	move	v1,v0
9d01126c:	24420001 	addiu	v0,v0,1
9d011270:	02631821 	addu	v1,s3,v1
9d011274:	26520001 	addiu	s2,s2,1
9d011278:	a0740004 	sb	s4,4(v1)
9d01127c:	ae620104 	sw	v0,260(s3)
9d011280:	1256f7f5 	beq	s2,s6,9d00f258 <d_print_comp+0x11c>
9d011284:	a2740108 	sb	s4,264(s3)
9d011288:	1455fff7 	bne	v0,s5,9d011268 <d_print_comp+0x212c>
9d01128c:	82540000 	lb	s4,0(s2)
9d011290:	8e62010c 	lw	v0,268(s3)
9d011294:	8e660110 	lw	a2,272(s3)
9d011298:	02002021 	move	a0,s0
9d01129c:	a2600103 	sb	zero,259(s3)
9d0112a0:	0040f809 	jalr	v0
9d0112a4:	240500ff 	li	a1,255
9d0112a8:	8e640124 	lw	a0,292(s3)
9d0112ac:	24020001 	li	v0,1
9d0112b0:	00001821 	move	v1,zero
9d0112b4:	24840001 	addiu	a0,a0,1
9d0112b8:	0b40449c 	j	9d011270 <d_print_comp+0x2134>
9d0112bc:	ae640124 	sw	a0,292(s3)
9d0112c0:	8c420004 	lw	v0,4(v0)
9d0112c4:	8c500010 	lw	s0,16(v0)
9d0112c8:	5200f981 	beqzl	s0,9d00f8d0 <d_print_comp+0x794>
9d0112cc:	8e620104 	lw	v0,260(s3)
9d0112d0:	2e020007 	sltiu	v0,s0,7
9d0112d4:	544000e8 	bnezl	v0,9d011678 <d_print_comp+0x253c>
9d0112d8:	8e250008 	lw	a1,8(s1)
9d0112dc:	24020007 	li	v0,7
9d0112e0:	5602f97b 	bnel	s0,v0,9d00f8d0 <d_print_comp+0x794>
9d0112e4:	8e620104 	lw	v0,260(s3)
9d0112e8:	8e220008 	lw	v0,8(s1)
9d0112ec:	8c440000 	lw	a0,0(v0)
9d0112f0:	5480f977 	bnezl	a0,9d00f8d0 <d_print_comp+0x794>
9d0112f4:	8e620104 	lw	v0,260(s3)
9d0112f8:	8c450008 	lw	a1,8(v0)
9d0112fc:	24040001 	li	a0,1
9d011300:	54a4f973 	bnel	a1,a0,9d00f8d0 <d_print_comp+0x794>
9d011304:	8e620104 	lw	v0,260(s3)
9d011308:	24040035 	li	a0,53
9d01130c:	5464f970 	bnel	v1,a0,9d00f8d0 <d_print_comp+0x794>
9d011310:	8e620104 	lw	v0,260(s3)
9d011314:	8c420004 	lw	v0,4(v0)
9d011318:	24030030 	li	v1,48
9d01131c:	80420000 	lb	v0,0(v0)
9d011320:	504301c8 	beql	v0,v1,9d011a44 <d_print_comp+0x2908>
9d011324:	3c059d01 	lui	a1,0x9d01
9d011328:	24030031 	li	v1,49
9d01132c:	5443f968 	bnel	v0,v1,9d00f8d0 <d_print_comp+0x794>
9d011330:	8e620104 	lw	v0,260(s3)
9d011334:	3c059d01 	lui	a1,0x9d01
9d011338:	02602021 	move	a0,s3
9d01133c:	0f403c14 	jal	9d00f050 <d_append_string>
9d011340:	24a56bf8 	addiu	a1,a1,27640
9d011344:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d011348:	8fbf0084 	lw	ra,132(sp)
9d01134c:	240200ff 	li	v0,255
9d011350:	5082016a 	beql	a0,v0,9d0118fc <d_print_comp+0x27c0>
9d011354:	8e62010c 	lw	v0,268(s3)
9d011358:	2402002d 	li	v0,45
9d01135c:	02641821 	addu	v1,s3,a0
9d011360:	24840001 	addiu	a0,a0,1
9d011364:	a0620004 	sb	v0,4(v1)
9d011368:	ae640104 	sw	a0,260(s3)
9d01136c:	0b403e4b 	j	9d00f92c <d_print_comp+0x7f0>
9d011370:	a2620108 	sb	v0,264(s3)
9d011374:	240300ff 	li	v1,255
9d011378:	50430156 	beql	v0,v1,9d0118d4 <d_print_comp+0x2798>
9d01137c:	8e62010c 	lw	v0,268(s3)
9d011380:	24030020 	li	v1,32
9d011384:	02622021 	addu	a0,s3,v0
9d011388:	24420001 	addiu	v0,v0,1
9d01138c:	a0830004 	sb	v1,4(a0)
9d011390:	ae620104 	sw	v0,260(s3)
9d011394:	0b40408c 	j	9d010230 <d_print_comp+0x10f4>
9d011398:	a2630108 	sb	v1,264(s3)
9d01139c:	240300ff 	li	v1,255
9d0113a0:	5043012e 	beql	v0,v1,9d01185c <d_print_comp+0x2720>
9d0113a4:	8e62010c 	lw	v0,268(s3)
9d0113a8:	24030020 	li	v1,32
9d0113ac:	02622021 	addu	a0,s3,v0
9d0113b0:	24420001 	addiu	v0,v0,1
9d0113b4:	a0830004 	sb	v1,4(a0)
9d0113b8:	ae620104 	sw	v0,260(s3)
9d0113bc:	0b40409b 	j	9d01026c <d_print_comp+0x1130>
9d0113c0:	a2630108 	sb	v1,264(s3)
9d0113c4:	8e660110 	lw	a2,272(s3)
9d0113c8:	02721821 	addu	v1,s3,s2
9d0113cc:	02402821 	move	a1,s2
9d0113d0:	a0600004 	sb	zero,4(v1)
9d0113d4:	0040f809 	jalr	v0
9d0113d8:	26640004 	addiu	a0,s3,4
9d0113dc:	8e620124 	lw	v0,292(s3)
9d0113e0:	ae600104 	sw	zero,260(s3)
9d0113e4:	00009021 	move	s2,zero
9d0113e8:	24420001 	addiu	v0,v0,1
9d0113ec:	0b404181 	j	9d010604 <d_print_comp+0x14c8>
9d0113f0:	ae620124 	sw	v0,292(s3)
9d0113f4:	1c400008 	bgtz	v0,9d011418 <d_print_comp+0x22dc>
9d0113f8:	2404002b 	li	a0,43
9d0113fc:	0b404509 	j	9d011424 <d_print_comp+0x22e8>
9d011400:	00000000 	nop
9d011404:	8ca30000 	lw	v1,0(a1)
9d011408:	5464f762 	bnel	v1,a0,9d00f194 <d_print_comp+0x58>
9d01140c:	24020001 	li	v0,1
9d011410:	18400004 	blez	v0,9d011424 <d_print_comp+0x22e8>
9d011414:	00000000 	nop
9d011418:	8ca50008 	lw	a1,8(a1)
9d01141c:	14a0fff9 	bnez	a1,9d011404 <d_print_comp+0x22c8>
9d011420:	2442ffff 	addiu	v0,v0,-1
9d011424:	1440f75b 	bnez	v0,9d00f194 <d_print_comp+0x58>
9d011428:	24020001 	li	v0,1
9d01142c:	50a0f75a 	beqzl	a1,9d00f198 <d_print_comp+0x5c>
9d011430:	ae62011c 	sw	v0,284(s3)
9d011434:	8ca50004 	lw	a1,4(a1)
9d011438:	54a0fbb8 	bnezl	a1,9d01031c <d_print_comp+0x11e0>
9d01143c:	8e020000 	lw	v0,0(s0)
9d011440:	24020001 	li	v0,1
9d011444:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d011448:	ae62011c 	sw	v0,284(s3)
9d01144c:	306300ff 	andi	v1,v1,0xff
9d011450:	2c630006 	sltiu	v1,v1,6
9d011454:	10600155 	beqz	v1,9d0119ac <d_print_comp+0x2870>
9d011458:	02f5182b 	sltu	v1,s7,s5
9d01145c:	0b4043fc 	j	9d010ff0 <d_print_comp+0x1eb4>
9d011460:	2442ffa9 	addiu	v0,v0,-87
9d011464:	8e62010c 	lw	v0,268(s3)
9d011468:	8e660110 	lw	a2,272(s3)
9d01146c:	26640004 	addiu	a0,s3,4
9d011470:	a2600103 	sb	zero,259(s3)
9d011474:	0040f809 	jalr	v0
9d011478:	240500ff 	li	a1,255
9d01147c:	8e640124 	lw	a0,292(s3)
9d011480:	24030001 	li	v1,1
9d011484:	00001021 	move	v0,zero
9d011488:	24840001 	addiu	a0,a0,1
9d01148c:	0b403e01 	j	9d00f804 <d_print_comp+0x6c8>
9d011490:	ae640124 	sw	a0,292(s3)
9d011494:	8e62010c 	lw	v0,268(s3)
9d011498:	8e660110 	lw	a2,272(s3)
9d01149c:	26640004 	addiu	a0,s3,4
9d0114a0:	a2600103 	sb	zero,259(s3)
9d0114a4:	0040f809 	jalr	v0
9d0114a8:	240500ff 	li	a1,255
9d0114ac:	8e630124 	lw	v1,292(s3)
9d0114b0:	24040001 	li	a0,1
9d0114b4:	00001021 	move	v0,zero
9d0114b8:	24630001 	addiu	v1,v1,1
9d0114bc:	0b4042a0 	j	9d010a80 <d_print_comp+0x1944>
9d0114c0:	ae630124 	sw	v1,292(s3)
9d0114c4:	8e62010c 	lw	v0,268(s3)
9d0114c8:	8e660110 	lw	a2,272(s3)
9d0114cc:	26640004 	addiu	a0,s3,4
9d0114d0:	a2600103 	sb	zero,259(s3)
9d0114d4:	0040f809 	jalr	v0
9d0114d8:	240500ff 	li	a1,255
9d0114dc:	8e630124 	lw	v1,292(s3)
9d0114e0:	24040001 	li	a0,1
9d0114e4:	00001021 	move	v0,zero
9d0114e8:	24630001 	addiu	v1,v1,1
9d0114ec:	0b40432c 	j	9d010cb0 <d_print_comp+0x1b74>
9d0114f0:	ae630124 	sw	v1,292(s3)
9d0114f4:	02002021 	move	a0,s0
9d0114f8:	0f401f65 	jal	9d007d94 <strcmp>
9d0114fc:	24a56a90 	addiu	a1,a1,27280
9d011500:	144000c3 	bnez	v0,9d011810 <d_print_comp+0x26d4>
9d011504:	02602021 	move	a0,s3
9d011508:	8e220008 	lw	v0,8(s1)
9d01150c:	02602021 	move	a0,s3
9d011510:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d011514:	8c450008 	lw	a1,8(v0)
9d011518:	0b403d58 	j	9d00f560 <d_print_comp+0x424>
9d01151c:	8e220004 	lw	v0,4(s1)
9d011520:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d011524:	ae760118 	sw	s6,280(s3)
9d011528:	8e62010c 	lw	v0,268(s3)
9d01152c:	8e660110 	lw	a2,272(s3)
9d011530:	26640004 	addiu	a0,s3,4
9d011534:	a2600103 	sb	zero,259(s3)
9d011538:	0040f809 	jalr	v0
9d01153c:	240500ff 	li	a1,255
9d011540:	8e630124 	lw	v1,292(s3)
9d011544:	24040001 	li	a0,1
9d011548:	00001021 	move	v0,zero
9d01154c:	24630001 	addiu	v1,v1,1
9d011550:	0b403e37 	j	9d00f8dc <d_print_comp+0x7a0>
9d011554:	ae630124 	sw	v1,292(s3)
9d011558:	8e62010c 	lw	v0,268(s3)
9d01155c:	8e660110 	lw	a2,272(s3)
9d011560:	26640004 	addiu	a0,s3,4
9d011564:	a2600103 	sb	zero,259(s3)
9d011568:	0040f809 	jalr	v0
9d01156c:	240500ff 	li	a1,255
9d011570:	8e630124 	lw	v1,292(s3)
9d011574:	24040001 	li	a0,1
9d011578:	00001021 	move	v0,zero
9d01157c:	24630001 	addiu	v1,v1,1
9d011580:	0b403e43 	j	9d00f90c <d_print_comp+0x7d0>
9d011584:	ae630124 	sw	v1,292(s3)
9d011588:	8e62010c 	lw	v0,268(s3)
9d01158c:	8e660110 	lw	a2,272(s3)
9d011590:	26640004 	addiu	a0,s3,4
9d011594:	a2600103 	sb	zero,259(s3)
9d011598:	0040f809 	jalr	v0
9d01159c:	240500ff 	li	a1,255
9d0115a0:	8e630124 	lw	v1,292(s3)
9d0115a4:	24040001 	li	a0,1
9d0115a8:	00001021 	move	v0,zero
9d0115ac:	24630001 	addiu	v1,v1,1
9d0115b0:	0b40409e 	j	9d010278 <d_print_comp+0x113c>
9d0115b4:	ae630124 	sw	v1,292(s3)
9d0115b8:	8e62010c 	lw	v0,268(s3)
9d0115bc:	8e660110 	lw	a2,272(s3)
9d0115c0:	26640004 	addiu	a0,s3,4
9d0115c4:	a2600103 	sb	zero,259(s3)
9d0115c8:	0040f809 	jalr	v0
9d0115cc:	240500ff 	li	a1,255
9d0115d0:	8e630124 	lw	v1,292(s3)
9d0115d4:	24040001 	li	a0,1
9d0115d8:	00001021 	move	v0,zero
9d0115dc:	24630001 	addiu	v1,v1,1
9d0115e0:	0b40408f 	j	9d01023c <d_print_comp+0x1100>
9d0115e4:	ae630124 	sw	v1,292(s3)
9d0115e8:	24040001 	li	a0,1
9d0115ec:	8c650008 	lw	a1,8(v1)
9d0115f0:	54a4f7b7 	bnel	a1,a0,9d00f4d0 <d_print_comp+0x394>
9d0115f4:	8c450004 	lw	a1,4(v0)
9d0115f8:	8c630004 	lw	v1,4(v1)
9d0115fc:	80640000 	lb	a0,0(v1)
9d011600:	2403003e 	li	v1,62
9d011604:	5483f7b2 	bnel	a0,v1,9d00f4d0 <d_print_comp+0x394>
9d011608:	8c450004 	lw	a1,4(v0)
9d01160c:	8e620104 	lw	v0,260(s3)
9d011610:	240300ff 	li	v1,255
9d011614:	5043013f 	beql	v0,v1,9d011b14 <d_print_comp+0x29d8>
9d011618:	8e62010c 	lw	v0,268(s3)
9d01161c:	24030028 	li	v1,40
9d011620:	02622021 	addu	a0,s3,v0
9d011624:	24420001 	addiu	v0,v0,1
9d011628:	a0830004 	sb	v1,4(a0)
9d01162c:	ae620104 	sw	v0,260(s3)
9d011630:	a2630108 	sb	v1,264(s3)
9d011634:	0b403d33 	j	9d00f4cc <d_print_comp+0x390>
9d011638:	8e220008 	lw	v0,8(s1)
9d01163c:	3c059d01 	lui	a1,0x9d01
9d011640:	24a56aa0 	addiu	a1,a1,27296
9d011644:	0f401f8d 	jal	9d007e34 <strncmp>
9d011648:	24060006 	li	a2,6
9d01164c:	1440faf2 	bnez	v0,9d010218 <d_print_comp+0x10dc>
9d011650:	02602021 	move	a0,s3
9d011654:	8e250008 	lw	a1,8(s1)
9d011658:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d01165c:	02602021 	move	a0,s3
9d011660:	3c059d01 	lui	a1,0x9d01
9d011664:	02602021 	move	a0,s3
9d011668:	0f403c14 	jal	9d00f050 <d_append_string>
9d01166c:	24a56aa8 	addiu	a1,a1,27304
9d011670:	0b403c66 	j	9d00f198 <d_print_comp+0x5c>
9d011674:	ae700118 	sw	s0,280(s3)
9d011678:	8ca20000 	lw	v0,0(a1)
9d01167c:	5440f894 	bnezl	v0,9d00f8d0 <d_print_comp+0x794>
9d011680:	8e620104 	lw	v0,260(s3)
9d011684:	24020036 	li	v0,54
9d011688:	506200e3 	beql	v1,v0,9d011a18 <d_print_comp+0x28dc>
9d01168c:	8e620104 	lw	v0,260(s3)
9d011690:	02602021 	move	a0,s3
9d011694:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d011698:	2610fffe 	addiu	s0,s0,-2
9d01169c:	2e020005 	sltiu	v0,s0,5
9d0116a0:	1040f6be 	beqz	v0,9d00f19c <d_print_comp+0x60>
9d0116a4:	8fbf0084 	lw	ra,132(sp)
9d0116a8:	3c029d01 	lui	v0,0x9d01
9d0116ac:	244275f8 	addiu	v0,v0,30200
9d0116b0:	00108080 	sll	s0,s0,0x2
9d0116b4:	00508021 	addu	s0,v0,s0
9d0116b8:	8e020000 	lw	v0,0(s0)
9d0116bc:	00400008 	jr	v0
9d0116c0:	00000000 	nop
9d0116c4:	3c059d01 	lui	a1,0x9d01
9d0116c8:	02602021 	move	a0,s3
9d0116cc:	0f403c14 	jal	9d00f050 <d_append_string>
9d0116d0:	24a56be8 	addiu	a1,a1,27624
9d0116d4:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d0116d8:	8fbf0084 	lw	ra,132(sp)
9d0116dc:	3c059d01 	lui	a1,0x9d01
9d0116e0:	02602021 	move	a0,s3
9d0116e4:	0f403c14 	jal	9d00f050 <d_append_string>
9d0116e8:	24a56be4 	addiu	a1,a1,27620
9d0116ec:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d0116f0:	8fbf0084 	lw	ra,132(sp)
9d0116f4:	8e620104 	lw	v0,260(s3)
9d0116f8:	240300ff 	li	v1,255
9d0116fc:	504300ed 	beql	v0,v1,9d011ab4 <d_print_comp+0x2978>
9d011700:	8e62010c 	lw	v0,268(s3)
9d011704:	0b403e60 	j	9d00f980 <d_print_comp+0x844>
9d011708:	2403006c 	li	v1,108
9d01170c:	8e620104 	lw	v0,260(s3)
9d011710:	240300ff 	li	v1,255
9d011714:	504300db 	beql	v0,v1,9d011a84 <d_print_comp+0x2948>
9d011718:	8e62010c 	lw	v0,268(s3)
9d01171c:	0b403e60 	j	9d00f980 <d_print_comp+0x844>
9d011720:	24030075 	li	v1,117
9d011724:	3c059d01 	lui	a1,0x9d01
9d011728:	02602021 	move	a0,s3
9d01172c:	0f403c14 	jal	9d00f050 <d_append_string>
9d011730:	24a56bec 	addiu	a1,a1,27628
9d011734:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d011738:	8fbf0084 	lw	ra,132(sp)
9d01173c:	8e62010c 	lw	v0,268(s3)
9d011740:	8e660110 	lw	a2,272(s3)
9d011744:	26640004 	addiu	a0,s3,4
9d011748:	a2600103 	sb	zero,259(s3)
9d01174c:	0040f809 	jalr	v0
9d011750:	240500ff 	li	a1,255
9d011754:	8e630124 	lw	v1,292(s3)
9d011758:	24040001 	li	a0,1
9d01175c:	00001021 	move	v0,zero
9d011760:	24630001 	addiu	v1,v1,1
9d011764:	0b403c91 	j	9d00f244 <d_print_comp+0x108>
9d011768:	ae630124 	sw	v1,292(s3)
9d01176c:	8e660110 	lw	a2,272(s3)
9d011770:	26640004 	addiu	a0,s3,4
9d011774:	a2600103 	sb	zero,259(s3)
9d011778:	0040f809 	jalr	v0
9d01177c:	240500ff 	li	a1,255
9d011780:	8e640124 	lw	a0,292(s3)
9d011784:	24020001 	li	v0,1
9d011788:	00001821 	move	v1,zero
9d01178c:	24840001 	addiu	a0,a0,1
9d011790:	0b404151 	j	9d010544 <d_print_comp+0x1408>
9d011794:	ae640124 	sw	a0,292(s3)
9d011798:	8e660110 	lw	a2,272(s3)
9d01179c:	a2600103 	sb	zero,259(s3)
9d0117a0:	26640004 	addiu	a0,s3,4
9d0117a4:	0040f809 	jalr	v0
9d0117a8:	240500ff 	li	a1,255
9d0117ac:	8e630124 	lw	v1,292(s3)
9d0117b0:	00001021 	move	v0,zero
9d0117b4:	24630001 	addiu	v1,v1,1
9d0117b8:	0b40436b 	j	9d010dac <d_print_comp+0x1c70>
9d0117bc:	ae630124 	sw	v1,292(s3)
9d0117c0:	8e660110 	lw	a2,272(s3)
9d0117c4:	a2600103 	sb	zero,259(s3)
9d0117c8:	26640004 	addiu	a0,s3,4
9d0117cc:	0040f809 	jalr	v0
9d0117d0:	240500ff 	li	a1,255
9d0117d4:	8e630124 	lw	v1,292(s3)
9d0117d8:	00001021 	move	v0,zero
9d0117dc:	24630001 	addiu	v1,v1,1
9d0117e0:	0b404467 	j	9d01119c <d_print_comp+0x2060>
9d0117e4:	ae630124 	sw	v1,292(s3)
9d0117e8:	8e660110 	lw	a2,272(s3)
9d0117ec:	a2600103 	sb	zero,259(s3)
9d0117f0:	26640004 	addiu	a0,s3,4
9d0117f4:	0040f809 	jalr	v0
9d0117f8:	240500ff 	li	a1,255
9d0117fc:	8e630124 	lw	v1,292(s3)
9d011800:	00001021 	move	v0,zero
9d011804:	24630001 	addiu	v1,v1,1
9d011808:	0b404459 	j	9d011164 <d_print_comp+0x2028>
9d01180c:	ae630124 	sw	v1,292(s3)
9d011810:	0f404b6f 	jal	9d012dbc <d_print_expr_op>
9d011814:	02402821 	move	a1,s2
9d011818:	0b404543 	j	9d01150c <d_print_comp+0x23d0>
9d01181c:	8e220008 	lw	v0,8(s1)
9d011820:	0b403cc8 	j	9d00f320 <d_print_comp+0x1e4>
9d011824:	24100001 	li	s0,1
9d011828:	27a20010 	addiu	v0,sp,16
9d01182c:	afa30010 	sw	v1,16(sp)
9d011830:	ae620114 	sw	v0,276(s3)
9d011834:	0b404055 	j	9d010154 <d_print_comp+0x1018>
9d011838:	afb00014 	sw	s0,20(sp)
9d01183c:	0f404bb7 	jal	9d012edc <d_print_subexpr>
9d011840:	02602021 	move	a0,s3
9d011844:	3c059d01 	lui	a1,0x9d01
9d011848:	02602021 	move	a0,s3
9d01184c:	0f403c14 	jal	9d00f050 <d_append_string>
9d011850:	24a56c20 	addiu	a1,a1,27680
9d011854:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d011858:	8fbf0084 	lw	ra,132(sp)
9d01185c:	8e660110 	lw	a2,272(s3)
9d011860:	a2600103 	sb	zero,259(s3)
9d011864:	26640004 	addiu	a0,s3,4
9d011868:	0040f809 	jalr	v0
9d01186c:	240500ff 	li	a1,255
9d011870:	8e630124 	lw	v1,292(s3)
9d011874:	00001021 	move	v0,zero
9d011878:	24630001 	addiu	v1,v1,1
9d01187c:	0b4044ea 	j	9d0113a8 <d_print_comp+0x226c>
9d011880:	ae630124 	sw	v1,292(s3)
9d011884:	8e660110 	lw	a2,272(s3)
9d011888:	a2600103 	sb	zero,259(s3)
9d01188c:	02402021 	move	a0,s2
9d011890:	0040f809 	jalr	v0
9d011894:	240500ff 	li	a1,255
9d011898:	8e630124 	lw	v1,292(s3)
9d01189c:	00001021 	move	v0,zero
9d0118a0:	24630001 	addiu	v1,v1,1
9d0118a4:	0b404069 	j	9d0101a4 <d_print_comp+0x1068>
9d0118a8:	ae630124 	sw	v1,292(s3)
9d0118ac:	8e660110 	lw	a2,272(s3)
9d0118b0:	a2600103 	sb	zero,259(s3)
9d0118b4:	26640004 	addiu	a0,s3,4
9d0118b8:	0040f809 	jalr	v0
9d0118bc:	240500ff 	li	a1,255
9d0118c0:	8e630124 	lw	v1,292(s3)
9d0118c4:	00001021 	move	v0,zero
9d0118c8:	24630001 	addiu	v1,v1,1
9d0118cc:	0b403e52 	j	9d00f948 <d_print_comp+0x80c>
9d0118d0:	ae630124 	sw	v1,292(s3)
9d0118d4:	8e660110 	lw	a2,272(s3)
9d0118d8:	a2600103 	sb	zero,259(s3)
9d0118dc:	26640004 	addiu	a0,s3,4
9d0118e0:	0040f809 	jalr	v0
9d0118e4:	240500ff 	li	a1,255
9d0118e8:	8e630124 	lw	v1,292(s3)
9d0118ec:	00001021 	move	v0,zero
9d0118f0:	24630001 	addiu	v1,v1,1
9d0118f4:	0b4044e0 	j	9d011380 <d_print_comp+0x2244>
9d0118f8:	ae630124 	sw	v1,292(s3)
9d0118fc:	8e660110 	lw	a2,272(s3)
9d011900:	26640004 	addiu	a0,s3,4
9d011904:	a2600103 	sb	zero,259(s3)
9d011908:	0040f809 	jalr	v0
9d01190c:	240500ff 	li	a1,255
9d011910:	8e620124 	lw	v0,292(s3)
9d011914:	00002021 	move	a0,zero
9d011918:	24420001 	addiu	v0,v0,1
9d01191c:	0b4044d6 	j	9d011358 <d_print_comp+0x221c>
9d011920:	ae620124 	sw	v0,292(s3)
9d011924:	8e660110 	lw	a2,272(s3)
9d011928:	26640004 	addiu	a0,s3,4
9d01192c:	a2600103 	sb	zero,259(s3)
9d011930:	0040f809 	jalr	v0
9d011934:	240500ff 	li	a1,255
9d011938:	8e640124 	lw	a0,292(s3)
9d01193c:	8e620000 	lw	v0,0(s3)
9d011940:	00001821 	move	v1,zero
9d011944:	24840001 	addiu	a0,a0,1
9d011948:	ae640124 	sw	a0,292(s3)
9d01194c:	0b4041d8 	j	9d010760 <d_print_comp+0x1624>
9d011950:	30420020 	andi	v0,v0,0x20
9d011954:	8e660110 	lw	a2,272(s3)
9d011958:	a2600103 	sb	zero,259(s3)
9d01195c:	26640004 	addiu	a0,s3,4
9d011960:	0040f809 	jalr	v0
9d011964:	240500ff 	li	a1,255
9d011968:	8e630124 	lw	v1,292(s3)
9d01196c:	00001021 	move	v0,zero
9d011970:	24630001 	addiu	v1,v1,1
9d011974:	0b403d51 	j	9d00f544 <d_print_comp+0x408>
9d011978:	ae630124 	sw	v1,292(s3)
9d01197c:	8e660110 	lw	a2,272(s3)
9d011980:	a2600103 	sb	zero,259(s3)
9d011984:	26640004 	addiu	a0,s3,4
9d011988:	0040f809 	jalr	v0
9d01198c:	240500ff 	li	a1,255
9d011990:	8e630124 	lw	v1,292(s3)
9d011994:	00001021 	move	v0,zero
9d011998:	24630001 	addiu	v1,v1,1
9d01199c:	0b403d43 	j	9d00f50c <d_print_comp+0x3d0>
9d0119a0:	ae630124 	sw	v1,292(s3)
9d0119a4:	0b404028 	j	9d0100a0 <d_print_comp+0xf64>
9d0119a8:	24150001 	li	s5,1
9d0119ac:	1060fd77 	beqz	v1,9d010f8c <d_print_comp+0x1e50>
9d0119b0:	00c09021 	move	s2,a2
9d0119b4:	545efd76 	bnel	v0,s8,9d010f90 <d_print_comp+0x1e54>
9d0119b8:	8e620104 	lw	v0,260(s3)
9d0119bc:	2c820100 	sltiu	v0,a0,256
9d0119c0:	1040fd73 	beqz	v0,9d010f90 <d_print_comp+0x1e54>
9d0119c4:	8e620104 	lw	v0,260(s3)
9d0119c8:	1456000c 	bne	v0,s6,9d0119fc <d_print_comp+0x28c0>
9d0119cc:	7c049420 	seb	s2,a0
9d0119d0:	8e62010c 	lw	v0,268(s3)
9d0119d4:	8e660110 	lw	a2,272(s3)
9d0119d8:	a2600103 	sb	zero,259(s3)
9d0119dc:	02002021 	move	a0,s0
9d0119e0:	0040f809 	jalr	v0
9d0119e4:	240500ff 	li	a1,255
9d0119e8:	8e630124 	lw	v1,292(s3)
9d0119ec:	ae600104 	sw	zero,260(s3)
9d0119f0:	00001021 	move	v0,zero
9d0119f4:	24630001 	addiu	v1,v1,1
9d0119f8:	ae630124 	sw	v1,292(s3)
9d0119fc:	02621821 	addu	v1,s3,v0
9d011a00:	24420001 	addiu	v0,v0,1
9d011a04:	a0720004 	sb	s2,4(v1)
9d011a08:	a2720108 	sb	s2,264(s3)
9d011a0c:	ae620104 	sw	v0,260(s3)
9d011a10:	0b4043ea 	j	9d010fa8 <d_print_comp+0x1e6c>
9d011a14:	26f20001 	addiu	s2,s7,1
9d011a18:	240300ff 	li	v1,255
9d011a1c:	5043000e 	beql	v0,v1,9d011a58 <d_print_comp+0x291c>
9d011a20:	8e62010c 	lw	v0,268(s3)
9d011a24:	2403002d 	li	v1,45
9d011a28:	02622021 	addu	a0,s3,v0
9d011a2c:	24420001 	addiu	v0,v0,1
9d011a30:	a0830004 	sb	v1,4(a0)
9d011a34:	ae620104 	sw	v0,260(s3)
9d011a38:	a2630108 	sb	v1,264(s3)
9d011a3c:	0b4045a4 	j	9d011690 <d_print_comp+0x2554>
9d011a40:	8e250008 	lw	a1,8(s1)
9d011a44:	02602021 	move	a0,s3
9d011a48:	0f403c14 	jal	9d00f050 <d_append_string>
9d011a4c:	24a56bf0 	addiu	a1,a1,27632
9d011a50:	0b403c67 	j	9d00f19c <d_print_comp+0x60>
9d011a54:	8fbf0084 	lw	ra,132(sp)
9d011a58:	8e660110 	lw	a2,272(s3)
9d011a5c:	a2600103 	sb	zero,259(s3)
9d011a60:	26640004 	addiu	a0,s3,4
9d011a64:	0040f809 	jalr	v0
9d011a68:	240500ff 	li	a1,255
9d011a6c:	8e630124 	lw	v1,292(s3)
9d011a70:	ae600104 	sw	zero,260(s3)
9d011a74:	00001021 	move	v0,zero
9d011a78:	24630001 	addiu	v1,v1,1
9d011a7c:	0b404689 	j	9d011a24 <d_print_comp+0x28e8>
9d011a80:	ae630124 	sw	v1,292(s3)
9d011a84:	8e660110 	lw	a2,272(s3)
9d011a88:	a2600103 	sb	zero,259(s3)
9d011a8c:	26640004 	addiu	a0,s3,4
9d011a90:	0040f809 	jalr	v0
9d011a94:	240500ff 	li	a1,255
9d011a98:	8e630124 	lw	v1,292(s3)
9d011a9c:	ae600104 	sw	zero,260(s3)
9d011aa0:	00001021 	move	v0,zero
9d011aa4:	24630001 	addiu	v1,v1,1
9d011aa8:	ae630124 	sw	v1,292(s3)
9d011aac:	0b403e60 	j	9d00f980 <d_print_comp+0x844>
9d011ab0:	24030075 	li	v1,117
9d011ab4:	8e660110 	lw	a2,272(s3)
9d011ab8:	a2600103 	sb	zero,259(s3)
9d011abc:	26640004 	addiu	a0,s3,4
9d011ac0:	0040f809 	jalr	v0
9d011ac4:	240500ff 	li	a1,255
9d011ac8:	8e630124 	lw	v1,292(s3)
9d011acc:	ae600104 	sw	zero,260(s3)
9d011ad0:	00001021 	move	v0,zero
9d011ad4:	24630001 	addiu	v1,v1,1
9d011ad8:	ae630124 	sw	v1,292(s3)
9d011adc:	0b403e60 	j	9d00f980 <d_print_comp+0x844>
9d011ae0:	2403006c 	li	v1,108
9d011ae4:	8e660110 	lw	a2,272(s3)
9d011ae8:	a2600103 	sb	zero,259(s3)
9d011aec:	26640004 	addiu	a0,s3,4
9d011af0:	0040f809 	jalr	v0
9d011af4:	240500ff 	li	a1,255
9d011af8:	8e630124 	lw	v1,292(s3)
9d011afc:	ae600104 	sw	zero,260(s3)
9d011b00:	00001021 	move	v0,zero
9d011b04:	24630001 	addiu	v1,v1,1
9d011b08:	ae630124 	sw	v1,292(s3)
9d011b0c:	0b403e60 	j	9d00f980 <d_print_comp+0x844>
9d011b10:	24030029 	li	v1,41
9d011b14:	8e660110 	lw	a2,272(s3)
9d011b18:	a2600103 	sb	zero,259(s3)
9d011b1c:	26640004 	addiu	a0,s3,4
9d011b20:	0040f809 	jalr	v0
9d011b24:	240500ff 	li	a1,255
9d011b28:	8e630124 	lw	v1,292(s3)
9d011b2c:	ae600104 	sw	zero,260(s3)
9d011b30:	00001021 	move	v0,zero
9d011b34:	24630001 	addiu	v1,v1,1
9d011b38:	0b404587 	j	9d01161c <d_print_comp+0x24e0>
9d011b3c:	ae630124 	sw	v1,292(s3)

9d011b40 <d_print_mod>:
9d011b40:	8ca20000 	lw	v0,0(a1)
9d011b44:	27bdffd0 	addiu	sp,sp,-48
9d011b48:	afb3001c 	sw	s3,28(sp)
9d011b4c:	2442fffd 	addiu	v0,v0,-3
9d011b50:	2c430027 	sltiu	v1,v0,39
9d011b54:	afb10014 	sw	s1,20(sp)
9d011b58:	afbf002c 	sw	ra,44(sp)
9d011b5c:	afb60028 	sw	s6,40(sp)
9d011b60:	afb50024 	sw	s5,36(sp)
9d011b64:	afb40020 	sw	s4,32(sp)
9d011b68:	afb20018 	sw	s2,24(sp)
9d011b6c:	afb00010 	sw	s0,16(sp)
9d011b70:	00a09821 	move	s3,a1
9d011b74:	1460000d 	bnez	v1,9d011bac <d_print_mod+0x6c>
9d011b78:	00808821 	move	s1,a0
9d011b7c:	02202021 	move	a0,s1
9d011b80:	02602821 	move	a1,s3
9d011b84:	8fbf002c 	lw	ra,44(sp)
9d011b88:	8fb60028 	lw	s6,40(sp)
9d011b8c:	8fb50024 	lw	s5,36(sp)
9d011b90:	8fb40020 	lw	s4,32(sp)
9d011b94:	8fb3001c 	lw	s3,28(sp)
9d011b98:	8fb20018 	lw	s2,24(sp)
9d011b9c:	8fb10014 	lw	s1,20(sp)
9d011ba0:	8fb00010 	lw	s0,16(sp)
9d011ba4:	0b403c4f 	j	9d00f13c <d_print_comp>
9d011ba8:	27bd0030 	addiu	sp,sp,48
9d011bac:	3c039d01 	lui	v1,0x9d01
9d011bb0:	00021080 	sll	v0,v0,0x2
9d011bb4:	2463760c 	addiu	v1,v1,30220
9d011bb8:	00621021 	addu	v0,v1,v0
9d011bbc:	8c420000 	lw	v0,0(v0)
9d011bc0:	00400008 	jr	v0
9d011bc4:	00000000 	nop
9d011bc8:	0b4046e1 	j	9d011b84 <d_print_mod+0x44>
9d011bcc:	8ca50004 	lw	a1,4(a1)
9d011bd0:	3c129d01 	lui	s2,0x9d01
9d011bd4:	26526c8c 	addiu	s2,s2,27788
9d011bd8:	8c820104 	lw	v0,260(a0)
9d011bdc:	26550009 	addiu	s5,s2,9
9d011be0:	241400ff 	li	s4,255
9d011be4:	0b404703 	j	9d011c0c <d_print_mod+0xcc>
9d011be8:	24900004 	addiu	s0,a0,4
9d011bec:	00401821 	move	v1,v0
9d011bf0:	24420001 	addiu	v0,v0,1
9d011bf4:	02231821 	addu	v1,s1,v1
9d011bf8:	26520001 	addiu	s2,s2,1
9d011bfc:	a0730004 	sb	s3,4(v1)
9d011c00:	ae220104 	sw	v0,260(s1)
9d011c04:	1255006b 	beq	s2,s5,9d011db4 <d_print_mod+0x274>
9d011c08:	a2330108 	sb	s3,264(s1)
9d011c0c:	1454fff7 	bne	v0,s4,9d011bec <d_print_mod+0xac>
9d011c10:	82530000 	lb	s3,0(s2)
9d011c14:	8e22010c 	lw	v0,268(s1)
9d011c18:	8e260110 	lw	a2,272(s1)
9d011c1c:	02002021 	move	a0,s0
9d011c20:	a2200103 	sb	zero,259(s1)
9d011c24:	0040f809 	jalr	v0
9d011c28:	240500ff 	li	a1,255
9d011c2c:	8e240124 	lw	a0,292(s1)
9d011c30:	24020001 	li	v0,1
9d011c34:	00001821 	move	v1,zero
9d011c38:	24840001 	addiu	a0,a0,1
9d011c3c:	0b4046fd 	j	9d011bf4 <d_print_mod+0xb4>
9d011c40:	ae240124 	sw	a0,292(s1)
9d011c44:	3c129d01 	lui	s2,0x9d01
9d011c48:	26526c98 	addiu	s2,s2,27800
9d011c4c:	8c820104 	lw	v0,260(a0)
9d011c50:	26550009 	addiu	s5,s2,9
9d011c54:	241400ff 	li	s4,255
9d011c58:	0b404720 	j	9d011c80 <d_print_mod+0x140>
9d011c5c:	24900004 	addiu	s0,a0,4
9d011c60:	00401821 	move	v1,v0
9d011c64:	24420001 	addiu	v0,v0,1
9d011c68:	02231821 	addu	v1,s1,v1
9d011c6c:	26520001 	addiu	s2,s2,1
9d011c70:	a0730004 	sb	s3,4(v1)
9d011c74:	ae220104 	sw	v0,260(s1)
9d011c78:	1255004e 	beq	s2,s5,9d011db4 <d_print_mod+0x274>
9d011c7c:	a2330108 	sb	s3,264(s1)
9d011c80:	1454fff7 	bne	v0,s4,9d011c60 <d_print_mod+0x120>
9d011c84:	82530000 	lb	s3,0(s2)
9d011c88:	8e22010c 	lw	v0,268(s1)
9d011c8c:	8e260110 	lw	a2,272(s1)
9d011c90:	02002021 	move	a0,s0
9d011c94:	a2200103 	sb	zero,259(s1)
9d011c98:	0040f809 	jalr	v0
9d011c9c:	240500ff 	li	a1,255
9d011ca0:	8e240124 	lw	a0,292(s1)
9d011ca4:	24020001 	li	v0,1
9d011ca8:	00001821 	move	v1,zero
9d011cac:	24840001 	addiu	a0,a0,1
9d011cb0:	0b40471a 	j	9d011c68 <d_print_mod+0x128>
9d011cb4:	ae240124 	sw	a0,292(s1)
9d011cb8:	3c129d01 	lui	s2,0x9d01
9d011cbc:	26526ca4 	addiu	s2,s2,27812
9d011cc0:	8c820104 	lw	v0,260(a0)
9d011cc4:	26550006 	addiu	s5,s2,6
9d011cc8:	241400ff 	li	s4,255
9d011ccc:	0b40473d 	j	9d011cf4 <d_print_mod+0x1b4>
9d011cd0:	24900004 	addiu	s0,a0,4
9d011cd4:	00401821 	move	v1,v0
9d011cd8:	24420001 	addiu	v0,v0,1
9d011cdc:	02231821 	addu	v1,s1,v1
9d011ce0:	26520001 	addiu	s2,s2,1
9d011ce4:	a0730004 	sb	s3,4(v1)
9d011ce8:	ae220104 	sw	v0,260(s1)
9d011cec:	12550031 	beq	s2,s5,9d011db4 <d_print_mod+0x274>
9d011cf0:	a2330108 	sb	s3,264(s1)
9d011cf4:	1454fff7 	bne	v0,s4,9d011cd4 <d_print_mod+0x194>
9d011cf8:	82530000 	lb	s3,0(s2)
9d011cfc:	8e22010c 	lw	v0,268(s1)
9d011d00:	8e260110 	lw	a2,272(s1)
9d011d04:	02002021 	move	a0,s0
9d011d08:	a2200103 	sb	zero,259(s1)
9d011d0c:	0040f809 	jalr	v0
9d011d10:	240500ff 	li	a1,255
9d011d14:	8e240124 	lw	a0,292(s1)
9d011d18:	24020001 	li	v0,1
9d011d1c:	00001821 	move	v1,zero
9d011d20:	24840001 	addiu	a0,a0,1
9d011d24:	0b404737 	j	9d011cdc <d_print_mod+0x19c>
9d011d28:	ae240124 	sw	a0,292(s1)
9d011d2c:	8c820104 	lw	v0,260(a0)
9d011d30:	240300ff 	li	v1,255
9d011d34:	104300d6 	beq	v0,v1,9d012090 <d_print_mod+0x550>
9d011d38:	24440001 	addiu	a0,v0,1
9d011d3c:	24030020 	li	v1,32
9d011d40:	02221021 	addu	v0,s1,v0
9d011d44:	ae240104 	sw	a0,260(s1)
9d011d48:	a0430004 	sb	v1,4(v0)
9d011d4c:	a2230108 	sb	v1,264(s1)
9d011d50:	8e650008 	lw	a1,8(s3)
9d011d54:	0b4046e1 	j	9d011b84 <d_print_mod+0x44>
9d011d58:	02202021 	move	a0,s1
9d011d5c:	8c820000 	lw	v0,0(a0)
9d011d60:	30420004 	andi	v0,v0,0x4
9d011d64:	14400013 	bnez	v0,9d011db4 <d_print_mod+0x274>
9d011d68:	240300ff 	li	v1,255
9d011d6c:	8c820104 	lw	v0,260(a0)
9d011d70:	104300eb 	beq	v0,v1,9d012120 <d_print_mod+0x5e0>
9d011d74:	24440001 	addiu	a0,v0,1
9d011d78:	2403002a 	li	v1,42
9d011d7c:	02221021 	addu	v0,s1,v0
9d011d80:	a0430004 	sb	v1,4(v0)
9d011d84:	ae240104 	sw	a0,260(s1)
9d011d88:	0b40476d 	j	9d011db4 <d_print_mod+0x274>
9d011d8c:	a2230108 	sb	v1,264(s1)
9d011d90:	8c820104 	lw	v0,260(a0)
9d011d94:	240300ff 	li	v1,255
9d011d98:	104300c9 	beq	v0,v1,9d0120c0 <d_print_mod+0x580>
9d011d9c:	24440001 	addiu	a0,v0,1
9d011da0:	24030026 	li	v1,38
9d011da4:	02221021 	addu	v0,s1,v0
9d011da8:	a0430004 	sb	v1,4(v0)
9d011dac:	ae240104 	sw	a0,260(s1)
9d011db0:	a2230108 	sb	v1,264(s1)
9d011db4:	8fbf002c 	lw	ra,44(sp)
9d011db8:	8fb60028 	lw	s6,40(sp)
9d011dbc:	8fb50024 	lw	s5,36(sp)
9d011dc0:	8fb40020 	lw	s4,32(sp)
9d011dc4:	8fb3001c 	lw	s3,28(sp)
9d011dc8:	8fb20018 	lw	s2,24(sp)
9d011dcc:	8fb10014 	lw	s1,20(sp)
9d011dd0:	8fb00010 	lw	s0,16(sp)
9d011dd4:	03e00008 	jr	ra
9d011dd8:	27bd0030 	addiu	sp,sp,48
9d011ddc:	3c129d01 	lui	s2,0x9d01
9d011de0:	26526cac 	addiu	s2,s2,27820
9d011de4:	8c820104 	lw	v0,260(a0)
9d011de8:	26550002 	addiu	s5,s2,2
9d011dec:	241400ff 	li	s4,255
9d011df0:	0b404786 	j	9d011e18 <d_print_mod+0x2d8>
9d011df4:	24900004 	addiu	s0,a0,4
9d011df8:	00401821 	move	v1,v0
9d011dfc:	24420001 	addiu	v0,v0,1
9d011e00:	02231821 	addu	v1,s1,v1
9d011e04:	26520001 	addiu	s2,s2,1
9d011e08:	a0730004 	sb	s3,4(v1)
9d011e0c:	ae220104 	sw	v0,260(s1)
9d011e10:	1255ffe8 	beq	s2,s5,9d011db4 <d_print_mod+0x274>
9d011e14:	a2330108 	sb	s3,264(s1)
9d011e18:	1454fff7 	bne	v0,s4,9d011df8 <d_print_mod+0x2b8>
9d011e1c:	82530000 	lb	s3,0(s2)
9d011e20:	8e22010c 	lw	v0,268(s1)
9d011e24:	8e260110 	lw	a2,272(s1)
9d011e28:	02002021 	move	a0,s0
9d011e2c:	a2200103 	sb	zero,259(s1)
9d011e30:	0040f809 	jalr	v0
9d011e34:	240500ff 	li	a1,255
9d011e38:	8e240124 	lw	a0,292(s1)
9d011e3c:	24020001 	li	v0,1
9d011e40:	00001821 	move	v1,zero
9d011e44:	24840001 	addiu	a0,a0,1
9d011e48:	0b404780 	j	9d011e00 <d_print_mod+0x2c0>
9d011e4c:	ae240124 	sw	a0,292(s1)
9d011e50:	3c129d01 	lui	s2,0x9d01
9d011e54:	26526cb0 	addiu	s2,s2,27824
9d011e58:	8c820104 	lw	v0,260(a0)
9d011e5c:	26550008 	addiu	s5,s2,8
9d011e60:	241400ff 	li	s4,255
9d011e64:	0b4047a3 	j	9d011e8c <d_print_mod+0x34c>
9d011e68:	24900004 	addiu	s0,a0,4
9d011e6c:	00401821 	move	v1,v0
9d011e70:	24420001 	addiu	v0,v0,1
9d011e74:	02231821 	addu	v1,s1,v1
9d011e78:	26520001 	addiu	s2,s2,1
9d011e7c:	a0730004 	sb	s3,4(v1)
9d011e80:	ae220104 	sw	v0,260(s1)
9d011e84:	1255ffcb 	beq	s2,s5,9d011db4 <d_print_mod+0x274>
9d011e88:	a2330108 	sb	s3,264(s1)
9d011e8c:	1454fff7 	bne	v0,s4,9d011e6c <d_print_mod+0x32c>
9d011e90:	82530000 	lb	s3,0(s2)
9d011e94:	8e22010c 	lw	v0,268(s1)
9d011e98:	8e260110 	lw	a2,272(s1)
9d011e9c:	02002021 	move	a0,s0
9d011ea0:	a2200103 	sb	zero,259(s1)
9d011ea4:	0040f809 	jalr	v0
9d011ea8:	240500ff 	li	a1,255
9d011eac:	8e240124 	lw	a0,292(s1)
9d011eb0:	24020001 	li	v0,1
9d011eb4:	00001821 	move	v1,zero
9d011eb8:	24840001 	addiu	a0,a0,1
9d011ebc:	0b40479d 	j	9d011e74 <d_print_mod+0x334>
9d011ec0:	ae240124 	sw	a0,292(s1)
9d011ec4:	3c129d01 	lui	s2,0x9d01
9d011ec8:	26526cbc 	addiu	s2,s2,27836
9d011ecc:	8c820104 	lw	v0,260(a0)
9d011ed0:	2655000a 	addiu	s5,s2,10
9d011ed4:	241400ff 	li	s4,255
9d011ed8:	0b4047c0 	j	9d011f00 <d_print_mod+0x3c0>
9d011edc:	24900004 	addiu	s0,a0,4
9d011ee0:	00401821 	move	v1,v0
9d011ee4:	24420001 	addiu	v0,v0,1
9d011ee8:	02231821 	addu	v1,s1,v1
9d011eec:	26520001 	addiu	s2,s2,1
9d011ef0:	a0730004 	sb	s3,4(v1)
9d011ef4:	ae220104 	sw	v0,260(s1)
9d011ef8:	1255ffae 	beq	s2,s5,9d011db4 <d_print_mod+0x274>
9d011efc:	a2330108 	sb	s3,264(s1)
9d011f00:	1454fff7 	bne	v0,s4,9d011ee0 <d_print_mod+0x3a0>
9d011f04:	82530000 	lb	s3,0(s2)
9d011f08:	8e22010c 	lw	v0,268(s1)
9d011f0c:	8e260110 	lw	a2,272(s1)
9d011f10:	02002021 	move	a0,s0
9d011f14:	a2200103 	sb	zero,259(s1)
9d011f18:	0040f809 	jalr	v0
9d011f1c:	240500ff 	li	a1,255
9d011f20:	8e240124 	lw	a0,292(s1)
9d011f24:	24020001 	li	v0,1
9d011f28:	00001821 	move	v1,zero
9d011f2c:	24840001 	addiu	a0,a0,1
9d011f30:	0b4047ba 	j	9d011ee8 <d_print_mod+0x3a8>
9d011f34:	ae240124 	sw	a0,292(s1)
9d011f38:	80830108 	lb	v1,264(a0)
9d011f3c:	24020028 	li	v0,40
9d011f40:	10620009 	beq	v1,v0,9d011f68 <d_print_mod+0x428>
9d011f44:	240300ff 	li	v1,255
9d011f48:	8c820104 	lw	v0,260(a0)
9d011f4c:	10430080 	beq	v0,v1,9d012150 <d_print_mod+0x610>
9d011f50:	24440001 	addiu	a0,v0,1
9d011f54:	24030020 	li	v1,32
9d011f58:	02221021 	addu	v0,s1,v0
9d011f5c:	a0430004 	sb	v1,4(v0)
9d011f60:	ae240104 	sw	a0,260(s1)
9d011f64:	a2230108 	sb	v1,264(s1)
9d011f68:	8e650004 	lw	a1,4(s3)
9d011f6c:	3c129d01 	lui	s2,0x9d01
9d011f70:	02202021 	move	a0,s1
9d011f74:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d011f78:	26526cc8 	addiu	s2,s2,27848
9d011f7c:	241500ff 	li	s5,255
9d011f80:	8e220104 	lw	v0,260(s1)
9d011f84:	26540003 	addiu	s4,s2,3
9d011f88:	0b4047ec 	j	9d011fb0 <d_print_mod+0x470>
9d011f8c:	26300004 	addiu	s0,s1,4
9d011f90:	00401821 	move	v1,v0
9d011f94:	24420001 	addiu	v0,v0,1
9d011f98:	02231821 	addu	v1,s1,v1
9d011f9c:	26520001 	addiu	s2,s2,1
9d011fa0:	a0730004 	sb	s3,4(v1)
9d011fa4:	ae220104 	sw	v0,260(s1)
9d011fa8:	1254ff82 	beq	s2,s4,9d011db4 <d_print_mod+0x274>
9d011fac:	a2330108 	sb	s3,264(s1)
9d011fb0:	1455fff7 	bne	v0,s5,9d011f90 <d_print_mod+0x450>
9d011fb4:	82530000 	lb	s3,0(s2)
9d011fb8:	8e22010c 	lw	v0,268(s1)
9d011fbc:	8e260110 	lw	a2,272(s1)
9d011fc0:	02002021 	move	a0,s0
9d011fc4:	a2200103 	sb	zero,259(s1)
9d011fc8:	0040f809 	jalr	v0
9d011fcc:	240500ff 	li	a1,255
9d011fd0:	8e240124 	lw	a0,292(s1)
9d011fd4:	24020001 	li	v0,1
9d011fd8:	00001821 	move	v1,zero
9d011fdc:	24840001 	addiu	a0,a0,1
9d011fe0:	0b4047e6 	j	9d011f98 <d_print_mod+0x458>
9d011fe4:	ae240124 	sw	a0,292(s1)
9d011fe8:	3c129d01 	lui	s2,0x9d01
9d011fec:	26526ccc 	addiu	s2,s2,27852
9d011ff0:	8c820104 	lw	v0,260(a0)
9d011ff4:	2656000a 	addiu	s6,s2,10
9d011ff8:	241500ff 	li	s5,255
9d011ffc:	0b404809 	j	9d012024 <d_print_mod+0x4e4>
9d012000:	24900004 	addiu	s0,a0,4
9d012004:	00401821 	move	v1,v0
9d012008:	24420001 	addiu	v0,v0,1
9d01200c:	02231821 	addu	v1,s1,v1
9d012010:	26520001 	addiu	s2,s2,1
9d012014:	a0740004 	sb	s4,4(v1)
9d012018:	ae220104 	sw	v0,260(s1)
9d01201c:	1256000f 	beq	s2,s6,9d01205c <d_print_mod+0x51c>
9d012020:	a2340108 	sb	s4,264(s1)
9d012024:	1455fff7 	bne	v0,s5,9d012004 <d_print_mod+0x4c4>
9d012028:	82540000 	lb	s4,0(s2)
9d01202c:	8e22010c 	lw	v0,268(s1)
9d012030:	8e260110 	lw	a2,272(s1)
9d012034:	02002021 	move	a0,s0
9d012038:	a2200103 	sb	zero,259(s1)
9d01203c:	0040f809 	jalr	v0
9d012040:	240500ff 	li	a1,255
9d012044:	8e240124 	lw	a0,292(s1)
9d012048:	24020001 	li	v0,1
9d01204c:	00001821 	move	v1,zero
9d012050:	24840001 	addiu	a0,a0,1
9d012054:	0b404803 	j	9d01200c <d_print_mod+0x4cc>
9d012058:	ae240124 	sw	a0,292(s1)
9d01205c:	8e650004 	lw	a1,4(s3)
9d012060:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012064:	02202021 	move	a0,s1
9d012068:	8e220104 	lw	v0,260(s1)
9d01206c:	240300ff 	li	v1,255
9d012070:	1043001f 	beq	v0,v1,9d0120f0 <d_print_mod+0x5b0>
9d012074:	24440001 	addiu	a0,v0,1
9d012078:	24030029 	li	v1,41
9d01207c:	02221021 	addu	v0,s1,v0
9d012080:	a0430004 	sb	v1,4(v0)
9d012084:	ae240104 	sw	a0,260(s1)
9d012088:	0b40476d 	j	9d011db4 <d_print_mod+0x274>
9d01208c:	a2230108 	sb	v1,264(s1)
9d012090:	8e22010c 	lw	v0,268(s1)
9d012094:	8e260110 	lw	a2,272(s1)
9d012098:	26240004 	addiu	a0,s1,4
9d01209c:	a2200103 	sb	zero,259(s1)
9d0120a0:	0040f809 	jalr	v0
9d0120a4:	240500ff 	li	a1,255
9d0120a8:	8e230124 	lw	v1,292(s1)
9d0120ac:	24040001 	li	a0,1
9d0120b0:	00001021 	move	v0,zero
9d0120b4:	24630001 	addiu	v1,v1,1
9d0120b8:	0b40474f 	j	9d011d3c <d_print_mod+0x1fc>
9d0120bc:	ae230124 	sw	v1,292(s1)
9d0120c0:	8e22010c 	lw	v0,268(s1)
9d0120c4:	8e260110 	lw	a2,272(s1)
9d0120c8:	26240004 	addiu	a0,s1,4
9d0120cc:	a2200103 	sb	zero,259(s1)
9d0120d0:	0040f809 	jalr	v0
9d0120d4:	240500ff 	li	a1,255
9d0120d8:	8e230124 	lw	v1,292(s1)
9d0120dc:	24040001 	li	a0,1
9d0120e0:	00001021 	move	v0,zero
9d0120e4:	24630001 	addiu	v1,v1,1
9d0120e8:	0b404768 	j	9d011da0 <d_print_mod+0x260>
9d0120ec:	ae230124 	sw	v1,292(s1)
9d0120f0:	8e22010c 	lw	v0,268(s1)
9d0120f4:	8e260110 	lw	a2,272(s1)
9d0120f8:	26240004 	addiu	a0,s1,4
9d0120fc:	a2200103 	sb	zero,259(s1)
9d012100:	0040f809 	jalr	v0
9d012104:	240500ff 	li	a1,255
9d012108:	8e230124 	lw	v1,292(s1)
9d01210c:	24040001 	li	a0,1
9d012110:	00001021 	move	v0,zero
9d012114:	24630001 	addiu	v1,v1,1
9d012118:	0b40481e 	j	9d012078 <d_print_mod+0x538>
9d01211c:	ae230124 	sw	v1,292(s1)
9d012120:	8e22010c 	lw	v0,268(s1)
9d012124:	8e260110 	lw	a2,272(s1)
9d012128:	26240004 	addiu	a0,s1,4
9d01212c:	a2200103 	sb	zero,259(s1)
9d012130:	0040f809 	jalr	v0
9d012134:	240500ff 	li	a1,255
9d012138:	8e230124 	lw	v1,292(s1)
9d01213c:	24040001 	li	a0,1
9d012140:	00001021 	move	v0,zero
9d012144:	24630001 	addiu	v1,v1,1
9d012148:	0b40475e 	j	9d011d78 <d_print_mod+0x238>
9d01214c:	ae230124 	sw	v1,292(s1)
9d012150:	8e22010c 	lw	v0,268(s1)
9d012154:	8e260110 	lw	a2,272(s1)
9d012158:	26240004 	addiu	a0,s1,4
9d01215c:	a2200103 	sb	zero,259(s1)
9d012160:	0040f809 	jalr	v0
9d012164:	240500ff 	li	a1,255
9d012168:	8e230124 	lw	v1,292(s1)
9d01216c:	24040001 	li	a0,1
9d012170:	00001021 	move	v0,zero
9d012174:	24630001 	addiu	v1,v1,1
9d012178:	0b4047d5 	j	9d011f54 <d_print_mod+0x414>
9d01217c:	ae230124 	sw	v1,292(s1)

9d012180 <d_print_mod_list>:
9d012180:	27bdffa0 	addiu	sp,sp,-96
9d012184:	afb70058 	sw	s7,88(sp)
9d012188:	afb60054 	sw	s6,84(sp)
9d01218c:	afb4004c 	sw	s4,76(sp)
9d012190:	afbf005c 	sw	ra,92(sp)
9d012194:	afb50050 	sw	s5,80(sp)
9d012198:	afb30048 	sw	s3,72(sp)
9d01219c:	afb20044 	sw	s2,68(sp)
9d0121a0:	afb10040 	sw	s1,64(sp)
9d0121a4:	afb0003c 	sw	s0,60(sp)
9d0121a8:	00a0b821 	move	s7,a1
9d0121ac:	0080b021 	move	s6,a0
9d0121b0:	10a00030 	beqz	a1,9d012274 <d_print_mod_list+0xf4>
9d0121b4:	00c0a021 	move	s4,a2
9d0121b8:	8c82011c 	lw	v0,284(a0)
9d0121bc:	1440002d 	bnez	v0,9d012274 <d_print_mod_list+0xf4>
9d0121c0:	24120001 	li	s2,1
9d0121c4:	24110025 	li	s1,37
9d0121c8:	24130026 	li	s3,38
9d0121cc:	0b40488c 	j	9d012230 <d_print_mod_list+0xb0>
9d0121d0:	24150002 	li	s5,2
9d0121d4:	8c430000 	lw	v1,0(v0)
9d0121d8:	2464ffe6 	addiu	a0,v1,-26
9d0121dc:	2c840003 	sltiu	a0,a0,3
9d0121e0:	5480000e 	bnezl	a0,9d01221c <d_print_mod_list+0x9c>
9d0121e4:	8ef70000 	lw	s7,0(s7)
9d0121e8:	8ee4000c 	lw	a0,12(s7)
9d0121ec:	aef20008 	sw	s2,8(s7)
9d0121f0:	8ed00114 	lw	s0,276(s6)
9d0121f4:	10710019 	beq	v1,s1,9d01225c <d_print_mod_list+0xdc>
9d0121f8:	aec40114 	sw	a0,276(s6)
9d0121fc:	50730028 	beql	v1,s3,9d0122a0 <d_print_mod_list+0x120>
9d012200:	8ee60000 	lw	a2,0(s7)
9d012204:	10750035 	beq	v1,s5,9d0122dc <d_print_mod_list+0x15c>
9d012208:	02c02021 	move	a0,s6
9d01220c:	0f4046d0 	jal	9d011b40 <d_print_mod>
9d012210:	00402821 	move	a1,v0
9d012214:	aed00114 	sw	s0,276(s6)
9d012218:	8ef70000 	lw	s7,0(s7)
9d01221c:	12e00016 	beqz	s7,9d012278 <d_print_mod_list+0xf8>
9d012220:	8fbf005c 	lw	ra,92(sp)
9d012224:	8ec2011c 	lw	v0,284(s6)
9d012228:	54400014 	bnezl	v0,9d01227c <d_print_mod_list+0xfc>
9d01222c:	8fb70058 	lw	s7,88(sp)
9d012230:	8ee20008 	lw	v0,8(s7)
9d012234:	5440fff9 	bnezl	v0,9d01221c <d_print_mod_list+0x9c>
9d012238:	8ef70000 	lw	s7,0(s7)
9d01223c:	1280ffe5 	beqz	s4,9d0121d4 <d_print_mod_list+0x54>
9d012240:	8ee20004 	lw	v0,4(s7)
9d012244:	8ee4000c 	lw	a0,12(s7)
9d012248:	8ed00114 	lw	s0,276(s6)
9d01224c:	8c430000 	lw	v1,0(v0)
9d012250:	aef20008 	sw	s2,8(s7)
9d012254:	1471ffe9 	bne	v1,s1,9d0121fc <d_print_mod_list+0x7c>
9d012258:	aec40114 	sw	a0,276(s6)
9d01225c:	8ee70000 	lw	a3,0(s7)
9d012260:	02c02021 	move	a0,s6
9d012264:	24450004 	addiu	a1,v0,4
9d012268:	0f404a22 	jal	9d012888 <d_print_function_type.clone.6>
9d01226c:	24460008 	addiu	a2,v0,8
9d012270:	aed00114 	sw	s0,276(s6)
9d012274:	8fbf005c 	lw	ra,92(sp)
9d012278:	8fb70058 	lw	s7,88(sp)
9d01227c:	8fb60054 	lw	s6,84(sp)
9d012280:	8fb50050 	lw	s5,80(sp)
9d012284:	8fb4004c 	lw	s4,76(sp)
9d012288:	8fb30048 	lw	s3,72(sp)
9d01228c:	8fb20044 	lw	s2,68(sp)
9d012290:	8fb10040 	lw	s1,64(sp)
9d012294:	8fb0003c 	lw	s0,60(sp)
9d012298:	03e00008 	jr	ra
9d01229c:	27bd0060 	addiu	sp,sp,96
9d0122a0:	02c02021 	move	a0,s6
9d0122a4:	0f404973 	jal	9d0125cc <d_print_array_type.clone.5>
9d0122a8:	24450004 	addiu	a1,v0,4
9d0122ac:	8fbf005c 	lw	ra,92(sp)
9d0122b0:	aed00114 	sw	s0,276(s6)
9d0122b4:	8fb70058 	lw	s7,88(sp)
9d0122b8:	8fb60054 	lw	s6,84(sp)
9d0122bc:	8fb50050 	lw	s5,80(sp)
9d0122c0:	8fb4004c 	lw	s4,76(sp)
9d0122c4:	8fb30048 	lw	s3,72(sp)
9d0122c8:	8fb20044 	lw	s2,68(sp)
9d0122cc:	8fb10040 	lw	s1,64(sp)
9d0122d0:	8fb0003c 	lw	s0,60(sp)
9d0122d4:	03e00008 	jr	ra
9d0122d8:	27bd0060 	addiu	sp,sp,96
9d0122dc:	8ed10118 	lw	s1,280(s6)
9d0122e0:	aec00118 	sw	zero,280(s6)
9d0122e4:	8c450004 	lw	a1,4(v0)
9d0122e8:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d0122ec:	02c02021 	move	a0,s6
9d0122f0:	8ec20000 	lw	v0,0(s6)
9d0122f4:	30420004 	andi	v0,v0,0x4
9d0122f8:	1040002a 	beqz	v0,9d0123a4 <d_print_mod_list+0x224>
9d0122fc:	aed10118 	sw	s1,280(s6)
9d012300:	8ec20104 	lw	v0,260(s6)
9d012304:	240300ff 	li	v1,255
9d012308:	504300a6 	beql	v0,v1,9d0125a4 <d_print_mod_list+0x424>
9d01230c:	8ec2010c 	lw	v0,268(s6)
9d012310:	2403002e 	li	v1,46
9d012314:	02c22021 	addu	a0,s6,v0
9d012318:	24420001 	addiu	v0,v0,1
9d01231c:	a0830004 	sb	v1,4(a0)
9d012320:	aec20104 	sw	v0,260(s6)
9d012324:	a2c30108 	sb	v1,264(s6)
9d012328:	8ee20004 	lw	v0,4(s7)
9d01232c:	2403003f 	li	v1,63
9d012330:	8c510008 	lw	s1,8(v0)
9d012334:	8e220000 	lw	v0,0(s1)
9d012338:	10430037 	beq	v0,v1,9d012418 <d_print_mod_list+0x298>
9d01233c:	3c129d01 	lui	s2,0x9d01
9d012340:	2442ffe6 	addiu	v0,v0,-26
9d012344:	2c420003 	sltiu	v0,v0,3
9d012348:	10400008 	beqz	v0,9d01236c <d_print_mod_list+0x1ec>
9d01234c:	02c02021 	move	a0,s6
9d012350:	8e310004 	lw	s1,4(s1)
9d012354:	8e220000 	lw	v0,0(s1)
9d012358:	2442ffe6 	addiu	v0,v0,-26
9d01235c:	2c420003 	sltiu	v0,v0,3
9d012360:	5440fffc 	bnezl	v0,9d012354 <d_print_mod_list+0x1d4>
9d012364:	8e310004 	lw	s1,4(s1)
9d012368:	02c02021 	move	a0,s6
9d01236c:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012370:	02202821 	move	a1,s1
9d012374:	8fbf005c 	lw	ra,92(sp)
9d012378:	aed00114 	sw	s0,276(s6)
9d01237c:	8fb70058 	lw	s7,88(sp)
9d012380:	8fb60054 	lw	s6,84(sp)
9d012384:	8fb50050 	lw	s5,80(sp)
9d012388:	8fb4004c 	lw	s4,76(sp)
9d01238c:	8fb30048 	lw	s3,72(sp)
9d012390:	8fb20044 	lw	s2,68(sp)
9d012394:	8fb10040 	lw	s1,64(sp)
9d012398:	8fb0003c 	lw	s0,60(sp)
9d01239c:	03e00008 	jr	ra
9d0123a0:	27bd0060 	addiu	sp,sp,96
9d0123a4:	3c119d01 	lui	s1,0x9d01
9d0123a8:	26316a9c 	addiu	s1,s1,27292
9d0123ac:	8ec20104 	lw	v0,260(s6)
9d0123b0:	26340002 	addiu	s4,s1,2
9d0123b4:	241300ff 	li	s3,255
9d0123b8:	0b4048f8 	j	9d0123e0 <d_print_mod_list+0x260>
9d0123bc:	26d50004 	addiu	s5,s6,4
9d0123c0:	00401821 	move	v1,v0
9d0123c4:	24420001 	addiu	v0,v0,1
9d0123c8:	02c31821 	addu	v1,s6,v1
9d0123cc:	26310001 	addiu	s1,s1,1
9d0123d0:	a0720004 	sb	s2,4(v1)
9d0123d4:	aec20104 	sw	v0,260(s6)
9d0123d8:	1234ffd3 	beq	s1,s4,9d012328 <d_print_mod_list+0x1a8>
9d0123dc:	a2d20108 	sb	s2,264(s6)
9d0123e0:	1453fff7 	bne	v0,s3,9d0123c0 <d_print_mod_list+0x240>
9d0123e4:	82320000 	lb	s2,0(s1)
9d0123e8:	8ec2010c 	lw	v0,268(s6)
9d0123ec:	8ec60110 	lw	a2,272(s6)
9d0123f0:	02a02021 	move	a0,s5
9d0123f4:	a2c00103 	sb	zero,259(s6)
9d0123f8:	0040f809 	jalr	v0
9d0123fc:	240500ff 	li	a1,255
9d012400:	8ec40124 	lw	a0,292(s6)
9d012404:	24020001 	li	v0,1
9d012408:	00001821 	move	v1,zero
9d01240c:	24840001 	addiu	a0,a0,1
9d012410:	0b4048f2 	j	9d0123c8 <d_print_mod_list+0x248>
9d012414:	aec40124 	sw	a0,292(s6)
9d012418:	26526cd8 	addiu	s2,s2,27864
9d01241c:	8ec20104 	lw	v0,260(s6)
9d012420:	2655000d 	addiu	s5,s2,13
9d012424:	241400ff 	li	s4,255
9d012428:	0b404914 	j	9d012450 <d_print_mod_list+0x2d0>
9d01242c:	26d70004 	addiu	s7,s6,4
9d012430:	00401821 	move	v1,v0
9d012434:	24420001 	addiu	v0,v0,1
9d012438:	02c31821 	addu	v1,s6,v1
9d01243c:	26520001 	addiu	s2,s2,1
9d012440:	a0730004 	sb	s3,4(v1)
9d012444:	aec20104 	sw	v0,260(s6)
9d012448:	1255000f 	beq	s2,s5,9d012488 <d_print_mod_list+0x308>
9d01244c:	a2d30108 	sb	s3,264(s6)
9d012450:	1454fff7 	bne	v0,s4,9d012430 <d_print_mod_list+0x2b0>
9d012454:	82530000 	lb	s3,0(s2)
9d012458:	8ec2010c 	lw	v0,268(s6)
9d01245c:	8ec60110 	lw	a2,272(s6)
9d012460:	02e02021 	move	a0,s7
9d012464:	a2c00103 	sb	zero,259(s6)
9d012468:	0040f809 	jalr	v0
9d01246c:	240500ff 	li	a1,255
9d012470:	8ec40124 	lw	a0,292(s6)
9d012474:	24020001 	li	v0,1
9d012478:	00001821 	move	v1,zero
9d01247c:	24840001 	addiu	a0,a0,1
9d012480:	0b40490e 	j	9d012438 <d_print_mod_list+0x2b8>
9d012484:	aec40124 	sw	a0,292(s6)
9d012488:	8e260008 	lw	a2,8(s1)
9d01248c:	3c059d01 	lui	a1,0x9d01
9d012490:	27a40010 	addiu	a0,sp,16
9d012494:	24a56c00 	addiu	a1,a1,27648
9d012498:	0f401f4b 	jal	9d007d2c <sprintf>
9d01249c:	24c60001 	addiu	a2,a2,1
9d0124a0:	0f401f87 	jal	9d007e1c <strlen>
9d0124a4:	27a40010 	addiu	a0,sp,16
9d0124a8:	50400022 	beqzl	v0,9d012534 <d_print_mod_list+0x3b4>
9d0124ac:	3c129d01 	lui	s2,0x9d01
9d0124b0:	8ec30104 	lw	v1,260(s6)
9d0124b4:	00009021 	move	s2,zero
9d0124b8:	241400ff 	li	s4,255
9d0124bc:	0b40493a 	j	9d0124e8 <d_print_mod_list+0x368>
9d0124c0:	26d50004 	addiu	s5,s6,4
9d0124c4:	00602821 	move	a1,v1
9d0124c8:	24630001 	addiu	v1,v1,1
9d0124cc:	26520001 	addiu	s2,s2,1
9d0124d0:	02c52821 	addu	a1,s6,a1
9d0124d4:	0242202b 	sltu	a0,s2,v0
9d0124d8:	a0b30004 	sb	s3,4(a1)
9d0124dc:	aec30104 	sw	v1,260(s6)
9d0124e0:	10800013 	beqz	a0,9d012530 <d_print_mod_list+0x3b0>
9d0124e4:	a2d30108 	sb	s3,264(s6)
9d0124e8:	27a50010 	addiu	a1,sp,16
9d0124ec:	00b22021 	addu	a0,a1,s2
9d0124f0:	1474fff4 	bne	v1,s4,9d0124c4 <d_print_mod_list+0x344>
9d0124f4:	80930000 	lb	s3,0(a0)
9d0124f8:	8ec3010c 	lw	v1,268(s6)
9d0124fc:	8ec60110 	lw	a2,272(s6)
9d012500:	a2c00103 	sb	zero,259(s6)
9d012504:	02a02021 	move	a0,s5
9d012508:	240500ff 	li	a1,255
9d01250c:	0060f809 	jalr	v1
9d012510:	afa20030 	sw	v0,48(sp)
9d012514:	8ec40124 	lw	a0,292(s6)
9d012518:	24030001 	li	v1,1
9d01251c:	00002821 	move	a1,zero
9d012520:	24840001 	addiu	a0,a0,1
9d012524:	aec40124 	sw	a0,292(s6)
9d012528:	0b404933 	j	9d0124cc <d_print_mod_list+0x34c>
9d01252c:	8fa20030 	lw	v0,48(sp)
9d012530:	3c129d01 	lui	s2,0x9d01
9d012534:	26526ce8 	addiu	s2,s2,27880
9d012538:	8ec20104 	lw	v0,260(s6)
9d01253c:	26550003 	addiu	s5,s2,3
9d012540:	241400ff 	li	s4,255
9d012544:	0b40495b 	j	9d01256c <d_print_mod_list+0x3ec>
9d012548:	26d70004 	addiu	s7,s6,4
9d01254c:	00401821 	move	v1,v0
9d012550:	24420001 	addiu	v0,v0,1
9d012554:	02c31821 	addu	v1,s6,v1
9d012558:	26520001 	addiu	s2,s2,1
9d01255c:	a0730004 	sb	s3,4(v1)
9d012560:	aec20104 	sw	v0,260(s6)
9d012564:	1255ff7a 	beq	s2,s5,9d012350 <d_print_mod_list+0x1d0>
9d012568:	a2d30108 	sb	s3,264(s6)
9d01256c:	1454fff7 	bne	v0,s4,9d01254c <d_print_mod_list+0x3cc>
9d012570:	82530000 	lb	s3,0(s2)
9d012574:	8ec2010c 	lw	v0,268(s6)
9d012578:	8ec60110 	lw	a2,272(s6)
9d01257c:	02e02021 	move	a0,s7
9d012580:	a2c00103 	sb	zero,259(s6)
9d012584:	0040f809 	jalr	v0
9d012588:	240500ff 	li	a1,255
9d01258c:	8ec40124 	lw	a0,292(s6)
9d012590:	24020001 	li	v0,1
9d012594:	00001821 	move	v1,zero
9d012598:	24840001 	addiu	a0,a0,1
9d01259c:	0b404955 	j	9d012554 <d_print_mod_list+0x3d4>
9d0125a0:	aec40124 	sw	a0,292(s6)
9d0125a4:	8ec60110 	lw	a2,272(s6)
9d0125a8:	a2c00103 	sb	zero,259(s6)
9d0125ac:	26c40004 	addiu	a0,s6,4
9d0125b0:	0040f809 	jalr	v0
9d0125b4:	240500ff 	li	a1,255
9d0125b8:	8ec30124 	lw	v1,292(s6)
9d0125bc:	00001021 	move	v0,zero
9d0125c0:	24630001 	addiu	v1,v1,1
9d0125c4:	0b4048c4 	j	9d012310 <d_print_mod_list+0x190>
9d0125c8:	aec30124 	sw	v1,292(s6)

9d0125cc <d_print_array_type.clone.5>:
9d0125cc:	27bdffc8 	addiu	sp,sp,-56
9d0125d0:	afb50028 	sw	s5,40(sp)
9d0125d4:	afb2001c 	sw	s2,28(sp)
9d0125d8:	afb00014 	sw	s0,20(sp)
9d0125dc:	afbf0034 	sw	ra,52(sp)
9d0125e0:	afb70030 	sw	s7,48(sp)
9d0125e4:	afb6002c 	sw	s6,44(sp)
9d0125e8:	afb40024 	sw	s4,36(sp)
9d0125ec:	afb30020 	sw	s3,32(sp)
9d0125f0:	afb10018 	sw	s1,24(sp)
9d0125f4:	00c0a821 	move	s5,a2
9d0125f8:	00809021 	move	s2,a0
9d0125fc:	10c0000f 	beqz	a2,9d01263c <d_print_array_type.clone.5+0x70>
9d012600:	00a08021 	move	s0,a1
9d012604:	8cc20008 	lw	v0,8(a2)
9d012608:	10400037 	beqz	v0,9d0126e8 <d_print_array_type.clone.5+0x11c>
9d01260c:	00c01021 	move	v0,a2
9d012610:	0b404989 	j	9d012624 <d_print_array_type.clone.5+0x58>
9d012614:	8c420000 	lw	v0,0(v0)
9d012618:	50600034 	beqzl	v1,9d0126ec <d_print_array_type.clone.5+0x120>
9d01261c:	8c420004 	lw	v0,4(v0)
9d012620:	8c420000 	lw	v0,0(v0)
9d012624:	5440fffc 	bnezl	v0,9d012618 <d_print_array_type.clone.5+0x4c>
9d012628:	8c430008 	lw	v1,8(v0)
9d01262c:	02402021 	move	a0,s2
9d012630:	02a02821 	move	a1,s5
9d012634:	0f404860 	jal	9d012180 <d_print_mod_list>
9d012638:	00003021 	move	a2,zero
9d01263c:	8e420104 	lw	v0,260(s2)
9d012640:	240300ff 	li	v1,255
9d012644:	5043005d 	beql	v0,v1,9d0127bc <d_print_array_type.clone.5+0x1f0>
9d012648:	8e42010c 	lw	v0,268(s2)
9d01264c:	24430001 	addiu	v1,v0,1
9d012650:	24040020 	li	a0,32
9d012654:	02421021 	addu	v0,s2,v0
9d012658:	a0440004 	sb	a0,4(v0)
9d01265c:	ae430104 	sw	v1,260(s2)
9d012660:	a2440108 	sb	a0,264(s2)
9d012664:	240200ff 	li	v0,255
9d012668:	5062006b 	beql	v1,v0,9d012818 <d_print_array_type.clone.5+0x24c>
9d01266c:	8e42010c 	lw	v0,268(s2)
9d012670:	24620001 	addiu	v0,v1,1
9d012674:	2404005b 	li	a0,91
9d012678:	02431821 	addu	v1,s2,v1
9d01267c:	a0640004 	sb	a0,4(v1)
9d012680:	a2440108 	sb	a0,264(s2)
9d012684:	8e050000 	lw	a1,0(s0)
9d012688:	10a00004 	beqz	a1,9d01269c <d_print_array_type.clone.5+0xd0>
9d01268c:	ae420104 	sw	v0,260(s2)
9d012690:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012694:	02402021 	move	a0,s2
9d012698:	8e420104 	lw	v0,260(s2)
9d01269c:	240300ff 	li	v1,255
9d0126a0:	10430051 	beq	v0,v1,9d0127e8 <d_print_array_type.clone.5+0x21c>
9d0126a4:	24440001 	addiu	a0,v0,1
9d0126a8:	2403005d 	li	v1,93
9d0126ac:	02421021 	addu	v0,s2,v0
9d0126b0:	a0430004 	sb	v1,4(v0)
9d0126b4:	a2430108 	sb	v1,264(s2)
9d0126b8:	8fbf0034 	lw	ra,52(sp)
9d0126bc:	ae440104 	sw	a0,260(s2)
9d0126c0:	8fb70030 	lw	s7,48(sp)
9d0126c4:	8fb6002c 	lw	s6,44(sp)
9d0126c8:	8fb50028 	lw	s5,40(sp)
9d0126cc:	8fb40024 	lw	s4,36(sp)
9d0126d0:	8fb30020 	lw	s3,32(sp)
9d0126d4:	8fb2001c 	lw	s2,28(sp)
9d0126d8:	8fb10018 	lw	s1,24(sp)
9d0126dc:	8fb00014 	lw	s0,20(sp)
9d0126e0:	03e00008 	jr	ra
9d0126e4:	27bd0038 	addiu	sp,sp,56
9d0126e8:	8c420004 	lw	v0,4(v0)
9d0126ec:	8c430000 	lw	v1,0(v0)
9d0126f0:	24020026 	li	v0,38
9d0126f4:	10620053 	beq	v1,v0,9d012844 <d_print_array_type.clone.5+0x278>
9d0126f8:	3c139d01 	lui	s3,0x9d01
9d0126fc:	26736c1c 	addiu	s3,s3,27676
9d012700:	8e420104 	lw	v0,260(s2)
9d012704:	26770002 	addiu	s7,s3,2
9d012708:	241600ff 	li	s6,255
9d01270c:	0b4049cd 	j	9d012734 <d_print_array_type.clone.5+0x168>
9d012710:	26510004 	addiu	s1,s2,4
9d012714:	00401821 	move	v1,v0
9d012718:	02431821 	addu	v1,s2,v1
9d01271c:	24420001 	addiu	v0,v0,1
9d012720:	26730001 	addiu	s3,s3,1
9d012724:	a0740004 	sb	s4,4(v1)
9d012728:	ae420104 	sw	v0,260(s2)
9d01272c:	12770014 	beq	s3,s7,9d012780 <d_print_array_type.clone.5+0x1b4>
9d012730:	a2540108 	sb	s4,264(s2)
9d012734:	1456fff7 	bne	v0,s6,9d012714 <d_print_array_type.clone.5+0x148>
9d012738:	82740000 	lb	s4,0(s3)
9d01273c:	8e42010c 	lw	v0,268(s2)
9d012740:	8e460110 	lw	a2,272(s2)
9d012744:	02202021 	move	a0,s1
9d012748:	a2400103 	sb	zero,259(s2)
9d01274c:	0040f809 	jalr	v0
9d012750:	240500ff 	li	a1,255
9d012754:	8e440124 	lw	a0,292(s2)
9d012758:	00001821 	move	v1,zero
9d01275c:	24020001 	li	v0,1
9d012760:	24840001 	addiu	a0,a0,1
9d012764:	02431821 	addu	v1,s2,v1
9d012768:	26730001 	addiu	s3,s3,1
9d01276c:	ae440124 	sw	a0,292(s2)
9d012770:	a0740004 	sb	s4,4(v1)
9d012774:	ae420104 	sw	v0,260(s2)
9d012778:	1677ffee 	bne	s3,s7,9d012734 <d_print_array_type.clone.5+0x168>
9d01277c:	a2540108 	sb	s4,264(s2)
9d012780:	02402021 	move	a0,s2
9d012784:	02a02821 	move	a1,s5
9d012788:	0f404860 	jal	9d012180 <d_print_mod_list>
9d01278c:	00003021 	move	a2,zero
9d012790:	8e440104 	lw	a0,260(s2)
9d012794:	240200ff 	li	v0,255
9d012798:	50820030 	beql	a0,v0,9d01285c <d_print_array_type.clone.5+0x290>
9d01279c:	8e42010c 	lw	v0,268(s2)
9d0127a0:	24820001 	addiu	v0,a0,1
9d0127a4:	24030029 	li	v1,41
9d0127a8:	02442021 	addu	a0,s2,a0
9d0127ac:	a0830004 	sb	v1,4(a0)
9d0127b0:	ae420104 	sw	v0,260(s2)
9d0127b4:	0b404990 	j	9d012640 <d_print_array_type.clone.5+0x74>
9d0127b8:	a2430108 	sb	v1,264(s2)
9d0127bc:	8e460110 	lw	a2,272(s2)
9d0127c0:	26440004 	addiu	a0,s2,4
9d0127c4:	a2400103 	sb	zero,259(s2)
9d0127c8:	0040f809 	jalr	v0
9d0127cc:	240500ff 	li	a1,255
9d0127d0:	8e440124 	lw	a0,292(s2)
9d0127d4:	24030001 	li	v1,1
9d0127d8:	00001021 	move	v0,zero
9d0127dc:	24840001 	addiu	a0,a0,1
9d0127e0:	0b404994 	j	9d012650 <d_print_array_type.clone.5+0x84>
9d0127e4:	ae440124 	sw	a0,292(s2)
9d0127e8:	8e42010c 	lw	v0,268(s2)
9d0127ec:	8e460110 	lw	a2,272(s2)
9d0127f0:	26440004 	addiu	a0,s2,4
9d0127f4:	a2400103 	sb	zero,259(s2)
9d0127f8:	0040f809 	jalr	v0
9d0127fc:	240500ff 	li	a1,255
9d012800:	8e430124 	lw	v1,292(s2)
9d012804:	24040001 	li	a0,1
9d012808:	00001021 	move	v0,zero
9d01280c:	24630001 	addiu	v1,v1,1
9d012810:	0b4049aa 	j	9d0126a8 <d_print_array_type.clone.5+0xdc>
9d012814:	ae430124 	sw	v1,292(s2)
9d012818:	8e460110 	lw	a2,272(s2)
9d01281c:	26440004 	addiu	a0,s2,4
9d012820:	a2400103 	sb	zero,259(s2)
9d012824:	0040f809 	jalr	v0
9d012828:	240500ff 	li	a1,255
9d01282c:	8e440124 	lw	a0,292(s2)
9d012830:	24020001 	li	v0,1
9d012834:	00001821 	move	v1,zero
9d012838:	24840001 	addiu	a0,a0,1
9d01283c:	0b40499d 	j	9d012674 <d_print_array_type.clone.5+0xa8>
9d012840:	ae440124 	sw	a0,292(s2)
9d012844:	02402021 	move	a0,s2
9d012848:	02a02821 	move	a1,s5
9d01284c:	0f404860 	jal	9d012180 <d_print_mod_list>
9d012850:	00003021 	move	a2,zero
9d012854:	0b404999 	j	9d012664 <d_print_array_type.clone.5+0x98>
9d012858:	8e430104 	lw	v1,260(s2)
9d01285c:	8e460110 	lw	a2,272(s2)
9d012860:	26440004 	addiu	a0,s2,4
9d012864:	a2400103 	sb	zero,259(s2)
9d012868:	0040f809 	jalr	v0
9d01286c:	240500ff 	li	a1,255
9d012870:	8e430124 	lw	v1,292(s2)
9d012874:	24020001 	li	v0,1
9d012878:	00002021 	move	a0,zero
9d01287c:	24630001 	addiu	v1,v1,1
9d012880:	0b4049e9 	j	9d0127a4 <d_print_array_type.clone.5+0x1d8>
9d012884:	ae430124 	sw	v1,292(s2)

9d012888 <d_print_function_type.clone.6>:
9d012888:	27bdffd8 	addiu	sp,sp,-40
9d01288c:	afb30020 	sw	s3,32(sp)
9d012890:	afb2001c 	sw	s2,28(sp)
9d012894:	afb00014 	sw	s0,20(sp)
9d012898:	afbf0024 	sw	ra,36(sp)
9d01289c:	afb10018 	sw	s1,24(sp)
9d0128a0:	00e09821 	move	s3,a3
9d0128a4:	00809021 	move	s2,a0
9d0128a8:	10e000b0 	beqz	a3,9d012b6c <d_print_function_type.clone.6+0x2e4>
9d0128ac:	00c08021 	move	s0,a2
9d0128b0:	8ce20008 	lw	v0,8(a3)
9d0128b4:	144000ae 	bnez	v0,9d012b70 <d_print_function_type.clone.6+0x2e8>
9d0128b8:	00002021 	move	a0,zero
9d0128bc:	00e01021 	move	v0,a3
9d0128c0:	3c070001 	lui	a3,0x1
9d0128c4:	24080001 	li	t0,1
9d0128c8:	24e70c47 	addiu	a3,a3,3143
9d0128cc:	8c430004 	lw	v1,4(v0)
9d0128d0:	8c630000 	lw	v1,0(v1)
9d0128d4:	2463ffe9 	addiu	v1,v1,-23
9d0128d8:	00682004 	sllv	a0,t0,v1
9d0128dc:	2c630011 	sltiu	v1,v1,17
9d0128e0:	1060006c 	beqz	v1,9d012a94 <d_print_function_type.clone.6+0x20c>
9d0128e4:	00873024 	and	a2,a0,a3
9d0128e8:	14c00074 	bnez	a2,9d012abc <d_print_function_type.clone.6+0x234>
9d0128ec:	30840380 	andi	a0,a0,0x380
9d0128f0:	50800069 	beqzl	a0,9d012a98 <d_print_function_type.clone.6+0x210>
9d0128f4:	8c420000 	lw	v0,0(v0)
9d0128f8:	00002021 	move	a0,zero
9d0128fc:	24020001 	li	v0,1
9d012900:	24030001 	li	v1,1
9d012904:	8ca50000 	lw	a1,0(a1)
9d012908:	10a00038 	beqz	a1,9d0129ec <d_print_function_type.clone.6+0x164>
9d01290c:	00000000 	nop
9d012910:	14400036 	bnez	v0,9d0129ec <d_print_function_type.clone.6+0x164>
9d012914:	00000000 	nop
9d012918:	1080006a 	beqz	a0,9d012ac4 <d_print_function_type.clone.6+0x23c>
9d01291c:	82420108 	lb	v0,264(s2)
9d012920:	24030020 	li	v1,32
9d012924:	5043000b 	beql	v0,v1,9d012954 <d_print_function_type.clone.6+0xcc>
9d012928:	8e420104 	lw	v0,260(s2)
9d01292c:	8e430104 	lw	v1,260(s2)
9d012930:	240200ff 	li	v0,255
9d012934:	50620091 	beql	v1,v0,9d012b7c <d_print_function_type.clone.6+0x2f4>
9d012938:	8e42010c 	lw	v0,268(s2)
9d01293c:	24620001 	addiu	v0,v1,1
9d012940:	24040020 	li	a0,32
9d012944:	02431821 	addu	v1,s2,v1
9d012948:	a0640004 	sb	a0,4(v1)
9d01294c:	ae420104 	sw	v0,260(s2)
9d012950:	a2440108 	sb	a0,264(s2)
9d012954:	240300ff 	li	v1,255
9d012958:	10430078 	beq	v0,v1,9d012b3c <d_print_function_type.clone.6+0x2b4>
9d01295c:	24440001 	addiu	a0,v0,1
9d012960:	24030028 	li	v1,40
9d012964:	02421021 	addu	v0,s2,v0
9d012968:	a0430004 	sb	v1,4(v0)
9d01296c:	8e510118 	lw	s1,280(s2)
9d012970:	ae440104 	sw	a0,260(s2)
9d012974:	a2430108 	sb	v1,264(s2)
9d012978:	ae400118 	sw	zero,280(s2)
9d01297c:	02402021 	move	a0,s2
9d012980:	02602821 	move	a1,s3
9d012984:	0f404860 	jal	9d012180 <d_print_mod_list>
9d012988:	00003021 	move	a2,zero
9d01298c:	8e420104 	lw	v0,260(s2)
9d012990:	240300ff 	li	v1,255
9d012994:	5043005e 	beql	v0,v1,9d012b10 <d_print_function_type.clone.6+0x288>
9d012998:	8e42010c 	lw	v0,268(s2)
9d01299c:	24430001 	addiu	v1,v0,1
9d0129a0:	24040029 	li	a0,41
9d0129a4:	02421021 	addu	v0,s2,v0
9d0129a8:	a0440004 	sb	a0,4(v0)
9d0129ac:	240200ff 	li	v0,255
9d0129b0:	ae430104 	sw	v1,260(s2)
9d0129b4:	14620018 	bne	v1,v0,9d012a18 <d_print_function_type.clone.6+0x190>
9d0129b8:	a2440108 	sb	a0,264(s2)
9d0129bc:	8e42010c 	lw	v0,268(s2)
9d0129c0:	8e460110 	lw	a2,272(s2)
9d0129c4:	26440004 	addiu	a0,s2,4
9d0129c8:	a2400103 	sb	zero,259(s2)
9d0129cc:	0040f809 	jalr	v0
9d0129d0:	240500ff 	li	a1,255
9d0129d4:	8e440124 	lw	a0,292(s2)
9d0129d8:	24020001 	li	v0,1
9d0129dc:	00001821 	move	v1,zero
9d0129e0:	24840001 	addiu	a0,a0,1
9d0129e4:	0b404a87 	j	9d012a1c <d_print_function_type.clone.6+0x194>
9d0129e8:	ae440124 	sw	a0,292(s2)
9d0129ec:	1460ffca 	bnez	v1,9d012918 <d_print_function_type.clone.6+0x90>
9d0129f0:	02602821 	move	a1,s3
9d0129f4:	8e510118 	lw	s1,280(s2)
9d0129f8:	02402021 	move	a0,s2
9d0129fc:	ae400118 	sw	zero,280(s2)
9d012a00:	0f404860 	jal	9d012180 <d_print_mod_list>
9d012a04:	00003021 	move	a2,zero
9d012a08:	8e430104 	lw	v1,260(s2)
9d012a0c:	240200ff 	li	v0,255
9d012a10:	5062ffeb 	beql	v1,v0,9d0129c0 <d_print_function_type.clone.6+0x138>
9d012a14:	8e42010c 	lw	v0,268(s2)
9d012a18:	24620001 	addiu	v0,v1,1
9d012a1c:	24040028 	li	a0,40
9d012a20:	02431821 	addu	v1,s2,v1
9d012a24:	a0640004 	sb	a0,4(v1)
9d012a28:	a2440108 	sb	a0,264(s2)
9d012a2c:	8e050000 	lw	a1,0(s0)
9d012a30:	10a00004 	beqz	a1,9d012a44 <d_print_function_type.clone.6+0x1bc>
9d012a34:	ae420104 	sw	v0,260(s2)
9d012a38:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012a3c:	02402021 	move	a0,s2
9d012a40:	8e420104 	lw	v0,260(s2)
9d012a44:	240300ff 	li	v1,255
9d012a48:	10430025 	beq	v0,v1,9d012ae0 <d_print_function_type.clone.6+0x258>
9d012a4c:	24440001 	addiu	a0,v0,1
9d012a50:	02421021 	addu	v0,s2,v0
9d012a54:	24030029 	li	v1,41
9d012a58:	ae440104 	sw	a0,260(s2)
9d012a5c:	a2430108 	sb	v1,264(s2)
9d012a60:	02402021 	move	a0,s2
9d012a64:	02602821 	move	a1,s3
9d012a68:	a0430004 	sb	v1,4(v0)
9d012a6c:	0f404860 	jal	9d012180 <d_print_mod_list>
9d012a70:	24060001 	li	a2,1
9d012a74:	8fbf0024 	lw	ra,36(sp)
9d012a78:	ae510118 	sw	s1,280(s2)
9d012a7c:	8fb30020 	lw	s3,32(sp)
9d012a80:	8fb2001c 	lw	s2,28(sp)
9d012a84:	8fb10018 	lw	s1,24(sp)
9d012a88:	8fb00014 	lw	s0,20(sp)
9d012a8c:	03e00008 	jr	ra
9d012a90:	27bd0028 	addiu	sp,sp,40
9d012a94:	8c420000 	lw	v0,0(v0)
9d012a98:	10400005 	beqz	v0,9d012ab0 <d_print_function_type.clone.6+0x228>
9d012a9c:	00002021 	move	a0,zero
9d012aa0:	8c430008 	lw	v1,8(v0)
9d012aa4:	5060ff8a 	beqzl	v1,9d0128d0 <d_print_function_type.clone.6+0x48>
9d012aa8:	8c430004 	lw	v1,4(v0)
9d012aac:	00002021 	move	a0,zero
9d012ab0:	24020001 	li	v0,1
9d012ab4:	0b404a41 	j	9d012904 <d_print_function_type.clone.6+0x7c>
9d012ab8:	00001821 	move	v1,zero
9d012abc:	0b404a3f 	j	9d0128fc <d_print_function_type.clone.6+0x74>
9d012ac0:	24040001 	li	a0,1
9d012ac4:	24030028 	li	v1,40
9d012ac8:	10430003 	beq	v0,v1,9d012ad8 <d_print_function_type.clone.6+0x250>
9d012acc:	2403002a 	li	v1,42
9d012ad0:	1443ff94 	bne	v0,v1,9d012924 <d_print_function_type.clone.6+0x9c>
9d012ad4:	24030020 	li	v1,32
9d012ad8:	0b404a55 	j	9d012954 <d_print_function_type.clone.6+0xcc>
9d012adc:	8e420104 	lw	v0,260(s2)
9d012ae0:	8e42010c 	lw	v0,268(s2)
9d012ae4:	8e460110 	lw	a2,272(s2)
9d012ae8:	26440004 	addiu	a0,s2,4
9d012aec:	a2400103 	sb	zero,259(s2)
9d012af0:	0040f809 	jalr	v0
9d012af4:	240500ff 	li	a1,255
9d012af8:	8e430124 	lw	v1,292(s2)
9d012afc:	24040001 	li	a0,1
9d012b00:	00001021 	move	v0,zero
9d012b04:	24630001 	addiu	v1,v1,1
9d012b08:	0b404a94 	j	9d012a50 <d_print_function_type.clone.6+0x1c8>
9d012b0c:	ae430124 	sw	v1,292(s2)
9d012b10:	8e460110 	lw	a2,272(s2)
9d012b14:	26440004 	addiu	a0,s2,4
9d012b18:	a2400103 	sb	zero,259(s2)
9d012b1c:	0040f809 	jalr	v0
9d012b20:	240500ff 	li	a1,255
9d012b24:	8e440124 	lw	a0,292(s2)
9d012b28:	24030001 	li	v1,1
9d012b2c:	00001021 	move	v0,zero
9d012b30:	24840001 	addiu	a0,a0,1
9d012b34:	0b404a68 	j	9d0129a0 <d_print_function_type.clone.6+0x118>
9d012b38:	ae440124 	sw	a0,292(s2)
9d012b3c:	8e42010c 	lw	v0,268(s2)
9d012b40:	8e460110 	lw	a2,272(s2)
9d012b44:	26440004 	addiu	a0,s2,4
9d012b48:	a2400103 	sb	zero,259(s2)
9d012b4c:	0040f809 	jalr	v0
9d012b50:	240500ff 	li	a1,255
9d012b54:	8e430124 	lw	v1,292(s2)
9d012b58:	24040001 	li	a0,1
9d012b5c:	00001021 	move	v0,zero
9d012b60:	24630001 	addiu	v1,v1,1
9d012b64:	0b404a58 	j	9d012960 <d_print_function_type.clone.6+0xd8>
9d012b68:	ae430124 	sw	v1,292(s2)
9d012b6c:	00002021 	move	a0,zero
9d012b70:	00001021 	move	v0,zero
9d012b74:	0b404a41 	j	9d012904 <d_print_function_type.clone.6+0x7c>
9d012b78:	00001821 	move	v1,zero
9d012b7c:	8e460110 	lw	a2,272(s2)
9d012b80:	26440004 	addiu	a0,s2,4
9d012b84:	a2400103 	sb	zero,259(s2)
9d012b88:	0040f809 	jalr	v0
9d012b8c:	240500ff 	li	a1,255
9d012b90:	8e440124 	lw	a0,292(s2)
9d012b94:	24020001 	li	v0,1
9d012b98:	00001821 	move	v1,zero
9d012b9c:	24840001 	addiu	a0,a0,1
9d012ba0:	0b404a50 	j	9d012940 <d_print_function_type.clone.6+0xb8>
9d012ba4:	ae440124 	sw	a0,292(s2)

9d012ba8 <d_print_cast.clone.7>:
9d012ba8:	8ca20000 	lw	v0,0(a1)
9d012bac:	27bdffd8 	addiu	sp,sp,-40
9d012bb0:	afb20020 	sw	s2,32(sp)
9d012bb4:	00a09021 	move	s2,a1
9d012bb8:	8c450000 	lw	a1,0(v0)
9d012bbc:	24030004 	li	v1,4
9d012bc0:	afb1001c 	sw	s1,28(sp)
9d012bc4:	afbf0024 	sw	ra,36(sp)
9d012bc8:	afb00018 	sw	s0,24(sp)
9d012bcc:	10a30009 	beq	a1,v1,9d012bf4 <d_print_cast.clone.7+0x4c>
9d012bd0:	00808821 	move	s1,a0
9d012bd4:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012bd8:	00402821 	move	a1,v0
9d012bdc:	8fbf0024 	lw	ra,36(sp)
9d012be0:	8fb20020 	lw	s2,32(sp)
9d012be4:	8fb1001c 	lw	s1,28(sp)
9d012be8:	8fb00018 	lw	s0,24(sp)
9d012bec:	03e00008 	jr	ra
9d012bf0:	27bd0028 	addiu	sp,sp,40
9d012bf4:	27a50010 	addiu	a1,sp,16
9d012bf8:	8c830114 	lw	v1,276(a0)
9d012bfc:	8c900118 	lw	s0,280(a0)
9d012c00:	ac850114 	sw	a1,276(a0)
9d012c04:	ac800118 	sw	zero,280(a0)
9d012c08:	8c450004 	lw	a1,4(v0)
9d012c0c:	afa30010 	sw	v1,16(sp)
9d012c10:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012c14:	afa20014 	sw	v0,20(sp)
9d012c18:	8fa20010 	lw	v0,16(sp)
9d012c1c:	82230108 	lb	v1,264(s1)
9d012c20:	ae220114 	sw	v0,276(s1)
9d012c24:	2402003c 	li	v0,60
9d012c28:	50620022 	beql	v1,v0,9d012cb4 <d_print_cast.clone.7+0x10c>
9d012c2c:	8e230104 	lw	v1,260(s1)
9d012c30:	8e220104 	lw	v0,260(s1)
9d012c34:	240300ff 	li	v1,255
9d012c38:	1043003e 	beq	v0,v1,9d012d34 <d_print_cast.clone.7+0x18c>
9d012c3c:	24440001 	addiu	a0,v0,1
9d012c40:	2403003c 	li	v1,60
9d012c44:	02221021 	addu	v0,s1,v0
9d012c48:	a2230108 	sb	v1,264(s1)
9d012c4c:	a0430004 	sb	v1,4(v0)
9d012c50:	8e420000 	lw	v0,0(s2)
9d012c54:	ae240104 	sw	a0,260(s1)
9d012c58:	02202021 	move	a0,s1
9d012c5c:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012c60:	8c450008 	lw	a1,8(v0)
9d012c64:	82230108 	lb	v1,264(s1)
9d012c68:	2402003e 	li	v0,62
9d012c6c:	5062001b 	beql	v1,v0,9d012cdc <d_print_cast.clone.7+0x134>
9d012c70:	8e230104 	lw	v1,260(s1)
9d012c74:	8e220104 	lw	v0,260(s1)
9d012c78:	240300ff 	li	v1,255
9d012c7c:	10430021 	beq	v0,v1,9d012d04 <d_print_cast.clone.7+0x15c>
9d012c80:	24440001 	addiu	a0,v0,1
9d012c84:	2403003e 	li	v1,62
9d012c88:	02221021 	addu	v0,s1,v0
9d012c8c:	a0430004 	sb	v1,4(v0)
9d012c90:	a2230108 	sb	v1,264(s1)
9d012c94:	8fbf0024 	lw	ra,36(sp)
9d012c98:	ae300118 	sw	s0,280(s1)
9d012c9c:	ae240104 	sw	a0,260(s1)
9d012ca0:	8fb20020 	lw	s2,32(sp)
9d012ca4:	8fb1001c 	lw	s1,28(sp)
9d012ca8:	8fb00018 	lw	s0,24(sp)
9d012cac:	03e00008 	jr	ra
9d012cb0:	27bd0028 	addiu	sp,sp,40
9d012cb4:	240200ff 	li	v0,255
9d012cb8:	5062002a 	beql	v1,v0,9d012d64 <d_print_cast.clone.7+0x1bc>
9d012cbc:	8e22010c 	lw	v0,268(s1)
9d012cc0:	24620001 	addiu	v0,v1,1
9d012cc4:	24040020 	li	a0,32
9d012cc8:	02231821 	addu	v1,s1,v1
9d012ccc:	a0640004 	sb	a0,4(v1)
9d012cd0:	ae220104 	sw	v0,260(s1)
9d012cd4:	0b404b0d 	j	9d012c34 <d_print_cast.clone.7+0x8c>
9d012cd8:	a2240108 	sb	a0,264(s1)
9d012cdc:	240200ff 	li	v0,255
9d012ce0:	5062002b 	beql	v1,v0,9d012d90 <d_print_cast.clone.7+0x1e8>
9d012ce4:	8e22010c 	lw	v0,268(s1)
9d012ce8:	24620001 	addiu	v0,v1,1
9d012cec:	24040020 	li	a0,32
9d012cf0:	02231821 	addu	v1,s1,v1
9d012cf4:	a0640004 	sb	a0,4(v1)
9d012cf8:	ae220104 	sw	v0,260(s1)
9d012cfc:	0b404b1e 	j	9d012c78 <d_print_cast.clone.7+0xd0>
9d012d00:	a2240108 	sb	a0,264(s1)
9d012d04:	8e22010c 	lw	v0,268(s1)
9d012d08:	8e260110 	lw	a2,272(s1)
9d012d0c:	26240004 	addiu	a0,s1,4
9d012d10:	a2200103 	sb	zero,259(s1)
9d012d14:	0040f809 	jalr	v0
9d012d18:	240500ff 	li	a1,255
9d012d1c:	8e230124 	lw	v1,292(s1)
9d012d20:	24040001 	li	a0,1
9d012d24:	00001021 	move	v0,zero
9d012d28:	24630001 	addiu	v1,v1,1
9d012d2c:	0b404b21 	j	9d012c84 <d_print_cast.clone.7+0xdc>
9d012d30:	ae230124 	sw	v1,292(s1)
9d012d34:	8e22010c 	lw	v0,268(s1)
9d012d38:	8e260110 	lw	a2,272(s1)
9d012d3c:	26240004 	addiu	a0,s1,4
9d012d40:	a2200103 	sb	zero,259(s1)
9d012d44:	0040f809 	jalr	v0
9d012d48:	240500ff 	li	a1,255
9d012d4c:	8e230124 	lw	v1,292(s1)
9d012d50:	24040001 	li	a0,1
9d012d54:	00001021 	move	v0,zero
9d012d58:	24630001 	addiu	v1,v1,1
9d012d5c:	0b404b10 	j	9d012c40 <d_print_cast.clone.7+0x98>
9d012d60:	ae230124 	sw	v1,292(s1)
9d012d64:	8e260110 	lw	a2,272(s1)
9d012d68:	26240004 	addiu	a0,s1,4
9d012d6c:	a2200103 	sb	zero,259(s1)
9d012d70:	0040f809 	jalr	v0
9d012d74:	240500ff 	li	a1,255
9d012d78:	8e240124 	lw	a0,292(s1)
9d012d7c:	24020001 	li	v0,1
9d012d80:	00001821 	move	v1,zero
9d012d84:	24840001 	addiu	a0,a0,1
9d012d88:	0b404b31 	j	9d012cc4 <d_print_cast.clone.7+0x11c>
9d012d8c:	ae240124 	sw	a0,292(s1)
9d012d90:	8e260110 	lw	a2,272(s1)
9d012d94:	26240004 	addiu	a0,s1,4
9d012d98:	a2200103 	sb	zero,259(s1)
9d012d9c:	0040f809 	jalr	v0
9d012da0:	240500ff 	li	a1,255
9d012da4:	8e240124 	lw	a0,292(s1)
9d012da8:	24020001 	li	v0,1
9d012dac:	00001821 	move	v1,zero
9d012db0:	24840001 	addiu	a0,a0,1
9d012db4:	0b404b3b 	j	9d012cec <d_print_cast.clone.7+0x144>
9d012db8:	ae240124 	sw	a0,292(s1)

9d012dbc <d_print_expr_op>:
9d012dbc:	8ca60000 	lw	a2,0(a1)
9d012dc0:	27bdffd0 	addiu	sp,sp,-48
9d012dc4:	2403002c 	li	v1,44
9d012dc8:	afb10014 	sw	s1,20(sp)
9d012dcc:	afbf002c 	sw	ra,44(sp)
9d012dd0:	afb60028 	sw	s6,40(sp)
9d012dd4:	afb50024 	sw	s5,36(sp)
9d012dd8:	afb40020 	sw	s4,32(sp)
9d012ddc:	afb3001c 	sw	s3,28(sp)
9d012de0:	afb20018 	sw	s2,24(sp)
9d012de4:	afb00010 	sw	s0,16(sp)
9d012de8:	10c3000b 	beq	a2,v1,9d012e18 <d_print_expr_op+0x5c>
9d012dec:	00808821 	move	s1,a0
9d012df0:	8fbf002c 	lw	ra,44(sp)
9d012df4:	8fb60028 	lw	s6,40(sp)
9d012df8:	8fb50024 	lw	s5,36(sp)
9d012dfc:	8fb40020 	lw	s4,32(sp)
9d012e00:	8fb3001c 	lw	s3,28(sp)
9d012e04:	8fb20018 	lw	s2,24(sp)
9d012e08:	8fb10014 	lw	s1,20(sp)
9d012e0c:	8fb00010 	lw	s0,16(sp)
9d012e10:	0b403c4f 	j	9d00f13c <d_print_comp>
9d012e14:	27bd0030 	addiu	sp,sp,48
9d012e18:	8ca20004 	lw	v0,4(a1)
9d012e1c:	8c540008 	lw	s4,8(v0)
9d012e20:	12800024 	beqz	s4,9d012eb4 <d_print_expr_op+0xf8>
9d012e24:	8c550004 	lw	s5,4(v0)
9d012e28:	8c820104 	lw	v0,260(a0)
9d012e2c:	00009021 	move	s2,zero
9d012e30:	241600ff 	li	s6,255
9d012e34:	0b404b98 	j	9d012e60 <d_print_expr_op+0xa4>
9d012e38:	24900004 	addiu	s0,a0,4
9d012e3c:	00402021 	move	a0,v0
9d012e40:	26520001 	addiu	s2,s2,1
9d012e44:	24420001 	addiu	v0,v0,1
9d012e48:	02242021 	addu	a0,s1,a0
9d012e4c:	0254182b 	sltu	v1,s2,s4
9d012e50:	a0930004 	sb	s3,4(a0)
9d012e54:	ae220104 	sw	v0,260(s1)
9d012e58:	10600016 	beqz	v1,9d012eb4 <d_print_expr_op+0xf8>
9d012e5c:	a2330108 	sb	s3,264(s1)
9d012e60:	02b21821 	addu	v1,s5,s2
9d012e64:	1456fff5 	bne	v0,s6,9d012e3c <d_print_expr_op+0x80>
9d012e68:	80730000 	lb	s3,0(v1)
9d012e6c:	8e22010c 	lw	v0,268(s1)
9d012e70:	8e260110 	lw	a2,272(s1)
9d012e74:	02002021 	move	a0,s0
9d012e78:	a2200103 	sb	zero,259(s1)
9d012e7c:	0040f809 	jalr	v0
9d012e80:	240500ff 	li	a1,255
9d012e84:	8e230124 	lw	v1,292(s1)
9d012e88:	00002021 	move	a0,zero
9d012e8c:	26520001 	addiu	s2,s2,1
9d012e90:	24630001 	addiu	v1,v1,1
9d012e94:	24020001 	li	v0,1
9d012e98:	ae230124 	sw	v1,292(s1)
9d012e9c:	02242021 	addu	a0,s1,a0
9d012ea0:	0254182b 	sltu	v1,s2,s4
9d012ea4:	a0930004 	sb	s3,4(a0)
9d012ea8:	ae220104 	sw	v0,260(s1)
9d012eac:	1460ffec 	bnez	v1,9d012e60 <d_print_expr_op+0xa4>
9d012eb0:	a2330108 	sb	s3,264(s1)
9d012eb4:	8fbf002c 	lw	ra,44(sp)
9d012eb8:	8fb60028 	lw	s6,40(sp)
9d012ebc:	8fb50024 	lw	s5,36(sp)
9d012ec0:	8fb40020 	lw	s4,32(sp)
9d012ec4:	8fb3001c 	lw	s3,28(sp)
9d012ec8:	8fb20018 	lw	s2,24(sp)
9d012ecc:	8fb10014 	lw	s1,20(sp)
9d012ed0:	8fb00010 	lw	s0,16(sp)
9d012ed4:	03e00008 	jr	ra
9d012ed8:	27bd0030 	addiu	sp,sp,48

9d012edc <d_print_subexpr>:
9d012edc:	8ca20000 	lw	v0,0(a1)
9d012ee0:	27bdffe0 	addiu	sp,sp,-32
9d012ee4:	afb10018 	sw	s1,24(sp)
9d012ee8:	afb00014 	sw	s0,20(sp)
9d012eec:	afbf001c 	sw	ra,28(sp)
9d012ef0:	00a08821 	move	s1,a1
9d012ef4:	1040001d 	beqz	v0,9d012f6c <d_print_subexpr+0x90>
9d012ef8:	00808021 	move	s0,a0
9d012efc:	24030006 	li	v1,6
9d012f00:	1043001a 	beq	v0,v1,9d012f6c <d_print_subexpr+0x90>
9d012f04:	240300ff 	li	v1,255
9d012f08:	8c820104 	lw	v0,260(a0)
9d012f0c:	1043002a 	beq	v0,v1,9d012fb8 <d_print_subexpr+0xdc>
9d012f10:	24440001 	addiu	a0,v0,1
9d012f14:	24030028 	li	v1,40
9d012f18:	02021021 	addu	v0,s0,v0
9d012f1c:	a0430004 	sb	v1,4(v0)
9d012f20:	ae040104 	sw	a0,260(s0)
9d012f24:	a2030108 	sb	v1,264(s0)
9d012f28:	02002021 	move	a0,s0
9d012f2c:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d012f30:	02202821 	move	a1,s1
9d012f34:	8e020104 	lw	v0,260(s0)
9d012f38:	240300ff 	li	v1,255
9d012f3c:	10430012 	beq	v0,v1,9d012f88 <d_print_subexpr+0xac>
9d012f40:	24440001 	addiu	a0,v0,1
9d012f44:	24030029 	li	v1,41
9d012f48:	02021021 	addu	v0,s0,v0
9d012f4c:	a0430004 	sb	v1,4(v0)
9d012f50:	a2030108 	sb	v1,264(s0)
9d012f54:	8fbf001c 	lw	ra,28(sp)
9d012f58:	ae040104 	sw	a0,260(s0)
9d012f5c:	8fb10018 	lw	s1,24(sp)
9d012f60:	8fb00014 	lw	s0,20(sp)
9d012f64:	03e00008 	jr	ra
9d012f68:	27bd0020 	addiu	sp,sp,32
9d012f6c:	02002021 	move	a0,s0
9d012f70:	02202821 	move	a1,s1
9d012f74:	8fbf001c 	lw	ra,28(sp)
9d012f78:	8fb10018 	lw	s1,24(sp)
9d012f7c:	8fb00014 	lw	s0,20(sp)
9d012f80:	0b403c4f 	j	9d00f13c <d_print_comp>
9d012f84:	27bd0020 	addiu	sp,sp,32
9d012f88:	8e02010c 	lw	v0,268(s0)
9d012f8c:	8e060110 	lw	a2,272(s0)
9d012f90:	26040004 	addiu	a0,s0,4
9d012f94:	a2000103 	sb	zero,259(s0)
9d012f98:	0040f809 	jalr	v0
9d012f9c:	240500ff 	li	a1,255
9d012fa0:	8e030124 	lw	v1,292(s0)
9d012fa4:	24040001 	li	a0,1
9d012fa8:	00001021 	move	v0,zero
9d012fac:	24630001 	addiu	v1,v1,1
9d012fb0:	0b404bd1 	j	9d012f44 <d_print_subexpr+0x68>
9d012fb4:	ae030124 	sw	v1,292(s0)
9d012fb8:	8e02010c 	lw	v0,268(s0)
9d012fbc:	8e060110 	lw	a2,272(s0)
9d012fc0:	26040004 	addiu	a0,s0,4
9d012fc4:	a2000103 	sb	zero,259(s0)
9d012fc8:	0040f809 	jalr	v0
9d012fcc:	240500ff 	li	a1,255
9d012fd0:	8e030124 	lw	v1,292(s0)
9d012fd4:	24040001 	li	a0,1
9d012fd8:	00001021 	move	v0,zero
9d012fdc:	24630001 	addiu	v1,v1,1
9d012fe0:	0b404bc5 	j	9d012f14 <d_print_subexpr+0x38>
9d012fe4:	ae030124 	sw	v1,292(s0)

9d012fe8 <d_demangle_callback.clone.8>:
9d012fe8:	27bdfe68 	addiu	sp,sp,-408
9d012fec:	afbe0190 	sw	s8,400(sp)
9d012ff0:	afb20184 	sw	s2,388(sp)
9d012ff4:	afb10180 	sw	s1,384(sp)
9d012ff8:	afb0017c 	sw	s0,380(sp)
9d012ffc:	afbf0194 	sw	ra,404(sp)
9d013000:	afb4018c 	sw	s4,396(sp)
9d013004:	afb30188 	sw	s3,392(sp)
9d013008:	80820000 	lb	v0,0(a0)
9d01300c:	2403005f 	li	v1,95
9d013010:	03a0f021 	move	s8,sp
9d013014:	00809021 	move	s2,a0
9d013018:	00a08021 	move	s0,a1
9d01301c:	1043006a 	beq	v0,v1,9d0131c8 <d_demangle_callback.clone.8+0x1e0>
9d013020:	00c08821 	move	s1,a2
9d013024:	3c059d01 	lui	a1,0x9d01
9d013028:	02402021 	move	a0,s2
9d01302c:	24a56a58 	addiu	a1,a1,27224
9d013030:	0f401f8d 	jal	9d007e34 <strncmp>
9d013034:	24060008 	li	a2,8
9d013038:	14400009 	bnez	v0,9d013060 <d_demangle_callback.clone.8+0x78>
9d01303c:	0000a021 	move	s4,zero
9d013040:	82420008 	lb	v0,8(s2)
9d013044:	2403002e 	li	v1,46
9d013048:	10430050 	beq	v0,v1,9d01318c <d_demangle_callback.clone.8+0x1a4>
9d01304c:	2403005f 	li	v1,95
9d013050:	1043004e 	beq	v0,v1,9d01318c <d_demangle_callback.clone.8+0x1a4>
9d013054:	24030024 	li	v1,36
9d013058:	5043004d 	beql	v0,v1,9d013190 <d_demangle_callback.clone.8+0x1a8>
9d01305c:	82420009 	lb	v0,9(s2)
9d013060:	0f401f87 	jal	9d007e1c <strlen>
9d013064:	02402021 	move	a0,s2
9d013068:	00022940 	sll	a1,v0,0x5
9d01306c:	000220c0 	sll	a0,v0,0x3
9d013070:	00021880 	sll	v1,v0,0x2
9d013074:	00a42023 	subu	a0,a1,a0
9d013078:	2463000e 	addiu	v1,v1,14
9d01307c:	24840008 	addiu	a0,a0,8
9d013080:	000318c2 	srl	v1,v1,0x3
9d013084:	03a4e823 	subu	sp,sp,a0
9d013088:	000318c0 	sll	v1,v1,0x3
9d01308c:	02423021 	addu	a2,s2,v0
9d013090:	27a40010 	addiu	a0,sp,16
9d013094:	03a3e823 	subu	sp,sp,v1
9d013098:	00022840 	sll	a1,v0,0x1
9d01309c:	27a30010 	addiu	v1,sp,16
9d0130a0:	afc60014 	sw	a2,20(s8)
9d0130a4:	afc20034 	sw	v0,52(s8)
9d0130a8:	24060011 	li	a2,17
9d0130ac:	24020001 	li	v0,1
9d0130b0:	afd20010 	sw	s2,16(s8)
9d0130b4:	afc60018 	sw	a2,24(s8)
9d0130b8:	afd2001c 	sw	s2,28(s8)
9d0130bc:	afc50028 	sw	a1,40(s8)
9d0130c0:	afc00024 	sw	zero,36(s8)
9d0130c4:	afc00030 	sw	zero,48(s8)
9d0130c8:	afc00038 	sw	zero,56(s8)
9d0130cc:	afc0003c 	sw	zero,60(s8)
9d0130d0:	afc00040 	sw	zero,64(s8)
9d0130d4:	afc40020 	sw	a0,32(s8)
9d0130d8:	12820041 	beq	s4,v0,9d0131e0 <d_demangle_callback.clone.8+0x1f8>
9d0130dc:	afc3002c 	sw	v1,44(s8)
9d0130e0:	16800046 	bnez	s4,9d0131fc <d_demangle_callback.clone.8+0x214>
9d0130e4:	2645000b 	addiu	a1,s2,11
9d0130e8:	27d20010 	addiu	s2,s8,16
9d0130ec:	0f40329e 	jal	9d00ca78 <d_type>
9d0130f0:	02402021 	move	a0,s2
9d0130f4:	00402821 	move	a1,v0
9d0130f8:	8fc2001c 	lw	v0,28(s8)
9d0130fc:	80430000 	lb	v1,0(v0)
9d013100:	14600018 	bnez	v1,9d013164 <d_demangle_callback.clone.8+0x17c>
9d013104:	00001021 	move	v0,zero
9d013108:	50a00017 	beqzl	a1,9d013168 <d_demangle_callback.clone.8+0x180>
9d01310c:	03c0e821 	move	sp,s8
9d013110:	24020011 	li	v0,17
9d013114:	27c40044 	addiu	a0,s8,68
9d013118:	afc20044 	sw	v0,68(s8)
9d01311c:	afc00148 	sw	zero,328(s8)
9d013120:	a3c0014c 	sb	zero,332(s8)
9d013124:	afc00158 	sw	zero,344(s8)
9d013128:	afc0015c 	sw	zero,348(s8)
9d01312c:	afc00168 	sw	zero,360(s8)
9d013130:	afd00150 	sw	s0,336(s8)
9d013134:	afd10154 	sw	s1,340(s8)
9d013138:	0f403c4f 	jal	9d00f13c <d_print_comp>
9d01313c:	afc00160 	sw	zero,352(s8)
9d013140:	8fc50148 	lw	a1,328(s8)
9d013144:	8fc20150 	lw	v0,336(s8)
9d013148:	8fc60154 	lw	a2,340(s8)
9d01314c:	02459021 	addu	s2,s2,a1
9d013150:	a2400038 	sb	zero,56(s2)
9d013154:	0040f809 	jalr	v0
9d013158:	27c40048 	addiu	a0,s8,72
9d01315c:	8fc20160 	lw	v0,352(s8)
9d013160:	2c420001 	sltiu	v0,v0,1
9d013164:	03c0e821 	move	sp,s8
9d013168:	8fbf0194 	lw	ra,404(sp)
9d01316c:	8fbe0190 	lw	s8,400(sp)
9d013170:	8fb4018c 	lw	s4,396(sp)
9d013174:	8fb30188 	lw	s3,392(sp)
9d013178:	8fb20184 	lw	s2,388(sp)
9d01317c:	8fb10180 	lw	s1,384(sp)
9d013180:	8fb0017c 	lw	s0,380(sp)
9d013184:	03e00008 	jr	ra
9d013188:	27bd0198 	addiu	sp,sp,408
9d01318c:	82420009 	lb	v0,9(s2)
9d013190:	24030044 	li	v1,68
9d013194:	10430003 	beq	v0,v1,9d0131a4 <d_demangle_callback.clone.8+0x1bc>
9d013198:	24030049 	li	v1,73
9d01319c:	1443ffb0 	bne	v0,v1,9d013060 <d_demangle_callback.clone.8+0x78>
9d0131a0:	0000a021 	move	s4,zero
9d0131a4:	8244000a 	lb	a0,10(s2)
9d0131a8:	2403005f 	li	v1,95
9d0131ac:	1483ffac 	bne	a0,v1,9d013060 <d_demangle_callback.clone.8+0x78>
9d0131b0:	0000a021 	move	s4,zero
9d0131b4:	24140002 	li	s4,2
9d0131b8:	38420049 	xori	v0,v0,0x49
9d0131bc:	24030003 	li	v1,3
9d0131c0:	0b404c18 	j	9d013060 <d_demangle_callback.clone.8+0x78>
9d0131c4:	0062a00b 	movn	s4,v1,v0
9d0131c8:	80830001 	lb	v1,1(a0)
9d0131cc:	2402005a 	li	v0,90
9d0131d0:	1462ff94 	bne	v1,v0,9d013024 <d_demangle_callback.clone.8+0x3c>
9d0131d4:	24140001 	li	s4,1
9d0131d8:	0b404c18 	j	9d013060 <d_demangle_callback.clone.8+0x78>
9d0131dc:	00000000 	nop
9d0131e0:	27d20010 	addiu	s2,s8,16
9d0131e4:	24050001 	li	a1,1
9d0131e8:	0f403a43 	jal	9d00e90c <d_mangled_name>
9d0131ec:	02402021 	move	a0,s2
9d0131f0:	00402821 	move	a1,v0
9d0131f4:	0b404c3f 	j	9d0130fc <d_demangle_callback.clone.8+0x114>
9d0131f8:	8fc2001c 	lw	v0,28(s8)
9d0131fc:	00a02021 	move	a0,a1
9d013200:	2402003d 	li	v0,61
9d013204:	2413003c 	li	s3,60
9d013208:	3a940002 	xori	s4,s4,0x2
9d01320c:	0054980b 	movn	s3,v0,s4
9d013210:	afc5001c 	sw	a1,28(s8)
9d013214:	0f401f87 	jal	9d007e1c <strlen>
9d013218:	afc50170 	sw	a1,368(s8)
9d01321c:	8fc50170 	lw	a1,368(s8)
9d013220:	27d20010 	addiu	s2,s8,16
9d013224:	00403021 	move	a2,v0
9d013228:	0f40301f 	jal	9d00c07c <d_make_name>
9d01322c:	02402021 	move	a0,s2
9d013230:	00403021 	move	a2,v0
9d013234:	02602821 	move	a1,s3
9d013238:	02402021 	move	a0,s2
9d01323c:	0f402ff0 	jal	9d00bfc0 <d_make_comp>
9d013240:	00003821 	move	a3,zero
9d013244:	8fd3001c 	lw	s3,28(s8)
9d013248:	afc20170 	sw	v0,368(s8)
9d01324c:	0f401f87 	jal	9d007e1c <strlen>
9d013250:	02602021 	move	a0,s3
9d013254:	02621021 	addu	v0,s3,v0
9d013258:	afc2001c 	sw	v0,28(s8)
9d01325c:	0b404c3f 	j	9d0130fc <d_demangle_callback.clone.8+0x114>
9d013260:	8fc50170 	lw	a1,368(s8)

9d013264 <__cxa_demangle>:
9d013264:	27bdffc8 	addiu	sp,sp,-56
9d013268:	afb20028 	sw	s2,40(sp)
9d01326c:	afb10024 	sw	s1,36(sp)
9d013270:	afb00020 	sw	s0,32(sp)
9d013274:	afbf0034 	sw	ra,52(sp)
9d013278:	afb40030 	sw	s4,48(sp)
9d01327c:	afb3002c 	sw	s3,44(sp)
9d013280:	00a08821 	move	s1,a1
9d013284:	00c08021 	move	s0,a2
9d013288:	1080003d 	beqz	a0,9d013380 <__cxa_demangle+0x11c>
9d01328c:	00e09021 	move	s2,a3
9d013290:	10a00003 	beqz	a1,9d0132a0 <__cxa_demangle+0x3c>
9d013294:	3c059d01 	lui	a1,0x9d01
9d013298:	10c00039 	beqz	a2,9d013380 <__cxa_demangle+0x11c>
9d01329c:	00000000 	nop
9d0132a0:	24a5c568 	addiu	a1,a1,-15000
9d0132a4:	27a60010 	addiu	a2,sp,16
9d0132a8:	afa00010 	sw	zero,16(sp)
9d0132ac:	afa00014 	sw	zero,20(sp)
9d0132b0:	afa00018 	sw	zero,24(sp)
9d0132b4:	0f404bfa 	jal	9d012fe8 <d_demangle_callback.clone.8>
9d0132b8:	afa0001c 	sw	zero,28(sp)
9d0132bc:	10400022 	beqz	v0,9d013348 <__cxa_demangle+0xe4>
9d0132c0:	8fa20018 	lw	v0,24(sp)
9d0132c4:	8fa3001c 	lw	v1,28(sp)
9d0132c8:	8fb40010 	lw	s4,16(sp)
9d0132cc:	24130001 	li	s3,1
9d0132d0:	12800020 	beqz	s4,9d013354 <__cxa_demangle+0xf0>
9d0132d4:	0043980a 	movz	s3,v0,v1
9d0132d8:	12200025 	beqz	s1,9d013370 <__cxa_demangle+0x10c>
9d0132dc:	00000000 	nop
9d0132e0:	0f401f87 	jal	9d007e1c <strlen>
9d0132e4:	02802021 	move	a0,s4
9d0132e8:	8e030000 	lw	v1,0(s0)
9d0132ec:	0043102b 	sltu	v0,v0,v1
9d0132f0:	10400011 	beqz	v0,9d013338 <__cxa_demangle+0xd4>
9d0132f4:	02802821 	move	a1,s4
9d0132f8:	0f401f7e 	jal	9d007df8 <strcpy>
9d0132fc:	02202021 	move	a0,s1
9d013300:	0f401c40 	jal	9d007100 <free>
9d013304:	02802021 	move	a0,s4
9d013308:	0220a021 	move	s4,s1
9d01330c:	56400001 	bnezl	s2,9d013314 <__cxa_demangle+0xb0>
9d013310:	ae400000 	sw	zero,0(s2)
9d013314:	8fbf0034 	lw	ra,52(sp)
9d013318:	02801021 	move	v0,s4
9d01331c:	8fb40030 	lw	s4,48(sp)
9d013320:	8fb3002c 	lw	s3,44(sp)
9d013324:	8fb20028 	lw	s2,40(sp)
9d013328:	8fb10024 	lw	s1,36(sp)
9d01332c:	8fb00020 	lw	s0,32(sp)
9d013330:	03e00008 	jr	ra
9d013334:	27bd0038 	addiu	sp,sp,56
9d013338:	0f401c40 	jal	9d007100 <free>
9d01333c:	02202021 	move	a0,s1
9d013340:	0b404cc3 	j	9d01330c <__cxa_demangle+0xa8>
9d013344:	ae130000 	sw	s3,0(s0)
9d013348:	8fa40010 	lw	a0,16(sp)
9d01334c:	0f401c40 	jal	9d007100 <free>
9d013350:	00009821 	move	s3,zero
9d013354:	1240ffef 	beqz	s2,9d013314 <__cxa_demangle+0xb0>
9d013358:	0000a021 	move	s4,zero
9d01335c:	24020001 	li	v0,1
9d013360:	1262000c 	beq	s3,v0,9d013394 <__cxa_demangle+0x130>
9d013364:	2402fffe 	li	v0,-2
9d013368:	0b404cc5 	j	9d013314 <__cxa_demangle+0xb0>
9d01336c:	ae420000 	sw	v0,0(s2)
9d013370:	5600ffe6 	bnezl	s0,9d01330c <__cxa_demangle+0xa8>
9d013374:	ae130000 	sw	s3,0(s0)
9d013378:	0b404cc3 	j	9d01330c <__cxa_demangle+0xa8>
9d01337c:	00000000 	nop
9d013380:	1240ffe4 	beqz	s2,9d013314 <__cxa_demangle+0xb0>
9d013384:	0000a021 	move	s4,zero
9d013388:	2402fffd 	li	v0,-3
9d01338c:	0b404cc5 	j	9d013314 <__cxa_demangle+0xb0>
9d013390:	ae420000 	sw	v0,0(s2)
9d013394:	2402ffff 	li	v0,-1
9d013398:	0b404cc5 	j	9d013314 <__cxa_demangle+0xb0>
9d01339c:	ae420000 	sw	v0,0(s2)

9d0133a0 <__cxa_current_exception_type>:
9d0133a0:	27bdffe8 	addiu	sp,sp,-24
9d0133a4:	afbf0014 	sw	ra,20(sp)
9d0133a8:	0f404cf9 	jal	9d0133e4 <__cxa_get_globals>
9d0133ac:	00000000 	nop
9d0133b0:	8c430000 	lw	v1,0(v0)
9d0133b4:	10600006 	beqz	v1,9d0133d0 <__cxa_current_exception_type+0x30>
9d0133b8:	00001021 	move	v0,zero
9d0133bc:	8c620030 	lw	v0,48(v1)
9d0133c0:	30420001 	andi	v0,v0,0x1
9d0133c4:	54400005 	bnezl	v0,9d0133dc <__cxa_current_exception_type+0x3c>
9d0133c8:	8c630008 	lw	v1,8(v1)
9d0133cc:	8c620000 	lw	v0,0(v1)
9d0133d0:	8fbf0014 	lw	ra,20(sp)
9d0133d4:	03e00008 	jr	ra
9d0133d8:	27bd0018 	addiu	sp,sp,24
9d0133dc:	0b404cf3 	j	9d0133cc <__cxa_current_exception_type+0x2c>
9d0133e0:	2463ffb8 	addiu	v1,v1,-72

9d0133e4 <__cxa_get_globals>:
9d0133e4:	03e00008 	jr	ra
9d0133e8:	2782805c 	addiu	v0,gp,-32676

9d0133ec <_general_exception_context>:
9d0133ec:	27bdffa8 	addiu	sp,sp,-88
9d0133f0:	afa10004 	sw	at,4(sp)
9d0133f4:	afa20008 	sw	v0,8(sp)
9d0133f8:	afa3000c 	sw	v1,12(sp)
9d0133fc:	afa40010 	sw	a0,16(sp)
9d013400:	afa50014 	sw	a1,20(sp)
9d013404:	afa60018 	sw	a2,24(sp)
9d013408:	afa7001c 	sw	a3,28(sp)
9d01340c:	afa80020 	sw	t0,32(sp)
9d013410:	afa90024 	sw	t1,36(sp)
9d013414:	afaa0028 	sw	t2,40(sp)
9d013418:	afab002c 	sw	t3,44(sp)
9d01341c:	afac0030 	sw	t4,48(sp)
9d013420:	afad0034 	sw	t5,52(sp)
9d013424:	afae0038 	sw	t6,56(sp)
9d013428:	afaf003c 	sw	t7,60(sp)
9d01342c:	afb80040 	sw	t8,64(sp)
9d013430:	afb90044 	sw	t9,68(sp)
9d013434:	afbf0048 	sw	ra,72(sp)
9d013438:	00004012 	mflo	t0
9d01343c:	afa8004c 	sw	t0,76(sp)
9d013440:	00004010 	mfhi	t0
9d013444:	afa80050 	sw	t0,80(sp)
9d013448:	40046800 	mfc0	a0,c0_cause
9d01344c:	40056000 	mfc0	a1,c0_status
9d013450:	0f404d2f 	jal	9d0134bc <_general_exception_handler>
9d013454:	00000000 	nop
9d013458:	8fa80050 	lw	t0,80(sp)
9d01345c:	01000011 	mthi	t0
9d013460:	8fa8004c 	lw	t0,76(sp)
9d013464:	01000013 	mtlo	t0
9d013468:	8fa10004 	lw	at,4(sp)
9d01346c:	8fa20008 	lw	v0,8(sp)
9d013470:	8fa3000c 	lw	v1,12(sp)
9d013474:	8fa40010 	lw	a0,16(sp)
9d013478:	8fa50014 	lw	a1,20(sp)
9d01347c:	8fa60018 	lw	a2,24(sp)
9d013480:	8fa7001c 	lw	a3,28(sp)
9d013484:	8fa80020 	lw	t0,32(sp)
9d013488:	8fa90024 	lw	t1,36(sp)
9d01348c:	8faa0028 	lw	t2,40(sp)
9d013490:	8fab002c 	lw	t3,44(sp)
9d013494:	8fac0030 	lw	t4,48(sp)
9d013498:	8fad0034 	lw	t5,52(sp)
9d01349c:	8fae0038 	lw	t6,56(sp)
9d0134a0:	8faf003c 	lw	t7,60(sp)
9d0134a4:	8fb80040 	lw	t8,64(sp)
9d0134a8:	8fb90044 	lw	t9,68(sp)
9d0134ac:	8fbf0048 	lw	ra,72(sp)
9d0134b0:	27bd0058 	addiu	sp,sp,88
9d0134b4:	000000c0 	ehb
9d0134b8:	42000018 	eret

9d0134bc <_general_exception_handler>:
9d0134bc:	0b404d2f 	j	9d0134bc <_general_exception_handler>
9d0134c0:	00000000 	nop

9d0134c4 <_on_reset>:
9d0134c4:	03e00008 	jr	ra
9d0134c8:	00000000 	nop

9d0134cc <_on_bootstrap>:
9d0134cc:	03e00008 	jr	ra
9d0134d0:	00000000 	nop

9d0134d4 <_nmi_handler>:
9d0134d4:	401a6000 	mfc0	k0,c0_status
9d0134d8:	3c1bffbf 	lui	k1,0xffbf
9d0134dc:	377bffff 	ori	k1,k1,0xffff
9d0134e0:	035bd024 	and	k0,k0,k1
9d0134e4:	409a6000 	mtc0	k0,c0_status
9d0134e8:	42000018 	eret

9d0134ec <_stub_sbd_memlayout>:
9d0134ec:	3c03a000 	lui	v1,0xa000
9d0134f0:	24621108 	addiu	v0,v1,4360
9d0134f4:	24040001 	li	a0,1
9d0134f8:	ac440008 	sw	a0,8(v0)
9d0134fc:	3c04a000 	lui	a0,0xa000
9d013500:	24841120 	addiu	a0,a0,4384
9d013504:	ac641108 	sw	a0,4360(v1)
9d013508:	3c030000 	lui	v1,0x0
9d01350c:	24630800 	addiu	v1,v1,2048
9d013510:	03e00008 	jr	ra
9d013514:	ac430004 	sw	v1,4(v0)

9d013518 <_sbrk_init>:
9d013518:	27bdffd8 	addiu	sp,sp,-40
9d01351c:	afb00010 	sw	s0,16(sp)
9d013520:	3c10a000 	lui	s0,0xa000
9d013524:	8e021104 	lw	v0,4356(s0)
9d013528:	afbf0024 	sw	ra,36(sp)
9d01352c:	afb40020 	sw	s4,32(sp)
9d013530:	afb3001c 	sw	s3,28(sp)
9d013534:	afb20018 	sw	s2,24(sp)
9d013538:	10400009 	beqz	v0,9d013560 <_sbrk_init+0x48>
9d01353c:	afb10014 	sw	s1,20(sp)
9d013540:	8fbf0024 	lw	ra,36(sp)
9d013544:	8fb40020 	lw	s4,32(sp)
9d013548:	8fb3001c 	lw	s3,28(sp)
9d01354c:	8fb20018 	lw	s2,24(sp)
9d013550:	8fb10014 	lw	s1,20(sp)
9d013554:	8fb00010 	lw	s0,16(sp)
9d013558:	03e00008 	jr	ra
9d01355c:	27bd0028 	addiu	sp,sp,40
9d013560:	3c13a000 	lui	s3,0xa000
9d013564:	8e630a94 	lw	v1,2708(s3)
9d013568:	50600040 	beqzl	v1,9d01366c <_sbrk_init+0x154>
9d01356c:	3c03a000 	lui	v1,0xa000
9d013570:	3c14a000 	lui	s4,0xa000
9d013574:	8e820a98 	lw	v0,2712(s4)
9d013578:	10400039 	beqz	v0,9d013660 <_sbrk_init+0x148>
9d01357c:	00000000 	nop
9d013580:	00038f82 	srl	s1,v1,0x1e
9d013584:	00029782 	srl	s2,v0,0x1e
9d013588:	7c44e000 	ext	a0,v0,0x0,0x1d
9d01358c:	7c65e000 	ext	a1,v1,0x0,0x1d
9d013590:	3a310002 	xori	s1,s1,0x2
9d013594:	3a520002 	xori	s2,s2,0x2
9d013598:	00b1180a 	movz	v1,a1,s1
9d01359c:	0092100a 	movz	v0,a0,s2
9d0135a0:	00608821 	move	s1,v1
9d0135a4:	0f404d3b 	jal	9d0134ec <_stub_sbd_memlayout>
9d0135a8:	00409021 	move	s2,v0
9d0135ac:	8c430000 	lw	v1,0(v0)
9d0135b0:	8c420004 	lw	v0,4(v0)
9d0135b4:	0223202b 	sltu	a0,s1,v1
9d0135b8:	10800024 	beqz	a0,9d01364c <_sbrk_init+0x134>
9d0135bc:	00621021 	addu	v0,v1,v0
9d0135c0:	3c04a000 	lui	a0,0xa000
9d0135c4:	24841120 	addiu	a0,a0,4384
9d0135c8:	7c84e000 	ext	a0,a0,0x0,0x1d
9d0135cc:	0064202b 	sltu	a0,v1,a0
9d0135d0:	1480ffdb 	bnez	a0,9d013540 <_sbrk_init+0x28>
9d0135d4:	00608821 	move	s1,v1
9d0135d8:	0251182b 	sltu	v1,s2,s1
9d0135dc:	14600005 	bnez	v1,9d0135f4 <_sbrk_init+0xdc>
9d0135e0:	0222182b 	sltu	v1,s1,v0
9d0135e4:	0242182b 	sltu	v1,s2,v0
9d0135e8:	54600005 	bnezl	v1,9d013600 <_sbrk_init+0xe8>
9d0135ec:	3c02a000 	lui	v0,0xa000
9d0135f0:	0222182b 	sltu	v1,s1,v0
9d0135f4:	1060ffd2 	beqz	v1,9d013540 <_sbrk_init+0x28>
9d0135f8:	00409021 	move	s2,v0
9d0135fc:	3c02a000 	lui	v0,0xa000
9d013600:	24421120 	addiu	v0,v0,4384
9d013604:	00021742 	srl	v0,v0,0x1d
9d013608:	24030005 	li	v1,5
9d01360c:	14430019 	bne	v0,v1,9d013674 <_sbrk_init+0x15c>
9d013610:	24030004 	li	v1,4
9d013614:	3c02a000 	lui	v0,0xa000
9d013618:	02228825 	or	s1,s1,v0
9d01361c:	02429025 	or	s2,s2,v0
9d013620:	ae710a94 	sw	s1,2708(s3)
9d013624:	ae920a98 	sw	s2,2712(s4)
9d013628:	ae111104 	sw	s1,4356(s0)
9d01362c:	8fbf0024 	lw	ra,36(sp)
9d013630:	8fb40020 	lw	s4,32(sp)
9d013634:	8fb3001c 	lw	s3,28(sp)
9d013638:	8fb20018 	lw	s2,24(sp)
9d01363c:	8fb10014 	lw	s1,20(sp)
9d013640:	8fb00010 	lw	s0,16(sp)
9d013644:	03e00008 	jr	ra
9d013648:	27bd0028 	addiu	sp,sp,40
9d01364c:	0222202b 	sltu	a0,s1,v0
9d013650:	5480ffe2 	bnezl	a0,9d0135dc <_sbrk_init+0xc4>
9d013654:	0251182b 	sltu	v1,s2,s1
9d013658:	0b404d71 	j	9d0135c4 <_sbrk_init+0xac>
9d01365c:	3c04a000 	lui	a0,0xa000
9d013660:	03a01021 	move	v0,sp
9d013664:	0b404d60 	j	9d013580 <_sbrk_init+0x68>
9d013668:	2442f800 	addiu	v0,v0,-2048
9d01366c:	0b404d5c 	j	9d013570 <_sbrk_init+0x58>
9d013670:	24631120 	addiu	v1,v1,4384
9d013674:	14430007 	bne	v0,v1,9d013694 <_sbrk_init+0x17c>
9d013678:	3c028000 	lui	v0,0x8000
9d01367c:	02228825 	or	s1,s1,v0
9d013680:	02421025 	or	v0,s2,v0
9d013684:	ae710a94 	sw	s1,2708(s3)
9d013688:	ae820a98 	sw	v0,2712(s4)
9d01368c:	0b404d8b 	j	9d01362c <_sbrk_init+0x114>
9d013690:	ae111104 	sw	s1,4356(s0)
9d013694:	02408821 	move	s1,s2
9d013698:	ae720a94 	sw	s2,2708(s3)
9d01369c:	0b404d8b 	j	9d01362c <_sbrk_init+0x114>
9d0136a0:	ae111104 	sw	s1,4356(s0)

9d0136a4 <_sbrk>:
9d0136a4:	27bdffe0 	addiu	sp,sp,-32
9d0136a8:	afb00018 	sw	s0,24(sp)
9d0136ac:	3c10a000 	lui	s0,0xa000
9d0136b0:	8e021104 	lw	v0,4356(s0)
9d0136b4:	1040000e 	beqz	v0,9d0136f0 <_sbrk+0x4c>
9d0136b8:	afbf001c 	sw	ra,28(sp)
9d0136bc:	1880001a 	blez	a0,9d013728 <_sbrk+0x84>
9d0136c0:	00441821 	addu	v1,v0,a0
9d0136c4:	0062202b 	sltu	a0,v1,v0
9d0136c8:	1480000e 	bnez	a0,9d013704 <_sbrk+0x60>
9d0136cc:	3c04a000 	lui	a0,0xa000
9d0136d0:	8c840a98 	lw	a0,2712(a0)
9d0136d4:	0083202b 	sltu	a0,a0,v1
9d0136d8:	1480000a 	bnez	a0,9d013704 <_sbrk+0x60>
9d0136dc:	8fbf001c 	lw	ra,28(sp)
9d0136e0:	ae031104 	sw	v1,4356(s0)
9d0136e4:	8fb00018 	lw	s0,24(sp)
9d0136e8:	03e00008 	jr	ra
9d0136ec:	27bd0020 	addiu	sp,sp,32
9d0136f0:	0f404d46 	jal	9d013518 <_sbrk_init>
9d0136f4:	afa40010 	sw	a0,16(sp)
9d0136f8:	8e021104 	lw	v0,4356(s0)
9d0136fc:	1440ffef 	bnez	v0,9d0136bc <_sbrk+0x18>
9d013700:	8fa40010 	lw	a0,16(sp)
9d013704:	0f401c3d 	jal	9d0070f4 <__errno>
9d013708:	00000000 	nop
9d01370c:	8fbf001c 	lw	ra,28(sp)
9d013710:	2403000c 	li	v1,12
9d013714:	ac430000 	sw	v1,0(v0)
9d013718:	8fb00018 	lw	s0,24(sp)
9d01371c:	2402ffff 	li	v0,-1
9d013720:	03e00008 	jr	ra
9d013724:	27bd0020 	addiu	sp,sp,32
9d013728:	0043202b 	sltu	a0,v0,v1
9d01372c:	14800005 	bnez	a0,9d013744 <_sbrk+0xa0>
9d013730:	3c04a000 	lui	a0,0xa000
9d013734:	8c840a94 	lw	a0,2708(a0)
9d013738:	0064202b 	sltu	a0,v1,a0
9d01373c:	1080ffe8 	beqz	a0,9d0136e0 <_sbrk+0x3c>
9d013740:	8fbf001c 	lw	ra,28(sp)
9d013744:	0f401c3d 	jal	9d0070f4 <__errno>
9d013748:	00000000 	nop
9d01374c:	8fbf001c 	lw	ra,28(sp)
9d013750:	24030016 	li	v1,22
9d013754:	ac430000 	sw	v1,0(v0)
9d013758:	8fb00018 	lw	s0,24(sp)
9d01375c:	2402ffff 	li	v0,-1
9d013760:	03e00008 	jr	ra
9d013764:	27bd0020 	addiu	sp,sp,32

9d013768 <sbrk>:
9d013768:	27bdffe0 	addiu	sp,sp,-32
9d01376c:	afb10018 	sw	s1,24(sp)
9d013770:	afb00014 	sw	s0,20(sp)
9d013774:	afbf001c 	sw	ra,28(sp)
9d013778:	0f404da9 	jal	9d0136a4 <_sbrk>
9d01377c:	00808821 	move	s1,a0
9d013780:	1a200007 	blez	s1,9d0137a0 <sbrk+0x38>
9d013784:	00408021 	move	s0,v0
9d013788:	2402ffff 	li	v0,-1
9d01378c:	12020004 	beq	s0,v0,9d0137a0 <sbrk+0x38>
9d013790:	02002021 	move	a0,s0
9d013794:	00002821 	move	a1,zero
9d013798:	0f402f84 	jal	9d00be10 <memset>
9d01379c:	02203021 	move	a2,s1
9d0137a0:	8fbf001c 	lw	ra,28(sp)
9d0137a4:	02001021 	move	v0,s0
9d0137a8:	8fb10018 	lw	s1,24(sp)
9d0137ac:	8fb00014 	lw	s0,20(sp)
9d0137b0:	03e00008 	jr	ra
9d0137b4:	27bd0020 	addiu	sp,sp,32

9d0137b8 <write>:
9d0137b8:	27bdffe0 	addiu	sp,sp,-32
9d0137bc:	afbf001c 	sw	ra,28(sp)
9d0137c0:	afb00018 	sw	s0,24(sp)
9d0137c4:	10a00006 	beqz	a1,9d0137e0 <write+0x28>
9d0137c8:	00001021 	move	v0,zero
9d0137cc:	10c00004 	beqz	a2,9d0137e0 <write+0x28>
9d0137d0:	2c840003 	sltiu	a0,a0,3
9d0137d4:	14800006 	bnez	a0,9d0137f0 <write+0x38>
9d0137d8:	3c020000 	lui	v0,0x0
9d0137dc:	00c01021 	move	v0,a2
9d0137e0:	8fbf001c 	lw	ra,28(sp)
9d0137e4:	8fb00018 	lw	s0,24(sp)
9d0137e8:	03e00008 	jr	ra
9d0137ec:	27bd0020 	addiu	sp,sp,32
9d0137f0:	24420000 	addiu	v0,v0,0
9d0137f4:	10400006 	beqz	v0,9d013810 <write+0x58>
9d0137f8:	00a02021 	move	a0,a1
9d0137fc:	00c02821 	move	a1,a2
9d013800:	0c000000 	jal	90000000 <_imageExecutionJumpToFirstInFlash+0x8e000000>
9d013804:	afa60014 	sw	a2,20(sp)
9d013808:	0b404df7 	j	9d0137dc <write+0x24>
9d01380c:	8fa60014 	lw	a2,20(sp)
9d013810:	00c08021 	move	s0,a2
9d013814:	80a40000 	lb	a0,0(a1)
9d013818:	2610ffff 	addiu	s0,s0,-1
9d01381c:	24a50001 	addiu	a1,a1,1
9d013820:	afa50010 	sw	a1,16(sp)
9d013824:	0f404e10 	jal	9d013840 <_mon_putc>
9d013828:	afa60014 	sw	a2,20(sp)
9d01382c:	8fa50010 	lw	a1,16(sp)
9d013830:	1600fff8 	bnez	s0,9d013814 <write+0x5c>
9d013834:	8fa60014 	lw	a2,20(sp)
9d013838:	0b404df8 	j	9d0137e0 <write+0x28>
9d01383c:	00c01021 	move	v0,a2

9d013840 <_mon_putc>:
9d013840:	3c02a000 	lui	v0,0xa000
9d013844:	8c420a4c 	lw	v0,2636(v0)
9d013848:	27bdffe8 	addiu	sp,sp,-24
9d01384c:	afbf0014 	sw	ra,20(sp)
9d013850:	1440000a 	bnez	v0,9d01387c <_mon_putc+0x3c>
9d013854:	7c042420 	seb	a0,a0
9d013858:	3c020000 	lui	v0,0x0
9d01385c:	24420000 	addiu	v0,v0,0
9d013860:	10400021 	beqz	v0,9d0138e8 <_mon_putc+0xa8>
9d013864:	3c020000 	lui	v0,0x0
9d013868:	0c000000 	jal	90000000 <_imageExecutionJumpToFirstInFlash+0x8e000000>
9d01386c:	00000000 	nop
9d013870:	8fbf0014 	lw	ra,20(sp)
9d013874:	03e00008 	jr	ra
9d013878:	27bd0018 	addiu	sp,sp,24
9d01387c:	24030001 	li	v1,1
9d013880:	10430013 	beq	v0,v1,9d0138d0 <_mon_putc+0x90>
9d013884:	3c05bf80 	lui	a1,0xbf80
9d013888:	3c05bf80 	lui	a1,0xbf80
9d01388c:	3c02bf80 	lui	v0,0xbf80
9d013890:	3c03bf80 	lui	v1,0xbf80
9d013894:	24a56220 	addiu	a1,a1,25120
9d013898:	24426218 	addiu	v0,v0,25112
9d01389c:	24636210 	addiu	v1,v1,25104
9d0138a0:	3c06bf80 	lui	a2,0xbf80
9d0138a4:	34078000 	li	a3,0x8000
9d0138a8:	acc76208 	sw	a3,25096(a2)
9d0138ac:	24060400 	li	a2,1024
9d0138b0:	ac460000 	sw	a2,0(v0)
9d0138b4:	8c620000 	lw	v0,0(v1)
9d0138b8:	30420100 	andi	v0,v0,0x100
9d0138bc:	1040fffd 	beqz	v0,9d0138b4 <_mon_putc+0x74>
9d0138c0:	8fbf0014 	lw	ra,20(sp)
9d0138c4:	aca40000 	sw	a0,0(a1)
9d0138c8:	03e00008 	jr	ra
9d0138cc:	27bd0018 	addiu	sp,sp,24
9d0138d0:	3c02bf80 	lui	v0,0xbf80
9d0138d4:	3c03bf80 	lui	v1,0xbf80
9d0138d8:	24a56020 	addiu	a1,a1,24608
9d0138dc:	24426018 	addiu	v0,v0,24600
9d0138e0:	0b404e28 	j	9d0138a0 <_mon_putc+0x60>
9d0138e4:	24636010 	addiu	v1,v1,24592
9d0138e8:	24420000 	addiu	v0,v0,0
9d0138ec:	1040ffe7 	beqz	v0,9d01388c <_mon_putc+0x4c>
9d0138f0:	3c05bf80 	lui	a1,0xbf80
9d0138f4:	0c000000 	jal	90000000 <_imageExecutionJumpToFirstInFlash+0x8e000000>
9d0138f8:	00000000 	nop
9d0138fc:	0b404e1d 	j	9d013874 <_mon_putc+0x34>
9d013900:	8fbf0014 	lw	ra,20(sp)

9d013904 <__udivdi3>:
9d013904:	00c01021 	move	v0,a2
9d013908:	00804021 	move	t0,a0
9d01390c:	14e0003e 	bnez	a3,9d013a08 <__udivdi3+0x104>
9d013910:	00a01821 	move	v1,a1
9d013914:	00a6302b 	sltu	a2,a1,a2
9d013918:	10c00047 	beqz	a2,9d013a38 <__udivdi3+0x134>
9d01391c:	00000000 	nop
9d013920:	70442020 	clz	a0,v0
9d013924:	10800008 	beqz	a0,9d013948 <__udivdi3+0x44>
9d013928:	00022c02 	srl	a1,v0,0x10
9d01392c:	00042823 	negu	a1,a0
9d013930:	00a82806 	srlv	a1,t0,a1
9d013934:	00831804 	sllv	v1,v1,a0
9d013938:	00821004 	sllv	v0,v0,a0
9d01393c:	00a31825 	or	v1,a1,v1
9d013940:	00884004 	sllv	t0,t0,a0
9d013944:	00022c02 	srl	a1,v0,0x10
9d013948:	0065001b 	divu	zero,v1,a1
9d01394c:	00a001f4 	teq	a1,zero,0x7
9d013950:	3049ffff 	andi	t1,v0,0xffff
9d013954:	00085402 	srl	t2,t0,0x10
9d013958:	00003812 	mflo	a3
9d01395c:	00005810 	mfhi	t3
9d013960:	0065001b 	divu	zero,v1,a1
9d013964:	00a001f4 	teq	a1,zero,0x7
9d013968:	000b1c00 	sll	v1,t3,0x10
9d01396c:	006a1825 	or	v1,v1,t2
9d013970:	70e92002 	mul	a0,a3,t1
9d013974:	0064302b 	sltu	a2,v1,a0
9d013978:	50c0000b 	beqzl	a2,9d0139a8 <__udivdi3+0xa4>
9d01397c:	00641823 	subu	v1,v1,a0
9d013980:	00621821 	addu	v1,v1,v0
9d013984:	0062302b 	sltu	a2,v1,v0
9d013988:	14c00006 	bnez	a2,9d0139a4 <__udivdi3+0xa0>
9d01398c:	24e7ffff 	addiu	a3,a3,-1
9d013990:	0064302b 	sltu	a2,v1,a0
9d013994:	50c00004 	beqzl	a2,9d0139a8 <__udivdi3+0xa4>
9d013998:	00641823 	subu	v1,v1,a0
9d01399c:	24e7ffff 	addiu	a3,a3,-1
9d0139a0:	00621821 	addu	v1,v1,v0
9d0139a4:	00641823 	subu	v1,v1,a0
9d0139a8:	0065001b 	divu	zero,v1,a1
9d0139ac:	00a001f4 	teq	a1,zero,0x7
9d0139b0:	3108ffff 	andi	t0,t0,0xffff
9d0139b4:	00002012 	mflo	a0
9d0139b8:	00005010 	mfhi	t2
9d0139bc:	0065001b 	divu	zero,v1,a1
9d0139c0:	00a001f4 	teq	a1,zero,0x7
9d0139c4:	000a1c00 	sll	v1,t2,0x10
9d0139c8:	00684025 	or	t0,v1,t0
9d0139cc:	70894802 	mul	t1,a0,t1
9d0139d0:	0109182b 	sltu	v1,t0,t1
9d0139d4:	10600006 	beqz	v1,9d0139f0 <__udivdi3+0xec>
9d0139d8:	01024021 	addu	t0,t0,v0
9d0139dc:	0102102b 	sltu	v0,t0,v0
9d0139e0:	14400003 	bnez	v0,9d0139f0 <__udivdi3+0xec>
9d0139e4:	2484ffff 	addiu	a0,a0,-1
9d0139e8:	0109482b 	sltu	t1,t0,t1
9d0139ec:	00892023 	subu	a0,a0,t1
9d0139f0:	00073c00 	sll	a3,a3,0x10
9d0139f4:	00872025 	or	a0,a0,a3
9d0139f8:	00001821 	move	v1,zero
9d0139fc:	00801021 	move	v0,a0
9d013a00:	03e00008 	jr	ra
9d013a04:	00000000 	nop
9d013a08:	00a7102b 	sltu	v0,a1,a3
9d013a0c:	14400043 	bnez	v0,9d013b1c <__udivdi3+0x218>
9d013a10:	00001821 	move	v1,zero
9d013a14:	70e31820 	clz	v1,a3
9d013a18:	14600044 	bnez	v1,9d013b2c <__udivdi3+0x228>
9d013a1c:	240b0020 	li	t3,32
9d013a20:	00e5282b 	sltu	a1,a3,a1
9d013a24:	54a000c5 	bnezl	a1,9d013d3c <__udivdi3+0x438>
9d013a28:	00001821 	move	v1,zero
9d013a2c:	0086202b 	sltu	a0,a0,a2
9d013a30:	0b404e7f 	j	9d0139fc <__udivdi3+0xf8>
9d013a34:	2c840001 	sltiu	a0,a0,1
9d013a38:	14400006 	bnez	v0,9d013a54 <__udivdi3+0x150>
9d013a3c:	70463020 	clz	a2,v0
9d013a40:	24030001 	li	v1,1
9d013a44:	0062001b 	divu	zero,v1,v0
9d013a48:	004001f4 	teq	v0,zero,0x7
9d013a4c:	00001012 	mflo	v0
9d013a50:	70463020 	clz	a2,v0
9d013a54:	54c00079 	bnezl	a2,9d013c3c <__udivdi3+0x338>
9d013a58:	24080020 	li	t0,32
9d013a5c:	00a22823 	subu	a1,a1,v0
9d013a60:	00023c02 	srl	a3,v0,0x10
9d013a64:	304affff 	andi	t2,v0,0xffff
9d013a68:	24030001 	li	v1,1
9d013a6c:	00a7001b 	divu	zero,a1,a3
9d013a70:	00e001f4 	teq	a3,zero,0x7
9d013a74:	00085c02 	srl	t3,t0,0x10
9d013a78:	00004812 	mflo	t1
9d013a7c:	00006010 	mfhi	t4
9d013a80:	00a7001b 	divu	zero,a1,a3
9d013a84:	00e001f4 	teq	a3,zero,0x7
9d013a88:	000c2c00 	sll	a1,t4,0x10
9d013a8c:	00ab2825 	or	a1,a1,t3
9d013a90:	712a2002 	mul	a0,t1,t2
9d013a94:	00a4302b 	sltu	a2,a1,a0
9d013a98:	50c00009 	beqzl	a2,9d013ac0 <__udivdi3+0x1bc>
9d013a9c:	00a42823 	subu	a1,a1,a0
9d013aa0:	00a22821 	addu	a1,a1,v0
9d013aa4:	00a2302b 	sltu	a2,a1,v0
9d013aa8:	14c00004 	bnez	a2,9d013abc <__udivdi3+0x1b8>
9d013aac:	2529ffff 	addiu	t1,t1,-1
9d013ab0:	00a4302b 	sltu	a2,a1,a0
9d013ab4:	54c000a3 	bnezl	a2,9d013d44 <__udivdi3+0x440>
9d013ab8:	2529ffff 	addiu	t1,t1,-1
9d013abc:	00a42823 	subu	a1,a1,a0
9d013ac0:	00a7001b 	divu	zero,a1,a3
9d013ac4:	00e001f4 	teq	a3,zero,0x7
9d013ac8:	3108ffff 	andi	t0,t0,0xffff
9d013acc:	00002012 	mflo	a0
9d013ad0:	00005810 	mfhi	t3
9d013ad4:	00a7001b 	divu	zero,a1,a3
9d013ad8:	00e001f4 	teq	a3,zero,0x7
9d013adc:	000b2c00 	sll	a1,t3,0x10
9d013ae0:	00a84025 	or	t0,a1,t0
9d013ae4:	708a5002 	mul	t2,a0,t2
9d013ae8:	010a282b 	sltu	a1,t0,t2
9d013aec:	10a00006 	beqz	a1,9d013b08 <__udivdi3+0x204>
9d013af0:	01024021 	addu	t0,t0,v0
9d013af4:	0102102b 	sltu	v0,t0,v0
9d013af8:	14400003 	bnez	v0,9d013b08 <__udivdi3+0x204>
9d013afc:	2484ffff 	addiu	a0,a0,-1
9d013b00:	010a502b 	sltu	t2,t0,t2
9d013b04:	008a2023 	subu	a0,a0,t2
9d013b08:	00094c00 	sll	t1,t1,0x10
9d013b0c:	00892025 	or	a0,a0,t1
9d013b10:	00801021 	move	v0,a0
9d013b14:	03e00008 	jr	ra
9d013b18:	00000000 	nop
9d013b1c:	00002021 	move	a0,zero
9d013b20:	00801021 	move	v0,a0
9d013b24:	03e00008 	jr	ra
9d013b28:	00000000 	nop
9d013b2c:	01635823 	subu	t3,t3,v1
9d013b30:	01661006 	srlv	v0,a2,t3
9d013b34:	00673804 	sllv	a3,a3,v1
9d013b38:	00473825 	or	a3,v0,a3
9d013b3c:	01654806 	srlv	t1,a1,t3
9d013b40:	00071402 	srl	v0,a3,0x10
9d013b44:	0122001b 	divu	zero,t1,v0
9d013b48:	004001f4 	teq	v0,zero,0x7
9d013b4c:	30ecffff 	andi	t4,a3,0xffff
9d013b50:	01645806 	srlv	t3,a0,t3
9d013b54:	00652804 	sllv	a1,a1,v1
9d013b58:	01652825 	or	a1,t3,a1
9d013b5c:	00055c02 	srl	t3,a1,0x10
9d013b60:	00005012 	mflo	t2
9d013b64:	00004010 	mfhi	t0
9d013b68:	00084400 	sll	t0,t0,0x10
9d013b6c:	010b4025 	or	t0,t0,t3
9d013b70:	0122001b 	divu	zero,t1,v0
9d013b74:	004001f4 	teq	v0,zero,0x7
9d013b78:	714c4802 	mul	t1,t2,t4
9d013b7c:	0109582b 	sltu	t3,t0,t1
9d013b80:	1160000a 	beqz	t3,9d013bac <__udivdi3+0x2a8>
9d013b84:	00663004 	sllv	a2,a2,v1
9d013b88:	01074021 	addu	t0,t0,a3
9d013b8c:	0107582b 	sltu	t3,t0,a3
9d013b90:	15600006 	bnez	t3,9d013bac <__udivdi3+0x2a8>
9d013b94:	254affff 	addiu	t2,t2,-1
9d013b98:	0109582b 	sltu	t3,t0,t1
9d013b9c:	51600004 	beqzl	t3,9d013bb0 <__udivdi3+0x2ac>
9d013ba0:	01094023 	subu	t0,t0,t1
9d013ba4:	254affff 	addiu	t2,t2,-1
9d013ba8:	01074021 	addu	t0,t0,a3
9d013bac:	01094023 	subu	t0,t0,t1
9d013bb0:	0102001b 	divu	zero,t0,v0
9d013bb4:	004001f4 	teq	v0,zero,0x7
9d013bb8:	30a5ffff 	andi	a1,a1,0xffff
9d013bbc:	00005810 	mfhi	t3
9d013bc0:	00004812 	mflo	t1
9d013bc4:	0102001b 	divu	zero,t0,v0
9d013bc8:	004001f4 	teq	v0,zero,0x7
9d013bcc:	000b1400 	sll	v0,t3,0x10
9d013bd0:	00452825 	or	a1,v0,a1
9d013bd4:	712c1002 	mul	v0,t1,t4
9d013bd8:	00a2402b 	sltu	t0,a1,v0
9d013bdc:	5100000b 	beqzl	t0,9d013c0c <__udivdi3+0x308>
9d013be0:	000a5400 	sll	t2,t2,0x10
9d013be4:	00a72821 	addu	a1,a1,a3
9d013be8:	00a7402b 	sltu	t0,a1,a3
9d013bec:	15000006 	bnez	t0,9d013c08 <__udivdi3+0x304>
9d013bf0:	2529ffff 	addiu	t1,t1,-1
9d013bf4:	00a2402b 	sltu	t0,a1,v0
9d013bf8:	51000004 	beqzl	t0,9d013c0c <__udivdi3+0x308>
9d013bfc:	000a5400 	sll	t2,t2,0x10
9d013c00:	2529ffff 	addiu	t1,t1,-1
9d013c04:	00a72821 	addu	a1,a1,a3
9d013c08:	000a5400 	sll	t2,t2,0x10
9d013c0c:	012a4825 	or	t1,t1,t2
9d013c10:	01260019 	multu	t1,a2
9d013c14:	00a22823 	subu	a1,a1,v0
9d013c18:	00005810 	mfhi	t3
9d013c1c:	00ab102b 	sltu	v0,a1,t3
9d013c20:	14400043 	bnez	v0,9d013d30 <__udivdi3+0x42c>
9d013c24:	00005012 	mflo	t2
9d013c28:	50ab003e 	beql	a1,t3,9d013d24 <__udivdi3+0x420>
9d013c2c:	00641804 	sllv	v1,a0,v1
9d013c30:	01202021 	move	a0,t1
9d013c34:	0b404e7f 	j	9d0139fc <__udivdi3+0xf8>
9d013c38:	00001821 	move	v1,zero
9d013c3c:	00c21004 	sllv	v0,v0,a2
9d013c40:	01064023 	subu	t0,t0,a2
9d013c44:	01054806 	srlv	t1,a1,t0
9d013c48:	00023c02 	srl	a3,v0,0x10
9d013c4c:	0127001b 	divu	zero,t1,a3
9d013c50:	00e001f4 	teq	a3,zero,0x7
9d013c54:	01044006 	srlv	t0,a0,t0
9d013c58:	00c52804 	sllv	a1,a1,a2
9d013c5c:	01052825 	or	a1,t0,a1
9d013c60:	304affff 	andi	t2,v0,0xffff
9d013c64:	00c44004 	sllv	t0,a0,a2
9d013c68:	00055c02 	srl	t3,a1,0x10
9d013c6c:	00003012 	mflo	a2
9d013c70:	00006010 	mfhi	t4
9d013c74:	000c2400 	sll	a0,t4,0x10
9d013c78:	01642025 	or	a0,t3,a0
9d013c7c:	0127001b 	divu	zero,t1,a3
9d013c80:	00e001f4 	teq	a3,zero,0x7
9d013c84:	70ca1802 	mul	v1,a2,t2
9d013c88:	0083482b 	sltu	t1,a0,v1
9d013c8c:	5120000b 	beqzl	t1,9d013cbc <__udivdi3+0x3b8>
9d013c90:	00832023 	subu	a0,a0,v1
9d013c94:	00822021 	addu	a0,a0,v0
9d013c98:	0082482b 	sltu	t1,a0,v0
9d013c9c:	15200006 	bnez	t1,9d013cb8 <__udivdi3+0x3b4>
9d013ca0:	24c6ffff 	addiu	a2,a2,-1
9d013ca4:	0083482b 	sltu	t1,a0,v1
9d013ca8:	51200004 	beqzl	t1,9d013cbc <__udivdi3+0x3b8>
9d013cac:	00832023 	subu	a0,a0,v1
9d013cb0:	24c6ffff 	addiu	a2,a2,-1
9d013cb4:	00822021 	addu	a0,a0,v0
9d013cb8:	00832023 	subu	a0,a0,v1
9d013cbc:	0087001b 	divu	zero,a0,a3
9d013cc0:	00e001f4 	teq	a3,zero,0x7
9d013cc4:	30a5ffff 	andi	a1,a1,0xffff
9d013cc8:	00004810 	mfhi	t1
9d013ccc:	00001812 	mflo	v1
9d013cd0:	0087001b 	divu	zero,a0,a3
9d013cd4:	00e001f4 	teq	a3,zero,0x7
9d013cd8:	00092400 	sll	a0,t1,0x10
9d013cdc:	00852825 	or	a1,a0,a1
9d013ce0:	706a2002 	mul	a0,v1,t2
9d013ce4:	00a4482b 	sltu	t1,a1,a0
9d013ce8:	5120000b 	beqzl	t1,9d013d18 <__udivdi3+0x414>
9d013cec:	00063400 	sll	a2,a2,0x10
9d013cf0:	00a22821 	addu	a1,a1,v0
9d013cf4:	00a2482b 	sltu	t1,a1,v0
9d013cf8:	15200006 	bnez	t1,9d013d14 <__udivdi3+0x410>
9d013cfc:	2463ffff 	addiu	v1,v1,-1
9d013d00:	00a4482b 	sltu	t1,a1,a0
9d013d04:	51200004 	beqzl	t1,9d013d18 <__udivdi3+0x414>
9d013d08:	00063400 	sll	a2,a2,0x10
9d013d0c:	2463ffff 	addiu	v1,v1,-1
9d013d10:	00a22821 	addu	a1,a1,v0
9d013d14:	00063400 	sll	a2,a2,0x10
9d013d18:	00a42823 	subu	a1,a1,a0
9d013d1c:	0b404e9b 	j	9d013a6c <__udivdi3+0x168>
9d013d20:	00661825 	or	v1,v1,a2
9d013d24:	006a182b 	sltu	v1,v1,t2
9d013d28:	1060ff34 	beqz	v1,9d0139fc <__udivdi3+0xf8>
9d013d2c:	01202021 	move	a0,t1
9d013d30:	2524ffff 	addiu	a0,t1,-1
9d013d34:	0b404e7f 	j	9d0139fc <__udivdi3+0xf8>
9d013d38:	00001821 	move	v1,zero
9d013d3c:	0b404e7f 	j	9d0139fc <__udivdi3+0xf8>
9d013d40:	24040001 	li	a0,1
9d013d44:	0b404eaf 	j	9d013abc <__udivdi3+0x1b8>
9d013d48:	00a22821 	addu	a1,a1,v0

9d013d4c <__umoddi3>:
9d013d4c:	00c04021 	move	t0,a2
9d013d50:	00804821 	move	t1,a0
9d013d54:	14e0003c 	bnez	a3,9d013e48 <__umoddi3+0xfc>
9d013d58:	00a01821 	move	v1,a1
9d013d5c:	00a6102b 	sltu	v0,a1,a2
9d013d60:	1040004a 	beqz	v0,9d013e8c <__umoddi3+0x140>
9d013d64:	70c21020 	clz	v0,a2
9d013d68:	50400008 	beqzl	v0,9d013d8c <__umoddi3+0x40>
9d013d6c:	00083402 	srl	a2,t0,0x10
9d013d70:	00022023 	negu	a0,v0
9d013d74:	00892006 	srlv	a0,t1,a0
9d013d78:	00451804 	sllv	v1,a1,v0
9d013d7c:	00464004 	sllv	t0,a2,v0
9d013d80:	00831825 	or	v1,a0,v1
9d013d84:	00494804 	sllv	t1,t1,v0
9d013d88:	00083402 	srl	a2,t0,0x10
9d013d8c:	0066001b 	divu	zero,v1,a2
9d013d90:	00c001f4 	teq	a2,zero,0x7
9d013d94:	310cffff 	andi	t4,t0,0xffff
9d013d98:	00092402 	srl	a0,t1,0x10
9d013d9c:	00005812 	mflo	t3
9d013da0:	00005010 	mfhi	t2
9d013da4:	000a5400 	sll	t2,t2,0x10
9d013da8:	01445025 	or	t2,t2,a0
9d013dac:	716c5802 	mul	t3,t3,t4
9d013db0:	014b682b 	sltu	t5,t2,t3
9d013db4:	0066001b 	divu	zero,v1,a2
9d013db8:	00c001f4 	teq	a2,zero,0x7
9d013dbc:	51a00009 	beqzl	t5,9d013de4 <__umoddi3+0x98>
9d013dc0:	014b5023 	subu	t2,t2,t3
9d013dc4:	01485021 	addu	t2,t2,t0
9d013dc8:	0148182b 	sltu	v1,t2,t0
9d013dcc:	54600005 	bnezl	v1,9d013de4 <__umoddi3+0x98>
9d013dd0:	014b5023 	subu	t2,t2,t3
9d013dd4:	014b202b 	sltu	a0,t2,t3
9d013dd8:	01481821 	addu	v1,t2,t0
9d013ddc:	0064500b 	movn	t2,v1,a0
9d013de0:	014b5023 	subu	t2,t2,t3
9d013de4:	0146001b 	divu	zero,t2,a2
9d013de8:	00c001f4 	teq	a2,zero,0x7
9d013dec:	3129ffff 	andi	t1,t1,0xffff
9d013df0:	00002012 	mflo	a0
9d013df4:	00001810 	mfhi	v1
9d013df8:	00031c00 	sll	v1,v1,0x10
9d013dfc:	00694825 	or	t1,v1,t1
9d013e00:	708c2002 	mul	a0,a0,t4
9d013e04:	0124182b 	sltu	v1,t1,a0
9d013e08:	0146001b 	divu	zero,t2,a2
9d013e0c:	00c001f4 	teq	a2,zero,0x7
9d013e10:	50600009 	beqzl	v1,9d013e38 <__umoddi3+0xec>
9d013e14:	01244823 	subu	t1,t1,a0
9d013e18:	01284821 	addu	t1,t1,t0
9d013e1c:	0128182b 	sltu	v1,t1,t0
9d013e20:	54600005 	bnezl	v1,9d013e38 <__umoddi3+0xec>
9d013e24:	01244823 	subu	t1,t1,a0
9d013e28:	0124182b 	sltu	v1,t1,a0
9d013e2c:	01284021 	addu	t0,t1,t0
9d013e30:	0103480b 	movn	t1,t0,v1
9d013e34:	01244823 	subu	t1,t1,a0
9d013e38:	00491006 	srlv	v0,t1,v0
9d013e3c:	00001821 	move	v1,zero
9d013e40:	03e00008 	jr	ra
9d013e44:	00000000 	nop
9d013e48:	00a7102b 	sltu	v0,a1,a3
9d013e4c:	14400048 	bnez	v0,9d013f70 <__umoddi3+0x224>
9d013e50:	70e84020 	clz	t0,a3
9d013e54:	1500004a 	bnez	t0,9d013f80 <__umoddi3+0x234>
9d013e58:	240a0020 	li	t2,32
9d013e5c:	00e5102b 	sltu	v0,a3,a1
9d013e60:	14400005 	bnez	v0,9d013e78 <__umoddi3+0x12c>
9d013e64:	00861023 	subu	v0,a0,a2
9d013e68:	0086402b 	sltu	t0,a0,a2
9d013e6c:	1500fff4 	bnez	t0,9d013e40 <__umoddi3+0xf4>
9d013e70:	00801021 	move	v0,a0
9d013e74:	00861023 	subu	v0,a0,a2
9d013e78:	00a71823 	subu	v1,a1,a3
9d013e7c:	0082202b 	sltu	a0,a0,v0
9d013e80:	00641823 	subu	v1,v1,a0
9d013e84:	03e00008 	jr	ra
9d013e88:	00000000 	nop
9d013e8c:	14c00006 	bnez	a2,9d013ea8 <__umoddi3+0x15c>
9d013e90:	71021020 	clz	v0,t0
9d013e94:	24020001 	li	v0,1
9d013e98:	0046001b 	divu	zero,v0,a2
9d013e9c:	00c001f4 	teq	a2,zero,0x7
9d013ea0:	00004012 	mflo	t0
9d013ea4:	71021020 	clz	v0,t0
9d013ea8:	5440007d 	bnezl	v0,9d0140a0 <__umoddi3+0x354>
9d013eac:	24090020 	li	t1,32
9d013eb0:	00a82823 	subu	a1,a1,t0
9d013eb4:	00081c02 	srl	v1,t0,0x10
9d013eb8:	3107ffff 	andi	a3,t0,0xffff
9d013ebc:	00a3001b 	divu	zero,a1,v1
9d013ec0:	006001f4 	teq	v1,zero,0x7
9d013ec4:	00095402 	srl	t2,t1,0x10
9d013ec8:	00002012 	mflo	a0
9d013ecc:	00003010 	mfhi	a2
9d013ed0:	00063400 	sll	a2,a2,0x10
9d013ed4:	00ca3025 	or	a2,a2,t2
9d013ed8:	70872002 	mul	a0,a0,a3
9d013edc:	00c4502b 	sltu	t2,a2,a0
9d013ee0:	00a3001b 	divu	zero,a1,v1
9d013ee4:	006001f4 	teq	v1,zero,0x7
9d013ee8:	51400009 	beqzl	t2,9d013f10 <__umoddi3+0x1c4>
9d013eec:	00c43023 	subu	a2,a2,a0
9d013ef0:	00c83021 	addu	a2,a2,t0
9d013ef4:	00c8282b 	sltu	a1,a2,t0
9d013ef8:	54a00005 	bnezl	a1,9d013f10 <__umoddi3+0x1c4>
9d013efc:	00c43023 	subu	a2,a2,a0
9d013f00:	00c4502b 	sltu	t2,a2,a0
9d013f04:	00c82821 	addu	a1,a2,t0
9d013f08:	00aa300b 	movn	a2,a1,t2
9d013f0c:	00c43023 	subu	a2,a2,a0
9d013f10:	00c3001b 	divu	zero,a2,v1
9d013f14:	006001f4 	teq	v1,zero,0x7
9d013f18:	3129ffff 	andi	t1,t1,0xffff
9d013f1c:	00002812 	mflo	a1
9d013f20:	00002010 	mfhi	a0
9d013f24:	00042400 	sll	a0,a0,0x10
9d013f28:	00894825 	or	t1,a0,t1
9d013f2c:	70a73802 	mul	a3,a1,a3
9d013f30:	0127202b 	sltu	a0,t1,a3
9d013f34:	00c3001b 	divu	zero,a2,v1
9d013f38:	006001f4 	teq	v1,zero,0x7
9d013f3c:	50800009 	beqzl	a0,9d013f64 <__umoddi3+0x218>
9d013f40:	01274823 	subu	t1,t1,a3
9d013f44:	01284821 	addu	t1,t1,t0
9d013f48:	0128182b 	sltu	v1,t1,t0
9d013f4c:	54600005 	bnezl	v1,9d013f64 <__umoddi3+0x218>
9d013f50:	01274823 	subu	t1,t1,a3
9d013f54:	0127182b 	sltu	v1,t1,a3
9d013f58:	01284021 	addu	t0,t1,t0
9d013f5c:	0103480b 	movn	t1,t0,v1
9d013f60:	01274823 	subu	t1,t1,a3
9d013f64:	00491006 	srlv	v0,t1,v0
9d013f68:	0b404f90 	j	9d013e40 <__umoddi3+0xf4>
9d013f6c:	00001821 	move	v1,zero
9d013f70:	00801021 	move	v0,a0
9d013f74:	00a01821 	move	v1,a1
9d013f78:	03e00008 	jr	ra
9d013f7c:	00000000 	nop
9d013f80:	01485023 	subu	t2,t2,t0
9d013f84:	01461006 	srlv	v0,a2,t2
9d013f88:	01073804 	sllv	a3,a3,t0
9d013f8c:	00473825 	or	a3,v0,a3
9d013f90:	01455806 	srlv	t3,a1,t2
9d013f94:	00074c02 	srl	t1,a3,0x10
9d013f98:	0169001b 	divu	zero,t3,t1
9d013f9c:	012001f4 	teq	t1,zero,0x7
9d013fa0:	30e3ffff 	andi	v1,a3,0xffff
9d013fa4:	01446806 	srlv	t5,a0,t2
9d013fa8:	01052804 	sllv	a1,a1,t0
9d013fac:	01a52825 	or	a1,t5,a1
9d013fb0:	00056c02 	srl	t5,a1,0x10
9d013fb4:	01063004 	sllv	a2,a2,t0
9d013fb8:	00006012 	mflo	t4
9d013fbc:	00001010 	mfhi	v0
9d013fc0:	00021400 	sll	v0,v0,0x10
9d013fc4:	004d1025 	or	v0,v0,t5
9d013fc8:	0169001b 	divu	zero,t3,t1
9d013fcc:	012001f4 	teq	t1,zero,0x7
9d013fd0:	71835802 	mul	t3,t4,v1
9d013fd4:	004b682b 	sltu	t5,v0,t3
9d013fd8:	11a0000a 	beqz	t5,9d014004 <__umoddi3+0x2b8>
9d013fdc:	01042004 	sllv	a0,a0,t0
9d013fe0:	00471021 	addu	v0,v0,a3
9d013fe4:	0047682b 	sltu	t5,v0,a3
9d013fe8:	15a00006 	bnez	t5,9d014004 <__umoddi3+0x2b8>
9d013fec:	258cffff 	addiu	t4,t4,-1
9d013ff0:	004b682b 	sltu	t5,v0,t3
9d013ff4:	51a00004 	beqzl	t5,9d014008 <__umoddi3+0x2bc>
9d013ff8:	004b1023 	subu	v0,v0,t3
9d013ffc:	258cffff 	addiu	t4,t4,-1
9d014000:	00471021 	addu	v0,v0,a3
9d014004:	004b1023 	subu	v0,v0,t3
9d014008:	0049001b 	divu	zero,v0,t1
9d01400c:	012001f4 	teq	t1,zero,0x7
9d014010:	30a5ffff 	andi	a1,a1,0xffff
9d014014:	00005812 	mflo	t3
9d014018:	00006810 	mfhi	t5
9d01401c:	0049001b 	divu	zero,v0,t1
9d014020:	012001f4 	teq	t1,zero,0x7
9d014024:	000d1400 	sll	v0,t5,0x10
9d014028:	00452825 	or	a1,v0,a1
9d01402c:	71634802 	mul	t1,t3,v1
9d014030:	00a9102b 	sltu	v0,a1,t1
9d014034:	50400006 	beqzl	v0,9d014050 <__umoddi3+0x304>
9d014038:	000c6400 	sll	t4,t4,0x10
9d01403c:	00a72821 	addu	a1,a1,a3
9d014040:	00a7102b 	sltu	v0,a1,a3
9d014044:	1040004d 	beqz	v0,9d01417c <__umoddi3+0x430>
9d014048:	256bffff 	addiu	t3,t3,-1
9d01404c:	000c6400 	sll	t4,t4,0x10
9d014050:	016c5825 	or	t3,t3,t4
9d014054:	01660019 	multu	t3,a2
9d014058:	00a92823 	subu	a1,a1,t1
9d01405c:	0000c810 	mfhi	t9
9d014060:	00b9682b 	sltu	t5,a1,t9
9d014064:	03207021 	move	t6,t9
9d014068:	15a0003e 	bnez	t5,9d014164 <__umoddi3+0x418>
9d01406c:	00004812 	mflo	t1
9d014070:	10b9004b 	beq	a1,t9,9d0141a0 <__umoddi3+0x454>
9d014074:	00b91823 	subu	v1,a1,t9
9d014078:	00001012 	mflo	v0
9d01407c:	00821023 	subu	v0,a0,v0
9d014080:	0082202b 	sltu	a0,a0,v0
9d014084:	00641823 	subu	v1,v1,a0
9d014088:	01435004 	sllv	t2,v1,t2
9d01408c:	01021006 	srlv	v0,v0,t0
9d014090:	004a1025 	or	v0,v0,t2
9d014094:	01031806 	srlv	v1,v1,t0
9d014098:	03e00008 	jr	ra
9d01409c:	00000000 	nop
9d0140a0:	01224823 	subu	t1,t1,v0
9d0140a4:	00484004 	sllv	t0,t0,v0
9d0140a8:	01253006 	srlv	a2,a1,t1
9d0140ac:	00081c02 	srl	v1,t0,0x10
9d0140b0:	00c3001b 	divu	zero,a2,v1
9d0140b4:	006001f4 	teq	v1,zero,0x7
9d0140b8:	3107ffff 	andi	a3,t0,0xffff
9d0140bc:	01245806 	srlv	t3,a0,t1
9d0140c0:	00452804 	sllv	a1,a1,v0
9d0140c4:	01655825 	or	t3,t3,a1
9d0140c8:	000b2c02 	srl	a1,t3,0x10
9d0140cc:	00444804 	sllv	t1,a0,v0
9d0140d0:	00005012 	mflo	t2
9d0140d4:	00006010 	mfhi	t4
9d0140d8:	000c2400 	sll	a0,t4,0x10
9d0140dc:	00a42025 	or	a0,a1,a0
9d0140e0:	71475002 	mul	t2,t2,a3
9d0140e4:	008a282b 	sltu	a1,a0,t2
9d0140e8:	00c3001b 	divu	zero,a2,v1
9d0140ec:	006001f4 	teq	v1,zero,0x7
9d0140f0:	50a00006 	beqzl	a1,9d01410c <__umoddi3+0x3c0>
9d0140f4:	008a2023 	subu	a0,a0,t2
9d0140f8:	00882021 	addu	a0,a0,t0
9d0140fc:	0088282b 	sltu	a1,a0,t0
9d014100:	10a00024 	beqz	a1,9d014194 <__umoddi3+0x448>
9d014104:	008a302b 	sltu	a2,a0,t2
9d014108:	008a2023 	subu	a0,a0,t2
9d01410c:	0083001b 	divu	zero,a0,v1
9d014110:	006001f4 	teq	v1,zero,0x7
9d014114:	316bffff 	andi	t3,t3,0xffff
9d014118:	00003012 	mflo	a2
9d01411c:	00002810 	mfhi	a1
9d014120:	00052c00 	sll	a1,a1,0x10
9d014124:	00ab2825 	or	a1,a1,t3
9d014128:	70c73002 	mul	a2,a2,a3
9d01412c:	00a6502b 	sltu	t2,a1,a2
9d014130:	0083001b 	divu	zero,a0,v1
9d014134:	006001f4 	teq	v1,zero,0x7
9d014138:	5140ff60 	beqzl	t2,9d013ebc <__umoddi3+0x170>
9d01413c:	00a62823 	subu	a1,a1,a2
9d014140:	00a82821 	addu	a1,a1,t0
9d014144:	00a8202b 	sltu	a0,a1,t0
9d014148:	5480ff5c 	bnezl	a0,9d013ebc <__umoddi3+0x170>
9d01414c:	00a62823 	subu	a1,a1,a2
9d014150:	00a6502b 	sltu	t2,a1,a2
9d014154:	00a82021 	addu	a0,a1,t0
9d014158:	008a280b 	movn	a1,a0,t2
9d01415c:	0b404faf 	j	9d013ebc <__umoddi3+0x170>
9d014160:	00a62823 	subu	a1,a1,a2
9d014164:	01261023 	subu	v0,t1,a2
9d014168:	01c71823 	subu	v1,t6,a3
9d01416c:	0122482b 	sltu	t1,t1,v0
9d014170:	00691823 	subu	v1,v1,t1
9d014174:	0b40501f 	j	9d01407c <__umoddi3+0x330>
9d014178:	00a31823 	subu	v1,a1,v1
9d01417c:	00a9102b 	sltu	v0,a1,t1
9d014180:	5040ffb3 	beqzl	v0,9d014050 <__umoddi3+0x304>
9d014184:	000c6400 	sll	t4,t4,0x10
9d014188:	256bffff 	addiu	t3,t3,-1
9d01418c:	0b405013 	j	9d01404c <__umoddi3+0x300>
9d014190:	00a72821 	addu	a1,a1,a3
9d014194:	00882821 	addu	a1,a0,t0
9d014198:	0b405042 	j	9d014108 <__umoddi3+0x3bc>
9d01419c:	00a6200b 	movn	a0,a1,a2
9d0141a0:	0089182b 	sltu	v1,a0,t1
9d0141a4:	5460fff0 	bnezl	v1,9d014168 <__umoddi3+0x41c>
9d0141a8:	01261023 	subu	v0,t1,a2
9d0141ac:	00001012 	mflo	v0
9d0141b0:	0b40501f 	j	9d01407c <__umoddi3+0x330>
9d0141b4:	00001821 	move	v1,zero

9d0141b8 <abort>:
9d0141b8:	27bdffe8 	addiu	sp,sp,-24
9d0141bc:	afbf0014 	sw	ra,20(sp)
9d0141c0:	0f405253 	jal	9d01494c <raise>
9d0141c4:	24040006 	li	a0,6
9d0141c8:	0f405548 	jal	9d015520 <_exit>
9d0141cc:	24040001 	li	a0,1

9d0141d0 <_fputs_r>:
9d0141d0:	27bdffc8 	addiu	sp,sp,-56
9d0141d4:	afb0002c 	sw	s0,44(sp)
9d0141d8:	00808021 	move	s0,a0
9d0141dc:	00a02021 	move	a0,a1
9d0141e0:	afb10030 	sw	s1,48(sp)
9d0141e4:	afbf0034 	sw	ra,52(sp)
9d0141e8:	00c08821 	move	s1,a2
9d0141ec:	0f401f87 	jal	9d007e1c <strlen>
9d0141f0:	afa50010 	sw	a1,16(sp)
9d0141f4:	afa20020 	sw	v0,32(sp)
9d0141f8:	afa20014 	sw	v0,20(sp)
9d0141fc:	27a20010 	addiu	v0,sp,16
9d014200:	afa20018 	sw	v0,24(sp)
9d014204:	24020001 	li	v0,1
9d014208:	12000006 	beqz	s0,9d014224 <_fputs_r+0x54>
9d01420c:	afa2001c 	sw	v0,28(sp)
9d014210:	8e020038 	lw	v0,56(s0)
9d014214:	54400004 	bnezl	v0,9d014228 <_fputs_r+0x58>
9d014218:	8622000c 	lh	v0,12(s1)
9d01421c:	0f405356 	jal	9d014d58 <__sinit>
9d014220:	02002021 	move	a0,s0
9d014224:	8622000c 	lh	v0,12(s1)
9d014228:	30432000 	andi	v1,v0,0x2000
9d01422c:	14600006 	bnez	v1,9d014248 <_fputs_r+0x78>
9d014230:	34422000 	ori	v0,v0,0x2000
9d014234:	8e230060 	lw	v1,96(s1)
9d014238:	a622000c 	sh	v0,12(s1)
9d01423c:	2402dfff 	li	v0,-8193
9d014240:	00621024 	and	v0,v1,v0
9d014244:	ae220060 	sw	v0,96(s1)
9d014248:	02002021 	move	a0,s0
9d01424c:	02202821 	move	a1,s1
9d014250:	0f4050a1 	jal	9d014284 <__sfvwrite_r>
9d014254:	27a60018 	addiu	a2,sp,24
9d014258:	8fbf0034 	lw	ra,52(sp)
9d01425c:	8fb10030 	lw	s1,48(sp)
9d014260:	8fb0002c 	lw	s0,44(sp)
9d014264:	03e00008 	jr	ra
9d014268:	27bd0038 	addiu	sp,sp,56

9d01426c <fputs>:
9d01426c:	3c03a000 	lui	v1,0xa000
9d014270:	00801021 	move	v0,a0
9d014274:	8c640a38 	lw	a0,2616(v1)
9d014278:	00a03021 	move	a2,a1
9d01427c:	0b405074 	j	9d0141d0 <_fputs_r>
9d014280:	00402821 	move	a1,v0

9d014284 <__sfvwrite_r>:
9d014284:	8cc30008 	lw	v1,8(a2)
9d014288:	27bdffc0 	addiu	sp,sp,-64
9d01428c:	afb70034 	sw	s7,52(sp)
9d014290:	afb1001c 	sw	s1,28(sp)
9d014294:	afb00018 	sw	s0,24(sp)
9d014298:	afbf003c 	sw	ra,60(sp)
9d01429c:	afbe0038 	sw	s8,56(sp)
9d0142a0:	afb60030 	sw	s6,48(sp)
9d0142a4:	afb5002c 	sw	s5,44(sp)
9d0142a8:	afb40028 	sw	s4,40(sp)
9d0142ac:	afb30024 	sw	s3,36(sp)
9d0142b0:	afb20020 	sw	s2,32(sp)
9d0142b4:	00808021 	move	s0,a0
9d0142b8:	00a0b821 	move	s7,a1
9d0142bc:	00c08821 	move	s1,a2
9d0142c0:	10600118 	beqz	v1,9d014724 <__sfvwrite_r+0x4a0>
9d0142c4:	00001021 	move	v0,zero
9d0142c8:	94a2000c 	lhu	v0,12(a1)
9d0142cc:	30420008 	andi	v0,v0,0x8
9d0142d0:	10400005 	beqz	v0,9d0142e8 <__sfvwrite_r+0x64>
9d0142d4:	02002021 	move	a0,s0
9d0142d8:	8ca20010 	lw	v0,16(a1)
9d0142dc:	5440000b 	bnezl	v0,9d01430c <__sfvwrite_r+0x88>
9d0142e0:	96e2000c 	lhu	v0,12(s7)
9d0142e4:	02002021 	move	a0,s0
9d0142e8:	0f405273 	jal	9d0149cc <__swsetup_r>
9d0142ec:	02e02821 	move	a1,s7
9d0142f0:	10400006 	beqz	v0,9d01430c <__sfvwrite_r+0x88>
9d0142f4:	96e2000c 	lhu	v0,12(s7)
9d0142f8:	34420040 	ori	v0,v0,0x40
9d0142fc:	a6e2000c 	sh	v0,12(s7)
9d014300:	24020009 	li	v0,9
9d014304:	0b4051c6 	j	9d014718 <__sfvwrite_r+0x494>
9d014308:	ae020000 	sw	v0,0(s0)
9d01430c:	30430002 	andi	v1,v0,0x2
9d014310:	1060001b 	beqz	v1,9d014380 <__sfvwrite_r+0xfc>
9d014314:	8e320000 	lw	s2,0(s1)
9d014318:	0000a021 	move	s4,zero
9d01431c:	00009821 	move	s3,zero
9d014320:	0b4050cc 	j	9d014330 <__sfvwrite_r+0xac>
9d014324:	24150020 	li	s5,32
9d014328:	8e530004 	lw	s3,4(s2)
9d01432c:	26520008 	addiu	s2,s2,8
9d014330:	5260fffd 	beqzl	s3,9d014328 <__sfvwrite_r+0xa4>
9d014334:	8e540000 	lw	s4,0(s2)
9d014338:	2e670021 	sltiu	a3,s3,33
9d01433c:	02a01021 	move	v0,s5
9d014340:	0267100b 	movn	v0,s3,a3
9d014344:	00403821 	move	a3,v0
9d014348:	8ee5001c 	lw	a1,28(s7)
9d01434c:	8ee20024 	lw	v0,36(s7)
9d014350:	02002021 	move	a0,s0
9d014354:	0040f809 	jalr	v0
9d014358:	02803021 	move	a2,s4
9d01435c:	584000ec 	blezl	v0,9d014710 <__sfvwrite_r+0x48c>
9d014360:	96e2000c 	lhu	v0,12(s7)
9d014364:	8e230008 	lw	v1,8(s1)
9d014368:	00621823 	subu	v1,v1,v0
9d01436c:	106000ec 	beqz	v1,9d014720 <__sfvwrite_r+0x49c>
9d014370:	ae230008 	sw	v1,8(s1)
9d014374:	0282a021 	addu	s4,s4,v0
9d014378:	0b4050cc 	j	9d014330 <__sfvwrite_r+0xac>
9d01437c:	02629823 	subu	s3,s3,v0
9d014380:	30420001 	andi	v0,v0,0x1
9d014384:	10400005 	beqz	v0,9d01439c <__sfvwrite_r+0x118>
9d014388:	00009821 	move	s3,zero
9d01438c:	0000a821 	move	s5,zero
9d014390:	0000b021 	move	s6,zero
9d014394:	0b405175 	j	9d0145d4 <__sfvwrite_r+0x350>
9d014398:	0000a021 	move	s4,zero
9d01439c:	0000f021 	move	s8,zero
9d0143a0:	24150003 	li	s5,3
9d0143a4:	0b4050ed 	j	9d0143b4 <__sfvwrite_r+0x130>
9d0143a8:	2416fb7f 	li	s6,-1153
9d0143ac:	8e5e0004 	lw	s8,4(s2)
9d0143b0:	26520008 	addiu	s2,s2,8
9d0143b4:	53c0fffd 	beqzl	s8,9d0143ac <__sfvwrite_r+0x128>
9d0143b8:	8e530000 	lw	s3,0(s2)
9d0143bc:	96e2000c 	lhu	v0,12(s7)
9d0143c0:	30440200 	andi	a0,v0,0x200
9d0143c4:	1080004c 	beqz	a0,9d0144f8 <__sfvwrite_r+0x274>
9d0143c8:	8ee30008 	lw	v1,8(s7)
9d0143cc:	03c3202b 	sltu	a0,s8,v1
9d0143d0:	5480003a 	bnezl	a0,9d0144bc <__sfvwrite_r+0x238>
9d0143d4:	03c3102b 	sltu	v0,s8,v1
9d0143d8:	30440480 	andi	a0,v0,0x480
9d0143dc:	50800037 	beqzl	a0,9d0144bc <__sfvwrite_r+0x238>
9d0143e0:	03c3102b 	sltu	v0,s8,v1
9d0143e4:	8ee70014 	lw	a3,20(s7)
9d0143e8:	8ee50010 	lw	a1,16(s7)
9d0143ec:	8ef40000 	lw	s4,0(s7)
9d0143f0:	72a73802 	mul	a3,s5,a3
9d0143f4:	30420400 	andi	v0,v0,0x400
9d0143f8:	0285a023 	subu	s4,s4,a1
9d0143fc:	00071fc2 	srl	v1,a3,0x1f
9d014400:	00673821 	addu	a3,v1,a3
9d014404:	26830001 	addiu	v1,s4,1
9d014408:	00073843 	sra	a3,a3,0x1
9d01440c:	007e1821 	addu	v1,v1,s8
9d014410:	00e3202b 	sltu	a0,a3,v1
9d014414:	10400014 	beqz	v0,9d014468 <__sfvwrite_r+0x1e4>
9d014418:	0064380b 	movn	a3,v1,a0
9d01441c:	00e02821 	move	a1,a3
9d014420:	02002021 	move	a0,s0
9d014424:	0f401c4a 	jal	9d007128 <_malloc_r>
9d014428:	afa70010 	sw	a3,16(sp)
9d01442c:	10400018 	beqz	v0,9d014490 <__sfvwrite_r+0x20c>
9d014430:	8fa70010 	lw	a3,16(sp)
9d014434:	8ee50010 	lw	a1,16(s7)
9d014438:	00402021 	move	a0,v0
9d01443c:	02803021 	move	a2,s4
9d014440:	afa70010 	sw	a3,16(sp)
9d014444:	0f402c17 	jal	9d00b05c <memcpy>
9d014448:	afa20014 	sw	v0,20(sp)
9d01444c:	96e2000c 	lhu	v0,12(s7)
9d014450:	8fa30014 	lw	v1,20(sp)
9d014454:	8fa70010 	lw	a3,16(sp)
9d014458:	00561024 	and	v0,v0,s6
9d01445c:	34420080 	ori	v0,v0,0x80
9d014460:	0b405127 	j	9d01449c <__sfvwrite_r+0x218>
9d014464:	a6e2000c 	sh	v0,12(s7)
9d014468:	00e03021 	move	a2,a3
9d01446c:	02002021 	move	a0,s0
9d014470:	0f401df9 	jal	9d0077e4 <_realloc_r>
9d014474:	afa70010 	sw	a3,16(sp)
9d014478:	00401821 	move	v1,v0
9d01447c:	14400007 	bnez	v0,9d01449c <__sfvwrite_r+0x218>
9d014480:	8fa70010 	lw	a3,16(sp)
9d014484:	8ee50010 	lw	a1,16(s7)
9d014488:	0f402b6e 	jal	9d00adb8 <_free_r>
9d01448c:	02002021 	move	a0,s0
9d014490:	2402000c 	li	v0,12
9d014494:	0b4051c3 	j	9d01470c <__sfvwrite_r+0x488>
9d014498:	ae020000 	sw	v0,0(s0)
9d01449c:	aee30010 	sw	v1,16(s7)
9d0144a0:	00741821 	addu	v1,v1,s4
9d0144a4:	00f4a023 	subu	s4,a3,s4
9d0144a8:	aee30000 	sw	v1,0(s7)
9d0144ac:	aee70014 	sw	a3,20(s7)
9d0144b0:	03c01821 	move	v1,s8
9d0144b4:	aef40008 	sw	s4,8(s7)
9d0144b8:	03c3102b 	sltu	v0,s8,v1
9d0144bc:	8ee40000 	lw	a0,0(s7)
9d0144c0:	03c2180b 	movn	v1,s8,v0
9d0144c4:	00603021 	move	a2,v1
9d0144c8:	02602821 	move	a1,s3
9d0144cc:	0f402c22 	jal	9d00b088 <memmove>
9d0144d0:	afa30014 	sw	v1,20(sp)
9d0144d4:	8ee20008 	lw	v0,8(s7)
9d0144d8:	8fa30014 	lw	v1,20(sp)
9d0144dc:	00431023 	subu	v0,v0,v1
9d0144e0:	aee20008 	sw	v0,8(s7)
9d0144e4:	8ee20000 	lw	v0,0(s7)
9d0144e8:	00431821 	addu	v1,v0,v1
9d0144ec:	aee30000 	sw	v1,0(s7)
9d0144f0:	0b40516b 	j	9d0145ac <__sfvwrite_r+0x328>
9d0144f4:	03c01821 	move	v1,s8
9d0144f8:	8ee40000 	lw	a0,0(s7)
9d0144fc:	8ee20010 	lw	v0,16(s7)
9d014500:	0044102b 	sltu	v0,v0,a0
9d014504:	50400013 	beqzl	v0,9d014554 <__sfvwrite_r+0x2d0>
9d014508:	8ee70014 	lw	a3,20(s7)
9d01450c:	007e102b 	sltu	v0,v1,s8
9d014510:	50400010 	beqzl	v0,9d014554 <__sfvwrite_r+0x2d0>
9d014514:	8ee70014 	lw	a3,20(s7)
9d014518:	00603021 	move	a2,v1
9d01451c:	02602821 	move	a1,s3
9d014520:	0f402c22 	jal	9d00b088 <memmove>
9d014524:	afa30014 	sw	v1,20(sp)
9d014528:	8ee20000 	lw	v0,0(s7)
9d01452c:	8fa30014 	lw	v1,20(sp)
9d014530:	02002021 	move	a0,s0
9d014534:	02e02821 	move	a1,s7
9d014538:	00431021 	addu	v0,v0,v1
9d01453c:	0f4052be 	jal	9d014af8 <_fflush_r>
9d014540:	aee20000 	sw	v0,0(s7)
9d014544:	10400019 	beqz	v0,9d0145ac <__sfvwrite_r+0x328>
9d014548:	8fa30014 	lw	v1,20(sp)
9d01454c:	0b4051c4 	j	9d014710 <__sfvwrite_r+0x48c>
9d014550:	96e2000c 	lhu	v0,12(s7)
9d014554:	03c7102b 	sltu	v0,s8,a3
9d014558:	1440000a 	bnez	v0,9d014584 <__sfvwrite_r+0x300>
9d01455c:	02602821 	move	a1,s3
9d014560:	8ee20024 	lw	v0,36(s7)
9d014564:	8ee5001c 	lw	a1,28(s7)
9d014568:	02002021 	move	a0,s0
9d01456c:	0040f809 	jalr	v0
9d014570:	02603021 	move	a2,s3
9d014574:	1c40000d 	bgtz	v0,9d0145ac <__sfvwrite_r+0x328>
9d014578:	00401821 	move	v1,v0
9d01457c:	0b4051c4 	j	9d014710 <__sfvwrite_r+0x48c>
9d014580:	96e2000c 	lhu	v0,12(s7)
9d014584:	03c03021 	move	a2,s8
9d014588:	0f402c22 	jal	9d00b088 <memmove>
9d01458c:	afbe0014 	sw	s8,20(sp)
9d014590:	8ee20008 	lw	v0,8(s7)
9d014594:	8fa30014 	lw	v1,20(sp)
9d014598:	005e1023 	subu	v0,v0,s8
9d01459c:	aee20008 	sw	v0,8(s7)
9d0145a0:	8ee20000 	lw	v0,0(s7)
9d0145a4:	005e1021 	addu	v0,v0,s8
9d0145a8:	aee20000 	sw	v0,0(s7)
9d0145ac:	8e220008 	lw	v0,8(s1)
9d0145b0:	00431023 	subu	v0,v0,v1
9d0145b4:	1040005a 	beqz	v0,9d014720 <__sfvwrite_r+0x49c>
9d0145b8:	ae220008 	sw	v0,8(s1)
9d0145bc:	02639821 	addu	s3,s3,v1
9d0145c0:	0b4050ed 	j	9d0143b4 <__sfvwrite_r+0x130>
9d0145c4:	03c3f023 	subu	s8,s8,v1
9d0145c8:	8e540004 	lw	s4,4(s2)
9d0145cc:	0000b021 	move	s6,zero
9d0145d0:	26520008 	addiu	s2,s2,8
9d0145d4:	5280fffc 	beqzl	s4,9d0145c8 <__sfvwrite_r+0x344>
9d0145d8:	8e530000 	lw	s3,0(s2)
9d0145dc:	16c0000b 	bnez	s6,9d01460c <__sfvwrite_r+0x388>
9d0145e0:	0295182b 	sltu	v1,s4,s5
9d0145e4:	02602021 	move	a0,s3
9d0145e8:	2405000a 	li	a1,10
9d0145ec:	0f402c0c 	jal	9d00b030 <memchr>
9d0145f0:	02803021 	move	a2,s4
9d0145f4:	10400003 	beqz	v0,9d014604 <__sfvwrite_r+0x380>
9d0145f8:	26950001 	addiu	s5,s4,1
9d0145fc:	24550001 	addiu	s5,v0,1
9d014600:	02b3a823 	subu	s5,s5,s3
9d014604:	24160001 	li	s6,1
9d014608:	0295182b 	sltu	v1,s4,s5
9d01460c:	02801021 	move	v0,s4
9d014610:	02a3100a 	movz	v0,s5,v1
9d014614:	00401821 	move	v1,v0
9d014618:	8ee40000 	lw	a0,0(s7)
9d01461c:	8ee20010 	lw	v0,16(s7)
9d014620:	8efe0008 	lw	s8,8(s7)
9d014624:	0044102b 	sltu	v0,v0,a0
9d014628:	10400012 	beqz	v0,9d014674 <__sfvwrite_r+0x3f0>
9d01462c:	8ee70014 	lw	a3,20(s7)
9d014630:	00fef021 	addu	s8,a3,s8
9d014634:	03c3102a 	slt	v0,s8,v1
9d014638:	1040000f 	beqz	v0,9d014678 <__sfvwrite_r+0x3f4>
9d01463c:	0067102a 	slt	v0,v1,a3
9d014640:	02602821 	move	a1,s3
9d014644:	0f402c22 	jal	9d00b088 <memmove>
9d014648:	03c03021 	move	a2,s8
9d01464c:	8ee20000 	lw	v0,0(s7)
9d014650:	02002021 	move	a0,s0
9d014654:	02e02821 	move	a1,s7
9d014658:	005e1021 	addu	v0,v0,s8
9d01465c:	0f4052be 	jal	9d014af8 <_fflush_r>
9d014660:	aee20000 	sw	v0,0(s7)
9d014664:	1040001b 	beqz	v0,9d0146d4 <__sfvwrite_r+0x450>
9d014668:	02bea823 	subu	s5,s5,s8
9d01466c:	0b4051c4 	j	9d014710 <__sfvwrite_r+0x48c>
9d014670:	96e2000c 	lhu	v0,12(s7)
9d014674:	0067102a 	slt	v0,v1,a3
9d014678:	1440000a 	bnez	v0,9d0146a4 <__sfvwrite_r+0x420>
9d01467c:	00603021 	move	a2,v1
9d014680:	8ee20024 	lw	v0,36(s7)
9d014684:	8ee5001c 	lw	a1,28(s7)
9d014688:	02002021 	move	a0,s0
9d01468c:	0040f809 	jalr	v0
9d014690:	02603021 	move	a2,s3
9d014694:	1c40000e 	bgtz	v0,9d0146d0 <__sfvwrite_r+0x44c>
9d014698:	0040f021 	move	s8,v0
9d01469c:	0b4051c4 	j	9d014710 <__sfvwrite_r+0x48c>
9d0146a0:	96e2000c 	lhu	v0,12(s7)
9d0146a4:	02602821 	move	a1,s3
9d0146a8:	0f402c22 	jal	9d00b088 <memmove>
9d0146ac:	afa30014 	sw	v1,20(sp)
9d0146b0:	8fa30014 	lw	v1,20(sp)
9d0146b4:	8ee20008 	lw	v0,8(s7)
9d0146b8:	0060f021 	move	s8,v1
9d0146bc:	00431023 	subu	v0,v0,v1
9d0146c0:	aee20008 	sw	v0,8(s7)
9d0146c4:	8ee20000 	lw	v0,0(s7)
9d0146c8:	00431021 	addu	v0,v0,v1
9d0146cc:	aee20000 	sw	v0,0(s7)
9d0146d0:	02bea823 	subu	s5,s5,s8
9d0146d4:	56a00007 	bnezl	s5,9d0146f4 <__sfvwrite_r+0x470>
9d0146d8:	8e220008 	lw	v0,8(s1)
9d0146dc:	02002021 	move	a0,s0
9d0146e0:	0f4052be 	jal	9d014af8 <_fflush_r>
9d0146e4:	02e02821 	move	a1,s7
9d0146e8:	14400008 	bnez	v0,9d01470c <__sfvwrite_r+0x488>
9d0146ec:	0000b021 	move	s6,zero
9d0146f0:	8e220008 	lw	v0,8(s1)
9d0146f4:	005e1023 	subu	v0,v0,s8
9d0146f8:	10400009 	beqz	v0,9d014720 <__sfvwrite_r+0x49c>
9d0146fc:	ae220008 	sw	v0,8(s1)
9d014700:	027e9821 	addu	s3,s3,s8
9d014704:	0b405175 	j	9d0145d4 <__sfvwrite_r+0x350>
9d014708:	029ea023 	subu	s4,s4,s8
9d01470c:	96e2000c 	lhu	v0,12(s7)
9d014710:	34420040 	ori	v0,v0,0x40
9d014714:	a6e2000c 	sh	v0,12(s7)
9d014718:	0b4051c9 	j	9d014724 <__sfvwrite_r+0x4a0>
9d01471c:	2402ffff 	li	v0,-1
9d014720:	00001021 	move	v0,zero
9d014724:	8fbf003c 	lw	ra,60(sp)
9d014728:	8fbe0038 	lw	s8,56(sp)
9d01472c:	8fb70034 	lw	s7,52(sp)
9d014730:	8fb60030 	lw	s6,48(sp)
9d014734:	8fb5002c 	lw	s5,44(sp)
9d014738:	8fb40028 	lw	s4,40(sp)
9d01473c:	8fb30024 	lw	s3,36(sp)
9d014740:	8fb20020 	lw	s2,32(sp)
9d014744:	8fb1001c 	lw	s1,28(sp)
9d014748:	8fb00018 	lw	s0,24(sp)
9d01474c:	03e00008 	jr	ra
9d014750:	27bd0040 	addiu	sp,sp,64

9d014754 <_fwrite_r>:
9d014754:	27bdffc0 	addiu	sp,sp,-64
9d014758:	afb20030 	sw	s2,48(sp)
9d01475c:	70e69002 	mul	s2,a3,a2
9d014760:	27a20010 	addiu	v0,sp,16
9d014764:	afa20018 	sw	v0,24(sp)
9d014768:	24020001 	li	v0,1
9d01476c:	afb40038 	sw	s4,56(sp)
9d014770:	afb30034 	sw	s3,52(sp)
9d014774:	afb1002c 	sw	s1,44(sp)
9d014778:	afb00028 	sw	s0,40(sp)
9d01477c:	afbf003c 	sw	ra,60(sp)
9d014780:	00809821 	move	s3,a0
9d014784:	00c08021 	move	s0,a2
9d014788:	00e08821 	move	s1,a3
9d01478c:	8fb40050 	lw	s4,80(sp)
9d014790:	afa50010 	sw	a1,16(sp)
9d014794:	afa2001c 	sw	v0,28(sp)
9d014798:	afb20014 	sw	s2,20(sp)
9d01479c:	10800006 	beqz	a0,9d0147b8 <_fwrite_r+0x64>
9d0147a0:	afb20020 	sw	s2,32(sp)
9d0147a4:	8c820038 	lw	v0,56(a0)
9d0147a8:	54400004 	bnezl	v0,9d0147bc <_fwrite_r+0x68>
9d0147ac:	8682000c 	lh	v0,12(s4)
9d0147b0:	0f405356 	jal	9d014d58 <__sinit>
9d0147b4:	00000000 	nop
9d0147b8:	8682000c 	lh	v0,12(s4)
9d0147bc:	30432000 	andi	v1,v0,0x2000
9d0147c0:	14600007 	bnez	v1,9d0147e0 <_fwrite_r+0x8c>
9d0147c4:	02602021 	move	a0,s3
9d0147c8:	8e830060 	lw	v1,96(s4)
9d0147cc:	34422000 	ori	v0,v0,0x2000
9d0147d0:	a682000c 	sh	v0,12(s4)
9d0147d4:	2402dfff 	li	v0,-8193
9d0147d8:	00621024 	and	v0,v1,v0
9d0147dc:	ae820060 	sw	v0,96(s4)
9d0147e0:	02802821 	move	a1,s4
9d0147e4:	0f4050a1 	jal	9d014284 <__sfvwrite_r>
9d0147e8:	27a60018 	addiu	a2,sp,24
9d0147ec:	10400006 	beqz	v0,9d014808 <_fwrite_r+0xb4>
9d0147f0:	8fbf003c 	lw	ra,60(sp)
9d0147f4:	8fb10020 	lw	s1,32(sp)
9d0147f8:	02518823 	subu	s1,s2,s1
9d0147fc:	0230001b 	divu	zero,s1,s0
9d014800:	020001f4 	teq	s0,zero,0x7
9d014804:	00008812 	mflo	s1
9d014808:	02201021 	move	v0,s1
9d01480c:	8fb40038 	lw	s4,56(sp)
9d014810:	8fb30034 	lw	s3,52(sp)
9d014814:	8fb20030 	lw	s2,48(sp)
9d014818:	8fb1002c 	lw	s1,44(sp)
9d01481c:	8fb00028 	lw	s0,40(sp)
9d014820:	03e00008 	jr	ra
9d014824:	27bd0040 	addiu	sp,sp,64

9d014828 <fwrite>:
9d014828:	00804021 	move	t0,a0
9d01482c:	3c04a000 	lui	a0,0xa000
9d014830:	8c840a38 	lw	a0,2616(a0)
9d014834:	27bdffe0 	addiu	sp,sp,-32
9d014838:	00a01821 	move	v1,a1
9d01483c:	00c01021 	move	v0,a2
9d014840:	afa70010 	sw	a3,16(sp)
9d014844:	01002821 	move	a1,t0
9d014848:	00603021 	move	a2,v1
9d01484c:	afbf001c 	sw	ra,28(sp)
9d014850:	0f4051d5 	jal	9d014754 <_fwrite_r>
9d014854:	00403821 	move	a3,v0
9d014858:	8fbf001c 	lw	ra,28(sp)
9d01485c:	03e00008 	jr	ra
9d014860:	27bd0020 	addiu	sp,sp,32

9d014864 <memcmp>:
9d014864:	0b405222 	j	9d014888 <memcmp+0x24>
9d014868:	00000000 	nop
9d01486c:	90a20000 	lbu	v0,0(a1)
9d014870:	10620003 	beq	v1,v0,9d014880 <memcmp+0x1c>
9d014874:	24c6ffff 	addiu	a2,a2,-1
9d014878:	03e00008 	jr	ra
9d01487c:	00621023 	subu	v0,v1,v0
9d014880:	24840001 	addiu	a0,a0,1
9d014884:	24a50001 	addiu	a1,a1,1
9d014888:	54c0fff8 	bnezl	a2,9d01486c <memcmp+0x8>
9d01488c:	90830000 	lbu	v1,0(a0)
9d014890:	03e00008 	jr	ra
9d014894:	00001021 	move	v0,zero

9d014898 <_raise_r>:
9d014898:	27bdffe0 	addiu	sp,sp,-32
9d01489c:	2ca20020 	sltiu	v0,a1,32
9d0148a0:	afb00018 	sw	s0,24(sp)
9d0148a4:	afbf001c 	sw	ra,28(sp)
9d0148a8:	00808021 	move	s0,a0
9d0148ac:	14400005 	bnez	v0,9d0148c4 <_raise_r+0x2c>
9d0148b0:	00a03021 	move	a2,a1
9d0148b4:	24020016 	li	v0,22
9d0148b8:	ac820000 	sw	v0,0(a0)
9d0148bc:	0b40524f 	j	9d01493c <_raise_r+0xa4>
9d0148c0:	2402ffff 	li	v0,-1
9d0148c4:	8c8202dc 	lw	v0,732(a0)
9d0148c8:	10400007 	beqz	v0,9d0148e8 <_raise_r+0x50>
9d0148cc:	02002021 	move	a0,s0
9d0148d0:	00052080 	sll	a0,a1,0x2
9d0148d4:	00442021 	addu	a0,v0,a0
9d0148d8:	8c830000 	lw	v1,0(a0)
9d0148dc:	1460000a 	bnez	v1,9d014908 <_raise_r+0x70>
9d0148e0:	24050001 	li	a1,1
9d0148e4:	02002021 	move	a0,s0
9d0148e8:	0f40526c 	jal	9d0149b0 <_getpid_r>
9d0148ec:	afa60010 	sw	a2,16(sp)
9d0148f0:	8fa60010 	lw	a2,16(sp)
9d0148f4:	02002021 	move	a0,s0
9d0148f8:	0f405257 	jal	9d01495c <_kill_r>
9d0148fc:	00402821 	move	a1,v0
9d014900:	0b405250 	j	9d014940 <_raise_r+0xa8>
9d014904:	8fbf001c 	lw	ra,28(sp)
9d014908:	1065000c 	beq	v1,a1,9d01493c <_raise_r+0xa4>
9d01490c:	00001021 	move	v0,zero
9d014910:	2405ffff 	li	a1,-1
9d014914:	54650005 	bnel	v1,a1,9d01492c <_raise_r+0x94>
9d014918:	ac800000 	sw	zero,0(a0)
9d01491c:	24020016 	li	v0,22
9d014920:	ae020000 	sw	v0,0(s0)
9d014924:	0b40524f 	j	9d01493c <_raise_r+0xa4>
9d014928:	24020001 	li	v0,1
9d01492c:	afa20010 	sw	v0,16(sp)
9d014930:	0060f809 	jalr	v1
9d014934:	00c02021 	move	a0,a2
9d014938:	8fa20010 	lw	v0,16(sp)
9d01493c:	8fbf001c 	lw	ra,28(sp)
9d014940:	8fb00018 	lw	s0,24(sp)
9d014944:	03e00008 	jr	ra
9d014948:	27bd0020 	addiu	sp,sp,32

9d01494c <raise>:
9d01494c:	3c02a000 	lui	v0,0xa000
9d014950:	00802821 	move	a1,a0
9d014954:	0b405226 	j	9d014898 <_raise_r>
9d014958:	8c440a38 	lw	a0,2616(v0)

9d01495c <_kill_r>:
9d01495c:	27bdffe0 	addiu	sp,sp,-32
9d014960:	afb10018 	sw	s1,24(sp)
9d014964:	afb00014 	sw	s0,20(sp)
9d014968:	00808821 	move	s1,a0
9d01496c:	3c10a000 	lui	s0,0xa000
9d014970:	00a02021 	move	a0,a1
9d014974:	00c02821 	move	a1,a2
9d014978:	afbf001c 	sw	ra,28(sp)
9d01497c:	0f4055a5 	jal	9d015694 <kill>
9d014980:	ae000aa0 	sw	zero,2720(s0)
9d014984:	2403ffff 	li	v1,-1
9d014988:	14430005 	bne	v0,v1,9d0149a0 <_kill_r+0x44>
9d01498c:	8fbf001c 	lw	ra,28(sp)
9d014990:	8e030aa0 	lw	v1,2720(s0)
9d014994:	54600001 	bnezl	v1,9d01499c <_kill_r+0x40>
9d014998:	ae230000 	sw	v1,0(s1)
9d01499c:	8fbf001c 	lw	ra,28(sp)
9d0149a0:	8fb10018 	lw	s1,24(sp)
9d0149a4:	8fb00014 	lw	s0,20(sp)
9d0149a8:	03e00008 	jr	ra
9d0149ac:	27bd0020 	addiu	sp,sp,32

9d0149b0 <_getpid_r>:
9d0149b0:	27bdffe8 	addiu	sp,sp,-24
9d0149b4:	afbf0014 	sw	ra,20(sp)
9d0149b8:	0f4055b3 	jal	9d0156cc <getpid>
9d0149bc:	00000000 	nop
9d0149c0:	8fbf0014 	lw	ra,20(sp)
9d0149c4:	03e00008 	jr	ra
9d0149c8:	27bd0018 	addiu	sp,sp,24

9d0149cc <__swsetup_r>:
9d0149cc:	27bdffe0 	addiu	sp,sp,-32
9d0149d0:	3c02a000 	lui	v0,0xa000
9d0149d4:	afb00014 	sw	s0,20(sp)
9d0149d8:	00808021 	move	s0,a0
9d0149dc:	8c440a38 	lw	a0,2616(v0)
9d0149e0:	afb10018 	sw	s1,24(sp)
9d0149e4:	afbf001c 	sw	ra,28(sp)
9d0149e8:	10800006 	beqz	a0,9d014a04 <__swsetup_r+0x38>
9d0149ec:	00a08821 	move	s1,a1
9d0149f0:	8c820038 	lw	v0,56(a0)
9d0149f4:	54400004 	bnezl	v0,9d014a08 <__swsetup_r+0x3c>
9d0149f8:	9623000c 	lhu	v1,12(s1)
9d0149fc:	0f405356 	jal	9d014d58 <__sinit>
9d014a00:	00000000 	nop
9d014a04:	9623000c 	lhu	v1,12(s1)
9d014a08:	30620008 	andi	v0,v1,0x8
9d014a0c:	54400019 	bnezl	v0,9d014a74 <__swsetup_r+0xa8>
9d014a10:	8e220010 	lw	v0,16(s1)
9d014a14:	30640010 	andi	a0,v1,0x10
9d014a18:	10800032 	beqz	a0,9d014ae4 <__swsetup_r+0x118>
9d014a1c:	2402ffff 	li	v0,-1
9d014a20:	30630004 	andi	v1,v1,0x4
9d014a24:	50600010 	beqzl	v1,9d014a68 <__swsetup_r+0x9c>
9d014a28:	9622000c 	lhu	v0,12(s1)
9d014a2c:	8e250030 	lw	a1,48(s1)
9d014a30:	10a00006 	beqz	a1,9d014a4c <__swsetup_r+0x80>
9d014a34:	26220040 	addiu	v0,s1,64
9d014a38:	50a20004 	beql	a1,v0,9d014a4c <__swsetup_r+0x80>
9d014a3c:	ae200030 	sw	zero,48(s1)
9d014a40:	0f402b6e 	jal	9d00adb8 <_free_r>
9d014a44:	02002021 	move	a0,s0
9d014a48:	ae200030 	sw	zero,48(s1)
9d014a4c:	9622000c 	lhu	v0,12(s1)
9d014a50:	ae200004 	sw	zero,4(s1)
9d014a54:	3042ffdb 	andi	v0,v0,0xffdb
9d014a58:	a622000c 	sh	v0,12(s1)
9d014a5c:	8e220010 	lw	v0,16(s1)
9d014a60:	ae220000 	sw	v0,0(s1)
9d014a64:	9622000c 	lhu	v0,12(s1)
9d014a68:	34420008 	ori	v0,v0,0x8
9d014a6c:	a622000c 	sh	v0,12(s1)
9d014a70:	8e220010 	lw	v0,16(s1)
9d014a74:	14400008 	bnez	v0,9d014a98 <__swsetup_r+0xcc>
9d014a78:	9623000c 	lhu	v1,12(s1)
9d014a7c:	24020200 	li	v0,512
9d014a80:	30630280 	andi	v1,v1,0x280
9d014a84:	10620003 	beq	v1,v0,9d014a94 <__swsetup_r+0xc8>
9d014a88:	02002021 	move	a0,s0
9d014a8c:	0f4053e2 	jal	9d014f88 <__smakebuf_r>
9d014a90:	02202821 	move	a1,s1
9d014a94:	9623000c 	lhu	v1,12(s1)
9d014a98:	30620001 	andi	v0,v1,0x1
9d014a9c:	10400006 	beqz	v0,9d014ab8 <__swsetup_r+0xec>
9d014aa0:	30640002 	andi	a0,v1,0x2
9d014aa4:	8e220014 	lw	v0,20(s1)
9d014aa8:	ae200008 	sw	zero,8(s1)
9d014aac:	00021023 	negu	v0,v0
9d014ab0:	0b4052b2 	j	9d014ac8 <__swsetup_r+0xfc>
9d014ab4:	ae220018 	sw	v0,24(s1)
9d014ab8:	14800002 	bnez	a0,9d014ac4 <__swsetup_r+0xf8>
9d014abc:	00001021 	move	v0,zero
9d014ac0:	8e220014 	lw	v0,20(s1)
9d014ac4:	ae220008 	sw	v0,8(s1)
9d014ac8:	8e240010 	lw	a0,16(s1)
9d014acc:	14800005 	bnez	a0,9d014ae4 <__swsetup_r+0x118>
9d014ad0:	00001021 	move	v0,zero
9d014ad4:	30620080 	andi	v0,v1,0x80
9d014ad8:	2404ffff 	li	a0,-1
9d014adc:	0002200a 	movz	a0,zero,v0
9d014ae0:	00801021 	move	v0,a0
9d014ae4:	8fbf001c 	lw	ra,28(sp)
9d014ae8:	8fb10018 	lw	s1,24(sp)
9d014aec:	8fb00014 	lw	s0,20(sp)
9d014af0:	03e00008 	jr	ra
9d014af4:	27bd0020 	addiu	sp,sp,32

9d014af8 <_fflush_r>:
9d014af8:	27bdffd8 	addiu	sp,sp,-40
9d014afc:	afb2001c 	sw	s2,28(sp)
9d014b00:	afb10018 	sw	s1,24(sp)
9d014b04:	afbf0024 	sw	ra,36(sp)
9d014b08:	afb30020 	sw	s3,32(sp)
9d014b0c:	afb00014 	sw	s0,20(sp)
9d014b10:	00809021 	move	s2,a0
9d014b14:	10800006 	beqz	a0,9d014b30 <_fflush_r+0x38>
9d014b18:	00a08821 	move	s1,a1
9d014b1c:	8c820038 	lw	v0,56(a0)
9d014b20:	54400004 	bnezl	v0,9d014b34 <_fflush_r+0x3c>
9d014b24:	8623000c 	lh	v1,12(s1)
9d014b28:	0f405356 	jal	9d014d58 <__sinit>
9d014b2c:	00000000 	nop
9d014b30:	8623000c 	lh	v1,12(s1)
9d014b34:	10600079 	beqz	v1,9d014d1c <_fflush_r+0x224>
9d014b38:	00001021 	move	v0,zero
9d014b3c:	30640008 	andi	a0,v1,0x8
9d014b40:	5480005c 	bnezl	a0,9d014cb4 <_fflush_r+0x1bc>
9d014b44:	8e300010 	lw	s0,16(s1)
9d014b48:	34640800 	ori	a0,v1,0x800
9d014b4c:	8e230004 	lw	v1,4(s1)
9d014b50:	1c600004 	bgtz	v1,9d014b64 <_fflush_r+0x6c>
9d014b54:	a624000c 	sh	a0,12(s1)
9d014b58:	8e23003c 	lw	v1,60(s1)
9d014b5c:	18600070 	blez	v1,9d014d20 <_fflush_r+0x228>
9d014b60:	8fbf0024 	lw	ra,36(sp)
9d014b64:	8e230028 	lw	v1,40(s1)
9d014b68:	1060006c 	beqz	v1,9d014d1c <_fflush_r+0x224>
9d014b6c:	00001021 	move	v0,zero
9d014b70:	30841000 	andi	a0,a0,0x1000
9d014b74:	8e500000 	lw	s0,0(s2)
9d014b78:	10800003 	beqz	a0,9d014b88 <_fflush_r+0x90>
9d014b7c:	ae400000 	sw	zero,0(s2)
9d014b80:	0b4052f4 	j	9d014bd0 <_fflush_r+0xd8>
9d014b84:	8e220050 	lw	v0,80(s1)
9d014b88:	8e25001c 	lw	a1,28(s1)
9d014b8c:	02402021 	move	a0,s2
9d014b90:	00003021 	move	a2,zero
9d014b94:	0060f809 	jalr	v1
9d014b98:	24070001 	li	a3,1
9d014b9c:	2403ffff 	li	v1,-1
9d014ba0:	5443000c 	bnel	v0,v1,9d014bd4 <_fflush_r+0xdc>
9d014ba4:	9623000c 	lhu	v1,12(s1)
9d014ba8:	8e430000 	lw	v1,0(s2)
9d014bac:	50600009 	beqzl	v1,9d014bd4 <_fflush_r+0xdc>
9d014bb0:	9623000c 	lhu	v1,12(s1)
9d014bb4:	2402001d 	li	v0,29
9d014bb8:	10620003 	beq	v1,v0,9d014bc8 <_fflush_r+0xd0>
9d014bbc:	24020016 	li	v0,22
9d014bc0:	5462004e 	bnel	v1,v0,9d014cfc <_fflush_r+0x204>
9d014bc4:	9622000c 	lhu	v0,12(s1)
9d014bc8:	0b405346 	j	9d014d18 <_fflush_r+0x220>
9d014bcc:	ae500000 	sw	s0,0(s2)
9d014bd0:	9623000c 	lhu	v1,12(s1)
9d014bd4:	30630004 	andi	v1,v1,0x4
9d014bd8:	50600009 	beqzl	v1,9d014c00 <_fflush_r+0x108>
9d014bdc:	8e230028 	lw	v1,40(s1)
9d014be0:	8e230004 	lw	v1,4(s1)
9d014be4:	00431023 	subu	v0,v0,v1
9d014be8:	8e230030 	lw	v1,48(s1)
9d014bec:	50600004 	beqzl	v1,9d014c00 <_fflush_r+0x108>
9d014bf0:	8e230028 	lw	v1,40(s1)
9d014bf4:	8e23003c 	lw	v1,60(s1)
9d014bf8:	00431023 	subu	v0,v0,v1
9d014bfc:	8e230028 	lw	v1,40(s1)
9d014c00:	8e25001c 	lw	a1,28(s1)
9d014c04:	02402021 	move	a0,s2
9d014c08:	00403021 	move	a2,v0
9d014c0c:	0060f809 	jalr	v1
9d014c10:	00003821 	move	a3,zero
9d014c14:	2403ffff 	li	v1,-1
9d014c18:	14430009 	bne	v0,v1,9d014c40 <_fflush_r+0x148>
9d014c1c:	9624000c 	lhu	a0,12(s1)
9d014c20:	8e430000 	lw	v1,0(s2)
9d014c24:	50600007 	beqzl	v1,9d014c44 <_fflush_r+0x14c>
9d014c28:	2403f7ff 	li	v1,-2049
9d014c2c:	2405001d 	li	a1,29
9d014c30:	10650003 	beq	v1,a1,9d014c40 <_fflush_r+0x148>
9d014c34:	24050016 	li	a1,22
9d014c38:	5465001c 	bnel	v1,a1,9d014cac <_fflush_r+0x1b4>
9d014c3c:	34840040 	ori	a0,a0,0x40
9d014c40:	2403f7ff 	li	v1,-2049
9d014c44:	00832024 	and	a0,a0,v1
9d014c48:	8e230010 	lw	v1,16(s1)
9d014c4c:	7c042620 	seh	a0,a0
9d014c50:	a624000c 	sh	a0,12(s1)
9d014c54:	30841000 	andi	a0,a0,0x1000
9d014c58:	ae200004 	sw	zero,4(s1)
9d014c5c:	10800008 	beqz	a0,9d014c80 <_fflush_r+0x188>
9d014c60:	ae230000 	sw	v1,0(s1)
9d014c64:	2403ffff 	li	v1,-1
9d014c68:	54430005 	bnel	v0,v1,9d014c80 <_fflush_r+0x188>
9d014c6c:	ae220050 	sw	v0,80(s1)
9d014c70:	8e430000 	lw	v1,0(s2)
9d014c74:	54600003 	bnezl	v1,9d014c84 <_fflush_r+0x18c>
9d014c78:	8e250030 	lw	a1,48(s1)
9d014c7c:	ae220050 	sw	v0,80(s1)
9d014c80:	8e250030 	lw	a1,48(s1)
9d014c84:	ae500000 	sw	s0,0(s2)
9d014c88:	10a00024 	beqz	a1,9d014d1c <_fflush_r+0x224>
9d014c8c:	00001021 	move	v0,zero
9d014c90:	26220040 	addiu	v0,s1,64
9d014c94:	50a20020 	beql	a1,v0,9d014d18 <_fflush_r+0x220>
9d014c98:	ae200030 	sw	zero,48(s1)
9d014c9c:	0f402b6e 	jal	9d00adb8 <_free_r>
9d014ca0:	02402021 	move	a0,s2
9d014ca4:	0b405346 	j	9d014d18 <_fflush_r+0x220>
9d014ca8:	ae200030 	sw	zero,48(s1)
9d014cac:	0b405341 	j	9d014d04 <_fflush_r+0x20c>
9d014cb0:	a624000c 	sh	a0,12(s1)
9d014cb4:	12000019 	beqz	s0,9d014d1c <_fflush_r+0x224>
9d014cb8:	30630003 	andi	v1,v1,0x3
9d014cbc:	8e330000 	lw	s3,0(s1)
9d014cc0:	ae300000 	sw	s0,0(s1)
9d014cc4:	02709823 	subu	s3,s3,s0
9d014cc8:	14600002 	bnez	v1,9d014cd4 <_fflush_r+0x1dc>
9d014ccc:	00001021 	move	v0,zero
9d014cd0:	8e220014 	lw	v0,20(s1)
9d014cd4:	0b405344 	j	9d014d10 <_fflush_r+0x218>
9d014cd8:	ae220008 	sw	v0,8(s1)
9d014cdc:	8e25001c 	lw	a1,28(s1)
9d014ce0:	02402021 	move	a0,s2
9d014ce4:	02003021 	move	a2,s0
9d014ce8:	0040f809 	jalr	v0
9d014cec:	02603821 	move	a3,s3
9d014cf0:	1c400006 	bgtz	v0,9d014d0c <_fflush_r+0x214>
9d014cf4:	02028021 	addu	s0,s0,v0
9d014cf8:	9622000c 	lhu	v0,12(s1)
9d014cfc:	34420040 	ori	v0,v0,0x40
9d014d00:	a622000c 	sh	v0,12(s1)
9d014d04:	0b405347 	j	9d014d1c <_fflush_r+0x224>
9d014d08:	2402ffff 	li	v0,-1
9d014d0c:	02629823 	subu	s3,s3,v0
9d014d10:	5e60fff2 	bgtzl	s3,9d014cdc <_fflush_r+0x1e4>
9d014d14:	8e220024 	lw	v0,36(s1)
9d014d18:	00001021 	move	v0,zero
9d014d1c:	8fbf0024 	lw	ra,36(sp)
9d014d20:	8fb30020 	lw	s3,32(sp)
9d014d24:	8fb2001c 	lw	s2,28(sp)
9d014d28:	8fb10018 	lw	s1,24(sp)
9d014d2c:	8fb00014 	lw	s0,20(sp)
9d014d30:	03e00008 	jr	ra
9d014d34:	27bd0028 	addiu	sp,sp,40

9d014d38 <_cleanup_r>:
9d014d38:	3c059d01 	lui	a1,0x9d01
9d014d3c:	27bdffe8 	addiu	sp,sp,-24
9d014d40:	afbf0014 	sw	ra,20(sp)
9d014d44:	0f4053bb 	jal	9d014eec <_fwalk>
9d014d48:	24a553bc 	addiu	a1,a1,21436
9d014d4c:	8fbf0014 	lw	ra,20(sp)
9d014d50:	03e00008 	jr	ra
9d014d54:	27bd0018 	addiu	sp,sp,24

9d014d58 <__sinit>:
9d014d58:	8c820038 	lw	v0,56(a0)
9d014d5c:	27bdffd0 	addiu	sp,sp,-48
9d014d60:	afb10014 	sw	s1,20(sp)
9d014d64:	afbf002c 	sw	ra,44(sp)
9d014d68:	afb60028 	sw	s6,40(sp)
9d014d6c:	afb50024 	sw	s5,36(sp)
9d014d70:	afb40020 	sw	s4,32(sp)
9d014d74:	afb3001c 	sw	s3,28(sp)
9d014d78:	afb20018 	sw	s2,24(sp)
9d014d7c:	afb00010 	sw	s0,16(sp)
9d014d80:	14400050 	bnez	v0,9d014ec4 <__sinit+0x16c>
9d014d84:	00808821 	move	s1,a0
9d014d88:	3c029d01 	lui	v0,0x9d01
9d014d8c:	24424d38 	addiu	v0,v0,19768
9d014d90:	8c900004 	lw	s0,4(a0)
9d014d94:	ac82003c 	sw	v0,60(a0)
9d014d98:	24020003 	li	v0,3
9d014d9c:	ac8202e4 	sw	v0,740(a0)
9d014da0:	248202ec 	addiu	v0,a0,748
9d014da4:	ac8202e8 	sw	v0,744(a0)
9d014da8:	24160001 	li	s6,1
9d014dac:	24020004 	li	v0,4
9d014db0:	3c159d01 	lui	s5,0x9d01
9d014db4:	3c149d01 	lui	s4,0x9d01
9d014db8:	3c139d01 	lui	s3,0x9d01
9d014dbc:	3c129d01 	lui	s2,0x9d01
9d014dc0:	ac960038 	sw	s6,56(a0)
9d014dc4:	ac8002e0 	sw	zero,736(a0)
9d014dc8:	26b550e4 	addiu	s5,s5,20708
9d014dcc:	26040058 	addiu	a0,s0,88
9d014dd0:	26945130 	addiu	s4,s4,20784
9d014dd4:	267351b0 	addiu	s3,s3,20912
9d014dd8:	26525200 	addiu	s2,s2,20992
9d014ddc:	ae000000 	sw	zero,0(s0)
9d014de0:	ae000004 	sw	zero,4(s0)
9d014de4:	ae000008 	sw	zero,8(s0)
9d014de8:	a602000c 	sh	v0,12(s0)
9d014dec:	ae000060 	sw	zero,96(s0)
9d014df0:	a600000e 	sh	zero,14(s0)
9d014df4:	ae000010 	sw	zero,16(s0)
9d014df8:	ae000014 	sw	zero,20(s0)
9d014dfc:	ae000018 	sw	zero,24(s0)
9d014e00:	00002821 	move	a1,zero
9d014e04:	0f402f84 	jal	9d00be10 <memset>
9d014e08:	24060008 	li	a2,8
9d014e0c:	ae10001c 	sw	s0,28(s0)
9d014e10:	ae150020 	sw	s5,32(s0)
9d014e14:	ae140024 	sw	s4,36(s0)
9d014e18:	ae130028 	sw	s3,40(s0)
9d014e1c:	ae12002c 	sw	s2,44(s0)
9d014e20:	8e300008 	lw	s0,8(s1)
9d014e24:	24020009 	li	v0,9
9d014e28:	00002821 	move	a1,zero
9d014e2c:	26040058 	addiu	a0,s0,88
9d014e30:	ae000000 	sw	zero,0(s0)
9d014e34:	ae000004 	sw	zero,4(s0)
9d014e38:	ae000008 	sw	zero,8(s0)
9d014e3c:	a602000c 	sh	v0,12(s0)
9d014e40:	ae000060 	sw	zero,96(s0)
9d014e44:	a616000e 	sh	s6,14(s0)
9d014e48:	ae000010 	sw	zero,16(s0)
9d014e4c:	ae000014 	sw	zero,20(s0)
9d014e50:	ae000018 	sw	zero,24(s0)
9d014e54:	0f402f84 	jal	9d00be10 <memset>
9d014e58:	24060008 	li	a2,8
9d014e5c:	ae10001c 	sw	s0,28(s0)
9d014e60:	ae150020 	sw	s5,32(s0)
9d014e64:	ae140024 	sw	s4,36(s0)
9d014e68:	ae130028 	sw	s3,40(s0)
9d014e6c:	ae12002c 	sw	s2,44(s0)
9d014e70:	8e30000c 	lw	s0,12(s1)
9d014e74:	24020012 	li	v0,18
9d014e78:	00002821 	move	a1,zero
9d014e7c:	a602000c 	sh	v0,12(s0)
9d014e80:	24020002 	li	v0,2
9d014e84:	ae000000 	sw	zero,0(s0)
9d014e88:	ae000004 	sw	zero,4(s0)
9d014e8c:	ae000008 	sw	zero,8(s0)
9d014e90:	ae000060 	sw	zero,96(s0)
9d014e94:	a602000e 	sh	v0,14(s0)
9d014e98:	ae000010 	sw	zero,16(s0)
9d014e9c:	ae000014 	sw	zero,20(s0)
9d014ea0:	ae000018 	sw	zero,24(s0)
9d014ea4:	26040058 	addiu	a0,s0,88
9d014ea8:	0f402f84 	jal	9d00be10 <memset>
9d014eac:	24060008 	li	a2,8
9d014eb0:	ae10001c 	sw	s0,28(s0)
9d014eb4:	ae150020 	sw	s5,32(s0)
9d014eb8:	ae140024 	sw	s4,36(s0)
9d014ebc:	ae130028 	sw	s3,40(s0)
9d014ec0:	ae12002c 	sw	s2,44(s0)
9d014ec4:	8fbf002c 	lw	ra,44(sp)
9d014ec8:	8fb60028 	lw	s6,40(sp)
9d014ecc:	8fb50024 	lw	s5,36(sp)
9d014ed0:	8fb40020 	lw	s4,32(sp)
9d014ed4:	8fb3001c 	lw	s3,28(sp)
9d014ed8:	8fb20018 	lw	s2,24(sp)
9d014edc:	8fb10014 	lw	s1,20(sp)
9d014ee0:	8fb00010 	lw	s0,16(sp)
9d014ee4:	03e00008 	jr	ra
9d014ee8:	27bd0030 	addiu	sp,sp,48

9d014eec <_fwalk>:
9d014eec:	27bdffd0 	addiu	sp,sp,-48
9d014ef0:	afb40028 	sw	s4,40(sp)
9d014ef4:	afb20020 	sw	s2,32(sp)
9d014ef8:	afb00018 	sw	s0,24(sp)
9d014efc:	afbf002c 	sw	ra,44(sp)
9d014f00:	afb30024 	sw	s3,36(sp)
9d014f04:	afb1001c 	sw	s1,28(sp)
9d014f08:	249002e0 	addiu	s0,a0,736
9d014f0c:	00009021 	move	s2,zero
9d014f10:	0b4053d7 	j	9d014f5c <_fwalk+0x70>
9d014f14:	2414ffff 	li	s4,-1
9d014f18:	0b4053d3 	j	9d014f4c <_fwalk+0x60>
9d014f1c:	8e130004 	lw	s3,4(s0)
9d014f20:	5040000a 	beqzl	v0,9d014f4c <_fwalk+0x60>
9d014f24:	26310064 	addiu	s1,s1,100
9d014f28:	8622000e 	lh	v0,14(s1)
9d014f2c:	50540007 	beql	v0,s4,9d014f4c <_fwalk+0x60>
9d014f30:	26310064 	addiu	s1,s1,100
9d014f34:	afa50010 	sw	a1,16(sp)
9d014f38:	00a0f809 	jalr	a1
9d014f3c:	02202021 	move	a0,s1
9d014f40:	8fa50010 	lw	a1,16(sp)
9d014f44:	02429025 	or	s2,s2,v0
9d014f48:	26310064 	addiu	s1,s1,100
9d014f4c:	2673ffff 	addiu	s3,s3,-1
9d014f50:	0663fff3 	bgezl	s3,9d014f20 <_fwalk+0x34>
9d014f54:	8622000c 	lh	v0,12(s1)
9d014f58:	8e100000 	lw	s0,0(s0)
9d014f5c:	5600ffee 	bnezl	s0,9d014f18 <_fwalk+0x2c>
9d014f60:	8e110008 	lw	s1,8(s0)
9d014f64:	8fbf002c 	lw	ra,44(sp)
9d014f68:	02401021 	move	v0,s2
9d014f6c:	8fb40028 	lw	s4,40(sp)
9d014f70:	8fb30024 	lw	s3,36(sp)
9d014f74:	8fb20020 	lw	s2,32(sp)
9d014f78:	8fb1001c 	lw	s1,28(sp)
9d014f7c:	8fb00018 	lw	s0,24(sp)
9d014f80:	03e00008 	jr	ra
9d014f84:	27bd0030 	addiu	sp,sp,48

9d014f88 <__smakebuf_r>:
9d014f88:	94a2000c 	lhu	v0,12(a1)
9d014f8c:	27bdff98 	addiu	sp,sp,-104
9d014f90:	afb10058 	sw	s1,88(sp)
9d014f94:	30420002 	andi	v0,v0,0x2
9d014f98:	afb00054 	sw	s0,84(sp)
9d014f9c:	afbf0064 	sw	ra,100(sp)
9d014fa0:	afb30060 	sw	s3,96(sp)
9d014fa4:	afb2005c 	sw	s2,92(sp)
9d014fa8:	00808821 	move	s1,a0
9d014fac:	1440002f 	bnez	v0,9d01506c <__smakebuf_r+0xe4>
9d014fb0:	00a08021 	move	s0,a1
9d014fb4:	84a5000e 	lh	a1,14(a1)
9d014fb8:	04a20006 	bltzl	a1,9d014fd4 <__smakebuf_r+0x4c>
9d014fbc:	8602000c 	lh	v0,12(s0)
9d014fc0:	0f4054f3 	jal	9d0153cc <_fstat_r>
9d014fc4:	27a60010 	addiu	a2,sp,16
9d014fc8:	0441000a 	bgez	v0,9d014ff4 <__smakebuf_r+0x6c>
9d014fcc:	8fa30014 	lw	v1,20(sp)
9d014fd0:	8602000c 	lh	v0,12(s0)
9d014fd4:	24120040 	li	s2,64
9d014fd8:	24030020 	li	v1,32
9d014fdc:	30440080 	andi	a0,v0,0x80
9d014fe0:	34420800 	ori	v0,v0,0x800
9d014fe4:	0064900a 	movz	s2,v1,a0
9d014fe8:	a602000c 	sh	v0,12(s0)
9d014fec:	0b405410 	j	9d015040 <__smakebuf_r+0xb8>
9d014ff0:	00009821 	move	s3,zero
9d014ff4:	34048000 	li	a0,0x8000
9d014ff8:	9602000c 	lhu	v0,12(s0)
9d014ffc:	3063f000 	andi	v1,v1,0xf000
9d015000:	38732000 	xori	s3,v1,0x2000
9d015004:	1464000b 	bne	v1,a0,9d015034 <__smakebuf_r+0xac>
9d015008:	2e730001 	sltiu	s3,s3,1
9d01500c:	8e040028 	lw	a0,40(s0)
9d015010:	3c039d01 	lui	v1,0x9d01
9d015014:	246351b0 	addiu	v1,v1,20912
9d015018:	54830007 	bnel	a0,v1,9d015038 <__smakebuf_r+0xb0>
9d01501c:	34420800 	ori	v0,v0,0x800
9d015020:	34420400 	ori	v0,v0,0x400
9d015024:	a602000c 	sh	v0,12(s0)
9d015028:	24020400 	li	v0,1024
9d01502c:	0b40540f 	j	9d01503c <__smakebuf_r+0xb4>
9d015030:	ae02004c 	sw	v0,76(s0)
9d015034:	34420800 	ori	v0,v0,0x800
9d015038:	a602000c 	sh	v0,12(s0)
9d01503c:	24120020 	li	s2,32
9d015040:	02202021 	move	a0,s1
9d015044:	0f401c4a 	jal	9d007128 <_malloc_r>
9d015048:	02402821 	move	a1,s2
9d01504c:	1440000d 	bnez	v0,9d015084 <__smakebuf_r+0xfc>
9d015050:	3c039d01 	lui	v1,0x9d01
9d015054:	8602000c 	lh	v0,12(s0)
9d015058:	30430200 	andi	v1,v0,0x200
9d01505c:	1460001b 	bnez	v1,9d0150cc <__smakebuf_r+0x144>
9d015060:	8fbf0064 	lw	ra,100(sp)
9d015064:	34420002 	ori	v0,v0,0x2
9d015068:	a602000c 	sh	v0,12(s0)
9d01506c:	26020043 	addiu	v0,s0,67
9d015070:	ae020000 	sw	v0,0(s0)
9d015074:	ae020010 	sw	v0,16(s0)
9d015078:	24020001 	li	v0,1
9d01507c:	0b405432 	j	9d0150c8 <__smakebuf_r+0x140>
9d015080:	ae020014 	sw	v0,20(s0)
9d015084:	24634d38 	addiu	v1,v1,19768
9d015088:	ae23003c 	sw	v1,60(s1)
9d01508c:	9603000c 	lhu	v1,12(s0)
9d015090:	ae020000 	sw	v0,0(s0)
9d015094:	ae020010 	sw	v0,16(s0)
9d015098:	34630080 	ori	v1,v1,0x80
9d01509c:	a603000c 	sh	v1,12(s0)
9d0150a0:	12600009 	beqz	s3,9d0150c8 <__smakebuf_r+0x140>
9d0150a4:	ae120014 	sw	s2,20(s0)
9d0150a8:	8605000e 	lh	a1,14(s0)
9d0150ac:	0f405508 	jal	9d015420 <_isatty_r>
9d0150b0:	02202021 	move	a0,s1
9d0150b4:	10400005 	beqz	v0,9d0150cc <__smakebuf_r+0x144>
9d0150b8:	8fbf0064 	lw	ra,100(sp)
9d0150bc:	9602000c 	lhu	v0,12(s0)
9d0150c0:	34420001 	ori	v0,v0,0x1
9d0150c4:	a602000c 	sh	v0,12(s0)
9d0150c8:	8fbf0064 	lw	ra,100(sp)
9d0150cc:	8fb30060 	lw	s3,96(sp)
9d0150d0:	8fb2005c 	lw	s2,92(sp)
9d0150d4:	8fb10058 	lw	s1,88(sp)
9d0150d8:	8fb00054 	lw	s0,84(sp)
9d0150dc:	03e00008 	jr	ra
9d0150e0:	27bd0068 	addiu	sp,sp,104

9d0150e4 <__sread>:
9d0150e4:	27bdffe8 	addiu	sp,sp,-24
9d0150e8:	afb00010 	sw	s0,16(sp)
9d0150ec:	00a08021 	move	s0,a1
9d0150f0:	84a5000e 	lh	a1,14(a1)
9d0150f4:	afbf0014 	sw	ra,20(sp)
9d0150f8:	0f405532 	jal	9d0154c8 <_read_r>
9d0150fc:	00000000 	nop
9d015100:	04420005 	bltzl	v0,9d015118 <__sread+0x34>
9d015104:	9603000c 	lhu	v1,12(s0)
9d015108:	8e030050 	lw	v1,80(s0)
9d01510c:	00621821 	addu	v1,v1,v0
9d015110:	0b405448 	j	9d015120 <__sread+0x3c>
9d015114:	ae030050 	sw	v1,80(s0)
9d015118:	3063efff 	andi	v1,v1,0xefff
9d01511c:	a603000c 	sh	v1,12(s0)
9d015120:	8fbf0014 	lw	ra,20(sp)
9d015124:	8fb00010 	lw	s0,16(sp)
9d015128:	03e00008 	jr	ra
9d01512c:	27bd0018 	addiu	sp,sp,24

9d015130 <__swrite>:
9d015130:	94a2000c 	lhu	v0,12(a1)
9d015134:	27bdffd8 	addiu	sp,sp,-40
9d015138:	afb30020 	sw	s3,32(sp)
9d01513c:	30420100 	andi	v0,v0,0x100
9d015140:	afb2001c 	sw	s2,28(sp)
9d015144:	afb10018 	sw	s1,24(sp)
9d015148:	afb00014 	sw	s0,20(sp)
9d01514c:	afbf0024 	sw	ra,36(sp)
9d015150:	00809821 	move	s3,a0
9d015154:	00a08021 	move	s0,a1
9d015158:	00c09021 	move	s2,a2
9d01515c:	10400005 	beqz	v0,9d015174 <__swrite+0x44>
9d015160:	00e08821 	move	s1,a3
9d015164:	84a5000e 	lh	a1,14(a1)
9d015168:	00003021 	move	a2,zero
9d01516c:	0f40551c 	jal	9d015470 <_lseek_r>
9d015170:	24070002 	li	a3,2
9d015174:	9602000c 	lhu	v0,12(s0)
9d015178:	8605000e 	lh	a1,14(s0)
9d01517c:	02602021 	move	a0,s3
9d015180:	3042efff 	andi	v0,v0,0xefff
9d015184:	a602000c 	sh	v0,12(s0)
9d015188:	02403021 	move	a2,s2
9d01518c:	0f405488 	jal	9d015220 <_write_r>
9d015190:	02203821 	move	a3,s1
9d015194:	8fbf0024 	lw	ra,36(sp)
9d015198:	8fb30020 	lw	s3,32(sp)
9d01519c:	8fb2001c 	lw	s2,28(sp)
9d0151a0:	8fb10018 	lw	s1,24(sp)
9d0151a4:	8fb00014 	lw	s0,20(sp)
9d0151a8:	03e00008 	jr	ra
9d0151ac:	27bd0028 	addiu	sp,sp,40

9d0151b0 <__sseek>:
9d0151b0:	27bdffe8 	addiu	sp,sp,-24
9d0151b4:	afb00010 	sw	s0,16(sp)
9d0151b8:	00a08021 	move	s0,a1
9d0151bc:	84a5000e 	lh	a1,14(a1)
9d0151c0:	afbf0014 	sw	ra,20(sp)
9d0151c4:	0f40551c 	jal	9d015470 <_lseek_r>
9d0151c8:	00000000 	nop
9d0151cc:	2404ffff 	li	a0,-1
9d0151d0:	14440004 	bne	v0,a0,9d0151e4 <__sseek+0x34>
9d0151d4:	9603000c 	lhu	v1,12(s0)
9d0151d8:	3063efff 	andi	v1,v1,0xefff
9d0151dc:	0b40547c 	j	9d0151f0 <__sseek+0x40>
9d0151e0:	a603000c 	sh	v1,12(s0)
9d0151e4:	34631000 	ori	v1,v1,0x1000
9d0151e8:	a603000c 	sh	v1,12(s0)
9d0151ec:	ae020050 	sw	v0,80(s0)
9d0151f0:	8fbf0014 	lw	ra,20(sp)
9d0151f4:	8fb00010 	lw	s0,16(sp)
9d0151f8:	03e00008 	jr	ra
9d0151fc:	27bd0018 	addiu	sp,sp,24

9d015200 <__sclose>:
9d015200:	84a5000e 	lh	a1,14(a1)
9d015204:	27bdffe8 	addiu	sp,sp,-24
9d015208:	afbf0014 	sw	ra,20(sp)
9d01520c:	0f40549e 	jal	9d015278 <_close_r>
9d015210:	00000000 	nop
9d015214:	8fbf0014 	lw	ra,20(sp)
9d015218:	03e00008 	jr	ra
9d01521c:	27bd0018 	addiu	sp,sp,24

9d015220 <_write_r>:
9d015220:	27bdffe0 	addiu	sp,sp,-32
9d015224:	afb10018 	sw	s1,24(sp)
9d015228:	afb00014 	sw	s0,20(sp)
9d01522c:	00808821 	move	s1,a0
9d015230:	3c10a000 	lui	s0,0xa000
9d015234:	00a02021 	move	a0,a1
9d015238:	00c02821 	move	a1,a2
9d01523c:	00e03021 	move	a2,a3
9d015240:	afbf001c 	sw	ra,28(sp)
9d015244:	0f404dee 	jal	9d0137b8 <write>
9d015248:	ae000aa0 	sw	zero,2720(s0)
9d01524c:	2403ffff 	li	v1,-1
9d015250:	14430005 	bne	v0,v1,9d015268 <_write_r+0x48>
9d015254:	8fbf001c 	lw	ra,28(sp)
9d015258:	8e030aa0 	lw	v1,2720(s0)
9d01525c:	54600001 	bnezl	v1,9d015264 <_write_r+0x44>
9d015260:	ae230000 	sw	v1,0(s1)
9d015264:	8fbf001c 	lw	ra,28(sp)
9d015268:	8fb10018 	lw	s1,24(sp)
9d01526c:	8fb00014 	lw	s0,20(sp)
9d015270:	03e00008 	jr	ra
9d015274:	27bd0020 	addiu	sp,sp,32

9d015278 <_close_r>:
9d015278:	27bdffe0 	addiu	sp,sp,-32
9d01527c:	afb10018 	sw	s1,24(sp)
9d015280:	afb00014 	sw	s0,20(sp)
9d015284:	00808821 	move	s1,a0
9d015288:	3c10a000 	lui	s0,0xa000
9d01528c:	00a02021 	move	a0,a1
9d015290:	afbf001c 	sw	ra,28(sp)
9d015294:	0f40559e 	jal	9d015678 <close>
9d015298:	ae000aa0 	sw	zero,2720(s0)
9d01529c:	2403ffff 	li	v1,-1
9d0152a0:	14430005 	bne	v0,v1,9d0152b8 <_close_r+0x40>
9d0152a4:	8fbf001c 	lw	ra,28(sp)
9d0152a8:	8e030aa0 	lw	v1,2720(s0)
9d0152ac:	54600001 	bnezl	v1,9d0152b4 <_close_r+0x3c>
9d0152b0:	ae230000 	sw	v1,0(s1)
9d0152b4:	8fbf001c 	lw	ra,28(sp)
9d0152b8:	8fb10018 	lw	s1,24(sp)
9d0152bc:	8fb00014 	lw	s0,20(sp)
9d0152c0:	03e00008 	jr	ra
9d0152c4:	27bd0020 	addiu	sp,sp,32

9d0152c8 <_fclose_r>:
9d0152c8:	27bdffe0 	addiu	sp,sp,-32
9d0152cc:	afb20018 	sw	s2,24(sp)
9d0152d0:	afb10014 	sw	s1,20(sp)
9d0152d4:	afb00010 	sw	s0,16(sp)
9d0152d8:	afbf001c 	sw	ra,28(sp)
9d0152dc:	00808021 	move	s0,a0
9d0152e0:	00a09021 	move	s2,a1
9d0152e4:	10a0002e 	beqz	a1,9d0153a0 <_fclose_r+0xd8>
9d0152e8:	00008821 	move	s1,zero
9d0152ec:	50800007 	beqzl	a0,9d01530c <_fclose_r+0x44>
9d0152f0:	8642000c 	lh	v0,12(s2)
9d0152f4:	8c820038 	lw	v0,56(a0)
9d0152f8:	54400004 	bnezl	v0,9d01530c <_fclose_r+0x44>
9d0152fc:	8642000c 	lh	v0,12(s2)
9d015300:	0f405356 	jal	9d014d58 <__sinit>
9d015304:	00000000 	nop
9d015308:	8642000c 	lh	v0,12(s2)
9d01530c:	10400024 	beqz	v0,9d0153a0 <_fclose_r+0xd8>
9d015310:	00008821 	move	s1,zero
9d015314:	02002021 	move	a0,s0
9d015318:	0f4052be 	jal	9d014af8 <_fflush_r>
9d01531c:	02402821 	move	a1,s2
9d015320:	00408821 	move	s1,v0
9d015324:	8e42002c 	lw	v0,44(s2)
9d015328:	50400008 	beqzl	v0,9d01534c <_fclose_r+0x84>
9d01532c:	9642000c 	lhu	v0,12(s2)
9d015330:	8e45001c 	lw	a1,28(s2)
9d015334:	0040f809 	jalr	v0
9d015338:	02002021 	move	a0,s0
9d01533c:	28420000 	slti	v0,v0,0
9d015340:	2403ffff 	li	v1,-1
9d015344:	0062880b 	movn	s1,v1,v0
9d015348:	9642000c 	lhu	v0,12(s2)
9d01534c:	30420080 	andi	v0,v0,0x80
9d015350:	50400005 	beqzl	v0,9d015368 <_fclose_r+0xa0>
9d015354:	8e450030 	lw	a1,48(s2)
9d015358:	8e450010 	lw	a1,16(s2)
9d01535c:	0f402b6e 	jal	9d00adb8 <_free_r>
9d015360:	02002021 	move	a0,s0
9d015364:	8e450030 	lw	a1,48(s2)
9d015368:	10a00006 	beqz	a1,9d015384 <_fclose_r+0xbc>
9d01536c:	26420040 	addiu	v0,s2,64
9d015370:	50a20004 	beql	a1,v0,9d015384 <_fclose_r+0xbc>
9d015374:	ae400030 	sw	zero,48(s2)
9d015378:	0f402b6e 	jal	9d00adb8 <_free_r>
9d01537c:	02002021 	move	a0,s0
9d015380:	ae400030 	sw	zero,48(s2)
9d015384:	8e450044 	lw	a1,68(s2)
9d015388:	50a00005 	beqzl	a1,9d0153a0 <_fclose_r+0xd8>
9d01538c:	a640000c 	sh	zero,12(s2)
9d015390:	0f402b6e 	jal	9d00adb8 <_free_r>
9d015394:	02002021 	move	a0,s0
9d015398:	ae400044 	sw	zero,68(s2)
9d01539c:	a640000c 	sh	zero,12(s2)
9d0153a0:	8fbf001c 	lw	ra,28(sp)
9d0153a4:	02201021 	move	v0,s1
9d0153a8:	8fb20018 	lw	s2,24(sp)
9d0153ac:	8fb10014 	lw	s1,20(sp)
9d0153b0:	8fb00010 	lw	s0,16(sp)
9d0153b4:	03e00008 	jr	ra
9d0153b8:	27bd0020 	addiu	sp,sp,32

9d0153bc <fclose>:
9d0153bc:	3c02a000 	lui	v0,0xa000
9d0153c0:	00802821 	move	a1,a0
9d0153c4:	0b4054b2 	j	9d0152c8 <_fclose_r>
9d0153c8:	8c440a38 	lw	a0,2616(v0)

9d0153cc <_fstat_r>:
9d0153cc:	27bdffe0 	addiu	sp,sp,-32
9d0153d0:	afb10018 	sw	s1,24(sp)
9d0153d4:	afb00014 	sw	s0,20(sp)
9d0153d8:	00808821 	move	s1,a0
9d0153dc:	3c10a000 	lui	s0,0xa000
9d0153e0:	00a02021 	move	a0,a1
9d0153e4:	00c02821 	move	a1,a2
9d0153e8:	afbf001c 	sw	ra,28(sp)
9d0153ec:	0f4055a0 	jal	9d015680 <fstat>
9d0153f0:	ae000aa0 	sw	zero,2720(s0)
9d0153f4:	2403ffff 	li	v1,-1
9d0153f8:	14430005 	bne	v0,v1,9d015410 <_fstat_r+0x44>
9d0153fc:	8fbf001c 	lw	ra,28(sp)
9d015400:	8e030aa0 	lw	v1,2720(s0)
9d015404:	54600001 	bnezl	v1,9d01540c <_fstat_r+0x40>
9d015408:	ae230000 	sw	v1,0(s1)
9d01540c:	8fbf001c 	lw	ra,28(sp)
9d015410:	8fb10018 	lw	s1,24(sp)
9d015414:	8fb00014 	lw	s0,20(sp)
9d015418:	03e00008 	jr	ra
9d01541c:	27bd0020 	addiu	sp,sp,32

9d015420 <_isatty_r>:
9d015420:	27bdffe0 	addiu	sp,sp,-32
9d015424:	afb10018 	sw	s1,24(sp)
9d015428:	afb00014 	sw	s0,20(sp)
9d01542c:	00808821 	move	s1,a0
9d015430:	3c10a000 	lui	s0,0xa000
9d015434:	00a02021 	move	a0,a1
9d015438:	afbf001c 	sw	ra,28(sp)
9d01543c:	0f40554a 	jal	9d015528 <isatty>
9d015440:	ae000aa0 	sw	zero,2720(s0)
9d015444:	2403ffff 	li	v1,-1
9d015448:	14430005 	bne	v0,v1,9d015460 <_isatty_r+0x40>
9d01544c:	8fbf001c 	lw	ra,28(sp)
9d015450:	8e030aa0 	lw	v1,2720(s0)
9d015454:	54600001 	bnezl	v1,9d01545c <_isatty_r+0x3c>
9d015458:	ae230000 	sw	v1,0(s1)
9d01545c:	8fbf001c 	lw	ra,28(sp)
9d015460:	8fb10018 	lw	s1,24(sp)
9d015464:	8fb00014 	lw	s0,20(sp)
9d015468:	03e00008 	jr	ra
9d01546c:	27bd0020 	addiu	sp,sp,32

9d015470 <_lseek_r>:
9d015470:	27bdffe0 	addiu	sp,sp,-32
9d015474:	afb10018 	sw	s1,24(sp)
9d015478:	afb00014 	sw	s0,20(sp)
9d01547c:	00808821 	move	s1,a0
9d015480:	3c10a000 	lui	s0,0xa000
9d015484:	00a02021 	move	a0,a1
9d015488:	00c02821 	move	a1,a2
9d01548c:	00e03021 	move	a2,a3
9d015490:	afbf001c 	sw	ra,28(sp)
9d015494:	0f40559c 	jal	9d015670 <lseek>
9d015498:	ae000aa0 	sw	zero,2720(s0)
9d01549c:	2403ffff 	li	v1,-1
9d0154a0:	14430005 	bne	v0,v1,9d0154b8 <_lseek_r+0x48>
9d0154a4:	8fbf001c 	lw	ra,28(sp)
9d0154a8:	8e030aa0 	lw	v1,2720(s0)
9d0154ac:	54600001 	bnezl	v1,9d0154b4 <_lseek_r+0x44>
9d0154b0:	ae230000 	sw	v1,0(s1)
9d0154b4:	8fbf001c 	lw	ra,28(sp)
9d0154b8:	8fb10018 	lw	s1,24(sp)
9d0154bc:	8fb00014 	lw	s0,20(sp)
9d0154c0:	03e00008 	jr	ra
9d0154c4:	27bd0020 	addiu	sp,sp,32

9d0154c8 <_read_r>:
9d0154c8:	27bdffe0 	addiu	sp,sp,-32
9d0154cc:	afb10018 	sw	s1,24(sp)
9d0154d0:	afb00014 	sw	s0,20(sp)
9d0154d4:	00808821 	move	s1,a0
9d0154d8:	3c10a000 	lui	s0,0xa000
9d0154dc:	00a02021 	move	a0,a1
9d0154e0:	00c02821 	move	a1,a2
9d0154e4:	00e03021 	move	a2,a3
9d0154e8:	afbf001c 	sw	ra,28(sp)
9d0154ec:	0f40554c 	jal	9d015530 <read>
9d0154f0:	ae000aa0 	sw	zero,2720(s0)
9d0154f4:	2403ffff 	li	v1,-1
9d0154f8:	14430005 	bne	v0,v1,9d015510 <_read_r+0x48>
9d0154fc:	8fbf001c 	lw	ra,28(sp)
9d015500:	8e030aa0 	lw	v1,2720(s0)
9d015504:	54600001 	bnezl	v1,9d01550c <_read_r+0x44>
9d015508:	ae230000 	sw	v1,0(s1)
9d01550c:	8fbf001c 	lw	ra,28(sp)
9d015510:	8fb10018 	lw	s1,24(sp)
9d015514:	8fb00014 	lw	s0,20(sp)
9d015518:	03e00008 	jr	ra
9d01551c:	27bd0020 	addiu	sp,sp,32

9d015520 <_exit>:
9d015520:	0b405548 	j	9d015520 <_exit>
9d015524:	00000000 	nop

9d015528 <isatty>:
9d015528:	03e00008 	jr	ra
9d01552c:	00001021 	move	v0,zero

9d015530 <read>:
9d015530:	27bdffe0 	addiu	sp,sp,-32
9d015534:	afb10014 	sw	s1,20(sp)
9d015538:	afb00010 	sw	s0,16(sp)
9d01553c:	afbf001c 	sw	ra,28(sp)
9d015540:	afb20018 	sw	s2,24(sp)
9d015544:	00a08821 	move	s1,a1
9d015548:	10a0000f 	beqz	a1,9d015588 <read+0x58>
9d01554c:	00008021 	move	s0,zero
9d015550:	50c0000e 	beqzl	a2,9d01558c <read+0x5c>
9d015554:	8fbf001c 	lw	ra,28(sp)
9d015558:	1480000b 	bnez	a0,9d015588 <read+0x58>
9d01555c:	00c08021 	move	s0,a2
9d015560:	3c020000 	lui	v0,0x0
9d015564:	24420000 	addiu	v0,v0,0
9d015568:	1040000e 	beqz	v0,9d0155a4 <read+0x74>
9d01556c:	00c09021 	move	s2,a2
9d015570:	0c000000 	jal	90000000 <_imageExecutionJumpToFirstInFlash+0x8e000000>
9d015574:	24040001 	li	a0,1
9d015578:	2652ffff 	addiu	s2,s2,-1
9d01557c:	a2220000 	sb	v0,0(s1)
9d015580:	1640fffb 	bnez	s2,9d015570 <read+0x40>
9d015584:	26310001 	addiu	s1,s1,1
9d015588:	8fbf001c 	lw	ra,28(sp)
9d01558c:	02001021 	move	v0,s0
9d015590:	8fb20018 	lw	s2,24(sp)
9d015594:	8fb10014 	lw	s1,20(sp)
9d015598:	8fb00010 	lw	s0,16(sp)
9d01559c:	03e00008 	jr	ra
9d0155a0:	27bd0020 	addiu	sp,sp,32
9d0155a4:	3c02a000 	lui	v0,0xa000
9d0155a8:	8c430a4c 	lw	v1,2636(v0)
9d0155ac:	24020002 	li	v0,2
9d0155b0:	10620024 	beq	v1,v0,9d015644 <read+0x114>
9d0155b4:	3c02bf80 	lui	v0,0xbf80
9d0155b8:	3c02bf80 	lui	v0,0xbf80
9d0155bc:	8c426000 	lw	v0,24576(v0)
9d0155c0:	3c05bf80 	lui	a1,0xbf80
9d0155c4:	3c04bf80 	lui	a0,0xbf80
9d0155c8:	24a56030 	addiu	a1,a1,24624
9d0155cc:	24846010 	addiu	a0,a0,24592
9d0155d0:	30428000 	andi	v0,v0,0x8000
9d0155d4:	14400005 	bnez	v0,9d0155ec <read+0xbc>
9d0155d8:	00c08021 	move	s0,a2
9d0155dc:	34038000 	li	v1,0x8000
9d0155e0:	3c02bf80 	lui	v0,0xbf80
9d0155e4:	ac436008 	sw	v1,24584(v0)
9d0155e8:	00c08021 	move	s0,a2
9d0155ec:	8c830000 	lw	v1,0(a0)
9d0155f0:	30630001 	andi	v1,v1,0x1
9d0155f4:	10600005 	beqz	v1,9d01560c <read+0xdc>
9d0155f8:	240200a0 	li	v0,160
9d0155fc:	0b405587 	j	9d01561c <read+0xec>
9d015600:	00000000 	nop
9d015604:	10400005 	beqz	v0,9d01561c <read+0xec>
9d015608:	00000000 	nop
9d01560c:	8c830000 	lw	v1,0(a0)
9d015610:	30630001 	andi	v1,v1,0x1
9d015614:	1060fffb 	beqz	v1,9d015604 <read+0xd4>
9d015618:	2442ffff 	addiu	v0,v0,-1
9d01561c:	8c820000 	lw	v0,0(a0)
9d015620:	30420001 	andi	v0,v0,0x1
9d015624:	5440ffd8 	bnezl	v0,9d015588 <read+0x58>
9d015628:	00d08023 	subu	s0,a2,s0
9d01562c:	8ca20000 	lw	v0,0(a1)
9d015630:	2610ffff 	addiu	s0,s0,-1
9d015634:	1200000c 	beqz	s0,9d015668 <read+0x138>
9d015638:	a2220000 	sb	v0,0(s1)
9d01563c:	0b40557b 	j	9d0155ec <read+0xbc>
9d015640:	26310001 	addiu	s1,s1,1
9d015644:	24426240 	addiu	v0,v0,25152
9d015648:	1040ffdb 	beqz	v0,9d0155b8 <read+0x88>
9d01564c:	3c02bf80 	lui	v0,0xbf80
9d015650:	3c05bf80 	lui	a1,0xbf80
9d015654:	3c04bf80 	lui	a0,0xbf80
9d015658:	8c426200 	lw	v0,25088(v0)
9d01565c:	24a56230 	addiu	a1,a1,25136
9d015660:	0b405574 	j	9d0155d0 <read+0xa0>
9d015664:	24846210 	addiu	a0,a0,25104
9d015668:	0b405562 	j	9d015588 <read+0x58>
9d01566c:	00d08023 	subu	s0,a2,s0

9d015670 <lseek>:
9d015670:	03e00008 	jr	ra
9d015674:	00001021 	move	v0,zero

9d015678 <close>:
9d015678:	03e00008 	jr	ra
9d01567c:	00001021 	move	v0,zero

9d015680 <fstat>:
9d015680:	24030058 	li	v1,88
9d015684:	3c02a000 	lui	v0,0xa000
9d015688:	ac430aa0 	sw	v1,2720(v0)
9d01568c:	03e00008 	jr	ra
9d015690:	2402ffff 	li	v0,-1

9d015694 <kill>:
9d015694:	27bdffe8 	addiu	sp,sp,-24
9d015698:	24020001 	li	v0,1
9d01569c:	10820005 	beq	a0,v0,9d0156b4 <kill+0x20>
9d0156a0:	afbf0014 	sw	ra,20(sp)
9d0156a4:	8fbf0014 	lw	ra,20(sp)
9d0156a8:	00001021 	move	v0,zero
9d0156ac:	03e00008 	jr	ra
9d0156b0:	27bd0018 	addiu	sp,sp,24
9d0156b4:	0f405548 	jal	9d015520 <_exit>
9d0156b8:	00a02021 	move	a0,a1
9d0156bc:	8fbf0014 	lw	ra,20(sp)
9d0156c0:	00001021 	move	v0,zero
9d0156c4:	03e00008 	jr	ra
9d0156c8:	27bd0018 	addiu	sp,sp,24

9d0156cc <getpid>:
9d0156cc:	03e00008 	jr	ra
9d0156d0:	24020001 	li	v0,1

9d0156d4 <__do_global_ctors_aux>:
9d0156d4:	3c029d01 	lui	v0,0x9d01
9d0156d8:	8c42576c 	lw	v0,22380(v0)
9d0156dc:	27bdffe0 	addiu	sp,sp,-32
9d0156e0:	2403ffff 	li	v1,-1
9d0156e4:	afbf001c 	sw	ra,28(sp)
9d0156e8:	afb10018 	sw	s1,24(sp)
9d0156ec:	10430009 	beq	v0,v1,9d015714 <__do_global_ctors_aux+0x40>
9d0156f0:	afb00014 	sw	s0,20(sp)
9d0156f4:	3c119d01 	lui	s1,0x9d01
9d0156f8:	2631576c 	addiu	s1,s1,22380
9d0156fc:	2410ffff 	li	s0,-1
9d015700:	0040f809 	jalr	v0
9d015704:	2631fffc 	addiu	s1,s1,-4
9d015708:	8e220000 	lw	v0,0(s1)
9d01570c:	1450fffc 	bne	v0,s0,9d015700 <__do_global_ctors_aux+0x2c>
9d015710:	00000000 	nop
9d015714:	8fbf001c 	lw	ra,28(sp)
9d015718:	8fb10018 	lw	s1,24(sp)
9d01571c:	8fb00014 	lw	s0,20(sp)
9d015720:	03e00008 	jr	ra
9d015724:	27bd0020 	addiu	sp,sp,32

Disassembly of section .init:

9d015728 <_init>:
9d015728:	27bdffe0 	addiu	sp,sp,-32
9d01572c:	afbf0014 	sw	ra,20(sp)
9d015730:	0f4004b3 	jal	9d0012cc <frame_dummy>
9d015734:	00000000 	nop
9d015738:	0f4055b5 	jal	9d0156d4 <__do_global_ctors_aux>
9d01573c:	00000000 	nop
9d015740:	8fbf0014 	lw	ra,20(sp)
9d015744:	03e00008 	jr	ra
9d015748:	27bd0020 	addiu	sp,sp,32

Disassembly of section .fini:

9d01574c <_fini>:
9d01574c:	27bdffe0 	addiu	sp,sp,-32
9d015750:	afbf0014 	sw	ra,20(sp)
9d015754:	0f400484 	jal	9d001210 <__do_global_dtors_aux>
9d015758:	00000000 	nop
9d01575c:	8fbf0014 	lw	ra,20(sp)
9d015760:	03e00008 	jr	ra
9d015764:	27bd0020 	addiu	sp,sp,32
